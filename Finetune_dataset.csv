User_prompt,Output,
Build a Voice AI Chatbot with ElevenLabs and InfraNodus Knowledge Experts,"{
  ""id"": ""STzi96JfL52BUuQD"",
  ""meta"": {
    ""instanceId"": ""2a26454b0172ffcb8d70ba77c235b1209f92cd71bf06c79ba609c7173b416d68"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""AI Voice Chat Agent with ElevenLabs and InfraNodus Graph RAG Knowledge"",
  ""tags"": [
    {
      ""id"": ""66wgFoDi9Xjl74M3"",
      ""name"": ""Support"",
      ""createdAt"": ""2025-05-21T17:06:32.355Z"",
      ""updatedAt"": ""2025-05-21T17:06:32.355Z""
    },
    {
      ""id"": ""9QurS5Kb1CkCYrnG"",
      ""name"": ""Product"",
      ""createdAt"": ""2025-05-21T17:06:29.704Z"",
      ""updatedAt"": ""2025-05-21T17:06:29.704Z""
    },
    {
      ""id"": ""IzYV3Gv55x1h73cK"",
      ""name"": ""Ideation"",
      ""createdAt"": ""2025-05-20T14:53:20.662Z"",
      ""updatedAt"": ""2025-05-20T14:53:20.662Z""
    },
    {
      ""id"": ""aECLdyckoPZ29skg"",
      ""name"": ""Writing"",
      ""createdAt"": ""2025-05-20T14:53:23.085Z"",
      ""updatedAt"": ""2025-05-20T14:53:23.085Z""
    },
    {
      ""id"": ""ciIq4giMNXaJiyiQ"",
      ""name"": ""Thinking Tools"",
      ""createdAt"": ""2025-05-20T14:53:17.515Z"",
      ""updatedAt"": ""2025-05-20T14:53:17.515Z""
    },
    {
      ""id"": ""hCzs9EJfBuD0RxuX"",
      ""name"": ""Other"",
      ""createdAt"": ""2025-05-21T17:06:34.674Z"",
      ""updatedAt"": ""2025-05-21T17:06:34.674Z""
    },
    {
      ""id"": ""sJk9cUvmMU8FkJXv"",
      ""name"": ""AI"",
      ""createdAt"": ""2025-05-20T13:16:15.636Z"",
      ""updatedAt"": ""2025-05-20T13:16:15.636Z""
    }
  ],
  ""nodes"": [
    {
      ""id"": ""b17450bf-5c34-43b9-a7cb-1e8d48a90e5e"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        840,
        260
      ],
      ""parameters"": {
        ""width"": 200,
        ""height"": 740,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Expert #1\n\nAdd your InfraNodus graph here via the HTTP node using its name in the `body.name` field.\n\nDescribe what the expert does in the Description of the tool. You can use auto-generated Graph RAG summary from InfraNodus > Graph > Project Notes\n\n![Book Screenshot](https://i.ibb.co/rfxsJ4MV/circadian-special-agents-manual.png)""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""8d41bb1b-ff2d-43bf-b9aa-be41a824a568"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1060,
        260
      ],
      ""parameters"": {
        ""width"": 200,
        ""height"": 740,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Expert #2\n\nAdd your InfraNodus graph here via the HTTP node using its name in the `body.name` field.\n\nDescribe what the expert does in the Description of the tool. You can use auto-generated Graph RAG summary from InfraNodus > Graph > Project Notes\n\n![waves into patterns screen](https://i.ibb.co/1tDJSgVq/circadian-waves-into-patterns.png)""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3092328a-8b99-4086-9be8-20157a48d706"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1280,
        260
      ],
      ""parameters"": {
        ""width"": 200,
        ""height"": 640,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Expert #3\n\nYou can add more experts here. Just make to give them descriptive names, so the agent knows which one to connect to when it has a question. \n\n![flow and notion image](https://i.ibb.co/prLbFG0w/circadian-the-flow-and-notion.png)\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""8165ec0a-ac24-4e3e-8240-162a3ef6e47e"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        620,
        260
      ],
      ""parameters"": {
        ""width"": 200,
        ""height"": 540,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Chat Memory\n\nWe use the Simple Memory node to track the conversation's context so that the user can refer to previous messages as they converse with the model.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""333d860c-615f-441d-a7ab-53e867cd5503"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        420,
        -360
      ],
      ""parameters"": {
        ""width"": 460,
        ""height"": 500,
        ""content"": ""## 2. AI Agent Workflow\n\n### Chooses which tool (expert) to use, depending on the user's message. Then receives the responses and synthesizes the final answer.\n\nMake sure you describe the tools available well both in the Agent's System Prompt and in the tools' descriptions. ""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9f7a3cc4-99c6-4179-b3ce-7bff999cf77b"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        0,
        40
      ],
      ""parameters"": {
        ""height"": 580,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 1. Chat Trigger\n\nThe conversation will be triggered when you send a message via a webhook from your Elevenlabs AI Conversational agent. \n\n### 🚨 SEE THE NOTE AND THE LINK BELOW ON SETTING UP YOUR ELEVENLABS AGENT""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c3fd90e8-3451-4c17-92c7-ca6c1e3305c6"",
      ""name"": ""OpenAI Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""disabled"": true,
      ""position"": [
        400,
        540
      ],
      ""parameters"": {
        ""model"": ""gpt-4o"",
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""07wFa8Wa4mMRCHAj"",
          ""name"": ""OpenAi account 2""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""2e049f32-5d79-4a46-8c99-6a5a9c583c4f"",
      ""name"": ""Simple Memory"",
      ""type"": ""@n8n/n8n-nodes-langchain.memoryBufferWindow"",
      ""position"": [
        680,
        300
      ],
      ""parameters"": {
        ""sessionKey"": ""={{ $json.body.sessionId }}"",
        ""sessionIdType"": ""customKey""
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""68137659-df1d-4a23-83f8-42a03189077b"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        980,
        -360
      ],
      ""parameters"": {
        ""width"": 260,
        ""height"": 500,
        ""content"": ""## 3. Respond to the User\n\nOnce the response is generated, send it back to the user's chat in Telegram.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e7ffd4c6-d725-4ac0-8aa9-09f52d9a1cb4"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        520,
        -20
      ],
      ""parameters"": {
        ""text"": ""={{ $json.body.prompt }}"",
        ""options"": {
          ""systemMessage"": ""You are well-versed on Dmitry Paranyushkin's books through the tools you have access to. When you receive a user's query, assess which tools you have access to, decide on the tools to access (minimum 1, maximum 3), modify the query to better suit each tool's context, and send the request to the tool. \n\nIMPORTANT: Always access at least one of the tools and use the response to get the best possible answer.\n\nWhen you're generating a response, combine perspectives where they fit and point out discrepancies when they exist.""
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""6b1bff98-cdac-4a80-a5e5-a89def6a767b"",
      ""name"": ""Waves into Patterns Book Expert"",
      ""type"": ""n8n-nodes-base.httpRequestTool"",
      ""position"": [
        1120,
        300
      ],
      ""parameters"": {
        ""url"": ""https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&addStats=true&optimize=develop&includeGraph=false&includeGraphSummary=true&includeStatements=true"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""authentication"": ""genericCredentialType"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""name"",
              ""value"": ""waves_into_patterns""
            },
            {
              ""name"": ""prompt"",
              ""value"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `User's request adjusted to suit this context`, 'string') }}""
            },
            {
              ""name"": ""requestMode"",
              ""value"": ""response""
            },
            {
              ""name"": ""aiTopics"",
              ""value"": ""true""
            }
          ]
        },
        ""genericAuthType"": ""httpBearerAuth"",
        ""toolDescription"": ""Make a request to The Waves into Patterns book which is well-versed in the questions of natural cycles, variability, fractal states, dynamics, and nonequilibrium stability. Including the following topics:\n\n<MainTopics>: \n1. System Influence: scale influence multiple \n2. Pattern Dynamics: pattern variability fractal \n3. Change Balance: dynamic wave time \n4. Center Transformation: center cycle dominant \n5. Growth Stages: growth exploration period \n6. Long Strategy: term state long \n7. Seasonal Relations: moon summer natural \n8. Flow Connection: exist breaking exploring \n</MainTopics>""
      },
      ""credentials"": {
        ""httpBearerAuth"": {
          ""id"": ""kg0rA5r8siL8LbrU"",
          ""name"": ""InfraNodus Circadian API Key""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""d8df1709-8c55-4336-8dde-5fa8769c3a91"",
      ""name"": ""Special Agent's Manual Book Expert"",
      ""type"": ""n8n-nodes-base.httpRequestTool"",
      ""position"": [
        900,
        300
      ],
      ""parameters"": {
        ""url"": ""https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&addStats=true&optimize=develop&includeGraph=false&includeGraphSummary=true&includeStatements=true"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""authentication"": ""genericCredentialType"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""name"",
              ""value"": ""special_agents_manual""
            },
            {
              ""name"": ""prompt"",
              ""value"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `User's request adjusted to suit this context`, 'string') }}""
            },
            {
              ""name"": ""requestMode"",
              ""value"": ""response""
            },
            {
              ""name"": ""aiTopics"",
              ""value"": ""true""
            }
          ]
        },
        ""genericAuthType"": ""httpBearerAuth"",
        ""toolDescription"": ""Make a request to The Special Agent's Manual book which is well-versed in the questions of human agency, speciality, infiltration and tension dynamics, strategies, identities, finding the special in you as well as the following topics:\n\n<MainTopics>: \n1. Agent Activation: agent special activation \n2. System Dynamics: system body operating \n3. Order Flow: action time order \n4. Creative Process: create identity entity \n5. Movement Patterns: movement wave breathing \n6. Incoming Impact: incoming impulse impact \n7. Fiction Venture: fiction high risk \n8. Social Framework: preset possibility level \n</MainTopics>""
      },
      ""credentials"": {
        ""httpBearerAuth"": {
          ""id"": ""kg0rA5r8siL8LbrU"",
          ""name"": ""InfraNodus Circadian API Key""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""85a11f6a-c154-43ea-a294-3fe367d13ad0"",
      ""name"": ""The Flow and the Notion Book"",
      ""type"": ""n8n-nodes-base.httpRequestTool"",
      ""position"": [
        1340,
        300
      ],
      ""parameters"": {
        ""url"": ""https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&addStats=true&optimize=develop&includeGraph=false&includeGraphSummary=true&includeStatements=true"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""authentication"": ""genericCredentialType"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""name"",
              ""value"": ""the_flow_and_notion""
            },
            {
              ""name"": ""prompt"",
              ""value"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `User's request adjusted to suit this context`, 'string') }}""
            },
            {
              ""name"": ""requestMode"",
              ""value"": ""response""
            },
            {
              ""name"": ""aiTopics"",
              ""value"": ""true""
            }
          ]
        },
        ""genericAuthType"": ""httpBearerAuth"",
        ""toolDescription"": ""The Flow and the Notion book which is well-versed in the questions of creating with someone, dreaming, making new shapes, dissipating ideas, art, and life. Including the following topics:\n\n<MainTopics>: \n1. Shape Dynamics: shape outline concentric \n2. Time Alignment: long practice time \n3. Man's Journey: bow man candle \n4. Notion Flow: image flow paranyushkin \n5. Essence Realization: process essence essential \n6. Life Choices: slave thing trace \n7. Wave Patterns: found light movement \n8. Synchrony Mediation: book circadian word \n9. Complete Vision: multiple synchrony mediate \n10. Instruction Guide: full \ninstruction foreword : instruction foreword \n</MainTopics>""
      },
      ""credentials"": {
        ""httpBearerAuth"": {
          ""id"": ""kg0rA5r8siL8LbrU"",
          ""name"": ""InfraNodus Circadian API Key""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""90c32931-3e1c-4c93-8cbb-7c8e7dfa2269"",
      ""name"": ""Sticky Note9"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1500,
        260
      ],
      ""parameters"": {
        ""width"": 200,
        ""height"": 640,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Expert #4\n\nYou can add more experts here. Just make to give them descriptive names, so the agent knows which one to connect to when it has a question. \n\n![infranodus graph](https://i.ibb.co/hRqxn8JN/circadian-conversation-book.png)""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d392f193-328d-46b5-bd85-a6db97ca0a58"",
      ""name"": ""The Polysingularity Letters Book"",
      ""type"": ""n8n-nodes-base.httpRequestTool"",
      ""position"": [
        1540,
        300
      ],
      ""parameters"": {
        ""url"": ""https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&addStats=true&optimize=develop&includeGraph=false&includeGraphSummary=true&includeStatements=true"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""authentication"": ""genericCredentialType"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""name"",
              ""value"": ""polysingularity_letters""
            },
            {
              ""name"": ""prompt"",
              ""value"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `User's request adjusted to suit this context`, 'string') }}""
            },
            {
              ""name"": ""requestMode"",
              ""value"": ""response""
            },
            {
              ""name"": ""aiTopics"",
              ""value"": ""true""
            }
          ]
        },
        ""genericAuthType"": ""httpBearerAuth"",
        ""toolDescription"": ""The Polysingularity Letters book which is well-versed in the questions of polysingularity, multiplicity, networks, networking, art, and creative approach. And also these topics:\n\n<MainTopics>: \n1. Community Dynamics: network community connected \n2. Global Equilibrium: state global change \n3. Polysingular Practice: polysingularity thinking exist \n4. Temporal Relations: time moment thing \n5. Consciousness Source: social cognition view \n6. Meaning Creation: make orthodox meaning \n7. Dmitry Connections: post dmitry minute \n8. Linguistic Variations: wa ë ww \n</MainTopics>""
      },
      ""credentials"": {
        ""httpBearerAuth"": {
          ""id"": ""6lSuuSDajZrvI2GM"",
          ""name"": ""InfraNodus API Key""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""56f27d69-5091-4a0e-abc9-49fea9a863b3"",
      ""name"": ""Webhook"",
      ""type"": ""n8n-nodes-base.webhook"",
      ""position"": [
        60,
        60
      ],
      ""webhookId"": ""171bf9a6-1390-4195-bd6b-ff3df2e27d1c"",
      ""parameters"": {
        ""path"": ""171bf9a6-1390-4195-bd6b-ff3df2e27d1c"",
        ""options"": {},
        ""httpMethod"": ""POST"",
        ""responseMode"": ""responseNode""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""8b7a6506-4220-476e-8d94-fa62315ab807"",
      ""name"": ""Respond to Webhook"",
      ""type"": ""n8n-nodes-base.respondToWebhook"",
      ""position"": [
        1060,
        -20
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""0ac0d3d2-75b9-4173-a45a-56a0fe55892d"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -820,
        680
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 1060,
        ""height"": 980,
        ""content"": ""## Setting up ElevenLabs Conversational AI Agent\n\n### You will need to connect the Webhook trigger above to the Conversational AI agent of ElevenLabs. Then you can use their agent (and website widget) to converse with the experts in this workflow. Read the full tutorial at [ElevenLabs AI voice agent setup guide](https://support.noduslabs.com/hc/en-us/articles/20318967066396-How-to-Build-a-Text-Voice-AI-Agent-Chatbot-with-n8n-Elevenlabs-and-InfraNodus)\n\n1. Create an account at [https://elevenlabs.io/](https://elevenlabs.io/)\n\n2. Go to the **Conversational AI** section in the menu\n\n3. Go to **Agent > Create New Agent > Use Blank Template**\n\n4. In the **System Prompt** of the agent put the following text modified to relate to your content:\n\n```\nYou are well-versed on ... through the tools you have access to.\n1) When you receive a user's message, first answer something like \""I am consulting my knowledge and will respond soon\"" or \""let me think about it and i'll get back to you\"" or any other similar in meaning phrase\n2) Then forward the user's message, without any changes, to the knowledge_base tool.\n3) When you receive a response from the knowledge_base use this answer to respond to the user, use exactly the answer you received to respond.\nIMPORTANT: make the response more suitable for the conversational format making it more succint and shorter but maintaining all the specifics.\n```\n\n5. IMPORTANT: keep the reference to the `knowledge_base` tool above to let the ElevenLabs agent know that it's exactly that tool it needs to be using to access the knowledge. Replace `...` with your content. \n\n6. In the **Tools section** of the Agent's setup, click **Create a new tool**\n\n7. The name of the tool should be: **`knowledge_base`** (as you're referring to it in the system prompt)\n\n8. In the tool's description put in: \""A knowledge base on ....\"" (replace ... with your topic)\n\n9. Choose the **POST method** and in the URL put the Webhook link from the n8n workflow you created in the Step 3 above. E.g. https://infranodus.app.n8n.cloud/webhook/your_hook_url\n\n10. Scroll to the **Body Parameters** and add the following parameters that will be submitted with the POST request:\n\na.  Identifier: `prompt`, Value type: LLM prompt, Description: The user's message. \n*You will use this value in the **AI Agent** node.*\n\nb. Identifier: `sessionId`, Value type: Dynamic variable, Variable name: system__conversation_id\n*You will use this in the **Chat Memory** node to keep the history of the interaction.*\n\n10. Save the tool, save the agent\n\n11. Run the test in ElevenLabs\n\n12. Check the n8n workflow logs (from Step 3) to see if the execution went well ""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""2f279f0d-fdd2-493a-b416-6c70ab06b31a"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -820,
        -360
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 740,
        ""height"": 980,
        ""content"": ""# AI Voice Agent that Chats to Your Experts (e.g. Books, Articles, etc)\n\n## Uses InfraNodus Knowledge Graphs as Experts (AI Agent tools)\n\n## Uses ElevenLabs for voice chat functionality\n\n## Uses an orchestrating AI Agent in n8n to choose the expert based on the query\n\n[Detailed tutorial](https://support.noduslabs.com/hc/en-us/articles/20318967066396-How-to-Build-a-Text-Voice-AI-Agent-Chatbot-with-n8n-Elevenlabs-and-InfraNodus)\n\n[Video Tutorial](https://www.youtube.com/watch?v=07-HZZQs5h0)\n\n\n[![Video tutorial](https://img.youtube.com/vi/07-HZZQs5h0/sddefault.jpg)](https://www.youtube.com/watch?v=07-HZZQs5h0)""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""49d05baa-50fe-4931-87f8-22726eb868fa"",
      ""name"": ""Google Gemini Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""position"": [
        400,
        340
      ],
      ""parameters"": {
        ""options"": {},
        ""modelName"": ""models/gemini-2.5-flash-preview-04-17""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""ivswOFTY8MYDbj5b"",
          ""name"": ""Google Gemini(PaLM) Api account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3ffc401d-df30-44ad-a3c3-b6b3ee75f59f"",
      ""name"": ""Sticky Note10"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        340,
        260
      ],
      ""parameters"": {
        ""width"": 200,
        ""height"": 660,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## LLM to Use\n\nGoogle Flash Pro models are much faster than OpenAI. However, OpenAI can be more precise in function (expert) calling.""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""9dd619b8-9071-4d7d-8b5a-fb30b570671f"",
  ""connections"": {
    ""Webhook"": {
      ""main"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""AI Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Respond to Webhook"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Model"": {
      ""ai_languageModel"": [
        []
      ]
    },
    ""Simple Memory"": {
      ""ai_memory"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_memory"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Google Gemini Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""The Flow and the Notion Book"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Waves into Patterns Book Expert"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""The Polysingularity Letters Book"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Special Agent's Manual Book Expert"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Telegram AI Chatbot Agent with InfraNodus GraphRAG Knowledge Base,"{
  ""id"": ""dHmXMjhXw6tqnf8y"",
  ""meta"": {
    ""instanceId"": ""2a26454b0172ffcb8d70ba77c235b1209f92cd71bf06c79ba609c7173b416d68"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Telegram AI Chatbot Agent with InfraNodus GraphRAG Knowledge Base"",
  ""tags"": [
    {
      ""id"": ""66wgFoDi9Xjl74M3"",
      ""name"": ""Support"",
      ""createdAt"": ""2025-05-21T17:06:32.355Z"",
      ""updatedAt"": ""2025-05-21T17:06:32.355Z""
    },
    {
      ""id"": ""9QurS5Kb1CkCYrnG"",
      ""name"": ""Product"",
      ""createdAt"": ""2025-05-21T17:06:29.704Z"",
      ""updatedAt"": ""2025-05-21T17:06:29.704Z""
    },
    {
      ""id"": ""IzYV3Gv55x1h73cK"",
      ""name"": ""Ideation"",
      ""createdAt"": ""2025-05-20T14:53:20.662Z"",
      ""updatedAt"": ""2025-05-20T14:53:20.662Z""
    },
    {
      ""id"": ""aECLdyckoPZ29skg"",
      ""name"": ""Writing"",
      ""createdAt"": ""2025-05-20T14:53:23.085Z"",
      ""updatedAt"": ""2025-05-20T14:53:23.085Z""
    },
    {
      ""id"": ""ciIq4giMNXaJiyiQ"",
      ""name"": ""Thinking Tools"",
      ""createdAt"": ""2025-05-20T14:53:17.515Z"",
      ""updatedAt"": ""2025-05-20T14:53:17.515Z""
    },
    {
      ""id"": ""hCzs9EJfBuD0RxuX"",
      ""name"": ""Other"",
      ""createdAt"": ""2025-05-21T17:06:34.674Z"",
      ""updatedAt"": ""2025-05-21T17:06:34.674Z""
    },
    {
      ""id"": ""sJk9cUvmMU8FkJXv"",
      ""name"": ""AI"",
      ""createdAt"": ""2025-05-20T13:16:15.636Z"",
      ""updatedAt"": ""2025-05-20T13:16:15.636Z""
    }
  ],
  ""nodes"": [
    {
      ""id"": ""736e717e-bad8-4943-9ae2-955cf588112d"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -260,
        -800
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 540,
        ""height"": 760,
        ""content"": ""## AI Chatbot Agent with Experts\n\n### Uses the InfraNodus knowledge graphs and its Graph RAG to retrieve relevant information.\n\nUse your [InfraNodus graph](https://infranodus.com) as the knowledge base for your AI chatbot. \n\nUpload any data to InfraNodus, generate separate knowledge graphs, then connect them as tools to the agent, so it can decide which \""expert\"" to use. InfraNodus' Graph RAG will provide high-quality responses that will augment the chatbot's answers.\n\nVideo demo: [https://www.youtube.com/watch?v=kS0QTUvcH6E](https://www.youtube.com/watch?v=kS0QTUvcH6E)\n\nDetailed description: [Nodus Labs support portal](https://support.noduslabs.com/hc/en-us/articles/20174217658396-Using-InfraNodus-Knowledge-Graphs-as-Experts-for-AI-Chatbot-Agents-in-n8n)\n\nInfraNodus API key can be obtained at [InfraNodus.Com](https://infranodus.com/use-case/ai-knowledge-graphs)\n\n\n[![Video tutorial](https://img.youtube.com/vi/kS0QTUvcH6E/sddefault.jpg)](https://www.youtube.com/watch?v=kS0QTUvcH6E)""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e966551c-01db-4b3e-a233-632ce1c24d2f"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        620,
        260
      ],
      ""parameters"": {
        ""width"": 200,
        ""height"": 540,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Chat Memory\n\nWe use the Simple Memory node to track the conversation's context so that the user can refer to previous messages as they converse with the model.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d1507b1d-238f-4ff1-a181-e8120c838714"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        420,
        -260
      ],
      ""parameters"": {
        ""width"": 460,
        ""height"": 400,
        ""content"": ""## 3. AI Agent Workflow\n\n### Chooses which tool (expert) to use, depending on the user's message. Then receives the responses and synthesizes the final answer.\n\nMake sure you describe the tools available well both in the Agent's System Prompt and in the tools' descriptions. ""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9cd0245e-a848-487a-bca7-22f8cf1ec95f"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -260,
        20
      ],
      ""parameters"": {
        ""height"": 500,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 1. Telegram Trigger\n\nThe conversation will be triggered when you send a message to your Telegram bot. To set up a bot, simply message `/newbot` to `@botfather` in Telegram. It takes 30 seconds. ""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""dc80cc79-24e7-4a43-8869-ba1ef48e2026"",
      ""name"": ""OpenAI Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        400,
        320
      ],
      ""parameters"": {
        ""model"": ""gpt-4o"",
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""07wFa8Wa4mMRCHAj"",
          ""name"": ""OpenAi account 2""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a9000f01-714b-4f85-86f4-29592178eb44"",
      ""name"": ""Simple Memory"",
      ""type"": ""@n8n/n8n-nodes-langchain.memoryBufferWindow"",
      ""position"": [
        680,
        300
      ],
      ""parameters"": {
        ""sessionKey"": ""={{ $('Receive a Message on Telegram').item.json.message.chat.id }}"",
        ""sessionIdType"": ""customKey""
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""3ec5c404-69f4-468f-a5cc-9500e207e2ed"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        20,
        20
      ],
      ""parameters"": {
        ""width"": 260,
        ""height"": 500,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 2. Give Feedback to User\n\nThis node gives feedback to the user that the Agent is working.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c4edb9b5-7293-490d-a718-ebaf0bb3aeb0"",
      ""name"": ""Receive a Message on Telegram"",
      ""type"": ""n8n-nodes-base.telegramTrigger"",
      ""position"": [
        -200,
        40
      ],
      ""webhookId"": ""aa8d195c-01c2-435b-9d88-87b38306a6a6"",
      ""parameters"": {
        ""updates"": [
          ""message""
        ],
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""RoCnmnDFLL2S3f81"",
          ""name"": ""Dmitry's Books Bot""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""3023c0bc-f219-4b24-b889-726112808b70"",
      ""name"": ""Send \""Typing...\"" message to User"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        100,
        40
      ],
      ""webhookId"": ""845f29dd-9da3-4ac9-86d1-22280acbb46a"",
      ""parameters"": {
        ""chatId"": ""={{ $json.message.chat.id }}"",
        ""operation"": ""sendChatAction""
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""RoCnmnDFLL2S3f81"",
          ""name"": ""Dmitry's Books Bot""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""a698860d-e2dd-4679-be0a-d8c36d12f9ba"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1080,
        -260
      ],
      ""parameters"": {
        ""width"": 260,
        ""height"": 380,
        ""content"": ""## 4. Respond to the User\n\nOnce the response is generated, send it back to the user's chat in Telegram.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""879d4e7a-c2c7-47eb-aaca-4847e61d6886"",
      ""name"": ""Send Telegram Message to User"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        1160,
        -40
      ],
      ""webhookId"": ""a6b9e331-2b1a-4056-a9fc-5d10b7196c54"",
      ""parameters"": {
        ""text"": ""={{ $json.output }}"",
        ""chatId"": ""={{ $('Receive a Message on Telegram').item.json.message.chat.id }}"",
        ""additionalFields"": {
          ""appendAttribution"": false
        }
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""RoCnmnDFLL2S3f81"",
          ""name"": ""Dmitry's Books Bot""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""1bc915c9-8494-4c74-b508-80484e9bc290"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        540,
        0
      ],
      ""parameters"": {
        ""text"": ""={{ $('Receive a Message on Telegram').item.json.message.text }}"",
        ""options"": {
          ""systemMessage"": ""You are well-versed on Dmitry Paranyushkin's books through the tools you have access to. When you receive a user's query, you can modify it to suit better each tool's context. Always access at least one of the tools and deliver an augmented response.\n\nWhen you're generating a response, attempt to combine perspectives where they fit and point out discrepancies when they exist.""
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""75db20b3-7a82-49db-a574-66b0ce0a9560"",
      ""name"": ""Waves into Patterns Book Expert"",
      ""type"": ""n8n-nodes-base.httpRequestTool"",
      ""position"": [
        1120,
        300
      ],
      ""parameters"": {
        ""url"": ""https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&addStats=true&optimize=develop&includeGraph=false&includeGraphSummary=true&includeStatements=true"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""authentication"": ""genericCredentialType"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""name"",
              ""value"": ""special_agents_manual""
            },
            {
              ""name"": ""prompt"",
              ""value"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `User's request adjusted to suit this context`, 'string') }}""
            },
            {
              ""name"": ""requestMode"",
              ""value"": ""response""
            },
            {
              ""name"": ""aiTopics"",
              ""value"": ""true""
            }
          ]
        },
        ""genericAuthType"": ""httpBearerAuth"",
        ""toolDescription"": ""Make a request to The Waves into Patterns book which is well-versed in the questions of natural cycles, variability, fractal states, dynamics, and nonequilibrium stability. Including the following topics:\n\n<MainTopics>: \n1. System Influence: scale influence multiple \n2. Pattern Dynamics: pattern variability fractal \n3. Change Balance: dynamic wave time \n4. Center Transformation: center cycle dominant \n5. Growth Stages: growth exploration period \n6. Long Strategy: term state long \n7. Seasonal Relations: moon summer natural \n8. Flow Connection: exist breaking exploring \n</MainTopics>""
      },
      ""credentials"": {
        ""httpBearerAuth"": {
          ""id"": ""kg0rA5r8siL8LbrU"",
          ""name"": ""InfraNodus Circadian API Key""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""791b109a-f7f4-4391-86ce-4db6315fcd95"",
      ""name"": ""Special Agent's Manual Book Expert"",
      ""type"": ""n8n-nodes-base.httpRequestTool"",
      ""position"": [
        900,
        300
      ],
      ""parameters"": {
        ""url"": ""https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&addStats=true&optimize=develop&includeGraph=false&includeGraphSummary=true&includeStatements=true"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""authentication"": ""genericCredentialType"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""name"",
              ""value"": ""special_agents_manual""
            },
            {
              ""name"": ""prompt"",
              ""value"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `User's request adjusted to suit this context`, 'string') }}""
            },
            {
              ""name"": ""requestMode"",
              ""value"": ""response""
            },
            {
              ""name"": ""aiTopics"",
              ""value"": ""true""
            }
          ]
        },
        ""genericAuthType"": ""httpBearerAuth"",
        ""toolDescription"": ""Make a request to The Special Agent's Manual book which is well-versed in the questions of human agency, speciality, infiltration and tension dynamics, strategies, identities, finding the special in you as well as the following topics:\n\n<MainTopics>: \n1. Agent Activation: agent special activation \n2. System Dynamics: system body operating \n3. Order Flow: action time order \n4. Creative Process: create identity entity \n5. Movement Patterns: movement wave breathing \n6. Incoming Impact: incoming impulse impact \n7. Fiction Venture: fiction high risk \n8. Social Framework: preset possibility level \n</MainTopics>""
      },
      ""credentials"": {
        ""httpBearerAuth"": {
          ""id"": ""kg0rA5r8siL8LbrU"",
          ""name"": ""InfraNodus Circadian API Key""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""c1a5628c-aa40-451b-b9ac-0cd9ba98dce1"",
      ""name"": ""The Flow and the Notion Book"",
      ""type"": ""n8n-nodes-base.httpRequestTool"",
      ""position"": [
        1340,
        300
      ],
      ""parameters"": {
        ""url"": ""https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&addStats=true&optimize=develop&includeGraph=false&includeGraphSummary=true&includeStatements=true"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""authentication"": ""genericCredentialType"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""name"",
              ""value"": ""the_flow_and_notion""
            },
            {
              ""name"": ""prompt"",
              ""value"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `User's request adjusted to suit this context`, 'string') }}""
            },
            {
              ""name"": ""requestMode"",
              ""value"": ""response""
            },
            {
              ""name"": ""aiTopics"",
              ""value"": ""true""
            }
          ]
        },
        ""genericAuthType"": ""httpBearerAuth"",
        ""toolDescription"": ""The Flow and the Notion book which is well-versed in the questions of creating with someone, dreaming, making new shapes, dissipating ideas, art, and life. Including the following topics:\n\n<MainTopics>: \n1. Shape Dynamics: shape outline concentric \n2. Time Alignment: long practice time \n3. Man's Journey: bow man candle \n4. Notion Flow: image flow paranyushkin \n5. Essence Realization: process essence essential \n6. Life Choices: slave thing trace \n7. Wave Patterns: found light movement \n8. Synchrony Mediation: book circadian word \n9. Complete Vision: multiple synchrony mediate \n10. Instruction Guide: full \ninstruction foreword : instruction foreword \n</MainTopics>""
      },
      ""credentials"": {
        ""httpBearerAuth"": {
          ""id"": ""kg0rA5r8siL8LbrU"",
          ""name"": ""InfraNodus Circadian API Key""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""e7cc5883-e814-4ed8-95fb-8c7294466e31"",
      ""name"": ""The Polysingularity Letters Book"",
      ""type"": ""n8n-nodes-base.httpRequestTool"",
      ""position"": [
        1540,
        300
      ],
      ""parameters"": {
        ""url"": ""https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&addStats=true&optimize=develop&includeGraph=false&includeGraphSummary=true&includeStatements=true"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""authentication"": ""genericCredentialType"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""name"",
              ""value"": ""polysingularity_letters""
            },
            {
              ""name"": ""prompt"",
              ""value"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `User's request adjusted to suit this context`, 'string') }}""
            },
            {
              ""name"": ""requestMode"",
              ""value"": ""response""
            },
            {
              ""name"": ""aiTopics"",
              ""value"": ""true""
            }
          ]
        },
        ""genericAuthType"": ""httpBearerAuth"",
        ""toolDescription"": ""The Polysingularity Letters book which is well-versed in the questions of polysingularity, multiplicity, networks, networking, art, and creative approach. And also these topics:\n\n<MainTopics>: \n1. Community Dynamics: network community connected \n2. Global Equilibrium: state global change \n3. Polysingular Practice: polysingularity thinking exist \n4. Temporal Relations: time moment thing \n5. Consciousness Source: social cognition view \n6. Meaning Creation: make orthodox meaning \n7. Dmitry Connections: post dmitry minute \n8. Linguistic Variations: wa ë ww \n</MainTopics>""
      },
      ""credentials"": {
        ""httpBearerAuth"": {
          ""id"": ""6lSuuSDajZrvI2GM"",
          ""name"": ""InfraNodus API Key""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""e9b348cc-d6ea-4a46-99cf-cf395a50ab6e"",
      ""name"": ""Sticky Note10"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -260,
        560
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 540,
        ""height"": 820,
        ""content"": ""## Setting up a Telegram bot \n\n### It takes only 30 seconds to set up a Telegram bot. Once set up, create a Telegram credential with its access token and use it in all the Telegram nodes above. \n\n1. Create a new chat in Telegram with the [@botfather](https://t.me/botfather) user at [https://t.me/botfather](https://t.me/botfather). \n\n2. Type in `/newbot`\n\n3. Give it a name (that's not the username)\n\n4. Give it a username (e.g. @my_new_bot)\n\n5. You will receive an **API token**. Copy that token and use it to set up the Telegram credentials for the Telegram nodes above. \n\n\nOPTIONAL SETTINGS FOR TELEGRAM GROUPS USE:\n\n6. Note, that if you want to make it possible to add your Telegram bots to groups, you will need to give them permissions to access groups and to read groups' messages. To do that, type in `/mybots`, and list your bots, then choose the bot you created. \n\n7. Then click on Bot Settings > Allow Groups > Yes (the bot will be allowed to join groups)\n\n8. Then choose Settings > Group Privacy > Turn Off (to allow the bot to read groups' messages)\n\n9. Note that your bots won't be able to respond to each other (that's Telegram limitation to avoid spamming and infinite loops), but they will be able to participate in your group's conversations. In that case, you might want to set up an additional filter in the workflow above where the bot will only respond if addressed directly using its username (so that it doesn't respond to every message in the group but only when asked directly).""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""75e639fa-33dc-4fbc-a34d-dee9e5550969"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        840,
        260
      ],
      ""parameters"": {
        ""width"": 200,
        ""height"": 740,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Expert #1\n\nAdd your InfraNodus graph here via the HTTP node using its name in the `body.name` field.\n\nDescribe what the expert does in the Description of the tool. You can use auto-generated Graph RAG summary from InfraNodus > Graph > Project Notes\n\n![Book Screenshot](https://i.ibb.co/rfxsJ4MV/circadian-special-agents-manual.png)""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""8bb5f9fd-3a31-4c67-8684-b7190a342b2a"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1060,
        260
      ],
      ""parameters"": {
        ""width"": 200,
        ""height"": 740,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Expert #2\n\nAdd your InfraNodus graph here via the HTTP node using its name in the `body.name` field.\n\nDescribe what the expert does in the Description of the tool. You can use auto-generated Graph RAG summary from InfraNodus > Graph > Project Notes\n\n![waves into patterns screen](https://i.ibb.co/1tDJSgVq/circadian-waves-into-patterns.png)""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e2e4dd57-fdb2-4ed3-940f-085e4b1a0934"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1280,
        260
      ],
      ""parameters"": {
        ""width"": 200,
        ""height"": 640,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Expert #3\n\nYou can add more experts here. Just make to give them descriptive names, so the agent knows which one to connect to when it has a question. \n\n![flow and notion image](https://i.ibb.co/prLbFG0w/circadian-the-flow-and-notion.png)\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""af7c969d-e48d-4d36-8e71-a7c70b79763d"",
      ""name"": ""Sticky Note9"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1500,
        260
      ],
      ""parameters"": {
        ""width"": 200,
        ""height"": 640,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Expert #4\n\nYou can add more experts here. Just make to give them descriptive names, so the agent knows which one to connect to when it has a question. \n\n![infranodus graph](https://i.ibb.co/hRqxn8JN/circadian-conversation-book.png)""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""5ad178b3-764a-40eb-a074-e768b615960f"",
  ""connections"": {
    ""AI Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Send Telegram Message to User"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Simple Memory"": {
      ""ai_memory"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_memory"",
            ""index"": 0
          }
        ]
      ]
    },
    ""The Flow and the Notion Book"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Receive a Message on Telegram"": {
      ""main"": [
        [
          {
            ""node"": ""Send \""Typing...\"" message to User"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Waves into Patterns Book Expert"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Send \""Typing...\"" message to User"": {
      ""main"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""The Polysingularity Letters Book"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Special Agent's Manual Book Expert"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
AI Telegram Bot Agent: Smart Assistant & Content Summarizer,"{
  ""meta"": {
    ""instanceId"": ""5aaf4236c70e34e423fbdb2c7b754d19253a933bb1476d548f75848a01e473cf""
  },
  ""nodes"": [
    {
      ""id"": ""4a19458b-0bf2-45db-8146-734e4e8b352b"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -580,
        60
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 400,
        ""content"": ""Quick-Start Telegram Echo Bot\n\nA single-node Telegram bot that parses /help, /summary <URL>, or /img <prompt> and returns either a help menu, a 10–12-point article summary, or an “image in progress” acknowledgement.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d2cceb34-b932-48ce-baf7-43535cfbad29"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -440,
        420
      ],
      ""parameters"": {
        ""color"": 7,
        ""content"": ""Listener\n\nWatches for any new message from Telegram and kicks the flow off.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a279a398-4b55-4055-9c9f-8ea937d4d974"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -80,
        780
      ],
      ""parameters"": {
        ""color"": 7,
        ""content"": ""Command Router\n\nChecks if the message starts with /help, /summary, or /img, and sends it down the right path.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""868bb629-1288-4c8f-816b-001a7ca56be2"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        440,
        20
      ],
      ""parameters"": {
        ""color"": 7,
        ""content"": ""Help Responder\n\nWhen it sees /help, replies with a simple list of commands and how to use them.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ec490084-aa34-41bd-8dfd-4e0cdfee5dab"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        340,
        740
      ],
      ""parameters"": {
        ""color"": 7,
        ""content"": ""Summary Checker\n\nSees if the text begins with /summary. If yes, it moves on to fetch the article; if no, skips onward.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""370842c3-18d9-42cd-946d-694e90a41ff1"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        740,
        220
      ],
      ""parameters"": {
        ""color"": 7,
        ""content"": ""Fetcher\n\nGoes to the provided URL and downloads the page’s HTML.\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0217818c-85e4-43bb-a8d8-5053394c773f"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        780,
        1180
      ],
      ""parameters"": {
        ""color"": 7,
        ""content"": ""Image Prompt Checker\n\nSees if the text begins with /img. If yes, forwards the prompt to the image generator; if not, ends the flow.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ba617c66-4b13-41a1-9428-6d1afc4f458f"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1100,
        440
      ],
      ""parameters"": {
        ""color"": 7,
        ""content"": ""Text Extractor\n\nPulls out just the main article text (e.g. everything inside <body>).""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""df9b404e-90d7-4f66-bcd4-9d64595e7b88"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1320,
        1360
      ],
      ""parameters"": {
        ""color"": 7,
        ""content"": ""Image Generator\n\nSends your prompt to OpenAI’s image endpoint (or your chosen image API).""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e7eda1c8-e860-4df2-9d4f-5d12e52b0551"",
      ""name"": ""Sticky Note9"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1520,
        220
      ],
      ""parameters"": {
        ""color"": 7,
        ""content"": ""Summarizer\n\nSends the raw article text to OpenAI and asks for a 10–12-point professional bullet-point summary.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""50331c27-388c-490d-b9d7-ff5fe8449290"",
      ""name"": ""Sticky Note10"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1940,
        1020
      ],
      ""parameters"": {
        ""color"": 7,
        ""content"": ""Image Acknowledger\n\nTells the user “Got it—your image is being made!” (and later you can hook this up to send the actual picture URL).""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""7315f25a-d63d-4f49-a43f-87dc0ff64ffb"",
      ""name"": ""Sticky Note11"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2140,
        220
      ],
      ""parameters"": {
        ""color"": 7,
        ""content"": ""Summary Sender\n\nDelivers the bullet-point summary back to the user in Telegram.\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""bcae4d20-e9af-4008-88b6-cfa1a6dcd6c9"",
      ""name"": ""Listener"",
      ""type"": ""n8n-nodes-base.telegramTrigger"",
      ""position"": [
        -140,
        460
      ],
      ""webhookId"": ""61f2e55d-a41d-4594-a045-154264c78738"",
      ""parameters"": {
        ""updates"": [
          ""message""
        ],
        ""additionalFields"": {}
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""8bbcc856-b323-4785-a8ec-9de61052531a"",
      ""name"": ""Command Router"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        160,
        600
      ],
      ""parameters"": {
        ""conditions"": {
          ""string"": [
            {
              ""value1"": ""={{$json[\""message\""][\""text\""]}}"",
              ""value2"": ""/help"",
              ""operation"": ""startsWith""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""09bc69c7-8852-46a8-be96-ae10bc652cd8"",
      ""name"": ""Help Responder"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        380,
        220
      ],
      ""webhookId"": ""ab573ae8-05e4-41bb-bec7-fca1233fc0bb"",
      ""parameters"": {
        ""text"": ""🤖 *Help Menu*\n\nUse `/summary <link>` to summarize an article.\nUse `/img <prompt>` to generate an image.\n\n_Example:_\n/summary https://example.com\n/img a futuristic cityscape"",
        ""chatId"": ""={{$json[\""message\""][\""chat\""][\""id\""]}}"",
        ""additionalFields"": {
          ""parse_mode"": ""Markdown""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""2780e14d-7ebd-43f4-87e9-1d5c7ead564e"",
      ""name"": ""Summary Checker"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        400,
        540
      ],
      ""parameters"": {
        ""conditions"": {
          ""string"": [
            {
              ""value1"": ""={{$json[\""message\""][\""text\""]}}"",
              ""value2"": ""/summary"",
              ""operation"": ""startsWith""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""bb3faac2-e3cf-4633-8a69-4e6aedefd0be"",
      ""name"": ""Fetcher"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        760,
        420
      ],
      ""parameters"": {
        ""url"": ""={{ $json.message.link_preview_options.url }}"",
        ""options"": {},
        ""sendHeaders"": true,
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""User-Agent"",
              ""value"": ""Mozilla/5.0""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""7df71ce1-5680-46b5-a4fd-3fe3169aaaa5"",
      ""name"": ""Text Extractor"",
      ""type"": ""n8n-nodes-base.html"",
      ""position"": [
        1160,
        700
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""extractHtmlContent"",
        ""extractionValues"": {
          ""values"": [
            {
              ""key"": ""text"",
              ""cssSelector"": ""body"",
              ""skipSelectors"": ""svg, a""
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""f1856af1-7236-42f9-88b5-f86e91b42262"",
      ""name"": ""Summarizer"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        1520,
        440
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": """"
        },
        ""options"": {},
        ""messages"": {
          ""values"": [
            {
              ""content"": ""=Summarize the entire content provided below into 10–12 concise bullet points. Ensure each point captures a unique and important aspect of the information, covering the core ideas, key facts, major findings, and essential takeaways. Avoid repetition and use clear, professional language suitable for quick understanding by a decision-maker.\n\nContent:\n {{ $json.text }}""
            }
          ]
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""7fcdd8ab-1afa-4985-a9dd-bb9a13e723bf"",
      ""name"": ""Summary Sender"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        2060,
        440
      ],
      ""webhookId"": ""c6f19898-b638-4e42-b377-d7664087ab0b"",
      ""parameters"": {
        ""text"": ""={{$json[\""candidates\""][0][\""content\""][\""parts\""][0][\""text\""]}}"",
        ""chatId"": ""={{ $('Listener').item.json.message.chat.id }}"",
        ""additionalFields"": {}
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c4f73e58-995e-4a6a-a785-72e248121742"",
      ""name"": ""Image Prompt Checker"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        800,
        1020
      ],
      ""parameters"": {
        ""conditions"": {
          ""string"": [
            {
              ""value1"": ""={{$json[\""message\""][\""text\""]}}"",
              ""value2"": ""/img"",
              ""operation"": ""startsWith""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3115364c-3632-4922-82f9-93b45eb9fcb6"",
      ""name"": ""Image Generator"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        1400,
        1160
      ],
      ""parameters"": {
        ""options"": {},
        ""resource"": ""image""
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""7c01b0fa-7937-4688-945e-fc949c8a3f40"",
      ""name"": ""Image Acknowledger"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        2000,
        820
      ],
      ""webhookId"": ""b5fb6529-a924-4885-8d6c-17073ce29bb0"",
      ""parameters"": {
        ""text"": ""🖼️ Generated image prompt submitted! Gemini image model doesn't return images directly. Use image generation APIs like Stability for actual image URLs."",
        ""chatId"": ""={{$json[\""message\""][\""chat\""][\""id\""]}}"",
        ""additionalFields"": {}
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e0eae618-d330-4b74-b5a4-528a28ec91c6"",
      ""name"": ""Sticky Note12"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1260,
        220
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 480,
        ""height"": 740,
        ""content"": ""=======================================\n            WORKFLOW ASSISTANCE\n=======================================\nFor any questions or support, please contact:\n    Yaron@nofluff.online\n\nExplore more tips and tutorials here:\n   - YouTube: https://www.youtube.com/@YaronBeen/videos\n   - LinkedIn: https://www.linkedin.com/in/yaronbeen/\n=======================================\n""
      },
      ""typeVersion"": 1
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""Fetcher"": {
      ""main"": [
        [
          {
            ""node"": ""Text Extractor"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Listener"": {
      ""main"": [
        [
          {
            ""node"": ""Command Router"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Summarizer"": {
      ""main"": [
        [
          {
            ""node"": ""Summary Sender"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Command Router"": {
      ""main"": [
        [
          {
            ""node"": ""Help Responder"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Summary Checker"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Help Responder"": {
      ""main"": [
        [
          {
            ""node"": ""Command Router"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Text Extractor"": {
      ""main"": [
        [
          {
            ""node"": ""Summarizer"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Image Generator"": {
      ""main"": [
        [
          {
            ""node"": ""Image Acknowledger"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Summary Checker"": {
      ""main"": [
        [
          {
            ""node"": ""Fetcher"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Image Prompt Checker"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Image Prompt Checker"": {
      ""main"": [
        [
          {
            ""node"": ""Image Generator"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Build your own N8N Workflows MCP Server,"{
  ""meta"": {
    ""instanceId"": ""408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""e3ed1048-bad0-4e91-bfb5-aef3e1883de4"",
      ""name"": ""Simplify Workflows"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -1740,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""821226b0-12ad-4d1d-81c3-dfa3c286cce4"",
              ""name"": ""id"",
              ""type"": ""string"",
              ""value"": ""={{ $json.id }}""
            },
            {
              ""id"": ""629d95d6-2501-4ad4-a5ed-e557237e1cc2"",
              ""name"": ""name"",
              ""type"": ""string"",
              ""value"": ""={{ $json.name }}""
            },
            {
              ""id"": ""30699f7c-98d3-44ee-9749-c5528579f7e6"",
              ""name"": ""description"",
              ""type"": ""string"",
              ""value"": ""={{\n$json.nodes\n  .filter(node => node.type === 'n8n-nodes-base.stickyNote')\n  .filter(node => node.parameters.content.toLowerCase().includes('try it out'))\n  .map(node => node.parameters.content.substr(0,255) + '...')\n  .join('\\n')\n}}""
            },
            {
              ""id"": ""6199c275-1ced-4f72-ba59-cb068db54c1b"",
              ""name"": ""parameters"",
              ""type"": ""string"",
              ""value"": ""={{\n(function(node) {\n  if (!node) return {};\n  const inputs = node.parameters.workflowInputs.values;\n  return {\n    \""type\"": \""object\"",\n    \""required\"": inputs.map(input => input.name),\n    \""properties\"": inputs.reduce((acc, input) => ({\n      ...acc,\n      [input.name]: { type: input.type ?? 'string' }\n    }), {})\n  }\n})(\n$json.nodes\n  .filter(node => node.type === 'n8n-nodes-base.executeWorkflowTrigger')\n  .first()\n)\n.toJsonString()\n}}""
            }
          ]
        }
      },
      ""executeOnce"": false,
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""a935f5b6-3a35-49e7-870c-87e4daf0ad13"",
      ""name"": ""When Executed by Another Workflow"",
      ""type"": ""n8n-nodes-base.executeWorkflowTrigger"",
      ""position"": [
        -3060,
        600
      ],
      ""parameters"": {
        ""workflowInputs"": {
          ""values"": [
            {
              ""name"": ""operation""
            },
            {
              ""name"": ""workflowIds""
            },
            {
              ""name"": ""parameters"",
              ""type"": ""object""
            }
          ]
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""2ff5e521-5288-47a9-af49-55a1bbbfb4f4"",
      ""name"": ""Operations"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        -2660,
        560
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""outputKey"": ""Add"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""3254a8f9-5fd3-4089-be16-cc3fd20639b8"",
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $('When Executed by Another Workflow').first().json.operation }}"",
                    ""rightValue"": ""addWorkflow""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""remove"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""a33dd02d-5192-48c9-b569-eafddabd2462"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $('When Executed by Another Workflow').first().json.operation }}"",
                    ""rightValue"": ""removeWorkflow""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""list"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""2d68dc3f-a213-47f8-8453-1bceae404653"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $('When Executed by Another Workflow').first().json.operation }}"",
                    ""rightValue"": ""listWorkflows""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""search"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""2146a87e-1a50-4caa-a2ee-f7f6fc2b19c9"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $('When Executed by Another Workflow').first().json.operation }}"",
                    ""rightValue"": ""searchWorkflows""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""execute"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""98b25a51-2cb5-49af-9609-827245595dc9"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $('When Executed by Another Workflow').first().json.operation }}"",
                    ""rightValue"": ""executeWorkflow""
                  }
                ]
              },
              ""renameOutput"": true
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.2
    },
    {
      ""id"": ""5b78271a-6474-4d87-a344-72f7f63822dc"",
      ""name"": ""Get MCP-tagged Workflows"",
      ""type"": ""n8n-nodes-base.n8n"",
      ""position"": [
        -2400,
        200
      ],
      ""parameters"": {
        ""filters"": {
          ""tags"": ""mcp""
        },
        ""requestOptions"": {}
      },
      ""credentials"": {
        ""n8nApi"": {
          ""id"": ""5vELmsVPmK4Bkqkg"",
          ""name"": ""n8n account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1197d29e-b124-4576-846d-876ad16de6e9"",
      ""name"": ""Filter Matching Ids"",
      ""type"": ""n8n-nodes-base.filter"",
      ""position"": [
        -2180,
        200
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""90c97733-48de-4402-8388-5d49e3534388"",
              ""operator"": {
                ""type"": ""boolean"",
                ""operation"": ""true"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{\n$json.id\n  ? $('When Executed by Another Workflow').first().json.workflowIds.split(',').includes($json.id)\n  : false\n}}"",
              ""rightValue"": ""={{ $json.id }}""
            }
          ]
        }
      },
      ""executeOnce"": false,
      ""typeVersion"": 2.2,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""81623298-c3e7-4e20-86a9-d2587b302f28"",
      ""name"": ""Store In Memory"",
      ""type"": ""n8n-nodes-base.redis"",
      ""position"": [
        -1520,
        0
      ],
      ""parameters"": {
        ""key"": ""mcp_n8n_tools"",
        ""value"": ""={{\n($('Get Memory').item.json.data?.parseJson() ?? [])\n  .concat($input.all().map(item => item.json))\n  .toJsonString()\n}}"",
        ""operation"": ""set""
      },
      ""credentials"": {
        ""redis"": {
          ""id"": ""zU4DA70qSDrZM1El"",
          ""name"": ""Redis account (localhost)""
        }
      },
      ""executeOnce"": true,
      ""typeVersion"": 1
    },
    {
      ""id"": ""5ff0ea2f-a2ee-4cc3-bdf9-153ce5973770"",
      ""name"": ""AddTool Success"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -1300,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""d921063f-e8ed-44a8-95a0-4402ecde6c5d"",
              ""name"": ""=response"",
              ""type"": ""string"",
              ""value"": ""={{ $('Simplify Workflows').all().length }} tools were added successfully.""
            }
          ]
        }
      },
      ""executeOnce"": true,
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""1d3169cc-15cd-4296-9e63-bb162322e5e2"",
      ""name"": ""AddTool Error"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -1740,
        200
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""8c4e0763-a4ff-4e8a-a992-13e4e12a5685"",
              ""name"": ""response"",
              ""type"": ""string"",
              ""value"": ""Expected Tools matching Ids given, but none found.""
            }
          ]
        }
      },
      ""executeOnce"": true,
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""6149a950-c1ed-44b4-aee6-3daeabf8ba01"",
      ""name"": ""Get Memory"",
      ""type"": ""n8n-nodes-base.redis"",
      ""position"": [
        -2860,
        600
      ],
      ""parameters"": {
        ""key"": ""mcp_n8n_tools"",
        ""options"": {},
        ""operation"": ""get"",
        ""propertyName"": ""data""
      },
      ""credentials"": {
        ""redis"": {
          ""id"": ""zU4DA70qSDrZM1El"",
          ""name"": ""Redis account (localhost)""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3c538002-45f7-4a2f-9ef4-5aede63235ab"",
      ""name"": ""Split Out"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        -2180,
        400
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""data""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d41e48e0-d610-4e18-9942-842419c99c83"",
      ""name"": ""Filter Matching IDs"",
      ""type"": ""n8n-nodes-base.filter"",
      ""position"": [
        -1960,
        400
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""d2c149fb-d115-449b-9b74-f3c2f8ff7950"",
              ""operator"": {
                ""type"": ""boolean"",
                ""operation"": ""false"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{\n$json.id\n  ? $('Operations').first().json.workflowIds.split(',').includes($json.id)\n  : false\n}}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""21d8cdda-bb47-42cd-a056-809a5556b438"",
      ""name"": ""Store In Memory1"",
      ""type"": ""n8n-nodes-base.redis"",
      ""position"": [
        -1520,
        500
      ],
      ""parameters"": {
        ""key"": ""mcp_n8n_tools"",
        ""value"": ""={{ $input.all().flatMap(item => item.json.data).compact() }}"",
        ""operation"": ""set""
      },
      ""credentials"": {
        ""redis"": {
          ""id"": ""zU4DA70qSDrZM1El"",
          ""name"": ""Redis account (localhost)""
        }
      },
      ""executeOnce"": true,
      ""typeVersion"": 1
    },
    {
      ""id"": ""5a391d0a-ba13-4d54-85fd-eb2f6a935614"",
      ""name"": ""Remove Tool Success"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -1300,
        400
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""1368947f-6625-4e2e-ae27-0fcad0a1d12a"",
              ""name"": ""response"",
              ""type"": ""string"",
              ""value"": ""={{ $('When Executed by Another Workflow').first().json.workflowIds.split(',').length }} tool(s) removed successfully.""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""65dfecc4-43ba-4518-adbf-9676c5cb1377"",
      ""name"": ""Convert to JSON"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -2400,
        400
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""bce29a06-cff6-4409-96d2-04cc858a0e98"",
              ""name"": ""data"",
              ""type"": ""array"",
              ""value"": ""={{ $json.data.parseJson() }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""b8b64fc2-63cf-4b17-9b6d-9d94aec10065"",
      ""name"": ""listTools Success"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -2400,
        600
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""bce29a06-cff6-4409-96d2-04cc858a0e98"",
              ""name"": ""response"",
              ""type"": ""array"",
              ""value"": ""={{\n$json.data\n  ? $json.data.parseJson()\n  : []\n}}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""d4fd9e74-f040-4b3c-8ce0-371315a0d130"",
      ""name"": ""Get MCP-tagged Workflows1"",
      ""type"": ""n8n-nodes-base.n8n"",
      ""position"": [
        -2180,
        600
      ],
      ""parameters"": {
        ""filters"": {
          ""tags"": ""mcp""
        },
        ""requestOptions"": {}
      },
      ""credentials"": {
        ""n8nApi"": {
          ""id"": ""5vELmsVPmK4Bkqkg"",
          ""name"": ""n8n account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d58922c4-b721-4228-83cb-0b1d9632bbc6"",
      ""name"": ""Simplify Workflows1"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -1960,
        600
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""821226b0-12ad-4d1d-81c3-dfa3c286cce4"",
              ""name"": ""id"",
              ""type"": ""string"",
              ""value"": ""={{ $json.id }}""
            },
            {
              ""id"": ""629d95d6-2501-4ad4-a5ed-e557237e1cc2"",
              ""name"": ""name"",
              ""type"": ""string"",
              ""value"": ""={{ $json.name }}""
            },
            {
              ""id"": ""30699f7c-98d3-44ee-9749-c5528579f7e6"",
              ""name"": ""description"",
              ""type"": ""string"",
              ""value"": ""={{\n$json.nodes\n  .filter(node => node.type === 'n8n-nodes-base.stickyNote')\n  .filter(node => node.parameters.content.toLowerCase().includes('try it out'))\n  .map(node => node.parameters.content.substr(0,255) + '...')\n  .join('\\n')\n}}""
            },
            {
              ""id"": ""137221ef-f0a3-4441-bae7-d9d4a22e05b7"",
              ""name"": ""parameters"",
              ""type"": ""string"",
              ""value"": ""={{\n(function(node) {\n  if (!node) return {};\n  const inputs = node.parameters.workflowInputs.values;\n  return {\n    \""type\"": \""object\"",\n    \""required\"": inputs.map(input => input.name),\n    \""properties\"": inputs.reduce((acc, input) => ({\n      ...acc,\n      [input.name]: { type: input.type ?? 'string' }\n    }), {})\n  }\n})(\n$json.nodes\n  .filter(node => node.type === 'n8n-nodes-base.executeWorkflowTrigger')\n  .first()\n)\n.toJsonString()\n}}""
            }
          ]
        }
      },
      ""executeOnce"": false,
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""b44b1115-5153-4b98-979f-219a32b693de"",
      ""name"": ""listTools Success1"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        -1740,
        600
      ],
      ""parameters"": {
        ""options"": {},
        ""aggregate"": ""aggregateAllItemData"",
        ""destinationFieldName"": ""response""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e9d9a33c-ebfa-4f74-a4da-fb6b6f6f6df5"",
      ""name"": ""Get Parameters"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -1920,
        1020
      ],
      ""parameters"": {
        ""mode"": ""raw"",
        ""options"": {},
        ""jsonOutput"": ""={{ $('When Executed by Another Workflow').first().json.parameters }}""
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""c028324a-5c79-4ce9-afd6-097b6f75a74a"",
      ""name"": ""executeTool Result"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        -1440,
        1020
      ],
      ""parameters"": {
        ""options"": {},
        ""aggregate"": ""aggregateAllItemData"",
        ""destinationFieldName"": ""response""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9eeac3cb-af7e-44c7-8891-6ff4367d0b54"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        -3600,
        1040
      ],
      ""parameters"": {
        ""options"": {
          ""systemMessage"": ""=You are a helpful assistant who only uses workflows to answer questions and perform tasks.\n* When asked to complete a task, you will assume there is a workflow which you can use. Do not generate custom scripts or raw commands - use a workflow isntead.\n* Only use the available active workflows as listed using the \""listWorkflows\"" tool.\n* Workflows returned by \""listWorkflows\"" tool are active in the pool and do not need to be added again.\n* Always ask the user before adding workflows to the availble pool.\n* You do not need to confirm each step with the user when executing workflows.\n* When executing the workflow, the required parameters schema for it is listed in the workflow's profile. To get this profile, use the listWokflows tool.\n* If no available workflows are suitable and you are not able to complete the task, simply let the user know.\n* Do not search for workflows in the directory unless the user requests.""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""23601548-7863-403e-a671-267bf592b824"",
      ""name"": ""When chat message received"",
      ""type"": ""@n8n/n8n-nodes-langchain.chatTrigger"",
      ""position"": [
        -3840,
        1040
      ],
      ""webhookId"": ""86a50552-8058-4896-bd7e-ab95eba073ce"",
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""54ed210d-e1b8-4bd7-85e4-88678111a45e"",
      ""name"": ""MCP Client"",
      ""type"": ""@n8n/n8n-nodes-langchain.mcpClientTool"",
      ""position"": [
        -3360,
        1240
      ],
      ""parameters"": {
        ""sseEndpoint"": ""=<Production URL of MCP Server>""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c612da64-9cc1-4601-a987-cd2023fd1863"",
      ""name"": ""Simple Memory"",
      ""type"": ""@n8n/n8n-nodes-langchain.memoryBufferWindow"",
      ""position"": [
        -3500,
        1240
      ],
      ""parameters"": {
        ""contextWindowLength"": 30
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""77a9fd22-c31c-49e4-9d5f-af572b137925"",
      ""name"": ""Convert to JSON1"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -2360,
        1120
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""bce29a06-cff6-4409-96d2-04cc858a0e98"",
              ""name"": ""data"",
              ""type"": ""array"",
              ""value"": ""={{ $json.data.parseJson() }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""3377aa25-4190-4bdc-be20-b4e324212060"",
      ""name"": ""Has Workflow Available?"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        -2140,
        1120
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""9c9df00b-b090-4773-8012-1824b4eeb13f"",
              ""operator"": {
                ""type"": ""object"",
                ""operation"": ""exists"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{\n$json.data.find(d => d.id === $('When Executed by Another Workflow').item.json.workflowIds)\n}}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""92b1bb21-d739-47f0-a278-92ffa5a10cbf"",
      ""name"": ""ExecuteTool Error"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -1920,
        1220
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""2fa3e311-e836-42f4-922a-fae19d8e0267"",
              ""name"": ""response"",
              ""type"": ""string"",
              ""value"": ""=Expected workflow to be available but not yet added. You can only use workflows which have been added to the available pool. Use the listWorkflows tool to see available workflows.""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""529e35e0-cf11-405a-9011-e6f7f2122a4e"",
      ""name"": ""Workflow Exists?"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        -1960,
        200
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""15aef770-639e-4df0-900f-29013ccd00c4"",
              ""operator"": {
                ""type"": ""object"",
                ""operation"": ""notEmpty"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""ba278834-c774-4a3d-8ebc-f64ac77317c2"",
      ""name"": ""N8N Workflows MCP Server"",
      ""type"": ""@n8n/n8n-nodes-langchain.mcpTrigger"",
      ""position"": [
        -3720,
        240
      ],
      ""webhookId"": ""4625bcf4-0dd9-4562-a70f-6fee41f6f12d"",
      ""parameters"": {
        ""path"": ""4625bcf4-0dd9-4562-a70f-6fee41f6f12d""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ed940612-4772-4377-afe2-5484a8978665"",
      ""name"": ""Add Workflow"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        -3800,
        460
      ],
      ""parameters"": {
        ""name"": ""addWorkflow"",
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $workflow.id }}""
        },
        ""description"": ""Adds one or more workflows by ID to the available pool of workflows for the agent. You can get a list of workflows by calling the listTool tool."",
        ""workflowInputs"": {
          ""value"": {
            ""operation"": ""addWorkflow"",
            ""parameters"": ""null"",
            ""workflowIds"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('workflowIds', ``, 'string') }}""
          },
          ""schema"": [
            {
              ""id"": ""operation"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""operation"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""workflowIds"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""workflowIds"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""parameters"",
              ""type"": ""object"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""parameters"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""e7d5096c-3545-43fd-aa1f-495dc041ccce"",
      ""name"": ""RemoveWorkflow"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        -3700,
        560
      ],
      ""parameters"": {
        ""name"": ""removeWorkflow"",
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $workflow.id }}""
        },
        ""description"": ""Removes one or more workflows by ID from the available pool of workflows for the agent."",
        ""workflowInputs"": {
          ""value"": {
            ""operation"": ""removeWorkflow"",
            ""parameters"": ""null"",
            ""workflowIds"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('workflowIds', ``, 'string') }}""
          },
          ""schema"": [
            {
              ""id"": ""operation"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""operation"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""workflowIds"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""workflowIds"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""parameters"",
              ""type"": ""object"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""parameters"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""c20b63dc-e768-4529-a08c-5370853fc4c9"",
      ""name"": ""List Workflows"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        -3580,
        660
      ],
      ""parameters"": {
        ""name"": ""listTool"",
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $workflow.id }}""
        },
        ""description"": ""Lists the available pool of workflows for the agent."",
        ""workflowInputs"": {
          ""value"": {
            ""operation"": ""listWorkflows"",
            ""parameters"": ""null"",
            ""workflowIds"": ""null""
          },
          ""schema"": [
            {
              ""id"": ""operation"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""operation"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""workflowIds"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""workflowIds"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""parameters"",
              ""type"": ""object"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""parameters"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""88fb8a1e-2f4c-4ff1-8be9-0f7afee2dd4d"",
      ""name"": ""SearchWorkflows"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        -3460,
        560
      ],
      ""parameters"": {
        ""name"": ""searchTool"",
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $workflow.id }}""
        },
        ""description"": ""Returns all workflows which can be added to the pool of available workflows for the agent."",
        ""workflowInputs"": {
          ""value"": {
            ""operation"": ""searchWorkflows"",
            ""parameters"": ""null"",
            ""workflowIds"": ""null""
          },
          ""schema"": [
            {
              ""id"": ""operation"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""operation"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""workflowIds"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""workflowIds"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""parameters"",
              ""type"": ""object"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""parameters"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""c643c007-de89-4d94-9739-aeb2032c792f"",
      ""name"": ""ExecuteWorkflow"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        -3340,
        460
      ],
      ""parameters"": {
        ""name"": ""executeTool"",
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $workflow.id }}""
        },
        ""description"": ""Executes a workflow which has been added to the pool of available workflows for the agent."",
        ""workflowInputs"": {
          ""value"": {
            ""operation"": ""executeWorkflow"",
            ""parameters"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters', ``, 'string') }}"",
            ""workflowIds"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('workflowIds', ``, 'string') }}""
          },
          ""schema"": [
            {
              ""id"": ""operation"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""operation"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""workflowIds"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""workflowIds"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""parameters"",
              ""type"": ""object"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""parameters"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
     ",
Generate Text-to-Speech Using Elevenlabs via API,"{
  ""nodes"": [
    {
      ""id"": ""73b64763-5e18-4ff1-bb52-ba25a08d3c3a"",
      ""name"": ""If params correct"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        500,
        200
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""2e968b41-88f7-4b28-9837-af50ae130979"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""exists"",
                ""singleValue"": true
              },
              ""leftValue"": ""voice_id"",
              ""rightValue"": """"
            },
            {
              ""id"": ""ad961bc9-6db8-4cac-8c63-30930e8beca7"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""exists"",
                ""singleValue"": true
              },
              ""leftValue"": ""text"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""39079dec-54c5-458e-afa1-56ee5723f3a3"",
      ""name"": ""Respond to Webhook"",
      ""type"": ""n8n-nodes-base.respondToWebhook"",
      ""position"": [
        960,
        180
      ],
      ""parameters"": {
        ""options"": {},
        ""respondWith"": ""binary""
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""b6a344f4-28ac-41a7-8e6a-a2782a5d1c68"",
      ""name"": ""Webhook"",
      ""type"": ""n8n-nodes-base.webhook"",
      ""position"": [
        300,
        200
      ],
      ""webhookId"": ""5acc6769-6c0f-42a8-a69c-b05e437e18a9"",
      ""parameters"": {
        ""path"": ""generate-voice"",
        ""options"": {},
        ""httpMethod"": ""POST"",
        ""responseMode"": ""responseNode""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""a25dec72-152b-4457-a18f-9cbbd31840ec"",
      ""name"": ""Generate voice"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        740,
        180
      ],
      ""parameters"": {
        ""url"": ""=https://api.elevenlabs.io/v1/text-to-speech/{{ $json.body.voice_id }}"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""text\"":  \""{{ $json.body.text }}\""\n} "",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""authentication"": ""genericCredentialType"",
        ""genericAuthType"": ""httpCustomAuth"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""Content-Type"",
              ""value"": ""application/json""
            }
          ]
        }
      },
      ""credentials"": {
        ""httpCustomAuth"": {
          ""id"": ""nhkU37chaiBU6X3j"",
          ""name"": ""Custom Auth account""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""e862955e-76d9-4a24-9501-0d5eb8fbe778"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        280,
        -360
      ],
      ""parameters"": {
        ""width"": 806.0818150700699,
        ""height"": 495.17470523089514,
        ""content"": ""## Generate Text-to-Speech Using Elevenlabs via API\nThis workflow provides an API endpoint to generate speech from text using [Elevenlabs.io](https://elevenlabs.io/), a popular text-to-speech service.\n\n### Step 1: Configure Custom Credentials in n8n\nTo set up your credentials in n8n, create a new custom authentication entry with the following JSON structure:\n```json\n{\n  \""headers\"": {\n    \""xi-api-key\"": \""your-elevenlabs-api-key\""\n  }\n}\n```\nReplace `\""your-elevenlabs-api-key\""` with your actual Elevenlabs API key.\n\n### Step 2: Send a POST Request to the Webhook\nSend a POST request to the workflow's webhook endpoint with these two parameters:\n- `voice_id`: The ID of the voice from Elevenlabs that you want to use.\n- `text`: The text you want to convert to speech.\n\nThis workflow has been a significant time-saver in my video production tasks. I hope it proves just as useful to you!\n\nHappy automating!  \nThe n8Ninja""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""275ca523-8b43-4723-9dc4-f5dc1832fcd1"",
      ""name"": ""Error"",
      ""type"": ""n8n-nodes-base.respondToWebhook"",
      ""position"": [
        740,
        360
      ],
      ""parameters"": {
        ""options"": {},
        ""respondWith"": ""json"",
        ""responseBody"": ""{\n  \""error\"": \""Invalid inputs.\""\n}""
      },
      ""typeVersion"": 1.1
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""Webhook"": {
      ""main"": [
        [
          {
            ""node"": ""If params correct"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Generate voice"": {
      ""main"": [
        [
          {
            ""node"": ""Respond to Webhook"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""If params correct"": {
      ""main"": [
        [
          {
            ""node"": ""Generate voice"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Error"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Auto Categorise Outlook Emails with AI,"{
  ""meta"": {
    ""instanceId"": ""67d4d33d8b0ad4e5e12f051d8ad92fc35893d7f48d7f801bc6da4f39967b3592""
  },
  ""nodes"": [
    {
      ""id"": ""30f5203b-469d-4f0c-8493-e8f08e14e4fe"",
      ""name"": ""When clicking ‘Test workflow’"",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        -560,
        440
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""d16f59dd-f54e-487b-9aac-67f109ba9869"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1000,
        -280
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 727.9032097745135,
        ""height"": 110.58643966444157,
        ""content"": ""# Auto Categorise Outlook Emails with AI\nBuilt by [Wayne Simpson](https://www.linkedin.com/in/simpsonwayne/) at [nocodecreative.io](https://nocodecreative.io)""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4e110412-8530-4322-bc5c-7f9df2b63bcb"",
      ""name"": ""Sticky Note9"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1100,
        -120
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 506.8102696237577,
        ""height"": 337.24177957113216,
        ""content"": ""### Watch Set Up Video 👇\n[![Auto Categorise Outlook Emails with AI](https://vdyfnvnstovfxpabhdjc.supabase.co/storage/v1/object/public/images/Thumbnails/auto-categories-emails.png?t=2024-10-11T09%3A56%3A37.961Z#full-width)](https://www.youtube.com/watch?v=EhRBkkjv_3c)\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9d79875f-148e-46ef-967a-95c07298456d"",
      ""name"": ""Ollama Chat Model1"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOllama"",
      ""position"": [
        1129,
        684
      ],
      ""parameters"": {
        ""model"": ""qwen2.5:14b"",
        ""options"": {
          ""temperature"": 0.2
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""bcf92a71-ff5f-46a7-bec3-cedb5be2bf98"",
      ""name"": ""Microsoft Outlook10"",
      ""type"": ""n8n-nodes-base.microsoftOutlook"",
      ""position"": [
        3020,
        8
      ],
      ""parameters"": {
        ""folderId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""AQMkAGE3ZTU5MGMzLTFkNGItNGQ5Zi04MDQ1LThmNGFlMTVhYjMwYgAuAAAD8UhruVwm402lgPBG2Tj-aQEAnz-IOcWBGE2lrVuQgAF6zAAAAgFJAAAA"",
          ""cachedResultUrl"": ""https://outlook.office365.com/mail/AQMkAGE3ZTU5MGMzLTFkNGItNGQ5Zi04MDQ1LThmNGFlMTVhYjMwYgAuAAAD8UhruVwm402lgPBG2Tj%2FaQEAnz%2FIOcWBGE2lrVuQgAF6zAAAAgFJAAAA"",
          ""cachedResultName"": ""Junk Email""
        },
        ""messageId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $('varID & Category1').item.json.id }}""
        },
        ""operation"": ""move""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""100db1cb-3819-43c7-a74b-5c087ad4f2da"",
      ""name"": ""Microsoft Outlook12"",
      ""type"": ""n8n-nodes-base.microsoftOutlook"",
      ""position"": [
        2700,
        8
      ],
      ""parameters"": {
        ""messageId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $('varID & Category1').item.json.id }}""
        },
        ""operation"": ""update"",
        ""updateFields"": {
          ""categories"": ""={{ \n  [$('varJSON1').first().json.output.category, $('varJSON1').first().json.output.subCategory]\n    .filter(item => item && item.trim() !== \""\"")\n    .map(item => item.charAt(0).toUpperCase() + item.slice(1))\n}}""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""d4969259-a3ae-473d-82ef-0c9f7933c899"",
      ""name"": ""Loop Over Items1"",
      ""type"": ""n8n-nodes-base.splitInBatches"",
      ""position"": [
        160,
        448
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""524f6be3-7708-4aae-b9ab-e0ef8180a627"",
      ""name"": ""Microsoft Outlook13"",
      ""type"": ""n8n-nodes-base.microsoftOutlook"",
      ""position"": [
        2700,
        188
      ],
      ""parameters"": {
        ""messageId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $('varID & Category1').item.json.id }}""
        },
        ""operation"": ""update"",
        ""updateFields"": {
          ""categories"": ""={{ \n  [$('varJSON1').first().json.output.category, $('varJSON1').first().json.output.subCategory]\n    .filter(item => item && item.trim() !== \""\"")\n    .map(item => item.charAt(0).toUpperCase() + item.slice(1))\n}}""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""72cb54f3-4e4e-4ad2-8845-11a38fc29f1a"",
      ""name"": ""Microsoft Outlook15"",
      ""type"": ""n8n-nodes-base.microsoftOutlook"",
      ""position"": [
        3020,
        188
      ],
      ""parameters"": {
        ""folderId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""AQMkAGE3ZTU5MGMzLTFkNGItNGQ5Zi04MDQ1LThmNGFlMTVhYjMwYgAuAAAD8UhruVwm402lgPBG2Tj-aQEAnz-IOcWBGE2lrVuQgAF6zAADLJmrBwAAAA=="",
          ""cachedResultUrl"": ""https://outlook.office365.com/mail/AQMkAGE3ZTU5MGMzLTFkNGItNGQ5Zi04MDQ1LThmNGFlMTVhYjMwYgAuAAAD8UhruVwm402lgPBG2Tj%2FaQEAnz%2FIOcWBGE2lrVuQgAF6zAADLJmrBwAAAA%3D%3D"",
          ""cachedResultName"": ""Receipt""
        },
        ""messageId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $('varID & Category1').item.json.id }}""
        },
        ""operation"": ""move""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""e4446e84-c05e-4d04-b415-7608e39024ee"",
      ""name"": ""Microsoft Outlook16"",
      ""type"": ""n8n-nodes-base.microsoftOutlook"",
      ""position"": [
        2709,
        504
      ],
      ""parameters"": {
        ""messageId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $('varID & Category1').item.json.id }}""
        },
        ""operation"": ""update"",
        ""updateFields"": {
          ""categories"": ""={{ \n  [$('varJSON1').first().json.output.category, $('varJSON1').first().json.output.subCategory]\n    .filter(item => item && item.trim() !== \""\"")\n    .map(item => item.charAt(0).toUpperCase() + item.slice(1))\n}}""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""3ee05cfe-a528-472e-aa3d-c890fd88b6c4"",
      ""name"": ""Microsoft Outlook17"",
      ""type"": ""n8n-nodes-base.microsoftOutlook"",
      ""position"": [
        3020,
        508
      ],
      ""parameters"": {
        ""folderId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""AQMkAGE3ZTU5MGMzLTFkNGItNGQ5Zi04MDQ1LThmNGFlMTVhYjMwYgAuAAAD8UhruVwm402lgPBG2Tj-aQEAnz-IOcWBGE2lrVuQgAF6zAADLJmrCAAAAA=="",
          ""cachedResultUrl"": ""https://outlook.office365.com/mail/AQMkAGE3ZTU5MGMzLTFkNGItNGQ5Zi04MDQ1LThmNGFlMTVhYjMwYgAuAAAD8UhruVwm402lgPBG2Tj%2FaQEAnz%2FIOcWBGE2lrVuQgAF6zAADLJmrCAAAAA%3D%3D"",
          ""cachedResultName"": ""Community""
        },
        ""messageId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $('varID & Category1').item.json.id }}""
        },
        ""operation"": ""move""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""2fcecd9e-95cc-489a-b874-699c54518e44"",
      ""name"": ""Microsoft Outlook18"",
      ""type"": ""n8n-nodes-base.microsoftOutlook"",
      ""position"": [
        2709,
        344
      ],
      ""parameters"": {
        ""messageId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $('varID & Category1').item.json.id }}""
        },
        ""operation"": ""update"",
        ""updateFields"": {
          ""categories"": ""={{ \n  [$('varJSON1').first().json.output.category, $('varJSON1').first().json.output.subCategory]\n    .filter(item => item && item.trim() !== \""\"")\n    .map(item => item.charAt(0).toUpperCase() + item.slice(1))\n}}""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""41a39309-1a94-461f-9308-63dd5b9a94a7"",
      ""name"": ""Microsoft Outlook19"",
      ""type"": ""n8n-nodes-base.microsoftOutlook"",
      ""position"": [
        3020,
        348
      ],
      ""parameters"": {
        ""folderId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""AQMkAGE3ZTU5MGMzLTFkNGItNGQ5Zi04MDQ1LThmNGFlMTVhYjMwYgAuAAAD8UhruVwm402lgPBG2Tj-aQEAnz-IOcWBGE2lrVuQgAF6zAADLJmrCQAAAA=="",
          ""cachedResultUrl"": ""https://outlook.office365.com/mail/AQMkAGE3ZTU5MGMzLTFkNGItNGQ5Zi04MDQ1LThmNGFlMTVhYjMwYgAuAAAD8UhruVwm402lgPBG2Tj%2FaQEAnz%2FIOcWBGE2lrVuQgAF6zAADLJmrCQAAAA%3D%3D"",
          ""cachedResultName"": ""SaaS""
        },
        ""messageId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $('varID & Category1').item.json.id }}""
        },
        ""operation"": ""move""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""ebf606f9-099c-4218-b23b-66e2487262d0"",
      ""name"": ""Markdown1"",
      ""type"": ""n8n-nodes-base.markdown"",
      ""notes"": ""Converts the body of the email to markdown"",
      ""position"": [
        420,
        468
      ],
      ""parameters"": {
        ""html"": ""={{ $('Loop Over Items1').item.json.body.content }}"",
        ""options"": {}
      },
      ""notesInFlow"": true,
      ""typeVersion"": 1
    },
    {
      ""id"": ""ff447dd5-3ef6-4a02-8453-3489af8bf6b5"",
      ""name"": ""varEmal1"",
      ""type"": ""n8n-nodes-base.set"",
      ""notes"": ""Set email fields"",
      ""position"": [
        620,
        468
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""edb304e1-3e9f-4a77-918c-25646addbc53"",
              ""name"": ""subject"",
              ""type"": ""string"",
              ""value"": ""={{ $json.subject }}""
            },
            {
              ""id"": ""57a3ef3a-2701-40d9-882f-f43a7219f148"",
              ""name"": ""importance"",
              ""type"": ""string"",
              ""value"": ""={{ $json.importance }}""
            },
            {
              ""id"": ""d8317f4f-aa0e-4196-89af-cb016765490a"",
              ""name"": ""sender"",
              ""type"": ""object"",
              ""value"": ""={{ $json.sender.emailAddress }}""
            },
            {
              ""id"": ""908716c8-9ff7-4bdc-a1a3-64227559635e"",
              ""name"": ""from"",
              ""type"": ""object"",
              ""value"": ""={{ $json.from.emailAddress }}""
            },
            {
              ""id"": ""ce007329-e221-4c5a-8130-2f8e9130160f"",
              ""name"": ""body"",
              ""type"": ""string"",
              ""value"": ""={{ $json.data\n    .replace(/<[^>]*>/g, '')                      // Remove HTML tags\n    .replace(/\\[(.*?)\\]\\((.*?)\\)/g, '')            // Remove Markdown links like [text](link)\n    .replace(/!\\[.*?\\]\\(.*?\\)/g, '')               // Remove Markdown images like ![alt](image-link)\n    .replace(/\\|/g, '')                            // Remove table separators \""|\""\n    .replace(/-{3,}/g, '')                         // Remove horizontal rule \""---\""\n    .replace(/\\n+/g, ' ')                          // Remove multiple newlines\n    .replace(/([^\\w\\s.,!?@])/g, '')                // Remove special characters except essential ones\n    .replace(/\\s{2,}/g, ' ')                       // Replace multiple spaces with a single space\n    .trim()                                        // Trim leading/trailing whitespace\n}}\n""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""198524cb-c9f0-4261-8c38-7c878efe7457"",
      ""name"": ""Microsoft Outlook20"",
      ""type"": ""n8n-nodes-base.microsoftOutlook"",
      ""position"": [
        2700,
        668
      ],
      ""parameters"": {
        ""messageId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $('varID & Category1').item.json.id }}""
        },
        ""operation"": ""update"",
        ""updateFields"": {
          ""categories"": ""={{ \n  [$('varJSON1').first().json.output.category, $('varJSON1').first().json.output.subCategory]\n    .filter(item => item && item.trim() !== \""\"")\n    .map(item => item.charAt(0).toUpperCase() + item.slice(1))\n}}""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""ec73629c-59ac-4f0e-a432-2c06934952ab"",
      ""name"": ""Microsoft Outlook21"",
      ""type"": ""n8n-nodes-base.microsoftOutlook"",
      ""position"": [
        2709,
        1044
      ],
      ""parameters"": {
        ""messageId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $('varID & Category1').item.json.id }}""
        },
        ""operation"": ""update"",
        ""updateFields"": {
          ""categories"": ""={{ \n  [$('varJSON1').first().json.output.category, $('varJSON1').first().json.output.subCategory]\n    .filter(item => item && item.trim() !== \""\"")\n    .map(item => item.charAt(0).toUpperCase() + item.slice(1))\n}}""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""0a19d15c-0cd3-4f26-9be2-4914522751fb"",
      ""name"": ""Filter1"",
      ""type"": ""n8n-nodes-base.filter"",
      ""position"": [
        -100,
        448
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""c8cd6917-f94e-4fb7-8601-b8ed8f1aa8bf"",
              ""operator"": {
                ""type"": ""array"",
                ""operation"": ""empty"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.categories }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""96e6e31c-6306-44a8-a57a-2b5216636b00"",
      ""name"": ""If1"",
      ""type"": ""n8n-nodes-base.if"",
      ""notes"": ""Checks if the email has been read"",
      ""position"": [
        3320,
        668
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""f8cf2a56-cea8-4150-b7a0-048dbda20f2f"",
              ""operator"": {
                ""type"": ""boolean"",
                ""operation"": ""true"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.isRead }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""8a6e0118-abe3-45e2-aefc-94640348b2ec"",
      ""name"": ""Microsoft Outlook22"",
      ""type"": ""n8n-nodes-base.microsoftOutlook"",
      ""position"": [
        2709,
        864
      ],
      ""parameters"": {
        ""messageId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $('varID & Category1').item.json.id }}""
        },
        ""operation"": ""update"",
        ""updateFields"": {
          ""categories"": ""={{ \n  [$('varJSON1').first().json.output.category, $('varJSON1').first().json.output.subCategory]\n    .filter(item => item && item.trim() !== \""\"")\n    .map(item => item.charAt(0).toUpperCase() + item.slice(1))\n}}""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""e2d8e7b5-4447-4327-9f4e-b8d52765667e"",
      ""name"": ""Catch Errors1"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1760,
        608
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""0dc6d439-60fb-49f6-b4d5-f5cce6f030ad"",
              ""name"": ""error"",
              ""type"": ""string"",
              ""value"": ""={{ $json }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""17f6ac43-51e4-4bee-b0d8-13deb3bf3cc9"",
      ""name"": ""varJSON1"",
      ""type"": ""n8n-nodes-base.set"",
      ""onError"": ""continueErrorOutput"",
      ""position"": [
        1540,
        468
      ],
      ""parameters"": {
        ""options"": {
          ""ignoreConversionErrors"": true
        },
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""0c52f57f-74eb-4385-ac6b-f3e5f4f50e73"",
              ""name"": ""output"",
              ""type"": ""object"",
              ""value"": ""={{ $json.output.replace(/^.*?({.*}).*$/s, '$1') }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""82dd9631-a34b-4d54-be28-6f8dcc3548f0"",
      ""name"": ""Sticky Note10"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -360,
        220
      ],
      ""parameters"": {
        ""width"": 411.91693012378937,
        ""height"": 401.49417117683515,
        ""content"": ""## Outlook Business with filters\nFilters:\n```\nflag/flagStatus eq 'notFlagged' and not categories/any()\n```\n\nThese filters ensure we do not process flagged emails or email that already have a category set.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0583e196-37a5-43db-8c0a-aa624029c926"",
      ""name"": ""Microsoft Outlook23"",
      ""type"": ""n8n-nodes-base.microsoftOutlook"",
      ""position"": [
        -300,
        448
      ],
      ""parameters"": {
        ""limit"": 1,
        ""fields"": [
          ""flag"",
          ""from"",
          ""importance"",
          ""replyTo"",
          ""sender"",
          ""subject"",
          ""toRecipients"",
          ""body"",
          ""categories"",
          ""isRead""
        ],
        ""output"": ""fields"",
        ""options"": {},
        ""filtersUI"": {
          ""values"": {
            ""filters"": {
              ""custom"": ""flag/flagStatus eq 'notFlagged' and not categories/any()"",
              ""foldersToInclude"": [
                ""AQMkAGE3ZTU5MGMzLTFkNGItNGQ5Zi04MDQ1LThmNGFlMTVhYjMwYgAuAAAD8UhruVwm402lgPBG2Tj-aQEAnz-IOcWBGE2lrVuQgAF6zAAAAgEMAAAA""
              ]
            }
          }
        },
        ""operation"": ""getAll""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""a9540e6b-929b-4460-8972-93e4d19cd934"",
      ""name"": ""varID & Category1"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        900,
        468
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""de2ad4f2-7381-4715-a3f4-59611e161b74"",
              ""name"": ""id"",
              ""type"": ""string"",
              ""value"": ""={{ $('Microsoft Outlook23').item.json.id }}""
            },
            {
              ""id"": ""458c7a89-e4a3-46d0-8b38-72d87748e306"",
              ""name"": ""category"",
              ""type"": ""string"",
              ""value"": ""\""action\"", \""junk\"", \""receipt\"", \""SaaS\"", \""community\"", \""business\"" or \""other\""""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""e6b3b41e-d7d3-4c9b-8189-a005c748ff18"",
      ""name"": ""Sticky Note11"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        360,
        348
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 418.7820408163265,
        ""height"": 301.40952380952365,
        ""content"": ""## Sanitise Email \nRemoves HTML and useless information in preparation for the AI Agent""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""f9787a75-526c-4ef1-b0a7-0db7d890ab3f"",
      ""name"": ""Sticky Note12"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        820,
        348
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 256.16108843537415,
        ""height"": 298.37931972789124,
        ""content"": ""## Modify Categories \nEdit this to customise category selection""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""50223a01-34cf-4191-9dd7-3dac02a9e945"",
      ""name"": ""Sticky Note13"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1480,
        328
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 441.003537414966,
        ""height"": 463.0204081632651,
        ""content"": ""## Convert to JSON\n* Ensures the Agent output to converted to JSON\n* Catches any errors and continues processing""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4580c532-96a6-46b4-8922-d79316d1cc01"",
      ""name"": ""Sticky Note14"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2120,
        328
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 311.71482993197264,
        ""height"": 454.93986394557805,
        ""content"": ""## Switch Categories\nEnsure your categories match the **varID & Category** Edit Fields node""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b51a7c34-2a5e-4670-81a4-d1582711c69a"",
      ""name"": ""Sticky Note15"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2629,
        -76
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 251.3480889735252,
        ""height"": 1289.0156245602684,
        ""content"": ""## Set Categories\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3a7ede7b-539b-49d2-8803-153ca6c9eb69"",
      ""name"": ""Sticky Note16"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2949,
        -76
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 251.3480889735252,
        ""height"": 770.995811762121,
        ""content"": ""## Move to Folders\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ee9a9d78-8c07-470a-9d1b-ceddfc8875ca"",
      ""name"": ""Sticky Note17"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        3260,
        553
      ],
      ""parameters"": {
        ""color"": 4,
        ""height"": 293.65527013262994,
        ""content"": ""## Check if email has been read\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c75b9d38-79a7-4be2-a90b-a99da1bbd745"",
      ""name"": ""Microsoft Outlook Move Message1"",
      ""type"": ""n8n-nodes-base.microsoftOutlook"",
      ""position"": [
        3609,
        604
      ],
      ""parameters"": {
        ""folderId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""AQMkAGE3ZTU5MGMzLTFkNGItNGQ5Zi04MDQ1LThmNGFlMTVhYjMwYgAuAAAD8UhruVwm402lgPBG2Tj-aQEAnz-IOcWBGE2lrVuQgAF6zAADLJmrCwAAAA=="",
          ""cachedResultUrl"": ""https://outlook.office365.com/mail/AQMkAGE3ZTU5MGMzLTFkNGItNGQ5Zi04MDQ1LThmNGFlMTVhYjMwYgAuAAAD8UhruVwm402lgPBG2Tj%2FaQEAnz%2FIOcWBGE2lrVuQgAF6zAADLJmrCwAAAA%3D%3D"",
          ""cachedResultName"": ""Actioned""
        },
        ""messageId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $('varID & Category1').item.json.id }}""
        },
        ""operation"": ""move""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""85ff0348-16dc-46e6-bf70-48a10fe0ded8"",
      ""name"": ""AI Agent1"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        1160,
        468
      ],
      ""parameters"": {
        ""text"": ""=Categorise the following email\n<email>\n{{ $('varEmal1').first().json.toJsonString() }}\n</email>\n\nEnsure your final output is valid JSON with no additional text or token in the following format:\n\n{\n  \""subject\"": \""SUBJECT_LINE\"",1\n  \""category\"": \""CATEGORY\"",\n  \""subCategory\"": \""SUBCATEGORY\"", //use sparingly\n  \""analysis\"": \""ANALYSIS_REASONING\""\n}\n\nRemember you can only use ONE of the following categories {{ $json.category }}. No other categories can be used. Use the subcategory for additional context, for example, if a SaaS email requires action, or if a business email requires action. Do not create any additional subcategories, you can only use ONE of the following {{ $json.category }}."",
        ""options"": {
          ""systemMessage"": ""=You're an AI assistant for a freelance developer, categorizing emails as {{ $json.category }}. Email info is in <email> tags.\n\nCategorization priority:\n\nAction: Needs response or action (includes some SaaS emails), avoid sales email but include enquires.\nJunk: Ads, sales, newsletters, promotions, daily digests, (emojis often indicate junk), phishing, scams, discounts etc.\nReceipt: Any purchase confirmation.\nSaaS: Account/security updates, unless action required, generic SaaS information, usually from a non-personal email address.\nCommunity: Updates, events, forums, everything related to \""community\"".\nBusiness: Any communication related to freelance work, usually from a humans email address\nOther: Doesn't fit into any other category.\n\nKey points:\n\nSaaS emails needing action are \""SaaS\"" and subcategory \""action\"".\nAnalyze the subject, body, email addresses and other data.\nLook for specific keywords and phrases for each category.\nEmail can have 2 categories, primary and sub, for example, \""action\"" and \""SaaS\"" or \""action\"" and \""business\"".\nEmails from business development executives are often junk.\n\n\nOutput in valid JSON format:\n{\n\""subject\"": \""SUBJECT_LINE\"",\n\""category\"": \""PRIMARY CATEGORY\"",\n\""subCategory\"": \""SUBCATEGORY\"", //use sparingly\n\""analysis\"": \""Brief 1-2 sentence explanation of category choice\""\n}\nNo additional text or tokens outside the JSON.\n\nYou may only use the following categories and subcategories, do not create any more categories or subcategories: {{ $json.category }}""
        },
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.6
    },
    {
      ""id"": ""93e7be79-9035-4b58-9a83-b9182a0515f8"",
      ""name"": ""Merge1"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        3989,
        564
      ],
      ""parameters"": {
        ""numberInputs"": 7
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""cbaeaed1-cb09-4614-93f1-3fe349cd0e4e"",
      ""name"": ""Switch1"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        2220,
        488
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""outputKey"": ""junk"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": false,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.output.category }}"",
                    ""rightValue"": ""junk""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""receipt"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": false,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""0c61c7a8-e8b4-49c5-a96c-402d5eae7089"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.output.category }}"",
                    ""rightValue"": ""receipt""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""SaaS"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": false,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""703f65c8-cf4a-47fe-ad1a-a5f6e0412ae7"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.output.category }}"",
                    ""rightValue"": ""SaaS""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""community"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": false,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""b074d5cd-9215-40df-8877-5df904edc000"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.output.category }}"",
                    ""rightValue"": ""community""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""action"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": false,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""bece338a-e0c5-43b5-b8cc-41229a374213"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.output.category }}"",
                    ""rightValue"": ""action""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""business"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": false,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""d6c9751f-0ffa-4041-a579-6957bb9c9296"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.output.category }}"",
                    ""rightValue"": ""business""
                  }
                ]
              },
              ""renameOutput"": true
            }
          ]
        },
        ""options"": {
          ""ignoreCase"": true,
          ""fallbackOutput"": ""extra""
        }
      },
      ""typeVersion"": 3.2
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""If1"": {
      ""main"": [
        [
          {
            ""node"": ""Microsoft Outlook Move Message1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Merge1"",
            ""type"": ""main"",
            ""index"": 5
          }
        ]
      ]
    },
    ""Merge1"": {
      ""main"": [
        [
          {
            ""node"": ""Loop Over Items1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Filter1"": {
      ""main"": [
        [
          {
            ""node"": ""Loop Over Items1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Switch1"": {
      ""main"": [
        [
          {
            ""node"": ""Microsoft Outlook12"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Microsoft Outlook13"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Microsoft Outlook18"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Microsoft Outlook16"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Microsoft Outlook20"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Microsoft Outlook22"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Microsoft Outlook21"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""varEmal1"": {
      ""main"": [
        [
          {
            ""node"": ""varID & Category1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
   ",
Building Your First WhatsApp Chatbot,"{
  ""meta"": {
    ""instanceId"": ""408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9""
  },
  ""nodes"": [
    {
      ""id"": ""77ee6494-4898-47dc-81d9-35daf6f0beea"",
      ""name"": ""WhatsApp Trigger"",
      ""type"": ""n8n-nodes-base.whatsAppTrigger"",
      ""position"": [
        1360,
        -280
      ],
      ""webhookId"": ""aaa71f03-f7af-4d18-8d9a-0afb86f1b554"",
      ""parameters"": {
        ""updates"": [
          ""messages""
        ]
      },
      ""credentials"": {
        ""whatsAppTriggerApi"": {
          ""id"": ""H3uYNtpeczKMqtYm"",
          ""name"": ""WhatsApp OAuth account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""57210e27-1f89-465a-98cc-43f890a4bf58"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        1960,
        -200
      ],
      ""parameters"": {
        ""model"": ""gpt-4o-2024-08-06"",
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""8gccIjcuf3gvaoEr"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e1053235-0ade-4e36-9ad2-8b29c78fced8"",
      ""name"": ""Window Buffer Memory"",
      ""type"": ""@n8n/n8n-nodes-langchain.memoryBufferWindow"",
      ""position"": [
        2080,
        -200
      ],
      ""parameters"": {
        ""sessionKey"": ""=whatsapp-75-{{ $json.messages[0].from }}"",
        ""sessionIdType"": ""customKey""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""69f1b78b-7c93-4713-863a-27e04809996f"",
      ""name"": ""Vector Store Tool"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolVectorStore"",
      ""position"": [
        2200,
        -200
      ],
      ""parameters"": {
        ""name"": ""query_product_brochure"",
        ""description"": ""Call this tool to query the product brochure. Valid for the year 2024.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""170e8f7d-7e14-48dd-9f80-5352cc411fc1"",
      ""name"": ""Embeddings OpenAI"",
      ""type"": ""@n8n/n8n-nodes-langchain.embeddingsOpenAi"",
      ""position"": [
        2200,
        80
      ],
      ""parameters"": {
        ""model"": ""text-embedding-3-small"",
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""8gccIjcuf3gvaoEr"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ee78320b-d407-49e8-b4b8-417582a44709"",
      ""name"": ""OpenAI Chat Model1"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        2440,
        -60
      ],
      ""parameters"": {
        ""model"": ""gpt-4o-2024-08-06"",
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""8gccIjcuf3gvaoEr"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9dd89378-5acf-4ca6-8d84-e6e64254ed02"",
      ""name"": ""When clicking ‘Test workflow’"",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        0,
        -240
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""e68fc137-1bcb-43f0-b597-3ae07f380c15"",
      ""name"": ""Embeddings OpenAI1"",
      ""type"": ""@n8n/n8n-nodes-langchain.embeddingsOpenAi"",
      ""position"": [
        760,
        -20
      ],
      ""parameters"": {
        ""model"": ""text-embedding-3-small"",
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""8gccIjcuf3gvaoEr"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""2d31e92b-18d4-4f6b-8cdb-bed0056d50d7"",
      ""name"": ""Default Data Loader"",
      ""type"": ""@n8n/n8n-nodes-langchain.documentDefaultDataLoader"",
      ""position"": [
        900,
        -20
      ],
      ""parameters"": {
        ""options"": {},
        ""jsonData"": ""={{ $('Extract from File').item.json.text }}"",
        ""jsonMode"": ""expressionData""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ca0c015e-fba2-4dca-b0fe-bac66681725a"",
      ""name"": ""Recursive Character Text Splitter"",
      ""type"": ""@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"",
      ""position"": [
        900,
        100
      ],
      ""parameters"": {
        ""options"": {},
        ""chunkSize"": 2000,
        ""chunkOverlap"": {}
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""63abb6b2-b955-4e65-9c63-3211dca65613"",
      ""name"": ""Extract from File"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        360,
        -240
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""pdf""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""be2add9c-3670-4196-8c38-82742bf4f283"",
      ""name"": ""get Product Brochure"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        180,
        -240
      ],
      ""parameters"": {
        ""url"": ""https://usa.yamaha.com/files/download/brochure/1/1474881/Yamaha-Powered-Loudspeakers-brochure-2024-en-web.pdf"",
        ""options"": {}
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""1ae5a311-36d7-4454-ab14-6788d1331780"",
      ""name"": ""Reply To User"",
      ""type"": ""n8n-nodes-base.whatsApp"",
      ""position"": [
        2820,
        -280
      ],
      ""parameters"": {
        ""textBody"": ""={{ $json.output }}"",
        ""operation"": ""send"",
        ""phoneNumberId"": ""477115632141067"",
        ""requestOptions"": {},
        ""additionalFields"": {
          ""previewUrl"": false
        },
        ""recipientPhoneNumber"": ""={{ $('WhatsApp Trigger').item.json.messages[0].from }}""
      },
      ""credentials"": {
        ""whatsAppApi"": {
          ""id"": ""9SFJPeqrpChOkAmw"",
          ""name"": ""WhatsApp account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b6efba81-18b0-4378-bb91-51f39ca57f3e"",
      ""name"": ""Reply To User1"",
      ""type"": ""n8n-nodes-base.whatsApp"",
      ""position"": [
        1760,
        80
      ],
      ""parameters"": {
        ""textBody"": ""=I'm unable to process non-text messages. Please send only text messages. Thanks!"",
        ""operation"": ""send"",
        ""phoneNumberId"": ""477115632141067"",
        ""requestOptions"": {},
        ""additionalFields"": {
          ""previewUrl"": false
        },
        ""recipientPhoneNumber"": ""={{ $('WhatsApp Trigger').item.json.messages[0].from }}""
      },
      ""credentials"": {
        ""whatsAppApi"": {
          ""id"": ""9SFJPeqrpChOkAmw"",
          ""name"": ""WhatsApp account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""52decd86-ac6c-4d91-a938-86f93ec5f822"",
      ""name"": ""Product Catalogue"",
      ""type"": ""@n8n/n8n-nodes-langchain.vectorStoreInMemory"",
      ""position"": [
        2200,
        -60
      ],
      ""parameters"": {
        ""memoryKey"": ""whatsapp-75""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6dd5a652-2464-4ab8-8e5f-568529299523"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -88.75,
        -473.4375
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 640.4375,
        ""height"": 434.6875,
        ""content"": ""## 1. Download Product Brochure PDF\n[Read more about the HTTP Request Tool](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest)\n\nImport your marketing PDF document to build your vector store. This will be used as the knowledgebase by the Sales AI Agent.\n\nFor this demonstration, we'll use the HTTP request node to import the YAMAHA POWERED LOUDSPEAKERS 2024 brochure ([Source](https://usa.yamaha.com/files/download/brochure/1/1474881/Yamaha-Powered-Loudspeakers-brochure-2024-en-web.pdf)) and an Extract from File node to extract the text contents. ""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""116663bc-d8d6-41a5-93dc-b219adbb2235"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        580,
        -476
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 614.6875,
        ""height"": 731.1875,
        ""content"": ""## 2. Create Product Brochure Vector Store\n[Read more about the In-Memory Vector Store](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreinmemory/)\n\nVector stores are powerful databases which serve the purpose of matching a user's questions to relevant parts of a document. By creating a vector store of our product catalog, we'll allow users to query using natural language.\n\nTo keep things simple, we'll use the **In-memory Vector Store** which comes built-in to n8n and doesn't require a separate service. For production deployments, I'd recommend replacing the in-memory vector store with either [Qdrant](https://qdrant.tech) or [Pinecone](https://pinecone.io).""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""86bd5334-d735-4650-aeff-06230119d705"",
      ""name"": ""Create Product Catalogue"",
      ""type"": ""@n8n/n8n-nodes-langchain.vectorStoreInMemory"",
      ""position"": [
        760,
        -200
      ],
      ""parameters"": {
        ""mode"": ""insert"",
        ""memoryKey"": ""whatsapp-75"",
        ""clearStore"": true
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b8078b0d-cbd7-423f-bb30-13902988be38"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1254,
        -552
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 546.6875,
        ""height"": 484.1875,
        ""content"": ""## 3. Use the WhatsApp Trigger\n[Learn more about the WhatsApp Trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.whatsapptrigger/)\n\nThe WhatsApp Trigger allows you to receive incoming WhatsApp messages from customers. It requires a bit of setup so remember to follow the documentation carefully! Once ready however, it's quite easy to build powerful workflows which are easily accessible to users.\n\nNote that WhatsApp can send many message types such as audio and video so in this demonstration, we'll filter them out and just accept the text messages.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""5bf7ed07-282b-4198-aa90-3e5ae5180404"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1640,
        280
      ],
      ""parameters"": {
        ""width"": 338,
        ""height"": 92,
        ""content"": ""### Want to handle all message types?\nCheck out my other WhatsApp template in my creator page! https://n8n.io/creators/jimleuk/""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a3661b59-25d2-446e-8462-32b4d692b69d"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1640,
        -40
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 337.6875,
        ""height"": 311.1875,
        ""content"": ""### 3a. Handle Unsupported Message Types\nFor non-text messages, we'll just reply with a simple message to inform the sender.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ea3c9ee1-505a-40e7-82fe-9169bdbb80af"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1840,
        -682.5
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 746.6875,
        ""height"": 929.1875,
        ""content"": ""## 4. Sales AI Agent Responds To Customers\n[Learn more about using AI Agents](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/)\n\nn8n's AI agents are powerful nodes which make it incredibly easy to use state-of-the-art AI in your workflows. Not only do they have the ability to remember conversations per individual customer but also tap into resources such as our product catalogue vector store to pull factual information and data for every question.\n\nIn this demonstration, we use an AI agent which is directed to help the user navigate the product brochure. A Chat memory subnode is attached to identify and keep track of the customer session. A Vector store tool is added to allow the Agent to tap into the product catalogue knowledgebase we built earlier.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""5c72df8d-bca1-4634-b1ed-61ffec8bd103"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2620,
        -560
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 495.4375,
        ""height"": 484.1875,
        ""content"": ""## 5. Repond to WhatsApp User\n[Learn more about the WhatsApp Node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.whatsapp/)\n\nThe WhatsApp node is the go-to if you want to interact with WhatsApp users. With this node, you can send text, images, audio and video messages as well as use your WhatsApp message templates.\n\nHere, we'll keep it simple by replying with a text message which is the output of the AI agent.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""48ec809f-ca0e-4052-b403-9ad7077b3fff"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -520,
        -620
      ],
      ""parameters"": {
        ""width"": 401.25,
        ""height"": 582.6283033962263,
        ""content"": ""## Try It Out!\n\n### This n8n template builds a simple WhatsApp chabot acting as a Sales Agent. The Agent is backed by a product catalog vector store to better answer user's questions.\n\n* This template is in 2 parts: creating the product catalog vector store and building the WhatsApp AI chatbot.\n* A product brochure is imported via HTTP request node and its text contents extracted.\n* The text contents are then uploaded to the in-memory vector store to build a knowledgebase for the chatbot.\n* A WhatsApp trigger is used to capture messages from customers where non-text messages are filtered out.\n* The customer's message is sent to the AI Agent which queries the product catalogue using the vector store tool.\n* The Agent's response is sent back to the user via the WhatsApp node.\n\n### Need Help?\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""87cf9b41-66de-49a7-aeb0-c8809191b5a0"",
      ""name"": ""Handle Message Types"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        1560,
        -280
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""outputKey"": ""Supported"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.messages[0].type }}"",
                    ""rightValue"": ""text""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""Not Supported"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""89971d8c-a386-4e77-8f6c-f491a8e84cb6"",
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""notEquals""
                    },
                    ""leftValue"": ""={{ $json.messages[0].type }}"",
                    ""rightValue"": ""text""
                  }
                ]
              },
              ""renameOutput"": true
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.2
    },
    {
      ""id"": ""e52f0a50-0c34-4c4a-b493-4c42ba112277"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -80,
        -20
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 345.10906976744184,
        ""height"": 114.53583720930231,
        ""content"": ""### You only have to run this part once!\nRun this step to populate our product catalogue vector. Run again if you want to update the vector store with a new version.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c1a7d6d1-191e-4343-af9f-f2c9eb4ecf49"",
      ""name"": ""Sticky Note9"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1260,
        -40
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 364.6293255813954,
        ""height"": 107.02804651162779,
        ""content"": ""### Activate your workflow to use!\nTo start using the WhatsApp chatbot, you'll need to activate the workflow. If you are self-hosting ensure WhatsApp is able to connect to your server.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a36524d0-22a6-48cc-93fe-b4571cec428a"",
      ""name"": ""AI Sales Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        1960,
        -400
      ],
      ""parameters"": {
        ""text"": ""={{ $json.messages[0].text.body }}"",
        ""options"": {
          ""systemMessage"": ""You are an assistant working for a company who sells Yamaha Powered Loudspeakers and helping the user navigate the product catalog for the year 2024. Your goal is not to facilitate a sale but if the user enquires, direct them to the appropriate website, url or contact information.\n\nDo your best to answer any questions factually. If you don't know the answer or unable to obtain the information from the datastore, then tell the user so.""
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.6
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""AI Sales Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Reply To User"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""WhatsApp Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""Handle Message Types"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Embeddings OpenAI"": {
      ""ai_embedding"": [
        [
          {
            ""node"": ""Product Catalogue"",
            ""type"": ""ai_embedding"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract from File"": {
      ""main"": [
        [
          {
            ""node"": ""Create Product Catalogue"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Sales Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Product Catalogue"": {
      ""ai_vectorStore"": [
        [
          {
            ""node"": ""Vector Store Tool"",
            ""type"": ""ai_vectorStore"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Vector Store Tool"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Sales Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Embeddings OpenAI1"": {
      ""ai_embedding"": [
        [
          {
            ""node"": ""Create Product Catalogue"",
            ""type"": ""ai_embedding"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model1"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Vector Store Tool"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Default Data Loader"": {
      ""ai_document"": [
        [
          {
            ""node"": ""Create Product Catalogue"",
            ""type"": ""ai_document"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Handle Message Types"": {
      ""main"": [
        [
          {
            ""node"": ""AI Sales Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Reply To User1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Window Buffer Memory"": {
      ""ai_memory"": [
        [
          {
            ""node"": ""AI Sales Agent"",
            ""type"": ""ai_memory"",
            ""index"": 0
          }
        ]
      ]
    },
    ""get Product Brochure"": {
      ""main"": [
        [
          {
            ""node"": ""Extract from File"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Recursive Character Text Splitter"": {
      ""ai_textSplitter"": [
        [
          {
            ""node"": ""Default Data Loader"",
            ""type"": ""ai_textSplitter"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When clicking ‘Test workflow’"": {
      ""main"": [
        [
          {
            ""node"": ""get Product Brochure"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
"Automated Web Scraping: email a CSV, save to Google Sheets & Microsoft Excel","{
  ""id"": ""swaWgPkq0xW1Jk0o"",
  ""meta"": {
    ""instanceId"": ""615d41e094941c09198b8ce125ed214047535a66e1c0b3e0cb2d688b4f5c9651""
  },
  ""name"": ""Automated Web Scraping: email a CSV, save to Google Sheets & Microsoft Excel"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""c3ef40df-084e-435c-9a11-3aa0a2f94f36"",
      ""name"": ""When clicking \""Test workflow\"""",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        380,
        540
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""e0583472-a450-4582-83bc-84a014bea543"",
      ""name"": ""Split Out"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        1040,
        540
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""books""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""f9cbdb05-c249-4ccb-b3c5-f2eb8861f811"",
      ""name"": ""Convert to CSV File"",
      ""type"": ""n8n-nodes-base.convertToFile"",
      ""position"": [
        1820,
        540
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""1ecb45ee-659e-42a9-919d-6a3ebed0b836"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1620,
        100
      ],
      ""parameters"": {
        ""height"": 184.90255200662574,
        ""content"": ""### You need to setup Microsoft Azure credentials with Microsoft Graph permissions.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1d4bcfad-feae-4317-9012-7e03a6203d91"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1900,
        100
      ],
      ""parameters"": {
        ""height"": 183.1237982918667,
        ""content"": ""### Unlike Google Sheets where we did not need to have a certain format, here we need to create the column headers, otherwise the appending to the sheet won't work.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4248ddb3-11c0-41e3-be81-ce4ec92923ee"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2020,
        740
      ],
      ""parameters"": {
        ""height"": 135.09744799337426,
        ""content"": ""### For these steps to work you will need to have Drive, Sheets and Gmail APIs enabled in your Google Cloud Account""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d17174fe-8015-453a-b439-43eb3245d7cb"",
      ""name"": ""Extract all books from the page"",
      ""type"": ""n8n-nodes-base.html"",
      ""position"": [
        820,
        540
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""extractHtmlContent"",
        ""extractionValues"": {
          ""values"": [
            {
              ""key"": ""books"",
              ""cssSelector"": "".row > li"",
              ""returnArray"": true,
              ""returnValue"": ""html""
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""5de66b0a-9138-42e3-857a-3060c71776a9"",
      ""name"": ""Sort by price"",
      ""type"": ""n8n-nodes-base.sort"",
      ""position"": [
        1480,
        540
      ],
      ""parameters"": {
        ""options"": {},
        ""sortFieldsUi"": {
          ""sortField"": [
            {
              ""order"": ""descending"",
              ""fieldName"": ""price""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b8c539ce-292c-4b67-83b2-b397cfc5bb97"",
      ""name"": ""Extract individual book price"",
      ""type"": ""n8n-nodes-base.html"",
      ""position"": [
        1260,
        540
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""extractHtmlContent"",
        ""dataPropertyName"": ""books"",
        ""extractionValues"": {
          ""values"": [
            {
              ""key"": ""title"",
              ""attribute"": ""title"",
              ""cssSelector"": ""h3 > a"",
              ""returnValue"": ""attribute""
            },
            {
              ""key"": ""price"",
              ""cssSelector"": "".price_color""
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""b8aa573d-5b63-4669-900f-bcc915b6ad41"",
      ""name"": ""Save to Google Sheets"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        1820,
        760
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {},
          ""schema"": [
            {
              ""id"": ""title"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""title"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""price"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""price"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""autoMapInputData"",
          ""matchingColumns"": []
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1zyiRT7iIlfzZiskC9vDVoAFnW_UNMVXX0-ESVU1yYxY/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1zyiRT7iIlfzZiskC9vDVoAFnW_UNMVXX0-ESVU1yYxY"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1zyiRT7iIlfzZiskC9vDVoAFnW_UNMVXX0-ESVU1yYxY/edit?usp=drivesdk"",
          ""cachedResultName"": ""Scraped Data""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""MMrGJCEKCWIb8jPE"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""97bdbc85-84b3-4463-9b98-5d40b80a3a1a"",
      ""name"": ""Save to Microsoft Excel 365"",
      ""type"": ""n8n-nodes-base.microsoftExcel"",
      ""position"": [
        1820,
        320
      ],
      ""parameters"": {
        ""options"": {},
        ""dataMode"": ""autoMap"",
        ""resource"": ""worksheet"",
        ""workbook"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""=EA8A73F11507ECE9!24392""
        },
        ""operation"": ""append"",
        ""worksheet"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""{00000000-0001-0000-0000-000000000000}"",
          ""cachedResultName"": ""Sheet1""
        }
      },
      ""credentials"": {
        ""microsoftExcelOAuth2Api"": {
          ""id"": ""oSGTo5qjZHVXYiuB"",
          ""name"": ""Microsoft Excel account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""4078dc06-0497-4579-a6f4-8c314307aab8"",
      ""name"": ""Send CSV via e-mail"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        2040,
        540
      ],
      ""parameters"": {
        ""sendTo"": ""constact@mihai.ltd"",
        ""message"": ""Hey, here's the scraped data from the online bookstore!"",
        ""options"": {
          ""attachmentsUi"": {
            ""attachmentsBinary"": [
              {}
            ]
          }
        },
        ""subject"": ""bookstore csv""
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""18u7JrVfJgM0fhOv"",
          ""name"": ""Gmail account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""8ddca560-8da7-4090-b865-0523f95ca463"",
      ""name"": ""Fetch website content"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        600,
        540
      ],
      ""parameters"": {
        ""url"": ""http://books.toscrape.com"",
        ""options"": {
          ""allowUnauthorizedCerts"": true
        }
      },
      ""typeVersion"": 4.1
    },
    {
      ""id"": ""450020e6-9f43-4652-be13-25cb5eb3584c"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        360,
        60
      ],
      ""parameters"": {
        ""width"": 579,
        ""height"": 297,
        ""content"": ""## Automated Web Scraping: email a CSV, save to Google Sheets & Microsoft Excel\n\nSet-up steps:\n1. Change the website to scrape in the \""Fetch website content\"" node\n2. Configure Microsoft Azure credentials with Microsoft Graph permissions (required for the Save to Microsoft Excel 365 node)\n3. Configure Google Cloud credentials with access to Google Drive, Google Sheets and Gmail APIs (the latter is required for the Send CSV via e-mail node).""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""27818544-3070-4201-917d-83739ce75339"",
  ""connections"": {
    ""Split Out"": {
      ""main"": [
        [
          {
            ""node"": ""Extract individual book price"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Sort by price"": {
      ""main"": [
        [
          {
            ""node"": ""Save to Microsoft Excel 365"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Convert to CSV File"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Save to Google Sheets"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Convert to CSV File"": {
      ""main"": [
        [
          {
            ""node"": ""Send CSV via e-mail"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Fetch website content"": {
      ""main"": [
        [
          {
            ""node"": ""Extract all books from the page"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract individual book price"": {
      ""main"": [
        [
          {
            ""node"": ""Sort by price"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When clicking \""Test workflow\"""": {
      ""main"": [
        [
          {
            ""node"": ""Fetch website content"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract all books from the page"": {
      ""main"": [
        [
          {
            ""node"": ""Split Out"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Build Your First AI Data Analyst Chatbot,"{
  ""meta"": {
    ""instanceId"": ""d6b502dfa4d9dd072cdc5c2bb763558661053f651289291352a84403e01b3d1b"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""0951fd33-1811-4a89-b84f-f46dc9e6fde1"",
      ""name"": ""When chat message received"",
      ""type"": ""@n8n/n8n-nodes-langchain.chatTrigger"",
      ""position"": [
        20,
        -340
      ],
      ""webhookId"": ""cdc03fce-33b6-4eed-86b5-f628994e5e31"",
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""699c2f89-5547-4d28-92a9-5e216aecb251"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        240,
        -340
      ],
      ""parameters"": {
        ""options"": {
          ""maxIterations"": 15,
          ""systemMessage"": ""=You are a helpful assistant.\nCurrent timestamp is {{ $now }}""
        }
      },
      ""typeVersion"": 1.7
    },
    {
      ""id"": ""640c29f7-b67e-49f6-a864-c9b396c446b7"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        160,
        -100
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o"",
          ""cachedResultName"": ""gpt-4o""
        },
        ""options"": {
          ""temperature"": 0.2
        }
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""5LVOlVwHUgB8MAj2"",
          ""name"": ""OpenAI - n8n project""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""807630b4-c138-4b66-a438-fb70eab12a07"",
      ""name"": ""Calculator"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolCalculator"",
      ""position"": [
        840,
        60
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""132a97a3-239c-403f-843f-55b652e3efc5"",
      ""name"": ""Code"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        840,
        640
      ],
      ""parameters"": {
        ""jsCode"": ""// Ensure there's at least one input item.\nif (!items || items.length === 0) {\n  throw new Error(\""No input items found.\"");\n}\n\n// Our input is expected to have a 'data' property containing the JSONP string.\nconst input = items[0].json;\n\nif (!input.data) {\n  throw new Error(\""Input JSON does not have a 'data' property.\"");\n}\n\nconst rawData = input.data;\n\n// Use a regex to extract the JSON content from the Google Visualization JSONP response.\nconst regex = /google\\.visualization\\.Query\\.setResponse\\((.*)\\);?$/s;\nconst match = rawData.match(regex);\n\nif (!match) {\n  throw new Error(\""Input data does not match the expected Google Visualization JSONP format.\"");\n}\n\nconst jsonString = match[1];\n\n// Parse the extracted JSON string.\nlet parsed;\ntry {\n  parsed = JSON.parse(jsonString);\n} catch (error) {\n  throw new Error(\""Failed to parse JSON: \"" + error.message);\n}\n\n// Verify that the parsed JSON has the expected 'table' structure with 'cols' and 'rows'.\nif (!parsed.table || !Array.isArray(parsed.table.cols) || !Array.isArray(parsed.table.rows)) {\n  throw new Error(\""Parsed JSON does not have the expected 'table' structure with 'cols' and 'rows'.\"");\n}\n\nconst cols = parsed.table.cols;\nconst rows = parsed.table.rows;\n\n// Helper function to convert date string from \""Date(YYYY,M,D)\"" to \""YYYY-MM-DD\""\nfunction formatDate(dateStr) {\n  const match = dateStr.match(/^Date\\((\\d+),(\\d+),(\\d+)\\)$/);\n  if (!match) return dateStr;\n  const year = parseInt(match[1], 10);\n  const month = parseInt(match[2], 10) + 1; // JavaScript months are 0-indexed\n  const day = parseInt(match[3], 10);\n  // Format with leading zeros\n  return `${year}-${String(month).padStart(2, '0')}-${String(day).padStart(2, '0')}`;\n}\n\n// Map each row into an object using the column labels as keys.\nconst newItems = rows.map(row => {\n  const obj = {};\n  cols.forEach((col, index) => {\n    let value = row.c && row.c[index] ? row.c[index].v : null;\n    // If the column type is \""date\"" and the value is a string that looks like \""Date(YYYY,M,D)\""\n    if (col.type === \""date\"" && typeof value === \""string\"") {\n      value = formatDate(value);\n    }\n    obj[col.label] = value;\n  });\n  return { json: obj };\n});\n\n// Return the new array of items.\nreturn newItems;\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""3dc1e670-bfb1-4b63-b9c8-85656134c843"",
      ""name"": ""When Executed by Another Workflow"",
      ""type"": ""n8n-nodes-base.executeWorkflowTrigger"",
      ""position"": [
        280,
        640
      ],
      ""parameters"": {
        ""workflowInputs"": {
          ""values"": [
            {
              ""name"": ""start_date""
            },
            {
              ""name"": ""end_date""
            },
            {
              ""name"": ""status""
            }
          ]
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""52a26e43-12a5-4b4a-a224-d70cdabf6aaf"",
      ""name"": ""Records by date"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        1020,
        -120
      ],
      ""parameters"": {
        ""name"": ""records_by_date_and_or_status"",
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""a2BIIjr2gLBay06M"",
          ""cachedResultName"": ""Template | Your first AI Data Analyst""
        },
        ""description"": ""Use this tool to get records filtered by date. You can also filter by status at the same time, if you want."",
        ""workflowInputs"": {
          ""value"": {
            ""status"": ""={{ $fromAI(\""status\"", \""Status of the transaction. Can be Completed, Refund or Error. Leave empty if you don't need this now.\"", \""string\"") }}"",
            ""end_date"": ""={{ $fromAI(\""end_date\"", \""End date in format YYYY-MM-DD\"", \""string\"") }}"",
            ""start_date"": ""={{ $fromAI(\""start_date\"", \""Start date in format YYYY-MM-DD\"", \""string\"") }}""
          },
          ""schema"": [
            {
              ""id"": ""start_date"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""start_date"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""end_date"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""end_date"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""status"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""status"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""e1811519-8699-4243-8c64-0db1ab26004d"",
      ""name"": ""Aggregate"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        1280,
        640
      ],
      ""parameters"": {
        ""options"": {},
        ""aggregate"": ""aggregateAllItemData""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3b129abd-ac9a-460c-abb3-007e2c94e284"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1220,
        400
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 220,
        ""height"": 400,
        ""content"": ""To send all the items back to the AI, we need to finish with everything aggregated into one single item.\n\nOtherwise it will respond with one item at a time, and the AI will only get the first item that arrives.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""645ac0f9-8022-4f2c-8c6c-5aadd6cf09cc"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        460,
        400
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 300,
        ""height"": 400,
        ""content"": ""This node sends a custom HTTP Request to the Google Sheets API.\n\nFiltering by date range in the Google Sheets API is very complicated.\n\nThis node solves that problem.\n\nBut doing the same in a database is much simpler. A tool could do it without needing a sub-workflow.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""14221a72-914d-4c75-866a-d64ba7f8109f"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        780,
        400
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 220,
        ""height"": 400,
        ""content"": ""The output from this complex request is also messy.\n\nSo we use some code generated by ChatGPT to transform the data into JSON objects.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""f12668ea-b59d-4caf-a997-381f78b7cfe7"",
      ""name"": ""Google Sheets request"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        560,
        640
      ],
      ""parameters"": {
        ""url"": ""https://docs.google.com/spreadsheets/d/18A4d7KYrk8-uEMbu7shoQe_UIzmbTLV1FMN43bjA7qc/gviz/tq"",
        ""options"": {},
        ""sendQuery"": true,
        ""authentication"": ""predefinedCredentialType"",
        ""queryParameters"": {
          ""parameters"": [
            {
              ""name"": ""sheet"",
              ""value"": ""Sheet1""
            },
            {
              ""name"": ""tq"",
              ""value"": ""=SELECT * WHERE A >= DATE \""{{ $json.start_date }}\"" AND A <= DATE \""{{ $json.end_date }}\""""
            }
          ]
        },
        ""nodeCredentialType"": ""googleSheetsOAuth2Api""
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""YR4pbjuZM5Xs4CTD"",
          ""name"": ""Google Sheets""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""f59a2606-0981-43d1-9a07-b802891b9220"",
      ""name"": ""Get transactions by product name"",
      ""type"": ""n8n-nodes-base.googleSheetsTool"",
      ""position"": [
        1020,
        -320
      ],
      ""parameters"": {
        ""options"": {},
        ""filtersUI"": {
          ""values"": [
            {
              ""lookupValue"": ""={{ $fromAI(\""product_name\"", \""The product name\"", \""string\"") }}"",
              ""lookupColumn"": ""Product""
            }
          ]
        },
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/18A4d7KYrk8-uEMbu7shoQe_UIzmbTLV1FMN43bjA7qc/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""url"",
          ""value"": ""https://docs.google.com/spreadsheets/d/18A4d7KYrk8-uEMbu7shoQe_UIzmbTLV1FMN43bjA7qc/edit?usp=sharing""
        },
        ""descriptionType"": ""manual"",
        ""toolDescription"": ""Find transactions by product.\nOur products are:\n- Widget A\n- Widget B\n- Widget C\n- Widget D""
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""YR4pbjuZM5Xs4CTD"",
          ""name"": ""Google Sheets""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""1ed7168c-1639-4b3b-a3b4-ed162bcef880"",
      ""name"": ""Get all transactions"",
      ""type"": ""n8n-nodes-base.googleSheetsTool"",
      ""position"": [
        840,
        -120
      ],
      ""parameters"": {
        ""options"": {},
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/18A4d7KYrk8-uEMbu7shoQe_UIzmbTLV1FMN43bjA7qc/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""url"",
          ""value"": ""https://docs.google.com/spreadsheets/d/18A4d7KYrk8-uEMbu7shoQe_UIzmbTLV1FMN43bjA7qc/edit?usp=sharing""
        },
        ""descriptionType"": ""manual"",
        ""toolDescription"": ""Only use this as last resort, because it will pull all data at once.""
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""YR4pbjuZM5Xs4CTD"",
          ""name"": ""Google Sheets""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""798453da-8a65-4d14-ae0a-778d64ab02ad"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -360,
        -340
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 320,
        ""height"": 340,
        ""content"": ""## Some questions to try\nThere's a red button on this page that you can click to chat with the AI.\n\nTry asking it these questions:\n\n- How many refunds in January and what was the amount refunded?\n\n- How many successful sales did we have in January 2025 and what was the final income of those?\n\n- What is the most frequent reason for refunds?""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b8336f1a-3855-4247-9589-2f9aa35d211f"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -780,
        -340
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 400,
        ""content"": ""## Copy this Sheets file to your Google Drive\nhttps://docs.google.com/spreadsheets/d/18A4d7KYrk8-uEMbu7shoQe_UIzmbTLV1FMN43bjA7qc/edit?gid=0#gid=0""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""99a55b39-965b-4454-b416-d3991f0bdfbc"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        940,
        60
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 200,
        ""height"": 140,
        ""content"": ""### 👈\nThe Calculator is a tool that allows an agent to run mathematical calculations.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""7ebebf56-e065-41c4-8270-f636785b0def"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -780,
        -160
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 400,
        ""content"": ""### How to connect to Google Sheets?\nTo connect your n8n to your Google Sheets you're gonna need Google OAuth credentials\n\nSee documentation **[here](https://docs.n8n.io/integrations/builtin/credentials/google/oauth-single-service/)**""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b64df0dd-6425-4fc2-9f60-8c5a85412d61"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        120,
        20
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 170,
        ""height"": 260,
        ""content"": ""## 👆\nYou can use many models here, including the free Google Gemini options.\n\nMake sure to test it thoroughly. Some models are better for data analysis.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""23c7bb52-b189-45f1-949b-ea588f065583"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        340,
        20
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 150,
        ""height"": 260,
        ""content"": ""## 👆\nThis is a short term memory. It will remember the 5 previous interactions during the chat""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6097e5a1-139b-4329-81ff-4fda16ea5221"",
      ""name"": ""Buffer Memory"",
      ""type"": ""@n8n/n8n-nodes-langchain.memoryBufferWindow"",
      ""position"": [
        360,
        -100
      ],
      ""parameters"": {},
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""6de4a7f2-5c58-4401-bd7c-19c5a73ba775"",
      ""name"": ""Sticky Note9"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1160,
        -320
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 340,
        ""height"": 180,
        ""content"": ""The **AI Tools Agent** has access to all the tools at the same time. It uses the name and description to decide when to use each tool.\n\nNotice I'm using `$fromAI` function in all of them.\n\nSee documentations **[here](https://docs.n8n.io/advanced-ai/examples/using-the-fromai-function/)**""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a308d895-bc18-4b2c-9567-78f6c29f79e8"",
      ""name"": ""Sticky Note11"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1160,
        -120
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 340,
        ""height"": 320,
        ""content"": ""## 👈 This is a special tool\nIt is used to call another workflow.\nThis concept is called sub-workflow.\n\nSee documentation [here](https://docs.n8n.io/flow-logic/subworkflows/).\n\nInstead of running a completely separate workflow, we are calling the one below.\n\nIt's contained in the same workflow, but we are using the trigger to define it will run only when called by this tool.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0a6d94bc-21e1-4949-b7f4-c93abbecf08c"",
      ""name"": ""Sticky Note12"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        120,
        340
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 1380,
        ""height"": 520,
        ""content"": ""# Sub-workflow\nThe AI can call this sub-workflow anytime,\nby using the **Records by date** tool.\n\nThe sub-workflow automatically return\n the result of the last executed node to the AI.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3e424615-6e49-4bd3-b066-005b9f0f773e"",
      ""name"": ""Filter by status"",
      ""type"": ""n8n-nodes-base.filter"",
      ""position"": [
        1060,
        640
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""e50da873-bbbd-41d3-a418-83193907977c"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""contains""
              },
              ""leftValue"": ""={{ $json.Status }}"",
              ""rightValue"": ""={{ $('When Executed by Another Workflow').item.json.status }}""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""0ad0102c-adb9-4ec9-bdf3-b1ce425b88ba"",
      ""name"": ""Get transactions by status"",
      ""type"": ""n8n-nodes-base.googleSheetsTool"",
      ""position"": [
        840,
        -320
      ],
      ""parameters"": {
        ""options"": {},
        ""filtersUI"": {
          ""values"": [
            {
              ""lookupValue"": ""={{ $fromAI(\""transaction_status\"", \""Transaction status can be Refund, Completed or Error\"", \""string\"") }}"",
              ""lookupColumn"": ""Status""
            }
          ]
        },
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/18A4d7KYrk8-uEMbu7shoQe_UIzmbTLV1FMN43bjA7qc/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""url"",
          ""value"": ""https://docs.google.com/spreadsheets/d/18A4d7KYrk8-uEMbu7shoQe_UIzmbTLV1FMN43bjA7qc/edit?usp=sharing""
        },
        ""descriptionType"": ""manual"",
        ""toolDescription"": ""Find transactions by status""
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""YR4pbjuZM5Xs4CTD"",
          ""name"": ""Google Sheets""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""5b80cb08-6e19-47b2-8146-c299e709a34a"",
      ""name"": ""Sticky Note13"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        820,
        -540
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 300,
        ""content"": ""## Change the URL of the Sheets file in all the Sheets tools 👇""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ddc1351e-0ad0-480f-9742-30f2aa860d61"",
      ""name"": ""Sticky Note14"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        500,
        820
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 260,
        ""height"": 100,
        ""content"": ""## 👆 Change the URL of the Sheets file""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ab837a10-932f-4b14-8e2c-546077ca2c86"",
      ""name"": ""Sticky Note10"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -780,
        20
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 740,
        ""height"": 580,
        ""content"": ""# Author\n![Solomon](https://gravatar.com/avatar/79aa147f090807fe0f618fb47a1de932669e385bb0c84bf3a7f891ae7d174256?r=pg&d=retro&size=200)\n### Solomon\nFreelance consultant from Brazil, specializing in automations and data analysis. I work with select clients, addressing their toughest projects.\n\nCurrently running the [Scrapes community](https://www.skool.com/scrapes/about?ref=21f10ad99f4d46ba9b8aaea8c9f58c34) with Simon 💪\n\nFor business inquiries, email me at automations.solomon@gmail.com\nOr message me on [Telegram](https://t.me/salomaoguilherme) for a faster response.\n\n## Check out my other templates\n### 👉 https://n8n.io/creators/solomon/\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e58351b3-3b18-4c03-9435-27ba853d03bb"",
      ""name"": ""Sticky Note15"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -780,
        620
      ],
      ""parameters"": {
        ""width"": 740,
        ""height"": 180,
        ""content"": ""# Need help?\nFor getting help with this workflow, please create a topic on the community forums here:\nhttps://community.n8n.io/c/questions/""
      },
      ""typeVersion"": 1
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""Code"": {
      ""main"": [
        [
          {
            ""node"": ""Filter by status"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Calculator"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Buffer Memory"": {
      ""ai_memory"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_memory"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Records by date"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Filter by status"": {
      ""main"": [
        [
          {
            ""node"": ""Aggregate"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get all transactions"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Google Sheets request"": {
      ""main"": [
        [
          {
            ""node"": ""Code"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get transactions by status"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When chat message received"": {
      ""main"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get transactions by product name"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When Executed by Another Workflow"": {
      ""main"": [
        [
          {
            ""node"": ""Google Sheets request"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
OpenAI GPT-3: Company Enrichment from website content,"{
  ""meta"": {
    ""instanceId"": ""f0a68da631efd4ed052a324b63ff90f7a844426af0398a68338f44245d1dd9e5""
  },
  ""nodes"": [
    {
      ""id"": ""04750e9b-6ce3-401b-89e7-f1f17f3a4a28"",
      ""name"": ""When clicking \""Execute Workflow\"""",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        -180,
        300
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""7a8bb997-5a2d-4ee0-a1ca-bebe9fe32bc2"",
      ""name"": ""HTTP Request"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        640,
        460
      ],
      ""parameters"": {
        ""url"": ""=https://www.{{ $node[\""Split In Batches\""].json[\""Domain\""] }}"",
        ""options"": {
          ""redirect"": {
            ""redirect"": {
              ""followRedirects"": true
            }
          }
        }
      },
      ""typeVersion"": 3,
      ""continueOnFail"": true
    },
    {
      ""id"": ""6409f0c4-bf93-4a1d-a74c-e294fb39895f"",
      ""name"": ""HTML Extract"",
      ""type"": ""n8n-nodes-base.htmlExtract"",
      ""position"": [
        820,
        460
      ],
      ""parameters"": {
        ""options"": {
          ""trimValues"": false
        },
        ""extractionValues"": {
          ""values"": [
            {
              ""key"": ""body"",
              ""cssSelector"": ""html""
            }
          ]
        }
      },
      ""typeVersion"": 1,
      ""continueOnFail"": true
    },
    {
      ""id"": ""f45fcc6a-9ccd-43c9-9eaf-1797768e1e62"",
      ""name"": ""OpenAI"",
      ""type"": ""n8n-nodes-base.openAi"",
      ""position"": [
        1140,
        460
      ],
      ""parameters"": {
        ""prompt"": ""=This is the content of the website {{ $node[\""Split In Batches\""].json[\""Domain\""] }}:\""{{ $json[\""contentShort\""] }}\""\n\nIn a JSON format:\n\n- Give me the value proposition of the company. In less than 25 words. In English. Casual Tone. Format is: \""[Company Name] helps [target audience] [achieve desired outcome] and [additional benefit]\""\n\n- Give me the industry of the company. (Classify using this industry list: [Agriculture, Arts, Construction, Consumer Goods, Education, Entertainment, Finance, Other, Health Care, Legal, Manufacturing, Media & Communications, Public Administration, Advertisements, Real Estate, Recreation & Travel, Retail, Software, Transportation & Logistics, Wellness & Fitness] if it's ambiguous between Sofware and Consumer Goods, prefer Consumer Goods)\n\n- Guess the target audience of each company.(Classify and choose 1 from this list: [sales teams, marketing teams, HR teams, customer Service teams, consumers, C-levels] Write it in lowercase)\n\n- Tell me if they are B2B or B2C\n\nformat should be:\n{\""value_proposition\"": value_proposition,\n\""industry\"": industry,\n\""target_audience\"": target_audience, \n\""market\"": market }\n\nJSON:"",
        ""options"": {
          ""topP"": 1,
          ""maxTokens"": 120,
          ""temperature"": 0
        }
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""67"",
          ""name"": ""Lucas Open AI""
        }
      },
      ""typeVersion"": 1,
      ""continueOnFail"": true
    },
    {
      ""id"": ""8de6c3d4-316f-4e00-a9f5-a4deefce90b3"",
      ""name"": ""Merge"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        1600,
        320
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""combinationMode"": ""mergeByPosition""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""669f888e-1416-4291-a854-07ffbbbfcab1"",
      ""name"": ""Clean Content"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        980,
        460
      ],
      ""parameters"": {
        ""mode"": ""runOnceForEachItem"",
        ""jsCode"": ""if ($input.item.json.body){\n\n\n\n$input.item.json.content = $input.item.json.body.replaceAll('/^\\s+|\\s+$/g', '').replace('/(\\r\\n|\\n|\\r)/gm', \""\"").replace(/\\s+/g, ' ')\n\n\n  $input.item.json.contentShort = $input.item.json.content.slice(0, 10000)\n}\n\n\n\n\nreturn $input.item""
      },
      ""executeOnce"": false,
      ""typeVersion"": 1,
      ""continueOnFail"": true,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""dbd5f866-2f5e-4adf-b1b5-a27b08c0425a"",
      ""name"": ""Update Google Sheets"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        1840,
        320
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldsUi"": {
          ""values"": [
            {
              ""column"": ""Market"",
              ""fieldValue"": ""={{ $json[\""market\""] }}""
            },
            {
              ""column"": ""Industry"",
              ""fieldValue"": ""={{ $json[\""industry\""] }}""
            },
            {
              ""column"": ""Value Proposition"",
              ""fieldValue"": ""={{ $json[\""value_proposition\""] }}""
            },
            {
              ""column"": ""Target Audience"",
              ""fieldValue"": ""={{ $json[\""target_audience\""] }}""
            }
          ]
        },
        ""operation"": ""update"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/13h8HPWKha5kZHDeKxAPQvQqAOonof5cgpxzh79tIQfY/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""url"",
          ""value"": ""https://docs.google.com/spreadsheets/d/18iZ59I0q2AeElqcEpyJECNlSv4M6iJll9PQzXQkqEUk/edit#gid=0"",
          ""__regex"": ""https:\\/\\/(?:drive|docs)\\.google\\.com\\/\\w+\\/d\\/([0-9a-zA-Z\\-_]+)(?:\\/.*|)""
        },
        ""valueToMatchOn"": ""={{ $json[\""Domain\""] }}"",
        ""columnToMatchOn"": ""Domain""
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""2"",
          ""name"": ""Google Sheets account lucas""
        }
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""f8bf8b70-6070-447b-af22-4d4e1ffe3539"",
      ""name"": ""Parse JSON"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        1300,
        460
      ],
      ""parameters"": {
        ""mode"": ""runOnceForEachItem"",
        ""jsCode"": ""// Add a new field called 'myNewField' to the\n// JSON of the item\n$input.item.json.value_proposition=JSON.parse($input.item.json.text).value_proposition\n\n$input.item.json.industry=JSON.parse($input.item.json.text).industry\n\n$input.item.json.market=JSON.parse($input.item.json.text).market\n\n$input.item.json.target_audience=JSON.parse($input.item.json.text).target_audience\n\nreturn $input.item;""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""2754c6e1-9cf6-47d4-ad97-0797ec9155df"",
      ""name"": ""Read Google Sheets"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        40,
        300
      ],
      ""parameters"": {
        ""options"": {},
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/13h8HPWKha5kZHDeKxAPQvQqAOonof5cgpxzh79tIQfY/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""url"",
          ""value"": ""https://docs.google.com/spreadsheets/d/18iZ59I0q2AeElqcEpyJECNlSv4M6iJll9PQzXQkqEUk/edit#gid=0"",
          ""__regex"": ""https:\\/\\/(?:drive|docs)\\.google\\.com\\/\\w+\\/d\\/([0-9a-zA-Z\\-_]+)(?:\\/.*|)""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""2"",
          ""name"": ""Google Sheets account lucas""
        }
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""c2b93428-0dcc-4c02-bb81-496c12442284"",
      ""name"": ""Split In Batches"",
      ""type"": ""n8n-nodes-base.splitInBatches"",
      ""position"": [
        260,
        300
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""eccf1dc8-a0bb-40f6-9471-95eac8020b02"",
      ""name"": ""Wait"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        2060,
        560
      ],
      ""webhookId"": ""d44bc024-1c21-44e0-b2b4-5cff6fb9f402"",
      ""parameters"": {
        ""unit"": ""seconds""
      },
      ""typeVersion"": 1
    }
  ],
  ""connections"": {
    ""Wait"": {
      ""main"": [
        [
          {
            ""node"": ""Split In Batches"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Merge"": {
      ""main"": [
        [
          {
            ""node"": ""Update Google Sheets"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI"": {
      ""main"": [
        [
          {
            ""node"": ""Parse JSON"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Parse JSON"": {
      ""main"": [
        [
          {
            ""node"": ""Merge"",
            ""type"": ""main"",
            ""index"": 1
          }
        ]
      ]
    },
    ""HTML Extract"": {
      ""main"": [
        [
          {
            ""node"": ""Clean Content"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""HTTP Request"": {
      ""main"": [
        [
          {
            ""node"": ""HTML Extract"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Clean Content"": {
      ""main"": [
        [
          {
            ""node"": ""OpenAI"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Split In Batches"": {
      ""main"": [
        [
          {
            ""node"": ""HTTP Request"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Merge"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Read Google Sheets"": {
      ""main"": [
        [
          {
            ""node"": ""Split In Batches"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Update Google Sheets"": {
      ""main"": [
        [
          {
            ""node"": ""Wait"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When clicking \""Execute Workflow\"""": {
      ""main"": [
        [
          {
            ""node"": ""Read Google Sheets"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Scrape and summarize webpages with AI,"{
  ""meta"": {
    ""instanceId"": ""408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""a9048293-787d-44d6-b995-d329b2495048"",
      ""name"": ""When clicking \""Execute Workflow\"""",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        -1920,
        1380
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""56017e8b-2f2e-4f40-9325-184ea01a18be"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1720,
        1260
      ],
      ""parameters"": {
        ""width"": 1071.752021563343,
        ""height"": 285.66037735849045,
        ""content"": ""## Scrape latest Paul Graham essays""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""aa855d7c-6602-4242-bc84-56fed7c27c26"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -600,
        1260
      ],
      ""parameters"": {
        ""width"": 625,
        ""height"": 607,
        ""content"": ""## Summarize them with GPT""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1a38e545-6d3b-40b2-a3ff-6f91fdd772de"",
      ""name"": ""Fetch Essay List"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -1640,
        1380
      ],
      ""parameters"": {
        ""url"": ""http://www.paulgraham.com/articles.html"",
        ""options"": {}
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""bd713892-356b-4a9c-b076-000bd4f1f1ba"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        -380,
        1600
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""8gccIjcuf3gvaoEr"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""4d7359ab-ba87-4756-8168-f2b987aac2fc"",
      ""name"": ""Extract essay names"",
      ""type"": ""n8n-nodes-base.html"",
      ""position"": [
        -1440,
        1380
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""extractHtmlContent"",
        ""extractionValues"": {
          ""values"": [
            {
              ""key"": ""essay"",
              ""attribute"": ""href"",
              ""cssSelector"": ""table table a"",
              ""returnArray"": true,
              ""returnValue"": ""attribute""
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""8342d13f-879d-426b-ba28-ab696dd7f155"",
      ""name"": ""Split out into items"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        -1240,
        1380
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""essay""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a057d3cb-b7fb-4b4d-810a-e4de3ac10702"",
      ""name"": ""Fetch essay texts"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -840,
        1380
      ],
      ""parameters"": {
        ""url"": ""=http://www.paulgraham.com/{{ $json.essay }}"",
        ""options"": {}
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""98164d8c-3d6f-485d-93b6-1da3e8ae7ca8"",
      ""name"": ""Extract title"",
      ""type"": ""n8n-nodes-base.html"",
      ""position"": [
        -340,
        1080
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""extractHtmlContent"",
        ""extractionValues"": {
          ""values"": [
            {
              ""key"": ""title"",
              ""cssSelector"": ""title""
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""fc0b6230-d169-4b20-803b-1896982c37c3"",
      ""name"": ""Summarization Chain"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainSummarization"",
      ""position"": [
        -340,
        1380
      ],
      ""parameters"": {
        ""options"": {},
        ""operationMode"": ""documentLoader""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""a656524a-9f77-4922-9de7-e2221ac82b70"",
      ""name"": ""Clean up"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        360,
        1380
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""7b337b47-a1c6-470e-881f-0c038b4917e5"",
              ""name"": ""title"",
              ""type"": ""string"",
              ""value"": ""={{ $json.title }}""
            },
            {
              ""id"": ""ca820521-4fff-4971-84b5-e6e2dbd8bb7a"",
              ""name"": ""summary"",
              ""type"": ""string"",
              ""value"": ""={{ $json.response.text }}""
            },
            {
              ""id"": ""0fd9b5e3-44dd-49a3-82c1-3a4aa4698376"",
              ""name"": ""url"",
              ""type"": ""string"",
              ""value"": ""=http://www.paulgraham.com/{{ $('Limit to first 3').first().json.essay }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""da738af0-7302-442d-bdc8-c9771be10794"",
      ""name"": ""Merge"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        160,
        1380
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""combineBy"": ""combineByPosition""
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""adf51f27-8d3e-49a8-b850-7990d355dc81"",
      ""name"": ""Default Data Loader"",
      ""type"": ""@n8n/n8n-nodes-langchain.documentDefaultDataLoader"",
      ""position"": [
        -260,
        1600
      ],
      ""parameters"": {
        ""options"": {},
        ""jsonData"": ""={{ $('Extract Text Only').item.json.data }}"",
        ""jsonMode"": ""expressionData""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""f57c5908-4ae3-4ce1-a74b-0fc393792c21"",
      ""name"": ""Recursive Character Text Splitter"",
      ""type"": ""@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"",
      ""position"": [
        -180,
        1720
      ],
      ""parameters"": {
        ""options"": {},
        ""chunkSize"": 6000
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""278eed78-3489-41e3-b4d2-a2de788fcd21"",
      ""name"": ""Limit to first 3"",
      ""type"": ""n8n-nodes-base.limit"",
      ""position"": [
        -1040,
        1380
      ],
      ""parameters"": {
        ""maxItems"": 3
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""028147d1-2a45-416d-91d0-40a0af2747f5"",
      ""name"": ""Extract Text Only"",
      ""type"": ""n8n-nodes-base.html"",
      ""position"": [
        -520,
        1380
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""extractHtmlContent"",
        ""extractionValues"": {
          ""values"": [
            {
              ""key"": ""data"",
              ""cssSelector"": ""body"",
              ""skipSelectors"": ""img,nav""
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""Merge"": {
      ""main"": [
        [
          {
            ""node"": ""Clean up"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract title"": {
      ""main"": [
        [
          {
            ""node"": ""Merge"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Fetch Essay List"": {
      ""main"": [
        [
          {
            ""node"": ""Extract essay names"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Limit to first 3"": {
      ""main"": [
        [
          {
            ""node"": ""Fetch essay texts"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract Text Only"": {
      ""main"": [
        [
          {
            ""node"": ""Summarization Chain"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Fetch essay texts"": {
      ""main"": [
        [
          {
            ""node"": ""Extract title"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Extract Text Only"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Summarization Chain"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Default Data Loader"": {
      ""ai_document"": [
        [
          {
            ""node"": ""Summarization Chain"",
            ""type"": ""ai_document"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract essay names"": {
      ""main"": [
        [
          {
            ""node"": ""Split out into items"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Summarization Chain"": {
      ""main"": [
        [
          {
            ""node"": ""Merge"",
            ""type"": ""main"",
            ""index"": 1
          }
        ]
      ]
    },
    ""Split out into items"": {
      ""main"": [
        [
          {
            ""node"": ""Limit to first 3"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When clicking \""Execute Workflow\"""": {
      ""main"": [
        [
          {
            ""node"": ""Fetch Essay List"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Recursive Character Text Splitter"": {
      ""ai_textSplitter"": [
        [
          {
            ""node"": ""Default Data Loader"",
            ""type"": ""ai_textSplitter"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Automate Multi-Platform Social Media Content Creation with AI,"{
  ""id"": ""CfdF2XtXC68iJ6Hr"",
  ""meta"": {
    ""instanceId"": ""31e69f7f4a77bf465b805824e303232f0227212ae922d12133a0f96ffeab4fef"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""✨🤖Automated AI Powered Social Media Content Factory for  X + Facebook + Instagram + LinkedIn"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""1e77584f-76b4-420b-b6b0-99132d6c0151"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -300,
        -900
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 360,
        ""height"": 360,
        ""content"": ""# 🧑‍🦱 User Input for Social Media Posts \n💡 Unpin default data to get started""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""dc92fcf1-3618-4188-a30f-6c2205cc3266"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        100,
        -940
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 640,
        ""height"": 600,
        ""content"": ""# 🛠️ Social Media Content Factory\n- LinkedIn\n- Instagram\n- Facebook\n- X\n- TikTok\n- Threads\n- YouTube Shorts\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""02429ea7-be59-49e3-9d85-c1678ee64abd"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1840,
        -700
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 400,
        ""height"": 360,
        ""content"": ""# 👍 Approve Content Before Proceeding""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""fa38e25c-89e9-4d9b-be78-03aeb6965e30"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1300,
        -900
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 500,
        ""height"": 560,
        ""content"": ""# ✉️ Prepare & Format Approval Email""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9b6e2038-9f65-4e0f-b13d-6c09e8224ed6"",
      ""name"": ""Social Media Content"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserStructured"",
      ""position"": [
        560,
        -540
      ],
      ""parameters"": {
        ""schemaType"": ""manual"",
        ""inputSchema"": ""{\n\t\""type\"": \""object\"",\n\t\""properties\"": {\n\t\t\""name\"": {\n\t\t\t\""type\"": \""string\""\n\t\t},\n\t\t\""description\"": {\n\t\t\t\""type\"": \""string\""\n\t\t},\n\t\t\""platform_posts\"": {\n\t\t\t\""type\"": \""object\"",\n\t\t\t\""properties\"": {\n\t\t\t\t\""LinkedIn\"": {\n\t\t\t\t\t\""type\"": \""object\"",\n\t\t\t\t\t\""properties\"": {\n                        \""image_suggestion\"": {\n                  \t\t\t\""type\"": \""string\""\n                  \t\t},\n\t\t\t\t\t\t\""post\"": {\n\t\t\t\t\t\t\t\""type\"": \""string\""\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\""hashtags\"": {\n\t\t\t\t\t\t\t\""type\"": \""array\"",\n\t\t\t\t\t\t\t\""items\"": {\n\t\t\t\t\t\t\t\t\""type\"": \""string\""\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\""call_to_action\"": {\n\t\t\t\t\t\t\t\""type\"": \""string\""\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\""Instagram\"": {\n\t\t\t\t\t\""type\"": \""object\"",\n\t\t\t\t\t\""properties\"": {\n\t\t\t\t\t\t\""image_suggestion\"": {\n\t\t\t\t\t\t\t\""type\"": \""string\""\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\""caption\"": {\n\t\t\t\t\t\t\t\""type\"": \""string\""\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\""hashtags\"": {\n\t\t\t\t\t\t\t\""type\"": \""array\"",\n\t\t\t\t\t\t\t\""items\"": {\n\t\t\t\t\t\t\t\t\""type\"": \""string\""\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\""emojis\"": {\n\t\t\t\t\t\t\t\""type\"": \""array\"",\n\t\t\t\t\t\t\t\""items\"": {\n\t\t\t\t\t\t\t\t\""type\"": \""string\""\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\""call_to_action\"": {\n\t\t\t\t\t\t\t\""type\"": \""string\""\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\""Facebook\"": {\n\t\t\t\t\t\""type\"": \""object\"",\n\t\t\t\t\t\""properties\"": {\n\t\t\t\t\t\t\""post\"": {\n\t\t\t\t\t\t\t\""type\"": \""string\""\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\""hashtags\"": {\n\t\t\t\t\t\t\t\""type\"": \""array\"",\n\t\t\t\t\t\t\t\""items\"": {\n\t\t\t\t\t\t\t\t\""type\"": \""string\""\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\""call_to_action\"": {\n\t\t\t\t\t\t\t\""type\"": \""string\""\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\""image_suggestion\"": {\n\t\t\t\t\t\t\t\""type\"": \""string\""\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\""X-Twitter\"": {\n\t\t\t\t\t\""type\"": \""object\"",\n\t\t\t\t\t\""properties\"": {\n                        \""video_suggestion\"": {\n                \t\t\t\""type\"": \""string\""\n                \t\t},\n                        \""image_suggestion\"": {\n\t\t\t\t\t\t\t\""type\"": \""string\""\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\""post\"": {\n\t\t\t\t\t\t\t\""type\"": \""string\""\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\""hashtags\"": {\n\t\t\t\t\t\t\t\""type\"": \""array\"",\n\t\t\t\t\t\t\t\""items\"": {\n\t\t\t\t\t\t\t\t\""type\"": \""string\""\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\""character_limit\"": {\n\t\t\t\t\t\t\t\""type\"": \""integer\""\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n                \""TikTok\"": {\n                \t\""type\"": \""object\"",\n                \t\""properties\"": {\n                \t\t\""video_suggestion\"": {\n                \t\t\t\""type\"": \""string\""\n                \t\t},\n                \t\t\""caption\"": {\n                \t\t\t\""type\"": \""string\""\n                \t\t},\n                \t\t\""hashtags\"": {\n                \t\t\t\""type\"": \""array\"",\n                \t\t\t\""items\"": {\n                \t\t\t\t\""type\"": \""string\""\n                \t\t\t}\n                \t\t},\n                \t\t\""call_to_action\"": {\n                \t\t\t\""type\"": \""string\""\n                \t\t}\n                \t}\n                },\n                \""Threads\"": {\n                \t\""type\"": \""object\"",\n                \t\""properties\"": {\n                       \""image_suggestion\"": {\n\t\t\t\t\t\t\t\""type\"": \""string\""\n\t\t\t\t\t\t},\n                \t\t\""text_post\"": {\n                \t\t\t\""type\"": \""string\""\n                \t\t},\n                \t\t\""hashtags\"": {\n                \t\t\t\""type\"": \""array\"",\n                \t\t\t\""items\"": {\n                \t\t\t\t\""type\"": \""string\""\n                \t\t\t}\n                \t\t},\n                \t\t\""call_to_action\"": {\n                \t\t\t\""type\"": \""string\""\n                \t\t}\n                \t}\n                },\n                \""YouTube_Shorts\"": {\n                  \t\""type\"": \""object\"",\n                  \t\""properties\"": {\n                  \t\t\""video_suggestion\"": {\n                  \t\t\t\""type\"": \""string\""\n                  \t\t},\n                  \t\t\""title\"": {\n                  \t\t\t\""type\"": \""string\""\n                  \t\t},\n                          \""description\"": {\n                              \""type\"": \""string\""\n                          },\n                          \""hashtags\"": {\n                              \""type\"": \""array\"",\n                              \""items\"": {\n                                  \""type\"": \""string\""\n                              }\n                          },\n                          \""call_to_action\"": {\n                              \""type\"": \""string\""\n                          }\n                      }\n                  }\n\t\t\t}\n\t\t},\n\t\t\""additional_notes\"": {\n\t\t\t\""type\"": \""string\""\n\t\t}\n\t}\n}\n""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""a1211873-05ca-48c7-aa93-57d80b37174b"",
      ""name"": ""Google Gemini LLM"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""disabled"": true,
      ""position"": [
        320,
        -540
      ],
      ""parameters"": {
        ""options"": {
          ""temperature"": 0.4
        },
        ""modelName"": ""models/gemini-2.0-flash-exp""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""L9UNQHflYlyF9Ngd"",
          ""name"": ""Google Gemini(PaLM) Api account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""14327277-1e66-401d-9c74-8fdb6d76445f"",
      ""name"": ""gpt-4o-mini"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        1360,
        -540
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini"",
          ""cachedResultName"": ""gpt-4o-mini""
        },
        ""options"": {
          ""responseFormat"": ""text""
        }
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""jEMSvKmtYfzAkhe6"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""9a49454b-f518-4388-82a7-2529addae3e5"",
      ""name"": ""gpt-4o"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""disabled"": true,
      ""position"": [
        1500,
        -540
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o"",
          ""cachedResultName"": ""gpt-4o""
        },
        ""options"": {
          ""responseFormat"": ""text""
        }
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""jEMSvKmtYfzAkhe6"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""56eb9c72-87fc-42b2-b576-be68b3a8c7d2"",
      ""name"": ""gpt-4o LLM"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        180,
        -540
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o"",
          ""cachedResultName"": ""gpt-4o""
        },
        ""options"": {
          ""responseFormat"": ""text""
        }
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""jEMSvKmtYfzAkhe6"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""bf4e6d41-b2be-44fc-8fc7-6dc6bc4ee69a"",
      ""name"": ""pollinations.ai"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""disabled"": true,
      ""position"": [
        980,
        780
      ],
      ""parameters"": {
        ""url"": ""=https://image.pollinations.ai/prompt/{{$('Social Media Content Factory').item.json.output.description.replaceAll(' ','-').replaceAll(',','').replaceAll('.','') }}"",
        ""options"": {}
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""5a950645-8e74-4be8-bad2-73d9f827a6b8"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        880,
        620
      ],
      ""parameters"": {
        ""width"": 300,
        ""height"": 340,
        ""content"": ""## Create Post Image\nhttps://pollinations.ai/\nhttps://image.pollinations.ai/prompt/[your image description]\n\n(alternative)""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""7b5b53eb-85c6-4a90-b209-7bd8d638f237"",
      ""name"": ""Merge"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        700,
        20
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {
          ""includeUnpaired"": true
        },
        ""combineBy"": ""combineByPosition""
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""daa6773e-0e15-4994-bcee-b3d996655855"",
      ""name"": ""Save Image to imgbb.com3"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        360,
        -140
      ],
      ""parameters"": {
        ""url"": ""https://api.imgbb.com/1/upload"",
        ""method"": ""POST"",
        ""options"": {
          ""redirect"": {
            ""redirect"": {}
          }
        },
        ""sendBody"": true,
        ""sendQuery"": true,
        ""contentType"": ""multipart-form-data"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""image"",
              ""parameterType"": ""formBinaryData"",
              ""inputDataFieldName"": ""data""
            }
          ]
        },
        ""queryParameters"": {
          ""parameters"": [
            {
              ""name"": ""expiration"",
              ""value"": ""0""
            },
            {
              ""name"": ""key"",
              ""value"": ""={{ $env.IMGBB_API_KEY}} ""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""af06853c-258e-4dfb-a579-3168c8de96bd"",
      ""name"": ""Instagram Image"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""onError"": ""continueRegularOutput"",
      ""position"": [
        1700,
        -60
      ],
      ""parameters"": {
        ""url"": ""https://graph.facebook.com/v20.0/[your-unique-id]/media"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendQuery"": true,
        ""authentication"": ""predefinedCredentialType"",
        ""queryParameters"": {
          ""parameters"": [
            {
              ""name"": ""image_url"",
              ""value"": ""={{ $json.data.medium.url }}""
            },
            {
              ""name"": ""caption"",
              ""value"": ""={{ $('Social Media Content Factory').item.json.output.platform_posts.Instagram.caption }}""
            }
          ]
        },
        ""nodeCredentialType"": ""facebookGraphApi""
      },
      ""credentials"": {
        ""facebookGraphApi"": {
          ""id"": ""PzDfmiwB7GPtmSaP"",
          ""name"": ""Facebook Graph account""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""6ee72138-a8ec-4fbd-8f14-fd6e881edfd1"",
      ""name"": ""Instragram Post"",
      ""type"": ""n8n-nodes-base.facebookGraphApi"",
      ""onError"": ""continueRegularOutput"",
      ""position"": [
        1700,
        160
      ],
      ""parameters"": {
        ""edge"": ""media_publish"",
        ""node"": ""[your-unique-id]"",
        ""options"": {
          ""queryParameters"": {
            ""parameter"": [
              {
                ""name"": ""creation_id"",
                ""value"": ""={{ $json.id }}""
              },
              {
                ""name"": ""caption"",
                ""value"": ""={{ $('Social Media Content Factory').item.json.output.platform_posts.Instagram.caption }}""
              }
            ]
          }
        },
        ""graphApiVersion"": ""v20.0"",
        ""httpRequestMethod"": ""POST""
      },
      ""credentials"": {
        ""facebookGraphApi"": {
          ""id"": ""PzDfmiwB7GPtmSaP"",
          ""name"": ""Facebook Graph account""
        }
      },
      ""typeVersion"": 1,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""9e168865-1eae-4e53-99c9-91b041426ecb"",
      ""name"": ""X Post"",
      ""type"": ""n8n-nodes-base.twitter"",
      ""onError"": ""continueRegularOutput"",
      ""position"": [
        1700,
        380
      ],
      ""parameters"": {
        ""text"": ""={{ $('Social Media Content Factory').item.json.output.platform_posts['X-Twitter'].post }}"",
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""twitterOAuth2Api"": {
          ""id"": ""wRDruLTCqjQ7C5jq"",
          ""name"": ""X account""
        }
      },
      ""typeVersion"": 2,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""4ee55c94-7251-445e-8ce7-15eee7165010"",
      ""name"": ""Facebook Post"",
      ""type"": ""n8n-nodes-base.facebookGraphApi"",
      ""onError"": ""continueRegularOutput"",
      ""position"": [
        1700,
        600
      ],
      ""parameters"": {
        ""edge"": ""photos"",
        ""node"": ""[your-unique-id]"",
        ""options"": {
          ""queryParameters"": {
            ""parameter"": [
              {
                ""name"": ""message"",
                ""value"": ""={{ $('Social Media Content Factory').item.json.output.platform_posts.Facebook.post }}\n\n{{ $('Social Media Content Factory').item.json.output.platform_posts.Facebook.call_to_action }}\n""
              },
              {
                ""name"": ""link"",
                ""value"": ""={{ $('Social Media Content Factory').item.json.output.platform_posts.Facebook.call_to_action }}""
              }
            ]
          }
        },
        ""sendBinaryData"": true,
        ""graphApiVersion"": ""v20.0"",
        ""httpRequestMethod"": ""POST"",
        ""binaryPropertyName"": ""data""
      },
      ""credentials"": {
        ""facebookGraphApi"": {
          ""id"": ""PzDfmiwB7GPtmSaP"",
          ""name"": ""Facebook Graph account""
        }
      },
      ""typeVersion"": 1,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""3a015f3f-a162-411a-85e8-e1f042d9c653"",
      ""name"": ""LinkedIn Post"",
      ""type"": ""n8n-nodes-base.linkedIn"",
      ""onError"": ""continueRegularOutput"",
      ""position"": [
        1700,
        780
      ],
      ""parameters"": {
        ""text"": ""={{ $('Social Media Content Factory').item.json.output.platform_posts.LinkedIn.post }}\n{{ $('Social Media Content Factory').item.json.output.platform_posts.LinkedIn.call_to_action }}\n{{ $('Social Media Content Factory').item.json.output.platform_posts.LinkedIn.hashtags }}\n{{ $('Social Media Content Factory').item.json.output.platform_posts.LinkedIn.call_to_action }}"",
        ""postAs"": ""organization"",
        ""organization"": ""12345678"",
        ""additionalFields"": {},
        ""binaryPropertyName"": ""=data"",
        ""shareMediaCategory"": ""IMAGE""
      },
      ""credentials"": {
        ""linkedInOAuth2Api"": {
          ""id"": ""WMm6pzAEgNd4wJdO"",
          ""name"": ""LinkedIn account""
        }
      },
      ""typeVersion"": 1,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""8ab03d75-b4c5-4271-8fa9-830f449a3a3c"",
      ""name"": ""OpenAI"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        40,
        -20
      ],
      ""parameters"": {
        ""prompt"": ""={{ $('Social Media Content Factory').item.json.output.platform_posts.Instagram.caption }}"",
        ""options"": {},
        ""resource"": ""image""
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""jEMSvKmtYfzAkhe6"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.8,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""d1ac29b1-128d-4615-b828-89f1f64d1b15"",
      ""name"": ""Merge1"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        1440,
        -60
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""combineBy"": ""combineByPosition""
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""71eebce8-027a-4b12-b07e-692121de9a68"",
      ""name"": ""Merge2"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        1440,
        680
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {
          ""includeUnpaired"": true
        },
        ""combineBy"": ""combineByPosition""
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""140cff41-a619-4111-8dc9-3ec8fc45e061"",
      ""name"": ""Aggregate"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        -240,
        520
      ],
      ""parameters"": {
        ""options"": {},
        ""aggregate"": ""aggregateAllItemData""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3e96bfac-dad5-4b75-b51b-50329892ee70"",
      ""name"": ""gpt-4o-mini1"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        -20,
        540
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini"",
          ""cachedResultName"": ""gpt-4o-mini""
        },
        ""options"": {
          ""responseFormat"": ""text""
        }
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""jEMSvKmtYfzAkhe6"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""4d73d59f-bb8c-481b-877a-bf4dc64f3277"",
      ""name"": ""gpt-4o-mini2"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        -20,
        820
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini"",
          ""cachedResultName"": ""gpt-4o-mini""
        },
        ""options"": {
          ""responseFormat"": ""text""
        }
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""jEMSvKmtYfzAkhe6"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""aaef70d7-6029-4fae-afc1-72a6a0019b03"",
      ""name"": ""Gmail User for Approval"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        2000,
        -540
      ],
      ""webhookId"": ""c46cf421-ddb6-45a8-b83b-80b381666f0e"",
      ""parameters"": {
        ""sendTo"": ""={{ $env.EMAIL_ADDRESS_JOE }} "",
        ""message"": ""={{ $json.output }}"",
        ""options"": {
          ""limitWaitTime"": {
            ""values"": {
              ""resumeUnit"": ""minutes"",
              ""resumeAmount"": 45
            }
          }
        },
        ""subject"": ""=🔥FOR APPROVAL🔥{{ $('Social Media Content Factory').item.json.output.name }} - {{ $('Social Media Content Factory').item.json.output.description }}"",
        ""operation"": ""sendAndWait"",
        ""approvalOptions"": {
          ""values"": {
            ""approvalType"": ""double""
          }
        }
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""1xpVDEQ1yx8gV022"",
          ""name"": ""Gmail account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""44e3bada-7665-4268-bb79-12ffb377552e"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1600,
        -140
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 300,
        ""height"": 1100,
        ""content"": ""## Publish to Social Media""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""75bfc1f4-0afa-4d8d-b5cc-83e29b6570f9"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1940,
        80
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 300,
        ""height"": 880,
        ""content"": ""## Format Results""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ff5d050a-111c-4467-bc61-e51444943cb5"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -360,
        240
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 1020,
        ""height"": 760,
        ""content"": ""# Step 4️⃣: Send Final Results of Social Media Factory""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""26a684cc-72d9-40c8-bd30-1d074d914328"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -40,
        -100
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 260,
        ""height"": 260,
        ""content"": ""## Create Post Image""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""930e76ac-6e9c-4a3f-9229-28ba18de25a3"",
      ""name"": ""Approve Final Post Content"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""disabled"": true,
      ""position"": [
        980,
        380
      ],
      ""webhookId"": ""c46cf421-ddb6-45a8-b83b-80b381666f0e"",
      ""parameters"": {
        ""sendTo"": ""={{ $env.EMAIL_ADDRESS_JOE }} "",
        ""message"": ""=<html>\n<body style=\""margin:0; padding:0; font-family: Arial, sans-serif; background-color: #f5f5f5;\"">\n  <div style=\""max-width: 600px; margin: 0 auto; padding: 20px;\"">\n\n    <h2 style=\""font-size:20px; color:#333; margin:0 0 15px 0;\"">LinkedIn</h2>\n      \n    <!-- LinkedIn Card -->\n    <div style=\""background: #ffffff; border-radius: 8px; margin-bottom: 20px; box-shadow: 0 2px 8px rgba(0,0,0,0.1);\"">\n\n      <!-- Card Header Image -->\n      <div style=\""height: 200px; overflow: hidden; border-radius: 8px 8px 0 0;\"">\n        <img src=\""{{ $json.data.medium.url }}\"" alt=\""Featured Image\"" style=\""width: 100%; height: 100%; object-fit: cover;\"">\n      </div>\n\n      <!-- Card Content -->\n      <div style=\""padding: 25px;\"">\n\n        <p style=\""font-size:16px; color:#555; line-height: 1.6; margin-bottom: 15px;\"">\n          {{ $('Social Media Content Factory').item.json.output.platform_posts.LinkedIn.post }}\n        </p>\n        \n        <div style=\""margin: 15px 0;\"">\n          <span style=\""display: inline-block; background: #f0f0f0; padding: 4px 8px; margin: 2px; border-radius: 4px; font-size:12px; color:#333;\"">\n            {{ $('Social Media Content Factory').item.json.output.platform_posts.LinkedIn.hashtags }}\n          </span>\n        </div>\n\n        <p style=\""font-size:14px; color:#1a0dab; font-weight: 600; margin:15px 0 0 0;\"">\n          {{ $('Social Media Content Factory').item.json.output.platform_posts.LinkedIn.call_to_action }}\n        </p>\n      </div>\n    </div>\n  </div>\n</body>\n</html>\n"",
        ""options"": {
          ""limitWaitTime"": {
            ""values"": {
              ""resumeUnit"": ""minutes"",
              ""resumeAmount"": 45
            }
          }
        },
        ""subject"": ""=🔥FOR APPROVAL🔥 New LinkedIn Post"",
        ""operation"": ""sendAndWait"",
        ""approvalOptions"": {
          ""values"": {
            ""approvalType"": ""double""
          }
        }
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""1xpVDEQ1yx8gV022"",
          ""name"": ""Gmail account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""051b7ff6-febb-4aba-9790-bc977c11e645"",
      ""name"": ""Sticky Note9"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        880,
        240
      ],
      ""parameters"": {
        ""width"": 300,
        ""height"": 340,
        ""content"": ""## Final Approval before Publishing to Social Feeds\n(optional)""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b42df164-47ae-4e08-9099-d0958dd41c8f"",
      ""name"": ""Is Approved?"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1160,
        20
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""efe337a1-63e0-4513-873d-421bf41e4868"",
              ""operator"": {
                ""type"": ""boolean"",
                ""operation"": ""true"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.data.approved }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""e3193aef-d115-4c3b-87b2-b8ebd5bb0c05"",
      ""name"": ""Instagram Result"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        2040,
        160
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""5c6edc76-1e3b-45b0-8baa-33a14c678150"",
              ""name"": ""Instagram Post Result"",
              ""type"": ""string"",
              ""value"": ""={{ $json }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""6f8b248f-5c79-412c-81ef-3c52bef7f257"",
      ""name"": ""X Result"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        2040,
        380
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""5c6edc76-1e3b-45b0-8baa-33a14c678150"",
              ""name"": ""X Post Result"",
              ""type"": ""string"",
              ""value"": ""={{ $json }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""4c1ee118-aba1-4632-bd48-27cef9d5e272"",
      ""name"": ""Facebook Result"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        2040,
        600
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""5c6edc76-1e3b-45b0-8baa-33a14c678150"",
              ""name"": ""Facebook Post Result"",
              ""type"": ""string"",
              ""value"": ""={{ $json }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""490223f9-9b6a-4617-8829-c8e4b130feb7"",
      ""name"": ""LinkedIn Result"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        2040,
        780
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""5c6edc76-1e3b-45b0-8baa-33a14c678150"",
              ""name"": ""LinkedIn Post Result"",
              ""type"": ""string"",
              ""value"": ""={{ $json }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""9732c12e-903e-49ac-8d29-ffc4d78c7ff8"",
      ""name"": ""Submit Social Post Details"",
      ""type"": ""n8n-nodes-base.formTrigger"",
      ""position"": [
        -180,
        -740
      ],
      ""webhookId"": ""3e762442-715e-47e1-a65e-ae92085857ae"",
      ""parameters"": {
        ""options"": {
          ""buttonLabel"": ""Automatically Generate Social Media Content""
        },
        ""formTitle"": ""workflows.diy"",
        ""formFields"": {
          ""values"": [
            {
              ""fieldLabel"": ""Topic"",
              ""placeholder"": ""Provide a concise and clear title or main topic for your post (e.g., \""New Product Launch,\"" \""Exciting Company Update\""). This helps the AI accurately capture the focus of your content."",
              ""requiredField"": true
            },
            {
              ""fieldLabel"": ""Keywords or Hashtags (optional)"",
              ""placeholder"": ""Include any specific keywords or hashtags you'd like the AI to incorporate into the post. This ensures the content aligns with your branding and campaign objectives."",
              ""requiredField"": ""={{ false }}""
            },
            {
              ""fieldLabel"": ""Link (optional)"",
              ""placeholder"": ""=Provide the URL of any product, service, form, support page, or other resource. This link will be included in the generated post to direct your audience to the relevant content.\n""
            }
          ]
        },
        ""responseMode"": ""lastNode"",
        ""formDescription"": ""=Welcome to the workflows.diy AI-Powered Assistant!\n\nThis tool is designed to streamline and enhance your social media content creation process.\n\nSimply provide key inputs like a topic or title and an optional image, and our intelligent agent will generate engaging, platform-specific post descriptions tailored to your audience. \n\nWhether you're a marketer, business owner, or influencer, this assistant saves you time while delivering professional-quality content optimized for maximum impact.\n\n""
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""899f658f-4faa-4ba7-ae02-cc8fb1d22c71"",
      ""name"": ""Sticky Note10"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -360,
        -1060
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 2640,
        ""height"": 760,
        ""content"": ""# Step 1️⃣: Create Social Media Written Content\nNote:  \nYou could use the output of step 1 to create your written content and manually post if required.  \nYou so not have to implement step 2.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a8075b2a-4cd0-4b0c-9b19-8bd58de449c0"",
      ""name"": ""Sticky Note11"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -360,
        -260
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 1020,
        ""height"": 460,
        ""content"": ""# Step 2️⃣: Create Image or Upload Image for Social Post""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1da28ef3-9061-4e83-84e0-3502d254d63a"",
      ""name"": ""Sticky Note12"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        840,
        -260
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 1680,
        ""height"": 1260,
        ""content"": ""# Step 3️⃣: Publish Final Social Media Posts""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1955b762-b9c4-4704-955b-093686e827bd"",
      ""name"": ""Merge Results"",
      ""type"": ""n8n-nodes-base.merge"",
      ""onError"": ""continueRegularOutput"",
      ""position"": [
        2340,
        780
      ],
      ""parameters"": {
        ""numberInputs"": 4
      },
      ""typeVersion"": 3,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""6dc47749-eb49-4351-89aa-50f2b6c035bb"",
      ""name"": ""Social Media Content Factory"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        300,
        -740
      ],
      ""parameters"": {
        ""text"": ""=You are a **content creation AI** for workflows.diy, a leading creator of **n8n workflow automation solutions and AI Agentic workflows**.\n\nYour goal is to craft **engaging, platform-specific content** for LinkedIn, Instagram, Facebook, Twitter (X), TikTok, Threads, and YouTube Shorts. Each post must align with the platform’s audience preferences, tone, and style while reflecting workflows.diy's expertise. The content should provide **value-driven insights**, tutorials, reviews, and discussions that resonate with tech profess",
Scrape business emails from Google Maps without the use of any third party APIs,"{
  ""name"": ""Google Maps Email Scraper Template"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""79df5316-c210-478d-a4de-35b5d31924ee"",
      ""name"": ""Remove Duplicate URLs"",
      ""type"": ""n8n-nodes-base.removeDuplicates"",
      ""position"": [
        -780,
        380
      ],
      ""parameters"": {},
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""985ac7e3-b501-4079-a043-780677c94b52"",
      ""name"": ""Loop over queries"",
      ""type"": ""n8n-nodes-base.splitInBatches"",
      ""position"": [
        -1080,
        -100
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""3a478935-781b-4fb1-bdc7-fcf8be1334bc"",
      ""name"": ""Search Google Maps with query"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -1380,
        380
      ],
      ""parameters"": {
        ""url"": ""=https://www.google.com/maps/search/{{ $json.query }}"",
        ""options"": {
          ""allowUnauthorizedCerts"": false
        }
      },
      ""executeOnce"": false,
      ""typeVersion"": 4.2,
      ""alwaysOutputData"": false
    },
    {
      ""id"": ""477e7d55-b7d6-4b20-ac44-dd1f443e270a"",
      ""name"": ""Scrape URLs from results"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        -1180,
        380
      ],
      ""parameters"": {
        ""jsCode"": ""const data = $input.first().json.data\n\nconst regex = /https?:\\/\\/[^\\/]+/g\n\nconst urls = data.match(regex)\n\nreturn urls.map(url => ({json: {url: url}}))""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""a5b67e45-a3f6-41d2-aa58-c26a441c41b2"",
      ""name"": ""Filter irrelevant URLs"",
      ""type"": ""n8n-nodes-base.filter"",
      ""position"": [
        -980,
        380
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""041797f2-2fe2-41dc-902a-d34050b9b304"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notRegex""
              },
              ""leftValue"": ""={{ $json.url }}"",
              ""rightValue"": ""=(google|gstatic|ggpht|schema\\.org|example\\.com|sentry-next\\.wixpress\\.com|imli\\.com|sentry\\.wixpress\\.com|ingest\\.sentry\\.io)""
            },
            {
              ""id"": ""eb499a7e-17bc-453c-be08-a47286f726dd"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": """",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""40ec6d1f-1c98-4c9f-8499-c5893c3df7b9"",
      ""name"": ""Request web page for URL"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""onError"": ""continueRegularOutput"",
      ""position"": [
        -380,
        460
      ],
      ""parameters"": {
        ""url"": ""={{ $json.url }}"",
        ""options"": {}
      },
      ""typeVersion"": 4.2,
      ""alwaysOutputData"": false
    },
    {
      ""id"": ""12f662a8-c55f-409a-b381-f37ab6dd3794"",
      ""name"": ""Loop over URLs"",
      ""type"": ""n8n-nodes-base.splitInBatches"",
      ""onError"": ""continueErrorOutput"",
      ""position"": [
        -580,
        380
      ],
      ""parameters"": {
        ""options"": {
          ""reset"": false
        }
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""e6957d05-3533-48ae-9cc1-ee4ac026a2a6"",
      ""name"": ""Loop over pages"",
      ""type"": ""n8n-nodes-base.splitInBatches"",
      ""onError"": ""continueErrorOutput"",
      ""position"": [
        -360,
        120
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 3,
      ""alwaysOutputData"": false
    },
    {
      ""id"": ""018621c0-0ea9-4865-b110-b6d0727f0588"",
      ""name"": ""Scrape emails from page"",
      ""type"": ""n8n-nodes-base.code"",
      ""onError"": ""continueRegularOutput"",
      ""position"": [
        -200,
        220
      ],
      ""parameters"": {
        ""mode"": ""runOnceForEachItem"",
        ""jsCode"": ""const data = $json.data\n\nconst emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.(?!png|jpg|gif|jpeg)[a-zA-Z]{2,}/g\n\nconst emails = data.match(emailRegex)\n\nreturn {json: {emails: emails}}""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""5509b8e2-a6fc-4fbe-bbc5-1bc1d5de1c98"",
      ""name"": ""Aggregate arrays of emails"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        -40,
        100
      ],
      ""parameters"": {
        ""options"": {
          ""mergeLists"": true
        },
        ""fieldsToAggregate"": {
          ""fieldToAggregate"": [
            {
              ""fieldToAggregate"": ""emails""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""f1f01f03-b62e-453f-b938-ffe4f9b3f4de"",
      ""name"": ""Split out into default data structure"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        180,
        100
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""emails""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ec27d665-d9c1-4f10-9c52-0d5ea89cbf77"",
      ""name"": ""Remove duplicate emails"",
      ""type"": ""n8n-nodes-base.removeDuplicates"",
      ""position"": [
        400,
        100
      ],
      ""parameters"": {
        ""compare"": ""selectedFields"",
        ""options"": {},
        ""fieldsToCompare"": ""emails""
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""4a071bf0-23ad-455b-b231-bafd3b32e4f8"",
      ""name"": ""Filter irrelevant emails"",
      ""type"": ""n8n-nodes-base.filter"",
      ""position"": [
        600,
        100
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""041797f2-2fe2-41dc-902a-d34050b9b304"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notRegex""
              },
              ""leftValue"": ""={{ $json.emails }}"",
              ""rightValue"": ""=(google|gstatic|ggpht|schema\\.org|example\\.com|sentry\\.wixpress\\.com|sentry-next\\.wixpress\\.com|ingest\\.sentry\\.io|sentry\\.io|imli\\.com)""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""59675faa-2b0d-4ba5-82c7-dc5dedcad31e"",
      ""name"": ""Save emails to Google Sheet"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        800,
        100
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Emails"": ""={{ $json.emails }}""
          },
          ""schema"": [
            {
              ""id"": ""Emails"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Emails"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [
            ""Emails""
          ]
        },
        ""options"": {},
        ""operation"": ""append""
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""93437e8b-4f8d-40a1-9585-cab1b556164a"",
      ""name"": ""Starts scraper workflow"",
      ""type"": ""n8n-nodes-base.executeWorkflowTrigger"",
      ""position"": [
        -1600,
        380
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""eed77477-777d-450d-a975-4d2848b1cf55"",
      ""name"": ""Run workflow"",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        -1320,
        -100
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""dffaf04e-d1d2-4002-9a69-f0904b61fc2d"",
      ""name"": ""Wait between executions"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        -700,
        0
      ],
      ""webhookId"": ""40eb11a9-0f7d-4932-993e-0052b69dbf9b"",
      ""parameters"": {
        ""amount"": 2
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""18787007-1d11-41b9-89c3-d5f69756eda7"",
      ""name"": ""Execute scraper for query"",
      ""type"": ""n8n-nodes-base.executeWorkflow"",
      ""position"": [
        -880,
        0
      ],
      ""parameters"": {
        ""mode"": ""each"",
        ""options"": {
          ""waitForSubWorkflow"": false
        },
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $workflow.id }}""
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""67fcde25-05e4-437c-b799-4448baea7891"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -2280,
        -140
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 740,
        ""height"": 180,
        ""content"": ""## 🛠 Setup\n1. Setup your list of queries in the \""Run workflow\"" manual trigger node. Watch  this [video](https://youtu.be/HaiO-UeiKBA) on how to generate the queries with ChatGPT.\n3. Choose a sheet to populate with data in the **Google Sheets node**\n4. Run the workflow and start getting leads into your Google Sheets document""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ac880457-44b4-4ff7-8440-b4107f8468bb"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -700,
        -120
      ],
      ""parameters"": {
        ""color"": 6,
        ""height"": 100,
        ""content"": ""**Optional** 👇\nSet wait time between each query workflow execution. Default is 2 seconds.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d83afb3d-7b71-4b47-9b50-28837aac408c"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1600,
        260
      ],
      ""parameters"": {
        ""width"": 480,
        ""height"": 100,
        ""content"": ""### Scraper 👇\nThis workflow will be executed in the background for each query. Click the **All executions** tab in the left sidebar to see the executions running.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""007b621a-3d41-4358-aa45-560a3c8e3414"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        820,
        300
      ],
      ""parameters"": {
        ""color"": 4,
        ""height"": 180,
        ""content"": ""👆 \n1. Setup your **credentials**. Here's a [video tutorial](https://youtu.be/O5RnWDM27M8) on how to do that.\n\n2. Choose which document and sheet to save the scraped emails to. ""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""fc0b837f-624c-4d25-8ed7-f787f76c785b"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1760,
        -360
      ],
      ""parameters"": {
        ""color"": 3,
        ""content"": "" ## ⚠️ Note\n\nA [video tutorial](https://youtu.be/HaiO-UeiKBA) for this workflow guide is available on my [Youtube channel](https://www.youtube.com/channel/UCn8xmUBunez1SsDVRfZDUGA)""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""2f8665d5-2890-4f7d-908b-9c09a66b6c93"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -2280,
        -360
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 480,
        ""height"": 140,
        ""content"": ""## Google Maps Automatic Email Scraper\n\nThis workflow automatically scrapes emails from businesses on Google Maps based on a list of queries that you provide.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""7414b2ed-259d-47da-bbd1-d9ce0d64d43c"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1000,
        540
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 160,
        ""height"": 100,
        ""content"": ""**Optional** 👆\nAdd or change the regex for filtering irrelevant URLs.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""789c9a02-e6e7-4ea6-a7a2-acc7715b377a"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        580,
        260
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 200,
        ""height"": 100,
        ""content"": ""**Optional** 👆\nAdd or change the regex for filtering irrelevant/incorrect email addresses.""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {
    ""Run workflow"": [
      {
        ""json"": {
          ""query"": ""hollywood+dentist""
        }
      },
      {
        ""json"": {
          ""query"": ""downtown+los+angeles+dentist""
        }
      },
      {
        ""json"": {
          ""query"": ""santa+monica+dentist""
        }
      },
      {
        ""json"": {
          ""query"": ""westwood+dentist""
        }
      },
      {
        ""json"": {
          ""query"": ""west+l.a.+dentist""
        }
      },
      {
        ""json"": {
          ""query"": ""the+valley+dentist""
        }
      },
      {
        ""json"": {
          ""query"": ""echo+park+dentist""
        }
      },
      {
        ""json"": {
          ""query"": ""culver+city+dentist""
        }
      },
      {
        ""json"": {
          ""query"": ""pasadena+dentist""
        }
      },
      {
        ""json"": {
          ""query"": ""silver+lake+dentist""
        }
      },
      {
        ""json"": {
          ""query"": ""mid-wilshire+dentist""
        }
      },
      {
        ""json"": {
          ""query"": ""beverly+hills+dentist""
        }
      },
      {
        ""json"": {
          ""query"": ""north+hills+dentist""
        }
      },
      {
        ""json"": {
          ""query"": ""south+los+angeles+dentist""
        }
      }
    ]
  },
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""connections"": {
    ""Run workflow"": {
      ""main"": [
        [
          {
            ""node"": ""Loop over queries"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Loop over URLs"": {
      ""main"": [
        [
          {
            ""node"": ""Loop over pages"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Request web page for URL"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Loop over pages"": {
      ""main"": [
        [
          {
            ""node"": ""Aggregate arrays of emails"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Scrape emails from page"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Loop over queries"": {
      ""main"": [
        [],
        [
          {
            ""node"": ""Execute scraper for query"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Remove Duplicate URLs"": {
      ""main"": [
        [
          {
            ""node"": ""Loop over URLs"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Filter irrelevant URLs"": {
      ""main"": [
        [
          {
            ""node"": ""Remove Duplicate URLs"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Remove duplicate emails"": {
      ""main"": [
        [
          {
            ""node"": ""Filter irrelevant emails"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Scrape emails from page"": {
      ""main"": [
        [
          {
            ""node"": ""Loop over pages"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Starts scraper workflow"": {
      ""main"": [
        [
          {
            ""node"": ""Search Google Maps with query"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Wait between executions"": {
      ""main"": [
        [
          {
            ""node"": ""Loop over queries"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Filter irrelevant emails"": {
      ""main"": [
        [
          {
            ""node"": ""Save emails to Google Sheet"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Request web page for URL"": {
      ""main"": [
        [
          {
            ""node"": ""Loop over URLs"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Scrape URLs from results"": {
      ""main"": [
        [
          {
            ""node"": ""Filter irrelevant URLs"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Execute scraper for query"": {
      ""main"": [
        [
          {
            ""node"": ""Wait between executions"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Aggregate arrays of emails"": {
      ""main"": [
        [
          {
            ""node"": ""Split out into default data structure"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Search Google Maps with query"": {
      ""main"": [
        [
          {
            ""node"": ""Scrape URLs from results"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Split out into default data structure"": {
      ""main"": [
        [
          {
            ""node"": ""Remove duplicate emails"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
"AI-Powered Short-Form Video Generator with OpenAI, Flux, Kling, and ElevenLabs","{
  ""id"": ""aqLL3BAXqQIjeJDt"",
  ""meta"": {
    ""instanceId"": ""dce6d05169adc9f802863a06c3edb9925b178c4fce2360953cce9c1b509705cc"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""AI Automated TikTok/Youtube Shorts/Reels Generator"",
  ""tags"": [
    {
      ""id"": ""meqQhJqB377UiY3s"",
      ""name"": ""template"",
      ""createdAt"": ""2025-03-10T07:30:05.424Z"",
      ""updatedAt"": ""2025-03-10T07:30:05.424Z""
    }
  ],
  ""nodes"": [
    {
      ""id"": ""e5095169-dc78-4d90-9662-04cfc82c38d9"",
      ""name"": ""Get image"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        220,
        40
      ],
      ""parameters"": {
        ""url"": ""=https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}"",
        ""options"": {},
        ""sendHeaders"": true,
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""X-API-Key"",
              ""value"": ""={{ $('Set API Keys').item.json['PiAPI Key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""f477250a-fc8e-407e-a632-cffc0e564596"",
      ""name"": ""Generate Image"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -60,
        40
      ],
      ""parameters"": {
        ""url"": ""https://api.piapi.ai/api/v1/task"",
        ""body"": ""={\n  \""model\"": \""Qubico/flux1-dev\"",\n  \""task_type\"": \""txt2img\"",\n  \""input\"": {\n    \""prompt\"": \""{{ $('Generate Image Prompts').item.json.choices[0].message.content }} realistic and casual as if taken by an iphone camera by a TikTok influencer\"",\n    \""negative_prompt\"": \""taking a photo of a room, recording a video of a room, photos app, video recorder, illegible text, blurry text, low quality text, DSLR, unnatural\"",\n    \""width\"": 540,\n    \""height\"": 960\n  }\n}"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""contentType"": ""raw"",
        ""sendHeaders"": true,
        ""rawContentType"": ""application/json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""X-API-Key"",
              ""value"": ""={{ $('Set API Keys').item.json['PiAPI Key'] }}""
            }
          ]
        }
      },
      ""retryOnFail"": false,
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""622ce9f5-ad58-485b-a3c6-1265700b04da"",
      ""name"": ""Image-to-Video"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -420,
        560
      ],
      ""parameters"": {
        ""url"": ""https://api.piapi.ai/api/v1/task"",
        ""body"": ""={\n  \""model\"": \""kling\"",\n  \""task_type\"": \""video_generation\"",\n  \""input\"": {\n    \""prompt\"": \""{{ $json.data.input.prompt }}\"",\n    \""negative_prompt\"": \""blurry motion, distorted faces, unnatural lighting, over produced, bad quality\"",\n    \""cfg_scale\"": 0.5,\n    \""duration\"": 5,\n    \""mode\"": \""pro\"",\n    \""image_url\"": \""{{ $json.data.output.image_url }}\"",\n    \""version\"": \""1.6\"",\n    \""camera_control\"": {\n      \""type\"": \""simple\"",\n      \""config\"": {\n        \""horizontal\"": 0,\n        \""vertical\"": 0,\n        \""pan\"": 0,\n        \""tilt\"": 0,\n        \""roll\"": 0,\n        \""zoom\"": 5\n      }\n    }\n  },\n  \""config\"": {}\n}"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""contentType"": ""raw"",
        ""sendHeaders"": true,
        ""rawContentType"": ""application/json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""X-API-Key"",
              ""value"": ""={{ $('Set API Keys').item.json['PiAPI Key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""ed14eac3-1d63-481d-871c-a04c52977fc6"",
      ""name"": ""Get Video"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -160,
        560
      ],
      ""parameters"": {
        ""url"": ""=https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}"",
        ""options"": {},
        ""sendHeaders"": true,
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""X-API-Key"",
              ""value"": ""={{ $('Set API Keys').item.json['PiAPI Key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""8b68100c-8a5a-405c-825e-d9e8a898f235"",
      ""name"": ""List Elements"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        460,
        600
      ],
      ""parameters"": {
        ""jsCode"": ""return [\n  {\n    scene_titles: items.map(item => item.json.response.text),\n    video_urls: items.map(item => item.json.data.output.video_url),\n    input_tokens: $('Calculate Token Usage').first().json.total_prompt_tokens,\n    output_tokens: $('Calculate Token Usage').first().json.total_completion_tokens,\n    model: $('Generate Image Prompts').first().json.model\n  }\n];""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""f8780885-508e-4dc9-b146-f367297d7b68"",
      ""name"": ""Wait 10min"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        -280,
        560
      ],
      ""webhookId"": ""1f9d716f-6544-4e4e-94ec-408ac3ea6e82"",
      ""parameters"": {
        ""unit"": ""minutes"",
        ""amount"": 10
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""6290bc91-0eb9-4053-bd93-961cb9e917c0"",
      ""name"": ""Wait 3min"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        80,
        40
      ],
      ""webhookId"": ""77cdee73-5e99-456a-b5e7-410b4d257669"",
      ""parameters"": {
        ""unit"": ""minutes"",
        ""amount"": 3
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""818a66ef-b9fa-4efc-85d1-b295300cbed8"",
      ""name"": ""Wait 5min"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        540,
        -40
      ],
      ""webhookId"": ""31d5b1a2-dbb5-4849-ae25-cb491539c16e"",
      ""parameters"": {
        ""unit"": ""minutes""
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""afd66320-dfe0-4872-a09d-d53fe08152ce"",
      ""name"": ""Generate voice"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -60,
        1020
      ],
      ""parameters"": {
        ""url"": ""https://api.elevenlabs.io/v1/text-to-speech/onwK4e9ZLuTAKqWW03F9"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""text"",
              ""value"": ""={{ $json.choices[0].message.content }}""
            }
          ]
        },
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""xi-api-key"",
              ""value"": ""={{ $('Set API Keys').item.json['ElevenLabs API Key'] }}""
            }
          ]
        }
      },
      ""retryOnFail"": false,
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""916f19e1-7928-4141-a5c5-ca39bd22b0a0"",
      ""name"": ""List Elements1"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        460,
        820
      ],
      ""parameters"": {
        ""jsCode"": ""return [\n  {\n    sound_urls: items.map(item => $('Upload Voice Audio').first().json.webContentLink)\n  }\n];""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""b95fd80c-ec7f-4d50-99ae-f3f544b8a111"",
      ""name"": ""Fail check"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        -20,
        560
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""a920eb54-fc23-4b68-8f56-2eee907a5481"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""failed""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""7e3f5cda-1d49-4a59-956f-f639daf203e0"",
      ""name"": ""Wait to retry"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        120,
        520
      ],
      ""webhookId"": ""3b0fae8f-4419-45cd-8380-8f72eca05ff8"",
      ""parameters"": {
        ""unit"": ""minutes""
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""48ec39c9-1802-4860-918d-9c660051f27b"",
      ""name"": ""Generate Image Prompts"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        -540,
        120
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""o3-mini"",
          ""cachedResultName"": ""O3-MINI""
        },
        ""options"": {},
        ""messages"": {
          ""values"": [
            {
              ""content"": ""=You are an advanced, unhinged, hilariously entertaining prompt-generation AI specializing in expanding short POV image prompt ideas into detailed, hyper-realistic prompts optimized for Qubico/flux1-dev. Your task is to take a brief input tied to job seeking, job hunting, or resume building and morph it into a cinematic, immersive prompt locked in a first-person perspective, making the viewer feel they’re living the scene.\n\nNEVER include quotation marks or emojis in your response—flux API will choke on them, and that’s a hard no.\n\nThe topic of this narrative is: {{ $('Load Google Sheet').item.json.idea }}\n\nThe short prompt idea to expand for this image generation is: {{ $json.response.text }}\n\nONLY GENERATE ONE PROMPT PER IDEA—NO COMBINING. In at least one scene, weave in this environment descriptor: {{ $('Load Google Sheet').first().json.environment_prompt }}, but go wild with unhinged, edgy, funny twists elsewhere (skip the cringe or cheesy garbage). Most job hunting happens on laptops or desktops, so prioritize those over phones. If a phone sneaks in, it’s only showing job-related content like email, LinkedIn, a resume, or a job posting—never a photo or video app.\n\nEvery prompt has two parts:\n\nForeground: Kick off with First person view POV GoPro shot of... and show the viewer’s hands, limbs, or feet locked in a job-related action.\n\nBackground: Start with In the background,... and paint the scenery, blending the environment descriptor when required, plus sensory zingers.\n\nTop Rules:\n\nNO quotation marks or emojis—EVER. This is life or death for flux.\nStick to first-person POV—the viewer’s in the driver’s seat, not watching from the sidelines.\nShow a limb (hands, feet) doing something job-focused—typing, holding a resume, adjusting a tie.\nKeep it dynamic, like a GoPro clip, with motion and depth mimicking human vision.\nIf tech’s involved (phone, computer), it’s displaying job-hunting gold—email, job boards, resumes—not random trash.\nNo off-topic actions like recording videos or snapping pics—job hunting only, fam.\nExtra Vibes:\n\nFull-body awareness: Drop hints of physical feels—cramping fingers, racing pulse, slumping shoulders.\nSensory overload: Hit sight, touch, sound, smell, temperature for max realism (coffee whiffs, keyboard clacks).\nWorld grip: Limbs interact with the scene—tapping keys, handing over papers, stepping up.\nKeep it under 1000 characters, one slick sentence, no fluff or formatting.\nMake it entertaining, relatable, with an Andrew Tate viral edge for the down-and-out job hustlers.\nExamples:\n\nInput: Updating a LinkedIn profile after a long day\n\nEnvironment_prompt: Tired, cluttered apartment, laptop glow\n\nOutput: First person view POV GoPro shot of my hands hammering a laptop, cheeto-dusted fingers aching from the grind, the screen flashing my LinkedIn profile with a fresh connection ping; in the background, a trashed apartment lit by the laptop’s ghostly glow, pizza boxes toppling, traffic humming outside, stale takeout stench hitting my nose as my back screams from the hustle.\n\nInput: Handing over a resume at a job fair\n\nEnvironment_prompt: Hopeful, busy convention hall, suits everywhere\n\nOutput: First person view POV GoPro shot of my hand thrusting out a crisp resume, fingers twitching with nerves as it brushes another palm; in the background, a buzzing convention hall packed with suits, coffee fumes and shoe polish in the air, chatter drowning my pounding heart as I lock eyes with the recruiter.\n\nNO QUOTATION MARKS. NO EMOJIS. EVER.""
            }
          ]
        },
        ""simplify"": false
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""UqJ11kHhHtyzaDWx"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""5c1b8dc8-4eb3-49fe-81c7-c811d73fac0d"",
      ""name"": ""Calculate Token Usage"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        -240,
        120
      ],
      ""parameters"": {
        ""jsCode"": ""// Get all input items (the 5 LLM responses)\nconst items = $input.all();\n\n// Calculate total prompt tokens and total completion tokens\nconst totalPromptTokens = items.reduce((sum, item) => sum + item.json.usage.prompt_tokens, 0);\nconst totalCompletionTokens = items.reduce((sum, item) => sum + item.json.usage.completion_tokens, 0);\n\n// Create new items with original data plus the totals\nconst outputItems = items.map(item => ({\n  json: {\n    ...item.json,                   // Spread the original item data\n    total_prompt_tokens: totalPromptTokens,     // Add total prompt tokens\n    total_completion_tokens: totalCompletionTokens // Add total completion tokens\n  }\n}));\n\n// Return the modified items\nreturn outputItems;""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""efc3d0dd-70dc-4fba-b040-22c773ed5602"",
      ""name"": ""Check for failures"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        360,
        40
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""567d1fc9-0638-4a44-b5f5-30a9a6683794"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""failed""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""3161c993-5696-4419-9299-fde51719dfc7"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -560,
        -200
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 1260,
        ""height"": 460,
        ""content"": ""## 2. 🖼️Generate images with Flux using [PiAPI](https://piapi.ai/?via=n8n) \n### (total cost: $0.0948 approx. as of 3/9/25)\n1. OpenAI is used to generate 5 Flux image prompts based on the 5 captions generated. Edit this node to see/edit the prompt instructions. \n2. Next we use some custom javascript to total up how many tokens were used for each 5 generations so we can track our costs later.\n3. Then we generate an image with Flux using the [PiAPI service](https://piapi.ai/?via=n8n), waiting to check for failures and retrying if there are any.\n\nYou can change the image model used by editing the Generate Image node API call.\nFlux models available (as of 3/9/25):\n- Qubico/flux1-dev ($0.015) - Currently set\n- Qubico/flux1-schnell ($0.0015)\n- Qubico/flux1-advanced ($0.02)\n\nFor full list of API settings, see the [Flux API Documentation](https://piapi.ai/docs/flux-api/text-to-image?via=n8n)\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e5cdec7e-cb75-4200-a8e3-615621d20150"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -460,
        280
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 1040,
        ""height"": 500,
        ""content"": ""## 3. 🎬Generate videos with Kling using [PiAPI](https://piapi.ai/?via=n8n)\n### (total cost: $2.30 approx. as of 3/9/25)\n1. We use image-to-video with Kling using [PiAPI](https://piapi.ai/?via=n8n) to generate a video from each image.\n2. Then we wait to check for failures, and repeat the generations the failed if there are any.\n\nYou can edit the video model used in the Image-to-Video node. For testing, I'd recommend switching from pro to std for lower quality and cheaper price.\nKling models available (as of 3/9/25):\n- std (Standard) $0.26 per 5 second video\n- pro (Professional) $0.46 per 5 second video - Currently set\n\nFor full list of API settings, see the [Kling API Documentation](https://piapi.ai/docs/kling-api/create-task?via=n8n)\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""8404a390-a402-4703-8cb5-4a54490dc7bd"",
      ""name"": ""Generate Video Captions"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        -980,
        780
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini"",
          ""cachedResultName"": ""GPT-4O-MINI""
        },
        ""options"": {},
        ""messages"": {
          ""values"": [
            {
              ""role"": ""system"",
              ""content"": ""DO NOT include any quotation marks in your response. Do not put a quote at the beginning or the end of your response.\n\nYou are a prompt-generation AI specializing in crafting unhinged, entertaining TikTok captions for a \""day in the life\"" POV story about job hunting or resume writing. Generate five concise, action-driven captions (5-10 words each) that follow a Problem > Action > Reward structure. The first caption should be a shocking or funny hook, and the last should conclude with a satisfying reward. Use emojis sparingly—only one per caption at most, and only when they add impact; skip them if they don’t enhance the message.\n\nGuidelines:\n\nPerspective: Always first-person POV, immersing the viewer in the story.\nTone: Channel Andrew Tate mixed with Charlie Sheen—cursing and sexual innuendos are fair game.\nContent: Focus on job seeking, hunting, or resume building, spotlighting AI as the game-changer.\nNarrative: Start with the grind of unemployment or a shitty job, pivot to using AI for resumes and cover letters, and end with scoring the dream gig.\nScenes: Highlight raw, emotional moments—skip the boring stuff.\nYour captions should be wild and entertaining, not polished or professional. The first caption is the hook—make it shocking, hilarious, or ballsy, something Andrew Tate would growl. Use emojis sparingly—max one per caption, only if it hits harder with it.\n\nYour response should be a list of 5 items separated by \""\\n\"" (for example: \""item1\\nitem2\\nitem3\\nitem4\\nitem5\"")""
            },
            {
              ""content"": ""={{ $json.idea }}""
            }
          ]
        },
        ""simplify"": false
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""UqJ11kHhHtyzaDWx"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""f614c784-a3ee-4eb8-aee3-cc0ad3e87556"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -460,
        800
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 1040,
        ""height"": 400,
        ""content"": ""## 4. 🔉Generate voice overs with [Eleven Labs](https://try.elevenlabs.io/n8n)\n1. OpenAI API is used to generate a funny script that relates to the captions. Open this node to see/edit the prompt instructions. \n2. Then we use the [Eleven Labs API](https://try.elevenlabs.io/n8n) to generate the voiceover and upload it to our Google Drive so it can be accessed in the next step.\n\nTo replace the voice, find the voice ID of the voice you want to use in [Eleven Labs](https://try.elevenlabs.io/n8n), then change the URL in the Generate Voice node to: https://api.elevenlabs.io/v1/text-to-speech/{voice ID here}\n\nFor full list of API settings, see the [Eleven Labs API Documentation](https://elevenlabs.io/docs/api-reference/text-to-speech/convert)\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e59306c1-8efe-4d98-9391-10c68c17787b"",
      ""name"": ""Match captions with videos"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        300,
        600
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""combineBy"": ""combineByPosition""
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""8da7e16e-691b-4335-bfc7-e196c36f982d"",
      ""name"": ""Generate Script"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        -420,
        1020
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini"",
          ""cachedResultName"": ""GPT-4O-MINI""
        },
        ""options"": {},
        ""messages"": {
          ""values"": [
            {
              ""role"": ""system"",
              ""content"": ""=You are an unhinged and hilarious TikTok influencer who's like a mix of Andrew Tate and Charlie Sheen. The user is going to provide you with a topic, and then 5 different parts of a story. Your task is to narrate the story as this hilarious character, who isn't afraid to be edgy or curse or use sexual innuendos. However keep each of the 5 talking points brief, as you only have about 5 seconds to speak during each. The entire length of your narration should be around 15 seconds.\n\nEach line item of the users message represents 1 5 second clip, so your response needs to be able to quickly and easily be spoken in those time constraints. Don't say extra things you don't need to. Just quickly tell the story, in order, and make it unhinged, funny, entertaining, and potentially controversially viral. Don't worry about offendeding anyone. Andrew Tate style it.\n\nDo not include any emojis, as your response will be converted from text to speech, so anything but text and punctuation isn't neccesary. Also, don't make your jokes overly corny, speak in a witty, edgy, funny way, but no corny dad jokes or anything cringe.""
            },
            {
              ""content"": ""={{ $('Generate Video Captions').item.json.choices[0].message.content }}""
            }
          ]
        },
        ""simplify"": false
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""UqJ11kHhHtyzaDWx"",
          ""name"": ""OpenAi account""
        }
      },
      ""executeOnce"": true,
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""ad87317d-3ed0-4fdf-aea5-7b2fa60fb59f"",
      ""name"": ""Upload Voice Audio"",
      ""type"": ""n8n-nodes-base.googleDrive"",
      ""position"": [
        140,
        1020
      ],
      ""parameters"": {
        ""name"": ""={{ $('Load Google Sheet').item.json.id }}-voiceover.mp3"",
        ""driveId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""My Drive""
        },
        ""options"": {},
        ""folderId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1w1EQ8xyth6w7AbX2wpDI3vInfYeRy8vH"",
          ""cachedResultUrl"": ""https://drive.google.com/drive/folders/1w1EQ8xyth6w7AbX2wpDI3vInfYeRy8vH"",
          ""cachedResultName"": ""Resume Studio""
        }
      },
      ""credentials"": {
        ""googleDriveOAuth2Api"": {
          ""id"": ""ZvDuyVfbZJbDJXcS"",
          ""name"": ""Google Drive account""
        }
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""eec529e9-2601-4f7b-b415-63d2ebba1574"",
      ""name"": ""Set Access Permissions"",
      ""type"": ""n8n-nodes-base.googleDrive"",
      ""position"": [
        320,
        1020
      ],
      ""parameters"": {
        ""fileId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $json.id }}""
        },
        ""options"": {},
        ""operation"": ""share"",
        ""permissionsUi"": {
          ""permissionsValues"": {
            ""role"": ""writer"",
            ""type"": ""anyone"",
            ""allowFileDiscovery"": true
          }
        }
      },
      ""credentials"": {
        ""googleDriveOAuth2Api"": {
          ""id"": ""ZvDuyVfbZJbDJXcS"",
          ""name"": ""Google Drive account""
        }
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""63e72d56-140e-47d8-9f72-b58c764deed9"",
      ""name"": ""Pair Videos with Audio"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        680,
        700
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""combineBy"": ""combineByPosition""
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""60a80c6f-0385-48e6-9b71-c23a74cbc15c"",
      ""name"": ""Render Final Video"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        860,
        700
      ],
      ""parameters"": {
        ""url"": ""https://api.creatomate.com/v1/renders"",
        ""body"": ""={\n  \""template_id\"": \""{{ $('Set API Keys').item.json['Creatomate Template ID'] }}\"",\n  \""modifications\"": {\n    \n    \""Video-1.source\"": \""{{ $json.video_urls[0] }}\"",\n    \""Video-2.source\"": \""{{ $json.video_urls[1] }}\"",\n    \""Video-3.source\"": \""{{ $json.video_urls[2] }}\"",\n    \""Video-4.source\"": \""{{ $json.video_urls[3] }}\"",\n    \""Video-5.source\"": \""{{ $json.video_urls[4] }}\"",\n\n    \""Audio-1.source\"": \""{{ $json.sound_urls[0] }}\"",\n\n    \""Text-1.text\"": \""{{ $json.scene_titles[0] }}\"",\n    \""Text-2.text\"": \""{{ $json.scene_titles[1] }}\"",\n    \""Text-3.text\"": \""{{ $json.scene_titles[2] }}\"",\n    \""Text-4.text\"": \""{{ $json.scene_titles[3] }}\"",\n    \""Text-5.text\"": \""{{ $json.scene_titles[4] }}\""\n  }\n}"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""contentType"": ""raw"",
        ""sendHeaders"": true,
        ""rawContentType"": ""application/json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""Authorization"",
              ""value"": ""=Bearer {{ $('Set API Keys').item.json['Creatomate API Key'] }}""
            },
            {
              ""name"": ""Content-Type"",
              ""value"": ""application/json""
            }
          ]
        }
      },
      ""executeOnce"": true,
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""89c0e958-7690-4f3d-af49-3e9776f2c979"",
      ""name"": ""Notify me on Discord"",
      ""type"": ""n8n-nodes-base.discord"",
      ""position"": [
        1840,
        700
      ],
      ""webhookId"": ""1541bc50-06e4-48e8-8c76-23850ee4edf6"",
      ""parameters"": {
        ""content"": ""=A new Resume Studio POV video has been created: {{ $json.final_output }}"",
        ""options"": {},
        ""authentication"": ""webhook""
      },
      ""credentials"": {
        ""discordWebhookApi"": {
          ""id"": ""rd9P3JURnEdrsFAZ"",
          ""name"": ""Discord Webhook account""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""14a09794-5e02-4880-b33d-139a91726dda"",
      ""name"": ""Once Per Day"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        -1540,
        780
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {
              ""triggerAtHour"": 7
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""4de1f1c7-52ad-4e00-ad22-b4c3c0f718d8"",
      ""name"": ""Load Google Sheet"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        -1120,
        780
      ],
      ""parameters"": {
        ""options"": {
          ""returnFirstMatch"": true
        },
        ""filtersUI"": {
          ""values"": [
            {
              ""lookupValue"": ""for production"",
              ""lookupColumn"": ""production""
            }
          ]
        },
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1cjd8p_yx-M-3gWLEd5TargtoB35cW-3y66AOTNMQrrM/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1cjd8p_yx-M-3gWLEd5TargtoB35cW-3y66AOTNMQrrM"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1cjd8p_yx-M-3gWLEd5TargtoB35cW-3y66AOTNMQrrM/edit?usp=drivesdk"",
          ""cachedResultName"": ""Sheet Template""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""CkBO4U0JY0QvkimY"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""e5c83690-1696-43aa-a0db-164ca128dd67"",
      ""name"": ""Create List"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        -660,
        700
      ],
      ""parameters"": {
        ""jsCode"": ""// Get the text directly from the OpenAI response\nconst text = $input.first().json.choices[0].message.content;\n\n// Split the text on literal '\\\\n', trim, and filter empty lines\nconst lines = text.split('\\\\n').map(line => line.trim()).filter(line => line !== '');\n\n// Create an array of items for n8n\nconst items = lines.map(line => ({\n  json: {\n    response: { text: line }\n  }\n}));\n\n// Return the array of items\nreturn items;""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""ed99df67-2068-4c8b-a6ba-e67d234f03c4"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        620,
        480
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 1360,
        ""height"": 380,
        ""content"": ""## 5. 📥Complete video with [Creatomate](https://creatomate.com/)\n### (total cost: $0.38 approx. with the Essential plan credits | Free trial credits available)\n1. First, the list of videos/captions is combined with the generated voice over into a single item containing all 3 elements.\n2. Those are then passed over to the Creatomate Template ID you specified, replacing the template captions/video/audio with your generated ones.\n3. When the video is finished rendering, it's then uploaded to Google Drive and the permissions set so it can be accessed with a link.\n4. Then we update the original Google Sheet template with the information from our generation, including tokens to calculate cost, then mark this idea as completed.\n5. Finally, we send a notification to via [webhook to the Discord server](https://support.discord.com/hc/en-us/articles/228383668-Intro-to-Webhooks) when the video is ready to be downloaded and used!\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e7064a56-c500-4f9f-a54a-c4352c263b56"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1260,
        -160
      ],
      ""parameters"": {
        ""width"": 620,
        ""height"": 420,
        ""content"": ""# 🤖 AI-Powered Short-Form Video Generator with OpenAI, Flux, Kling, and ElevenLabs\n\n## 📃Before you get started, you'll need:\n- [n8n installation](https://n8n.partnerlinks.io/n8nTTVideoGenTemplate) (tested on version 1.81.4)\n- [OpenAI API Key](https://platform.openai.com/api-keys) (free trial credits available)\n- [PiAPI](https://piapi.ai/?via=n8n) (free trial credits available)\n- [Eleven Labs](https://try.elevenlabs.io/n8n) (free account)\n- [Creatomate API Key](https://creatomate.com/) (free trial credits available)\n- Google Sheets API enabled in [Google Cloud Console](https://console.cloud.google.com/apis/api/sheets.googleapis.com/overview)\n- Google Drive API enabled in [Google Cloud Console](https://console.cloud.google.com/apis/api/drive.googleapis.com/overview)\n- OAuth 2.0 Client ID and Client Secret from your [Google Cloud Console Credentials](https://console.cloud.google.com/apis/credentials)\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4ddb7249-9785-4f51-b35c-b9a0c6a66e3b"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1420,
        340
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 920,
        ""height"": 700,
        ""content"": ""## 1. 🗨️Generate video captions from ideas in a Google Sheet\n\n1. Setup your API keys for [PiAPI](https://piapi.ai/?via=n8n), [Eleven Labs](https://try.elevenlabs.io/n8n), and [Creatomate](https://creatomate.com/).\n- Once logged in to your Creatomate account, create a new video template and click \""source code\"" in the top right. [Paste this JSON code](https://pastebin.com/c7aMTeLK). This will be your example template for this workflow.\n- In your Creatomate template, click the \""Use Template\"" button in the top right and then click \""API Integration\"" and you'll see your template_id. Set this value as your Creatomate Tem",
Anthropic AI Agent: Claude Sonnet 4 and Opus 4 with Think and Web Search tool,"{
  ""id"": ""qjLD1os0l5ISHRFO"",
  ""meta"": {
    ""instanceId"": ""a4bfc93e975ca233ac45ed7c9227d84cf5a2329310525917adaf3312e10d5462"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Agent AI Anthropic Opus 4 and Sonnet 4"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""4f01cd9b-16b6-4b6a-a55b-64531e867dcc"",
      ""name"": ""When chat message received"",
      ""type"": ""@n8n/n8n-nodes-langchain.chatTrigger"",
      ""position"": [
        20,
        60
      ],
      ""webhookId"": ""a0032740-26d8-491b-93f9-2250906d0e17"",
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""c0a5e6b1-9c43-4f92-884e-95b1e91ff54a"",
      ""name"": ""Structured Output Parser"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserStructured"",
      ""position"": [
        420,
        280
      ],
      ""parameters"": {
        ""schemaType"": ""manual"",
        ""inputSchema"": ""{\n\t\""type\"": \""object\"",\n\t\""properties\"": {\n\t\t\""prompt\"": {\n\t\t\t\""type\"": \""string\""\n\t\t},\n\t\t\""model\"": {\n\t\t\t\""type\"": \""string\""\n\t\t}\n\t}\n}""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""e46a6a64-8875-44f0-830e-febebaa10dd7"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        20,
        -180
      ],
      ""parameters"": {
        ""width"": 840,
        ""height"": 180,
        ""content"": ""## Dynamic Model Selector for Optimal AI Responses\n\nThe **New Anthropic Agent Decisioner** is a dynamic, AI-powered routing system that automatically selects the most appropriate large language model (Anthropic Sonnet 4 or Opus 4) to respond to a user's query based on the query’s content and purpose.\n\nThis workflow ensures **dynamic, optimized AI responses** by intelligently routing queries to the best-suited model.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0f4208aa-c4f5-44aa-ba43-4c3143751a79"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        600,
        60
      ],
      ""parameters"": {
        ""text"": ""={{ $json.output.prompt }}"",
        ""options"": {
          ""systemMessage"": ""=You have access to a web_search tool that allows you to browse the internet for up-to-date information. Here's how you should operate:\n\n1. Website Information:\nFamiliarize yourself with this information about the website you're assisting. Use this as context for user interactions.\n\n2. Web Search Tool:\nYou have access to a web_search tool that can browse the internet. To use it, write the variable {web_search_question}. The tool will return relevant search results. Set the variable {model} to {{ $json.output.model }}.\n\n3. Handling User Queries:\nWhen a user asks a question, follow these steps:\na) Analyze the query to determine if it's related to the website or requires external information.\nb) If the query is about the website, use the provided website information to answer.\nc) If external information is needed, use the web_search tool to find relevant data.\n\n4. Using web_search:\n- Use web_search for factual, current information that isn't provided in the website info.\n- Formulate clear, concise search queries.\n- If the first search doesn't yield useful results, refine your query and search again.\n- Limit searches to a maximum of three per user query to maintain efficiency.\n\n5. Using Think:\n- Using Think tool to think about something. It will not obtain new information or change the database, but just append the thought to the log. Use it when complex reasoning or some cache memory is needed.\n\n6. Formulating Responses:\n- Begin with information from the website if relevant.\n- Incorporate web search results to provide up-to-date, accurate information.\n- Summarize findings concisely and coherently.\n- If you're unsure or can't find reliable information, be honest about limitations.\n\n7. Ethical Considerations:\n- Respect user privacy. Don't ask for or store personal information.\n- Provide factual information. Avoid speculation or unverified claims.\n- If asked about controversial topics, strive for a balanced, neutral response.\n- Don't engage in or encourage illegal activities.\n\n8. Output Format:\nDo not include your thought process, web searches, or any other tags in the final output.\n""
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""0e08600f-f35c-408a-9b8a-f886aeea37d6"",
      ""name"": ""Think"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolThink"",
      ""position"": [
        800,
        280
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""5adf09be-e278-49f0-bb66-d7e3d265b120"",
      ""name"": ""Calculator"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolCalculator"",
      ""position"": [
        900,
        280
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""d5fa04bf-e40b-41d7-9d48-c71cd7ced93f"",
      ""name"": ""Anthropic Routing Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        240,
        60
      ],
      ""parameters"": {
        ""options"": {
          ""systemMessage"": ""=You are a **Routing Agent**.\n\nYour task is to analyze user queries and determine the most appropriate model to handle each specific use case.\n\n## Available Models\n\nYou have access to the following models:\n\n1. **claude-sonnet-4-20250514**\n2. **claude-opus-4-20250514**\n\n## Model Strengths\n\n### 1. claude-sonnet-4-20250514\n- Standard decision-making tasks\n- Real-time workflow routing\n- Data validation and processing\n- Pattern recognition in structured data\n- Routine business logic evaluation\n\n### 2. claude-sonnet-4-20250514\n- Complex multi-factor decision scenarios\n- Advanced data analysis requiring deep reasoning\n- Critical business decisions with high impact\n- Complex pattern recognition in unstructured data\n- Strategic workflow optimization\n\n## Output Format\n\nYour output must always be a valid JSON object in the following format:\n\n```json\n{\n  \""prompt\"": \""user query goes here\"",\n  \""model\"": \""selected-model-name\""\n}\n```\n\n- The **\""prompt\""** field should contain the exact query to be sent to the selected model.\n- The **\""model\""** field should contain the model name (one of: claude-sonnet-4-20250514, claude-opus-4-20250514).\n\n**Important:** Only return the JSON object. Do not include any explanations or additional text.""
        },
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""0f358356-37d4-4693-a694-382a8bc1b20f"",
      ""name"": ""Sonnet 4 or Opus 4"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatAnthropic"",
      ""position"": [
        600,
        280
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $json.output.model }}""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""anthropicApi"": {
          ""id"": ""NNTZAD0Gmf7lcniq"",
          ""name"": ""Anthropic account""
        }
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""c92104a6-9aa4-4a55-84b1-484df25f83ac"",
      ""name"": ""Sonnet 3.7"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatAnthropic"",
      ""position"": [
        220,
        280
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""claude-3-7-sonnet-20250219"",
          ""cachedResultName"": ""Claude Sonnet 3.7""
        },
        ""options"": {
          ""maxTokensToSample"": 1024
        }
      },
      ""credentials"": {
        ""anthropicApi"": {
          ""id"": ""NNTZAD0Gmf7lcniq"",
          ""name"": ""Anthropic account""
        }
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""513642ef-b4d6-46fc-8542-319dd54271f8"",
      ""name"": ""Simple Memory1"",
      ""type"": ""@n8n/n8n-nodes-langchain.memoryBufferWindow"",
      ""position"": [
        720,
        280
      ],
      ""parameters"": {
        ""sessionKey"": ""={{ $('When chat message received').item.json.sessionId }}"",
        ""sessionIdType"": ""customKey""
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""6c81dcd9-7faf-4b34-8e78-a471de80fa1e"",
      ""name"": ""web_search"",
      ""type"": ""n8n-nodes-base.httpRequestTool"",
      ""position"": [
        1020,
        280
      ],
      ""parameters"": {
        ""url"": ""https://api.anthropic.com/v1/messages"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('JSON', `{\n  \""model\"": \""{model}\"",\n  \""max_tokens\"": 1024,\n  \""messages\"": [\n    {\n      \""role\"": \""user\"",\n      \""content\"": \""{web_search_question}\""\n    }\n  ],\n  \""tools\"": [\n    {\n      \""type\"": \""web_search_20250305\"",\n      \""name\"": \""web_search\"",\n      \""max_uses\"": 5\n    }\n  ]\n}\n`, 'json') }}"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""authentication"": ""predefinedCredentialType"",
        ""toolDescription"": ""Use this tool to search on the web"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""anthropic-version"",
              ""value"": ""=2023-06-01""
            },
            {
              ""name"": ""content-type"",
              ""value"": ""application/json""
            }
          ]
        },
        ""nodeCredentialType"": ""anthropicApi""
      },
      ""credentials"": {
        ""anthropicApi"": {
          ""id"": ""NNTZAD0Gmf7lcniq"",
          ""name"": ""Anthropic account""
        }
      },
      ""typeVersion"": 4.2
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""c0947a41-be77-4ac0-89e2-eb8cf04b7c48"",
  ""connections"": {
    ""Think"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Calculator"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Sonnet 3.7"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Anthropic Routing Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""web_search"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Simple Memory1"": {
      ""ai_memory"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_memory"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Sonnet 4 or Opus 4"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Anthropic Routing Agent"": {
      ""main"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Structured Output Parser"": {
      ""ai_outputParser"": [
        [
          {
            ""node"": ""Anthropic Routing Agent"",
            ""type"": ""ai_outputParser"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When chat message received"": {
      ""main"": [
        [
          {
            ""node"": ""Anthropic Routing Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Context-Aware Google Calendar Management with MCP Protocol,"{
  ""id"": ""aiKrExd0rAxJO6xi"",
  ""meta"": {
    ""instanceId"": ""f8eaf8bef1c6467fb3687216a5c1296ee5e886fb01cb197574b7f8e91332a8d8"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""MCP_google_calendar"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""17ccfdbf-d121-4ff0-95d4-bb38644d2bb1"",
      ""name"": ""MCP Server Trigger"",
      ""type"": ""@n8n/n8n-nodes-langchain.mcpTrigger"",
      ""position"": [
        80,
        -40
      ],
      ""webhookId"": ""c734cf98-3d5a-4cbd-af97-8ad2da760944"",
      ""parameters"": {
        ""path"": ""c734cf98-3d5a-4cbd-af97-8ad2da760944""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""174a13be-04f1-417c-8510-26798dae3447"",
      ""name"": ""When Executed by Another Workflow"",
      ""type"": ""n8n-nodes-base.executeWorkflowTrigger"",
      ""position"": [
        1060,
        220
      ],
      ""parameters"": {
        ""workflowInputs"": {
          ""values"": [
            {
              ""name"": ""operation""
            },
            {
              ""name"": ""startDate""
            },
            {
              ""name"": ""endDate""
            },
            {
              ""name"": ""eventId""
            },
            {
              ""name"": ""timeZone""
            }
          ]
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""f74799f0-67b4-4247-905c-46adb1be4739"",
      ""name"": ""Operation"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        1460,
        180
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""outputKey"": ""getEvent"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""81b134bc-d671-4493-b3ad-8df9be3f49a6"",
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.operation }}"",
                    ""rightValue"": ""getEvent""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""deleteEvent"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""8d57914f-6587-4fb3-88e0-aa1de6ba56c1"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.operation }}"",
                    ""rightValue"": ""deleteEvent""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""createEvent"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""7c38f238-213a-46ec-aefe-22e0bcb8dffc"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.operation }}"",
                    ""rightValue"": ""createEvent""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""updateEvent"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""ee9b6783-a0f2-4848-9166-aba6645c1ebc"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.operation }}"",
                    ""rightValue"": ""updateEvent""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""getEventData"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""9ea6980d-a7be-4dec-8ddf-d2fcffb00af1"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""getEventData"",
                    ""rightValue"": ""getEventData""
                  }
                ]
              },
              ""renameOutput"": true
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.2
    },
    {
      ""id"": ""b8007362-0d41-4875-872b-877f33b74bf8"",
      ""name"": ""validate_busy_time"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        -80,
        240
      ],
      ""parameters"": {
        ""name"": ""validate_busy_time"",
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""aiKrExd0rAxJO6xi"",
          ""cachedResultName"": ""MCP_google_calendar""
        },
        ""description"": ""Call this tool to validate if the gap of time is already busy. it is useful to validate before creating a new event"",
        ""workflowInputs"": {
          ""value"": {
            ""endDate"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('endDate', ``, 'string') }}"",
            ""eventId"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('eventId', ``, 'string') }}"",
            ""timeZone"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('timeZone', ``, 'string') }}"",
            ""operation"": ""=getEvent"",
            ""startDate"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('startDate', ``, 'string') }}""
          },
          ""schema"": [
            {
              ""id"": ""operation"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""operation"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""startDate"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""startDate"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""endDate"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""endDate"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""eventId"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""eventId"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""timeZone"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""timeZone"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""51f39673-4657-401b-b1bf-34e816318acf"",
      ""name"": ""create_new_event"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        80,
        240
      ],
      ""parameters"": {
        ""name"": ""create_new_event"",
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""aiKrExd0rAxJO6xi"",
          ""cachedResultName"": ""MCP_google_calendar""
        },
        ""description"": ""Use this tool to create a new event; always validate if the gap of time is available before creating a new event "",
        ""workflowInputs"": {
          ""value"": {
            ""endDate"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('endDate', ``, 'string') }}"",
            ""eventId"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('eventId', ``, 'string') }}"",
            ""timeZone"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('timeZone', ``, 'string') }}"",
            ""operation"": ""createEvent"",
            ""startDate"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('startDate', ``, 'string') }}""
          },
          ""schema"": [
            {
              ""id"": ""operation"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""operation"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""startDate"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""startDate"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""endDate"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""endDate"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""eventId"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""eventId"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""timeZone"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""timeZone"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""3587c022-2f57-4bf6-8066-c292bcab5399"",
      ""name"": ""delete_event"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        360,
        240
      ],
      ""parameters"": {
        ""name"": ""delete_event"",
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""aiKrExd0rAxJO6xi"",
          ""cachedResultName"": ""MCP_google_calendar""
        },
        ""description"": ""Call this tool to delete a event, to delete a event you need the even id. it is required"",
        ""workflowInputs"": {
          ""value"": {
            ""endDate"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('endDate', ``, 'string') }}"",
            ""eventId"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('eventId', ``, 'string') }}"",
            ""timeZone"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('timeZone', ``, 'string') }}"",
            ""operation"": ""deleteEvent"",
            ""startDate"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('startDate', ``, 'string') }}""
          },
          ""schema"": [
            {
              ""id"": ""operation"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""operation"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""startDate"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""startDate"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""endDate"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""endDate"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""eventId"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""eventId"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""timeZone"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""timeZone"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""1da9a808-b478-47cd-b129-2a11d83d8735"",
      ""name"": ""update_event"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        220,
        240
      ],
      ""parameters"": {
        ""name"": ""update_event"",
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""aiKrExd0rAxJO6xi"",
          ""cachedResultName"": ""MCP_google_calendar""
        },
        ""description"": ""Call this tool to update the event name, startDate or endDate. Validate with validate_busy_time before any action"",
        ""workflowInputs"": {
          ""value"": {
            ""endDate"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('endDate', ``, 'string') }}"",
            ""eventId"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('eventId', ``, 'string') }}"",
            ""timeZone"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('timeZone', ``, 'string') }}"",
            ""operation"": ""updateEvent"",
            ""startDate"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('startDate', ``, 'string') }}""
          },
          ""schema"": [
            {
              ""id"": ""operation"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""operation"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""startDate"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""startDate"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""endDate"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""endDate"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""eventId"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""eventId"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""timeZone"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""timeZone"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""f3105e5b-0dec-44d0-ba5c-5bd91b0887d1"",
      ""name"": ""validate_availability_event"",
      ""type"": ""n8n-nodes-base.googleCalendar"",
      ""position"": [
        2100,
        -220
      ],
      ""parameters"": {
        ""options"": {},
        ""timeMax"": ""={{ $json.endDate }}"",
        ""timeMin"": ""={{ $json.startDate }}"",
        ""calendar"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""your-calendar@gmail.com"",
          ""cachedResultName"": ""your-calendar@gmail.com""
        },
        ""resource"": ""calendar""
      },
      ""credentials"": {
        ""googleCalendarOAuth2Api"": {
          ""id"": ""google-api-id"",
          ""name"": ""Google Calendar account""
        }
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""43f2125b-85ea-455d-92ed-b84d0eb4a566"",
      ""name"": ""check_availability_to_create"",
      ""type"": ""n8n-nodes-base.googleCalendar"",
      ""position"": [
        1780,
        220
      ],
      ""parameters"": {
        ""options"": {},
        ""timeMax"": ""={{ $('map_data').item.json.endDate }}"",
        ""timeMin"": ""={{ $('map_data').item.json.startDate }}"",
        ""calendar"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""your-calendar@gmail.com"",
          ""cachedResultName"": ""your-calendar@gmail.com""
        },
        ""resource"": ""calendar""
      },
      ""credentials"": {
        ""googleCalendarOAuth2Api"": {
          ""id"": ""google-api-id"",
          ""name"": ""Google Calendar account""
        }
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""7f2e1fef-79cb-4728-aa63-1afe038598ab"",
      ""name"": ""If"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        2000,
        220
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""4ee8a84d-c48a-416f-aa31-0633ee59124b"",
              ""operator"": {
                ""type"": ""boolean"",
                ""operation"": ""true"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.available }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""b2523fe9-526b-4617-b404-59a0b0e6d0e0"",
      ""name"": ""Stop and Error"",
      ""type"": ""n8n-nodes-base.stopAndError"",
      ""position"": [
        2220,
        320
      ],
      ""parameters"": {
        ""errorMessage"": ""The time you are trying to create the event is busy""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c72026c4-820d-4be0-9bbd-37b9ec6d2bf1"",
      ""name"": ""create_event"",
      ""type"": ""n8n-nodes-base.googleCalendar"",
      ""position"": [
        2220,
        160
      ],
      ""parameters"": {
        ""end"": ""={{ $('map_data').item.json.endDate }}"",
        ""start"": ""={{ $('map_data').item.json.startDate }}"",
        ""calendar"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""your-calendar@gmail.com"",
          ""cachedResultName"": ""your-calendar@gmail.com""
        },
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""googleCalendarOAuth2Api"": {
          ""id"": ""google-api-id"",
          ""name"": ""Google Calendar account""
        }
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""61f84fdb-768e-4b5f-9df9-21316dfa7678"",
      ""name"": ""delete_event1"",
      ""type"": ""n8n-nodes-base.googleCalendar"",
      ""position"": [
        2120,
        -20
      ],
      ""parameters"": {
        ""eventId"": ""={{ $('map_data').item.json.eventId }}"",
        ""options"": {},
        ""calendar"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""your-calendar@gmail.com"",
          ""cachedResultName"": ""your-calendar@gmail.com""
        },
        ""operation"": ""delete""
      },
      ""credentials"": {
        ""googleCalendarOAuth2Api"": {
          ""id"": ""google-api-id"",
          ""name"": ""Google Calendar account""
        }
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""2544e1e6-e620-4794-b1d4-898b2e9722ad"",
      ""name"": ""Edit Fields"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        2320,
        -220
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""973dfb96-eeda-45be-bc93-668c9118677f"",
              ""name"": ""available"",
              ""type"": ""boolean"",
              ""value"": ""={{ $json.available }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""966dc7bb-b2c8-40b1-95d9-ad10b232d1b2"",
      ""name"": ""get_event_in_time_gap"",
      ""type"": ""n8n-nodes-base.googleCalendar"",
      ""position"": [
        1860,
        700
      ],
      ""parameters"": {
        ""options"": {},
        ""timeMax"": ""={{ $('map_data').item.json.endDate }}"",
        ""timeMin"": ""={{ $('map_data').item.json.startDate }}"",
        ""calendar"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""your-calendar@gmail.com"",
          ""cachedResultName"": ""your-calendar@gmail.com""
        },
        ""operation"": ""getAll""
      },
      ""credentials"": {
        ""googleCalendarOAuth2Api"": {
          ""id"": ""google-api-id"",
          ""name"": ""Google Calendar account""
        }
      },
      ""typeVersion"": 1.3,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""7010b476-f500-4891-a795-30c75f0f077c"",
      ""name"": ""update_calendar"",
      ""type"": ""n8n-nodes-base.googleCalendar"",
      ""position"": [
        1860,
        480
      ],
      ""parameters"": {
        ""eventId"": ""={{ $json.eventId }}"",
        ""calendar"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""your-calendar@gmail.com"",
          ""cachedResultName"": ""your-calendar@gmail.com""
        },
        ""operation"": ""update"",
        ""updateFields"": {
          ""end"": ""={{ $json.endDate }}"",
          ""start"": ""={{ $json.startDate }}""
        }
      },
      ""credentials"": {
        ""googleCalendarOAuth2Api"": {
          ""id"": ""google-api-id"",
          ""name"": ""Google Calendar account""
        }
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""933163a6-5597-48da-95de-7067dd55ad84"",
      ""name"": ""get_events_in_gap_time"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        520,
        240
      ],
      ""parameters"": {
        ""name"": ""get_events_in_gap_time"",
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""aiKrExd0rAxJO6xi"",
          ""cachedResultName"": ""MCP_google_calendar""
        },
        ""description"": ""Use this tool to get event data in a gap of time. but if you have just validate the availibity of the time use \""validate_busy_time\"" tool this is tool is to get data"",
        ""workflowInputs"": {
          ""value"": {
            ""endDate"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('endDate', ``, 'string') }}"",
            ""eventId"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('eventId', ``, 'string') }}"",
            ""timeZone"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('timeZone', ``, 'string') }}"",
            ""operation"": ""getEventData"",
            ""startDate"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('startDate', ``, 'string') }}""
          },
          ""schema"": [
            {
              ""id"": ""operation"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""operation"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""startDate"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""startDate"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""endDate"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""endDate"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""eventId"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""eventId"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""timeZone"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""timeZone"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""01c9435e-0258-4048-a3ad-cf84424fad6c"",
      ""name"": ""map_data"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1240,
        220
      ],
      ""parameters"": {
        ""mode"": ""raw"",
        ""options"": {},
        ""jsonOutput"": ""={\n  \""operation\"": \""{{ $json.operation }}\"",\n  \""startDate\"": \""{{ DateTime.fromISO($json.startDate).setZone($json.timeZone).toISO() }}\"",\n  \""endDate\"": \""{{ DateTime.fromISO($json.endDate).setZone($json.timeZone).toISO() }}\"",\n  \""eventId\"": \""{{ $json.eventId }}\"",\n  \""timeZone\"": \""{{ $json.timeZone }}\""\n}\n""
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""0e3a8817-7485-499c-9692-7b920bb34b3f"",
      ""name"": ""response_data_get_data"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        2080,
        700
      ],
      ""parameters"": {
        ""mode"": ""raw"",
        ""options"": {},
        ""jsonOutput"": ""={\n  \""isAvailableTime\"":{{$json.values().length === 0}},\n\""eventData\"":{\nid:\""{{ $json.id }}\""\n}\n}\n""
      },
      ""typeVersion"": 3.4
    }
  ],
  ""active"": true,
  ""pinData"": {
    ""When Executed by Another Workflow"": [
      {
        ""json"": {
          ""endDate"": ""2025-05-17T20:00:00Z"",
          ""eventId"": null,
          ""timeZone"": ""America/Argentina/Buenos_Aires"",
          ""operation"": ""getEventData"",
          ""startDate"": ""2025-05-17T19:00:00Z""
        }
      }
    ]
  },
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""fbb67adf-7d52-4b42-8b61-a3c01470a1f9"",
  ""connections"": {
    ""If"": {
      ""main"": [
        [
          {
            ""node"": ""create_event"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Stop and Error"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""map_data"": {
      ""main"": [
        [
          {
            ""node"": ""Operation"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Operation"": {
      ""main"": [
        [
          {
            ""node"": ""validate_availability_event"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""delete_event1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""check_availability_to_create"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""update_calendar"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""get_event_in_time_gap"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""delete_event"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""MCP Server Trigger"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""update_event"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""MCP Server Trigger"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""create_new_event"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""MCP Server Trigger"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""validate_busy_time"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""MCP Server Trigger"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""get_event_in_time_gap"": {
      ""main"": [
        [
          {
            ""node"": ""response_data_get_data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""get_events_in_gap_time"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""MCP Server Trigger"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""validate_availability_event"": {
      ""main"": [
        [
          {
            ""node"": ""Edit Fields"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""check_availability_to_create"": {
      ""main"": [
        [
          {
            ""node"": ""If"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When Executed by Another Workflow"": {
      ""main"": [
        [
          {
            ""node"": ""map_data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Dynamic AI Model Router for Query Optimization with OpenRouter,"{
  ""id"": ""uNLWQ7BSozpoehpU"",
  ""meta"": {
    ""instanceId"": ""a4bfc93e975ca233ac45ed7c9227d84cf5a2329310525917adaf3312e10d5462"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Automated AI Routing with OpenRouter"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""25903a04-24d2-41f9-bf34-5d6234e642e5"",
      ""name"": ""When chat message received"",
      ""type"": ""@n8n/n8n-nodes-langchain.chatTrigger"",
      ""position"": [
        -180,
        -180
      ],
      ""webhookId"": ""a0032740-26d8-491b-93f9-2250906d0e17"",
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""fabffdee-3c1e-47db-a4e9-f6473a6e9257"",
      ""name"": ""OpenRouter Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenRouter"",
      ""position"": [
        0,
        40
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""credentials"": {
        ""openRouterApi"": {
          ""id"": ""pb06rfB4xmxzVe3Q"",
          ""name"": ""OpenRouter""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c53fe672-92cb-4d88-b4f6-f413fb00ad6a"",
      ""name"": ""Structured Output Parser"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserStructured"",
      ""position"": [
        340,
        280
      ],
      ""parameters"": {
        ""schemaType"": ""manual"",
        ""inputSchema"": ""{\n\t\""type\"": \""object\"",\n\t\""properties\"": {\n\t\t\""prompt\"": {\n\t\t\t\""type\"": \""string\""\n\t\t},\n\t\t\""model\"": {\n\t\t\t\""type\"": \""string\""\n\t\t}\n\t}\n}""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""d60a9d61-c611-4813-bf85-e8f8faaa21b6"",
      ""name"": ""OpenRouter Chat Model1"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenRouter"",
      ""position"": [
        420,
        40
      ],
      ""parameters"": {
        ""model"": ""={{ $json.output.model }}"",
        ""options"": {}
      },
      ""credentials"": {
        ""openRouterApi"": {
          ""id"": ""pb06rfB4xmxzVe3Q"",
          ""name"": ""OpenRouter""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ef9ceacb-55e4-4795-aa18-976997ec3717"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -180,
        -420
      ],
      ""parameters"": {
        ""width"": 840,
        ""height"": 180,
        ""content"": ""## Dynamic Model Selector for Optimal AI Responses\n\nThe **Agent Decisioner** is a dynamic, AI-powered routing system that automatically selects the most appropriate large language model (LLM) to respond to a user's query based on the query’s content and purpose.\n\nThis workflow ensures **dynamic, optimized AI responses** by intelligently routing queries to the best-suited model.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4d688ad7-b463-4e72-9b79-4b9142f022d2"",
      ""name"": ""Routing Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        40,
        -180
      ],
      ""parameters"": {
        ""options"": {
          ""systemMessage"": ""=You are a **Routing Agent**.\n\nYour task is to analyze user queries and determine the most appropriate model to handle each specific use case.\n\n## Available Models\n\nYou have access to the following models:\n\n1. **perplexity/sonar**\n2. **openai/gpt-4o-mini**\n3. **anthropic/claude-3.7-sonnet**\n4. **meta-llama/llama-3-70b-instruct**\n5. **google/gemini-2.5-pro-preview**\n6. **qwen/qwen-qwq-32b**\n7. **openai/codex-mini**\n8. **openai/o1-pro**\n\n## Model Strengths\n\n### 1. perplexity/sonar\n- Built-in web search capability\n- Provides citations and customizable sources\n- Ideal for retrieving live, up-to-date information from the web\n\n### 2. openai/gpt-4o-mini\n- Cost-efficient language model optimized for advanced reasoning tasks\n- Excels in science and mathematics\n- Best suited for problems requiring careful, well-thought-out responses involving multiple variables or connections\n\n### 3. anthropic/claude-3.7-sonnet\n- High proficiency in coding tasks, scoring ~94% on SWE-Bench Verified\n- Enhances data science expertise by navigating unstructured data and utilizing multiple tools for insights\n- Handles very long documents and maintains coherence over extended conversations or analyses\n- Performs well in creative writing tasks such as storytelling, dialogue generation, and summarization\n- Tends to produce responses that are more aligned with safety and ethical guidelines\n\n### 4. meta-llama/llama-3-70b-instruct\n- Strong performance in coding and reasoning tasks\n- Suitable for complex programming and technical problem-solving\n- Supports long context windows, making it ideal for extended analyses\n\n### 5. google/gemini-2.5-pro-preview\n- Advanced multimodal capabilities, handling both text and images\n- Excels in tasks requiring integration of visual and textual information\n- Ideal for complex problem-solving involving diverse data types\n\n### 6. qwen/qwen-qwq-32b\n- Specialized in reasoning and problem-solving tasks\n- Effective in handling logical puzzles and complex analytical queries\n\n### 7. openai/codex-mini\n- Optimized for code generation and completion tasks\n- Suitable for lightweight coding tasks and quick code snippets\n\n### 8. openai/o1-pro\n- Designed for complex reasoning with enhanced computational resources\n- Performs well in STEM-related tasks, including physics, chemistry, and biology\n- Capable of handling large context windows, making it suitable for in-depth analyses\n\n## Output Format\n\nYour output must always be a valid JSON object in the following format:\n\n```json\n{\n  \""prompt\"": \""user query goes here\"",\n  \""model\"": \""selected-model-name\""\n}\n```\n\n- The **\""prompt\""** field should contain the exact query to be sent to the selected model.\n- The **\""model\""** field should contain the model name (one of: perplexity/sonar, openai/gpt-4o-mini, anthropic/claude-3.7-sonnet, meta-llama/llama-3-70b-instruct, google/gemini-2.5-pro-preview, qwen/qwen-qwq-32b, openai/codex-mini, openai/o1-pro).\n\n**Important:** Only return the JSON object. Do not include any explanations or additional text.""
        },
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""94c49c22-9697-4230-ba35-5159041cfdc7"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        400,
        -180
      ],
      ""parameters"": {
        ""text"": ""={{ $json.output.prompt }}"",
        ""options"": {},
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""54c4278e-c185-4ab4-b21e-d8e837b14818"",
      ""name"": ""Auto-fixing Output Parser"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserAutofixing"",
      ""position"": [
        140,
        60
      ],
      ""parameters"": {
        ""options"": {
          ""prompt"": ""Instructions:\n--------------\n{instructions}\n--------------\nCompletion:\n--------------\n{completion}\n--------------\n\nAbove, the Completion did not satisfy the constraints given in the Instructions.\nError:\n--------------\n{error}\n--------------\n\nPlease try again. Please only respond with an answer that satisfies the constraints laid out in the Instructions:""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""2813da6b-423b-41d6-8eb4-664f616ca8d5"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        140,
        220
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""TefveNaDaMERl1hY"",
          ""name"": ""OpenAi account (Eure)""
        }
      },
      ""typeVersion"": 1.2
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""bb8e8d46-ce32-49e0-a843-496c6e026902"",
  ""connections"": {
    ""Routing Agent"": {
      ""main"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Auto-fixing Output Parser"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenRouter Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Routing Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenRouter Chat Model1"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Structured Output Parser"": {
      ""ai_outputParser"": [
        [
          {
            ""node"": ""Auto-fixing Output Parser"",
            ""type"": ""ai_outputParser"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Auto-fixing Output Parser"": {
      ""ai_outputParser"": [
        [
          {
            ""node"": ""Routing Agent"",
            ""type"": ""ai_outputParser"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When chat message received"": {
      ""main"": [
        [
          {
            ""node"": ""Routing Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
AI Agent To Chat With Files In Supabase Storage and Google Drive,"{
  ""meta"": {
    ""instanceId"": ""6a2a7715680b8313f7cb4676321c5baa46680adfb913072f089f2766f42e43bd"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""003915bb-a2e9-42b0-b81f-5bb5bf0c8cb4"",
      ""name"": ""Get All files"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1180,
        1280
      ],
      ""parameters"": {
        ""url"": ""=https://<project_id>.supabase.co/storage/v1/object/list/private"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""prefix\"": \""\"",\n  \""limit\"": 100,\n  \""offset\"": 0,\n  \""sortBy\"": {\n    \""column\"": \""name\"",\n    \""order\"": \""asc\""\n  }\n}"",
        ""sendBody"": true,
        ""specifyBody"": ""json"",
        ""authentication"": ""predefinedCredentialType"",
        ""nodeCredentialType"": ""supabaseApi""
      },
      ""credentials"": {
        ""supabaseApi"": {
          ""id"": ""t8AQJzvZvrOMDLec"",
          ""name"": ""Supabase account info@ Demo""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""f46e056d-8311-4951-ad38-21759fabdaf7"",
      ""name"": ""Default Data Loader"",
      ""type"": ""@n8n/n8n-nodes-langchain.documentDefaultDataLoader"",
      ""position"": [
        3500,
        1820
      ],
      ""parameters"": {
        ""options"": {
          ""metadata"": {
            ""metadataValues"": [
              {
                ""name"": ""=file_id"",
                ""value"": ""={{ $json.id }}""
              }
            ]
          }
        },
        ""jsonData"": ""={{ $('Merge Text').item.json.text }}"",
        ""jsonMode"": ""expressionData""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3cfdcacb-d0ef-422b-9048-a64e5f0dac66"",
      ""name"": ""Recursive Character Text Splitter"",
      ""type"": ""@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"",
      ""position"": [
        3520,
        1960
      ],
      ""parameters"": {
        ""options"": {},
        ""chunkSize"": 500,
        ""chunkOverlap"": 200
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3056ea0a-b788-43c7-a070-f40bd1ad3356"",
      ""name"": ""Embeddings OpenAI"",
      ""type"": ""@n8n/n8n-nodes-langchain.embeddingsOpenAi"",
      ""position"": [
        3320,
        1800
      ],
      ""parameters"": {
        ""model"": ""text-embedding-3-small"",
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""fLfRtaXbR0EVD0pl"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e6ad8067-0468-440d-a322-2a3de8851431"",
      ""name"": ""Create File record2"",
      ""type"": ""n8n-nodes-base.supabase"",
      ""position"": [
        3260,
        1620
      ],
      ""parameters"": {
        ""tableId"": ""files"",
        ""fieldsUi"": {
          ""fieldValues"": [
            {
              ""fieldId"": ""name"",
              ""fieldValue"": ""={{ $('Loop Over Items').item.json.name }}""
            },
            {
              ""fieldId"": ""storage_id"",
              ""fieldValue"": ""={{ $('Loop Over Items').item.json.id }}""
            }
          ]
        }
      },
      ""credentials"": {
        ""supabaseApi"": {
          ""id"": ""t8AQJzvZvrOMDLec"",
          ""name"": ""Supabase account info@ Demo""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""53ac0d69-d935-48a0-8fb8-5cc8f591dbb8"",
      ""name"": ""If"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1500,
        1280
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""9b14e306-a04d-40f7-bc5b-b8eda8d8f7f2"",
              ""operator"": {
                ""type"": ""boolean"",
                ""operation"": ""true"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ \n    !$('Aggregate').item.json.data || \n    !Array.isArray($('Aggregate').item.json.data) || \n    !$('Aggregate').item.json.data.some(item => \n        item.storage_id === $('Loop Over Items').item.json.id \n    ) \n}}"",
              ""rightValue"": """"
            },
            {
              ""id"": ""c3c0af88-9aea-4539-8948-1b69e601c27c"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notEquals""
              },
              ""leftValue"": ""={{ $json.name }}"",
              ""rightValue"": "".emptyFolderPlaceholder""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""f57e857a-094f-470c-ad27-9fc29466ab0e"",
      ""name"": ""Get All Files"",
      ""type"": ""n8n-nodes-base.supabase"",
      ""position"": [
        800,
        1280
      ],
      ""parameters"": {
        ""tableId"": ""files"",
        ""operation"": ""getAll""
      },
      ""credentials"": {
        ""supabaseApi"": {
          ""id"": ""t8AQJzvZvrOMDLec"",
          ""name"": ""Supabase account info@ Demo""
        }
      },
      ""typeVersion"": 1,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""4484ca47-6879-43b7-8879-261f409014e1"",
      ""name"": ""Download"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1660,
        1280
      ],
      ""parameters"": {
        ""url"": ""=https://<project_id>.supabase.co/storage/v1/object/private/{{ $json.name }}"",
        ""options"": {},
        ""authentication"": ""predefinedCredentialType"",
        ""nodeCredentialType"": ""supabaseApi""
      },
      ""credentials"": {
        ""supabaseApi"": {
          ""id"": ""t8AQJzvZvrOMDLec"",
          ""name"": ""Supabase account info@ Demo""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""f81d2f91-d665-4217-8955-a308ef2b37be"",
      ""name"": ""Loop Over Items"",
      ""type"": ""n8n-nodes-base.splitInBatches"",
      ""position"": [
        1340,
        1280
      ],
      ""parameters"": {
        ""options"": {},
        ""batchSize"": ""=1""
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""8857a553-37aa-4ac2-ac4d-e5402849cb2e"",
      ""name"": ""When clicking ‘Test workflow’"",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""disabled"": true,
      ""position"": [
        620,
        1280
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""e967af7e-43bd-47cb-8b04-eb431a82c93b"",
      ""name"": ""Aggregate"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        1000,
        1280
      ],
      ""parameters"": {
        ""options"": {},
        ""aggregate"": ""aggregateAllItemData""
      },
      ""typeVersion"": 1,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""8abdb8f6-e31d-48cf-8189-831adf7d4889"",
      ""name"": ""When chat message received"",
      ""type"": ""@n8n/n8n-nodes-langchain.chatTrigger"",
      ""position"": [
        1420,
        300
      ],
      ""webhookId"": ""3c40d311-7996-4ed4-b2fa-c73bea5f4cf5"",
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""75cf7f9e-d8f6-4a7a-b464-d152fd025188"",
      ""name"": ""Insert into Supabase Vectorstore"",
      ""type"": ""@n8n/n8n-nodes-langchain.vectorStoreSupabase"",
      ""position"": [
        3420,
        1620
      ],
      ""parameters"": {
        ""mode"": ""insert"",
        ""options"": {
          ""queryName"": ""match_documents""
        },
        ""tableName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""documents"",
          ""cachedResultName"": ""documents""
        }
      },
      ""credentials"": {
        ""supabaseApi"": {
          ""id"": ""t8AQJzvZvrOMDLec"",
          ""name"": ""Supabase account info@ Demo""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b3ceb557-53c6-4d19-ac97-c999ba87c7f5"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1120,
        1160
      ],
      ""parameters"": {
        ""height"": 89.3775420487804,
        ""content"": ""### Replace Storage name, database ID and credentials.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a81fe332-86ea-46aa-b140-ee5745f0b0e0"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        760,
        1160
      ],
      ""parameters"": {
        ""height"": 80,
        ""content"": ""### Replace credentials.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""44070cd1-0f4d-48ea-8ce0-8d59f94133e7"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        3260,
        1500
      ],
      ""parameters"": {
        ""height"": 80,
        ""content"": ""### Replace credentials.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3fed931d-69de-4c1b-a951-5e49c683f551"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1620,
        1160
      ],
      ""parameters"": {
        ""height"": 89.3775420487804,
        ""content"": ""### Replace Storage name, database ID and credentials.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d462978c-7ea3-4b92-a940-64756377c461"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        3220,
        1940
      ],
      ""parameters"": {
        ""height"": 80,
        ""content"": ""### Replace credentials.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6f0a219d-4258-4982-b912-784a850ef308"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2080,
        800
      ],
      ""parameters"": {
        ""height"": 80,
        ""content"": ""### Replace credentials.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""469b3caf-c9a8-4f8b-a745-c672e2b1089f"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        560,
        40
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 636.2128494576581,
        ""height"": 497.1532689930921,
        ""content"": ""![5min Logo](https://cflobdhpqwnoisuctsoc.supabase.co/storage/v1/object/public/my_storage/banner.png)\n## AI Agent To Chat With Files In Supabase Storage\n**Made by [Mark Shcherbakov](https://www.linkedin.com/in/marklowcoding/) from community [5minAI](https://www.skool.com/5minai-2861)**\n\nManually retrieving and analyzing specific information from large document repositories is time-consuming and inefficient. This workflow automates the process by vectorizing documents and enabling AI-powered interactions, making it easy to query and retrieve context-based information from uploaded files.\n\nThe workflow integrates Supabase with an AI-powered chatbot to process, store, and query text and PDF files. The steps include:\n- Fetching and comparing files to avoid duplicate processing.\n- Handling file downloads and extracting content based on the file type.\n- Converting documents into vectorized data for contextual information retrieval.\n- Storing and querying vectorized data from a Supabase vector store.\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""cb6664f2-0a05-4abb-818d-d72536b57bac"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1360,
        40
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 1112,
        ""height"": 890,
        ""content"": ""## Scenario 2 - AI agent""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a825794d-e7f3-41ba-a113-8503ebaf2be7"",
      ""name"": ""Sticky Note10"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        540,
        1000
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 3285,
        ""height"": 1139,
        ""content"": ""## Scenario 1 - Flow for adding new files from Supabase storage""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1d44ef3b-b1d9-481c-8078-2f0d8d586247"",
      ""name"": ""AI Agent1"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        1960,
        260
      ],
      ""parameters"": {
        ""text"": ""={{ $('Merge').item.json.message }}"",
        ""options"": {
          ""systemMessage"": ""You are a helpful assistant.\n\nIMPORTANT Always use knowledge base to respond users."",
          ""passthroughBinaryImages"": false
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""d1da58a8-e6c0-4a6d-aa53-88c223a97f0a"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        1880,
        480
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""SphXAX7rlwRLkiox"",
          ""name"": ""Test club key""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""acb2de9b-a9fa-4934-9759-b84b067dc26a"",
      ""name"": ""Simple Memory"",
      ""type"": ""@n8n/n8n-nodes-langchain.memoryBufferWindow"",
      ""position"": [
        2020,
        480
      ],
      ""parameters"": {
        ""sessionKey"": ""={{ $('Merge').item.json.session_id }}"",
        ""sessionIdType"": ""customKey""
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""4d91a4e9-e381-485a-847e-50b5dcc43f6b"",
      ""name"": ""Embeddings OpenAI1"",
      ""type"": ""@n8n/n8n-nodes-langchain.embeddingsOpenAi"",
      ""position"": [
        2160,
        660
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""SphXAX7rlwRLkiox"",
          ""name"": ""Test club key""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""19b5a9a8-7407-4a1c-822f-3000b67da99b"",
      ""name"": ""Supabase Vector Store"",
      ""type"": ""@n8n/n8n-nodes-langchain.vectorStoreSupabase"",
      ""position"": [
        2160,
        500
      ],
      ""parameters"": {
        ""mode"": ""retrieve-as-tool"",
        ""options"": {},
        ""toolName"": ""knowledge_base"",
        ""tableName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""documents"",
          ""cachedResultName"": ""documents""
        },
        ""toolDescription"": ""Gather facts from knowledge base to respond user.""
      },
      ""credentials"": {
        ""supabaseApi"": {
          ""id"": ""t8AQJzvZvrOMDLec"",
          ""name"": ""Supabase account info@ Demo""
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""0b48a55c-9b47-4913-9aec-264d3932c533"",
      ""name"": ""File Created"",
      ""type"": ""n8n-nodes-base.googleDriveTrigger"",
      ""position"": [
        600,
        2480
      ],
      ""parameters"": {
        ""event"": ""fileCreated"",
        ""options"": {},
        ""pollTimes"": {
          ""item"": [
            {
              ""mode"": ""everyMinute""
            }
          ]
        },
        ""triggerOn"": ""specificFolder"",
        ""folderToWatch"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1rFIHlWMlbt0vAh1CWjcmNOmJYk_8jUIb"",
          ""cachedResultUrl"": ""https://drive.google.com/drive/folders/1rFIHlWMlbt0vAh1CWjcmNOmJYk_8jUIb"",
          ""cachedResultName"": ""Case - dentist""
        }
      },
      ""credentials"": {
        ""googleDriveOAuth2Api"": {
          ""id"": ""1Irxryx1yQ3upU2i"",
          ""name"": ""Google Drive account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""fd7a9260-7d85-4129-bf2d-f7700781091b"",
      ""name"": ""Download File"",
      ""type"": ""n8n-nodes-base.googleDrive"",
      ""position"": [
        1200,
        2580
      ],
      ""parameters"": {
        ""fileId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $('Set File ID').last().json.file_id }}""
        },
        ""options"": {
          ""googleFileConversion"": {
            ""conversion"": {
              ""docsToFormat"": ""application/pdf"",
              ""sheetsToFormat"": ""application/pdf"",
              ""slidesToFormat"": ""application/pdf"",
              ""drawingsToFormat"": ""application/pdf""
            }
          }
        },
        ""operation"": ""download""
      },
      ""credentials"": {
        ""googleDriveOAuth2Api"": {
          ""id"": ""1Irxryx1yQ3upU2i"",
          ""name"": ""Google Drive account""
        }
      },
      ""executeOnce"": true,
      ""typeVersion"": 3
    },
    {
      ""id"": ""e17a7bc1-6483-439b-acb0-2b13f66466e5"",
      ""name"": ""File Updated"",
      ""type"": ""n8n-nodes-base.googleDriveTrigger"",
      ""position"": [
        620,
        2660
      ],
      ""parameters"": {
        ""event"": ""fileUpdated"",
        ""options"": {},
        ""pollTimes"": {
          ""item"": [
            {
              ""mode"": ""everyMinute""
            }
          ]
        },
        ""triggerOn"": ""specificFolder"",
        ""folderToWatch"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1rFIHlWMlbt0vAh1CWjcmNOmJYk_8jUIb"",
          ""cachedResultUrl"": ""https://drive.google.com/drive/folders/1rFIHlWMlbt0vAh1CWjcmNOmJYk_8jUIb"",
          ""cachedResultName"": ""Case - dentist""
        }
      },
      ""credentials"": {
        ""googleDriveOAuth2Api"": {
          ""id"": ""1Irxryx1yQ3upU2i"",
          ""name"": ""Google Drive account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b0e5b639-cf0e-4289-8ce7-96e6fd1e831f"",
      ""name"": ""Delete Old Doc Rows"",
      ""type"": ""n8n-nodes-base.supabase"",
      ""position"": [
        1020,
        2580
      ],
      ""parameters"": {
        ""tableId"": ""documents"",
        ""operation"": ""delete"",
        ""filterType"": ""string"",
        ""filterString"": ""=metadata->>drive_file_id=like.*{{ $json.file_id }}*""
      },
      ""credentials"": {
        ""supabaseApi"": {
          ""id"": ""QBhcokohbJHfQZ9A"",
          ""name"": ""Supabase club""
        }
      },
      ""typeVersion"": 1,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""c583b665-b756-4b8c-8150-34f559df9007"",
      ""name"": ""Set File ID"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        860,
        2580
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""10646eae-ae46-4327-a4dc-9987c2d76173"",
              ""name"": ""file_id"",
              ""type"": ""string"",
              ""value"": ""={{ $json.id }}""
            },
            {
              ""id"": ""7d0b3a5e-9dfa-46d3-bf16-f6fc1d44f242"",
              ""name"": ""extension"",
              ""type"": ""string"",
              ""value"": ""={{ $json.fileExtension }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""558473fe-cc06-41d8-ab06-cc6c03a8c40e"",
      ""name"": ""Create File record1"",
      ""type"": ""n8n-nodes-base.supabase"",
      ""position"": [
        2380,
        2780
      ],
      ""parameters"": {
        ""tableId"": ""files"",
        ""fieldsUi"": {
          ""fieldValues"": [
            {
              ""fieldId"": ""name"",
              ""fieldValue"": ""={{ $('Download File').item.binary.data.fileName }}""
            },
            {
              ""fieldId"": ""google_drive_id"",
              ""fieldValue"": ""={{ $('Set File ID').item.json.file_id }}""
            }
          ]
        }
      },
      ""credentials"": {
        ""supabaseApi"": {
          ""id"": ""t8AQJzvZvrOMDLec"",
          ""name"": ""Supabase account info@ Demo""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""87e490c4-f9cb-4821-a234-a9c9d2c93836"",
      ""name"": ""Default Data Loader1"",
      ""type"": ""@n8n/n8n-nodes-langchain.documentDefaultDataLoader"",
      ""position"": [
        2640,
        2980
      ],
      ""parameters"": {
        ""options"": {
          ""metadata"": {
            ""metadataValues"": [
              {
                ""name"": ""=file_id"",
                ""value"": ""={{ $json.id }}""
              },
              {
                ""name"": ""drive_file_id"",
                ""value"": ""={{ $('Set File ID').item.json.file_id }}""
              }
            ]
          }
        },
        ""jsonData"": ""={{ $('Set Text3').item.json.text }}"",
        ""jsonMode"": ""expressionData""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""373efd3c-f7dd-4efc-a268-ed05d8b2e309"",
      ""name"": ""Embeddings OpenAI3"",
      ""type"": ""@n8n/n8n-nodes-langchain.embeddingsOpenAi"",
      ""position"": [
        2480,
        2960
      ],
      ""parameters"": {
        ""model"": ""text-embedding-3-small"",
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""fLfRtaXbR0EVD0pl"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""17daf2dd-1d4c-498e-8404-7cc371f81894"",
      ""name"": ""Recursive Character Text Splitter1"",
      ""type"": ""@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"",
      ""position"": [
        2660,
        3180
      ],
      ""parameters"": {
        ""options"": {},
        ""chunkSize"": 500,
        ""chunkOverlap"": 200
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""afcfc728-9798-4703-998d-edc535eb859e"",
      ""name"": ""Insert into Supabase Vectorstore1"",
      ""type"": ""@n8n/n8n-nodes-langchain.vectorStoreSupabase"",
      ""position"": [
        2580,
        2780
      ],
      ""parameters"": {
        ""mode"": ""insert"",
        ""options"": {
          ""queryName"": ""match_documents""
        },
        ""tableName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""documents"",
          ""cachedResultName"": ""documents""
        }
      },
      ""credentials"": {
        ""supabaseApi"": {
          ""id"": ""t8AQJzvZvrOMDLec"",
          ""name"": ""Supabase account info@ Demo""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""78e7d15c-5797-488c-b869-bb887878e930"",
      ""name"": ""Sticky Note11"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        540,
        2240
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 2465,
        ""height"": 1139,
        ""content"": ""## Scenario 3 - Flow for adding new files from Supabase storage""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""f572511d-6374-4b0b-8907-9f6c82179feb"",
      ""name"": ""Edit Fields"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1600,
        300
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""ad3055e5-41eb-4e00-9f55-dbcde47a03c7"",
              ""name"": ""session_id"",
              ""type"": ""string"",
              ""value"": ""={{   $('When chat message received').item.json.sessionId }}""
            },
            {
              ""id"": ""56126e31-5fe0-4a9c-b9c9-d62fcb8bd469"",
              ""name"": ""message"",
              ""type"": ""string"",
              ""value"": ""={{   $('When chat message received').item.json.chatInput }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""be2de117-410c-49c2-b95c-45b4a0e036d6"",
      ""name"": ""Edit Fields1"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1600,
        140
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""5e5fbeb0-d866-40fe-8c1b-66b946bd1cec"",
              ""name"": ""session_id"",
              ""type"": ""string"",
              ""value"": ""={{ $('Webhook').item.json.body.session_id }}""
            },
            {
              ""id"": ""28ec27a5-f814-435c-a5bf-df92160eee3e"",
              ""name"": ""message"",
              ""type"": ""string"",
              ""value"": ""={{ $('Webhook').item.json.body.message }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""ce8790a1-55a5-4583-8301-03bbde363ee2"",
      ""name"": ""Upload File"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        2040,
        1280
      ],
      ""parameters"": {
        ""url"": ""https://api.cloud.llamaindex.ai/api/parsing/upload"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""contentType"": ""multipart-form-data"",
        ""sendHeaders"": true,
        ""authentication"": ""genericCredentialType"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""file"",
              ""parameterType"": ""formBinaryData"",
              ""inputDataFieldName"": ""data""
            },
            {
              ""name"": ""do_not_cache"",
              ""value"": ""=true""
            }
          ]
        },
        ""genericAuthType"": ""httpHeaderAuth"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""accept"",
              ""value"": ""application/json""
            }
          ]
        }
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""AkhbJSroTy15x6o9"",
          ""name"": ""Llama parse bqman""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""10b8cf52-4301-40a2-a27d-9952f1d3bcda"",
      ""name"": ""Get Processing Status"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""onError"": ""continueErrorOutput"",
      ""position"": [
        2240,
        1280
      ],
      ""parameters"": {
        ""url"": ""=https://api.cloud.llamaindex.ai/api/parsing/job/{{ $json.id }}"",
        ""options"": {},
        ""sendHeaders"": true,
        ""authentication"": ""genericCredentialType"",
        ""genericAuthType"": ""httpHeaderAuth"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""accept"",
              ""value"": ""application/json""
            }
          ]
        }
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""AkhbJSroTy15x6o9"",
          ""name"": ""Llama parse bqman""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""c0fc7854-1d04-492d-9541-389356333efd"",
      ""name"": ""Wait to stay within service limits"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        2660,
        1040
      ],
      ""webhookId"": ""17a96ed6-b5ff-47bb-a8a2-39c1eb40185a"",
      ""parameters"": {
        ""amount"": 7
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""971b40d2-a320-4815-9ccc-27de52b58bbd"",
      ""name"": ""Is Job Ready?"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        2420,
        1280
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""outputKey"": ""PENDING"",
              ""conditions"": {
                ""options"": {
                  ""version"": 1,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""0fa97d86-432a-409a-917e-5f1a002b1ab9"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.status }}"",
                    ""rightValue"": ""PENDING""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""ERROR"",
              ""conditions"": {
                ""options"": {
                  ""version"": 1,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""e6058aa0-a3e2-4ce3-9bed-6ff41a5be052"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.status }}"",
                    ""rightValue"": ""ERROR""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""CANCELED"",
              ""conditions"": {
                ""options"": {
                  ""version"": 1,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""ceb6338f-4261-40ac-be11-91f61c7302ba"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.status }}"",
                    ""rightValue"": ""CANCELED""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""SUCCESS"",
              ""conditions"": {
                ""options"": {
                  ""version"": 1,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""300fce8c-b19a-4d0c-86e8-f62853c70ce2"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.status }}"",
                    ""rightValue"": ""SUCCESS""
                  }
                ]
              },
              ""renameOutput"": true
            }
          ]
        },
        ""options"": {
          ""allMatchingOutputs"": true
        }
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""c8f65cc5-e67a-47ae-b43a-fc065fb4900e"",
      ""name"": ""Stop and Error"",
      ""type"": ""n8n-nodes-base.stopAndError"",
      ""position"": [
        2660,
        1300
      ],
      ""parameters"": {
        ""errorMessage"": ""Problem with Llamaparser. Error during parsing.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""90658f0a-7236-493d-8dd0-fdad64196753"",
      ""name"": ""Get Parsed Data"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        2660,
        1480
      ],
      ""parameters"": {
        ""url"": ""=https://api.cloud.llamaindex.ai/api/parsing/job/{{ $json.id }}/result/markdown"",
        ""options"": {
          ""redirect"": {
            ""redirect"": {}
          }
        },
        ""authentication"": ""genericCredentialType"",
        ""genericAuthType"": ""httpHeaderAuth""
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""AkhbJSroTy15x6o9"",
          ""name"": ""Llama parse bqman""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""810aad96-7677-4c27-b3b2-25106b70083a"",
      ""name"": ""Sticky Note12"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2060,
        1460
      ],
      ""parameters"": {
        ""width"": 280,
        ""height"": 80,
        ""content"": ""### Add Llamaparse Header auth\nAuthorization: Bearer <api_key>""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a0fd62b8-219e-4eb7-b274-1344b0042fac"",
      ""name"": ""Merge"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        1800,
        260
      ],
      ""parameters"": {},
      ""typeVersion"": 3.1
    },
    {
      ""id"": ""e5356266-5e4a-41a2-8151-95f994435560"",
      ""name"": ""If1"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1820,
        1280
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""f05d708d-f36e-4c6d-8753-81a61ae42546"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notExists"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.data }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""c04fa3f9-74c6-4c7c-ae2a-46a797db0e55"",
      ""name"": ""Set Text"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        2060,
        1600
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""e9bbecd9-3d40-4a6a-9401-94daab15cde0"",
              ""name"": ""text"",
              ""type"": ""string"",
              ""value"": ""={{ $('If1').item.json.data }}""
            }
          ]
        ",
"AI-Powered Knowledge Assistant using Google Sheets, OpenAI, and Supabase Vector Search","{
  ""meta"": {
    ""instanceId"": ""7d8066d2f56a07000fe7d753d3eeabf0ecdf68413466f30d10afe0906f058427"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""7f2ffaa3-9829-44fb-980b-373c09b8eaab"",
      ""name"": ""Github Trigger"",
      ""type"": ""n8n-nodes-base.githubTrigger"",
      ""position"": [
        -500,
        -180
      ],
      ""webhookId"": ""e2daea05-4e51-4dc2-8a4e-37e165a12bf1"",
      ""parameters"": {
        ""owner"": {
          ""__rl"": true,
          ""mode"": ""url"",
          ""value"": ""https://github.com/akhilv77""
        },
        ""events"": [
          ""push""
        ],
        ""options"": {},
        ""repository"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""relevance"",
          ""cachedResultUrl"": ""https://github.com/akhilv77/relevance"",
          ""cachedResultName"": ""relevance""
        }
      },
      ""credentials"": {
        ""githubApi"": {
          ""id"": ""PSygiwMjdjFDImYb"",
          ""name"": ""GitHub account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1d9880f7-d8b4-4405-873b-cf6c7dde9f58"",
      ""name"": ""HTTP Request"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -60,
        -180
      ],
      ""parameters"": {
        ""url"": ""=https://api.github.com/repos/{{ $json.body.repository.owner.name }}/{{ $json.body.repository.name }}/commits/{{ $json.body.head_commit.id }}"",
        ""options"": {},
        ""sendHeaders"": true,
        ""authentication"": ""predefinedCredentialType"",
        ""headerParameters"": {
          ""parameters"": [
            {}
          ]
        },
        ""nodeCredentialType"": ""githubOAuth2Api""
      },
      ""typeVersion"": 4.2,
      ""alwaysOutputData"": false
    },
    {
      ""id"": ""a2afa7ad-f3d6-4c33-bdda-f79a36a327e0"",
      ""name"": ""Gmail"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        976,
        -180
      ],
      ""webhookId"": ""88d96e90-68ae-4149-a8a3-1aeb12bca678"",
      ""parameters"": {
        ""sendTo"": ""akhilgadiraju@gmail.com"",
        ""message"": ""={{ $json.html }}"",
        ""options"": {},
        ""subject"": ""Code Review""
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""wqFUFuFpF5eRAp4E"",
          ""name"": ""Gmail OAuth2 - Akhil""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""aedd9de4-6069-4c1e-976d-2b234576b06a"",
      ""name"": ""Code"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        160,
        -180
      ],
      ""parameters"": {
        ""jsCode"": ""function formatPatch(patch) {\n  if (!patch) return '';\n\n  const lines = patch.split('\\n');\n  let formatted = '';\n\n  lines.forEach(line => {\n    let color = '#000000'; // default text\n    if (line.startsWith('+')) {\n      color = '#237804'; // green\n    } else if (line.startsWith('-')) {\n      color = '#cf1322'; // red\n    } else if (line.startsWith('@@')) {\n      color = '#595959'; // gray for hunk headers\n    }\n\n    formatted += `<div style=\""color: ${color}; font-family: monospace;\"">${line.replace(/</g, '&lt;').replace(/>/g, '&gt;')}</div>`;\n  });\n\n  return formatted;\n}\n\nfunction renderResponse(data, repoDetails) {\n  const items = Array.isArray(data) ? data : [data];\n\n  let html = ``;\n\n  // Repo Info\n  html += `\n    <div style=\""margin: 20px 10px; padding: 15px; background-color: #f0f9ff; border-left: 5px solid #1890ff; font-family: Arial, sans-serif;\"">\n      <h2 style=\""margin-top: 0; color: #0050b3;\"">🔗 Repository Info</h2>\n      <p style=\""margin: 5px 0;\""><strong>Name:</strong> <a href=\""${repoDetails.repo_url}\"" target=\""_blank\"" style=\""color: #007acc;\"">${repoDetails.name}</a></p>\n      <p style=\""margin: 5px 0;\""><strong>Owner:</strong> ${repoDetails.owner_name}</p>\n    </div>\n  `;\n\n  // Commit Info\n  html += `\n    <div style=\""margin: 20px 10px; padding: 15px; background-color: #e6f7ff; border-left: 5px solid #52c41a; font-family: Arial, sans-serif;\"">\n      <h3 style=\""margin-top: 0; color: #237804;\"">✅ Commit Info</h3>\n      <p style=\""margin: 5px 0;\""><strong>Author:</strong> ${repoDetails.author.name}</p>\n      <p style=\""margin: 5px 0;\""><strong>Email:</strong> ${repoDetails.author.email}</p>\n      <p style=\""margin: 5px 0;\""><strong>Date:</strong> ${repoDetails.author.date}</p>\n      <p style=\""margin: 5px 0;\""><strong>Message:</strong> ${repoDetails.commit_message}</p>\n    </div>\n  `;\n\n  // Changed files\n  items.forEach(item => {\n    html += `\n      <section style=\""border: 1px solid #d9d9d9; margin: 10px; padding: 15px; border-radius: 8px; background-color: #ffffff; font-family: Arial, sans-serif;\"">\n        <h3 style=\""margin-top: 0; color: #262626;\"">📄 File: ${item.filename}</h3>\n        <p><strong>Status:</strong> <span style=\""color: #fa8c16;\"">${item.status}</span></p>\n        <p><strong>SHA:</strong> <code style=\""background-color: #f5f5f5; padding: 2px 6px; border-radius: 3px;\"">${item.sha}</code></p>\n        <p>\n          <strong>➕ Additions:</strong> ${item.additions}, \n          <strong>➖ Deletions:</strong> ${item.deletions}, \n          <strong>✏️ Changes:</strong> ${item.changes}\n        </p>\n        <div style=\""background-color: #f6f6f6; padding: 10px; overflow-x: auto; border-radius: 5px; font-size: 13px; line-height: 1.4; border-left: 3px solid #d9d9d9;\"">\n          ${formatPatch(item.patch)}\n        </div>\n      </section>\n    `;\n  });\n\n  return [{\n    json: {\n      htmlOutput: html\n    }\n  }];\n}\n\n// Input parsing\nlet data = $input.first().json.files;\n\nlet repo_details = {\n  id: $('Github Trigger').first().json.body.repository.id,\n  name: $('Github Trigger').first().json.body.repository.name,\n  owner_name: $('Github Trigger').first().json.body.repository.owner.name,\n  repo_url: $('Github Trigger').first().json.body.repository.html_url,\n  author: $input.first().json.commit.author,\n  commit_message: $('Github Trigger').first().json.body.commits[0].message\n};\n\nreturn renderResponse(data, repo_details);\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""d790ebbb-64f2-4c1d-99d4-d44b778d7e58"",
      ""name"": ""Parser"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -280,
        -180
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""1fdc93f7-ebe7-4dd0-b3ec-caa079543c9e"",
              ""name"": ""body.repository.id"",
              ""type"": ""number"",
              ""value"": ""={{ $json.body.repository.id }}""
            },
            {
              ""id"": ""1ccd2e84-f8a4-4629-9a93-c345beb6c376"",
              ""name"": ""body.repository.name"",
              ""type"": ""string"",
              ""value"": ""={{ $json.body.repository.name }}""
            },
            {
              ""id"": ""73464699-e678-4852-a612-a82daa02f474"",
              ""name"": ""body.repository.owner.name"",
              ""type"": ""string"",
              ""value"": ""={{ $json.body.repository.owner.name }}""
            },
            {
              ""id"": ""4178463f-5bc1-4230-b152-908af1c3e8e9"",
              ""name"": ""body.head_commit.id"",
              ""type"": ""string"",
              ""value"": ""={{ $json.body.head_commit.id }}""
            },
            {
              ""id"": ""f47b9183-9c87-40f0-bdaa-ad5c367c552b"",
              ""name"": ""body.head_commit.added"",
              ""type"": ""array"",
              ""value"": ""={{ $json.body.head_commit.added }}""
            },
            {
              ""id"": ""e471d686-decd-40ea-9a23-f3afe5e1f184"",
              ""name"": ""body.head_commit.removed"",
              ""type"": ""array"",
              ""value"": ""={{ $json.body.head_commit.removed }}""
            },
            {
              ""id"": ""21c2ddf1-b38d-40e3-a899-8e761a096ff1"",
              ""name"": ""body.head_commit.modified"",
              ""type"": ""array"",
              ""value"": ""={{ $json.body.head_commit.modified }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""2000b06f-2065-43df-94dc-8bcc6d38f600"",
      ""name"": ""Output Parser"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        756,
        -180
      ],
      ""parameters"": {
        ""jsCode"": ""let output = $('Code').first().json.htmlOutput + $input.first().json.output;\nreturn [\n  {\n    json: {\n      html: output\n    }\n  }\n];""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""d1d76c26-9572-47d0-8d5e-dda2b178dfdf"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        380,
        -180
      ],
      ""parameters"": {
        ""text"": ""=You are an AI code reviewer. You are given an HTML snippet that includes commit metadata and code diffs.\n\nYour job is to analyze only the code changes in the diff and return a single HTML block with your observations.\n\nYour review must include:\n✅ Functional issues (e.g., syntax or logic errors)\n\n✅ Style or readability issues (e.g., naming, formatting)\n\n✅ Suggestions or improvements based on the type of file (e.g., HTML, JS, Python, etc.)\n\n✅ Spelling or grammar errors in comments, strings, and documentation\n\n✅ Security issues (e.g., unsanitized inputs, use of eval, secrets in code)\n\nFormat your response as ONE of the following HTML blocks:\n🟨 If any suggestions, improvements, or security concerns are found:\n\n<div style=\""margin: 20px 10px; padding: 15px; background-color: #fffbe6; border-left: 5px solid #faad14; font-family: Arial, sans-serif;\"">\n  <h3 style=\""margin-top: 0; color: #d48806;\"">🛠️ AI Code Review Summary</h3>\n  <ul style=\""margin: 0; padding-left: 20px;\"">\n    <li><strong>Summary:</strong> [Brief summary of what changed]</li>\n    <li><strong>Suggestion:</strong> [What can be improved: spelling, logic, naming, formatting, etc.]</li>\n    <li><strong>Security Review:</strong> [Any security concern, or write “No security issues found”]</li>\n  </ul>\n</div>\n✅ If there are no issues at all, return only this block:\n\n<div style=\""margin: 20px 10px; padding: 15px; background-color: #f6ffed; border-left: 5px solid #52c41a; font-family: Arial, sans-serif;\"">\n  <h3 style=\""margin-top: 0; color: #389e0d;\"">✅ Code Review Result</h3>\n  <p style=\""margin: 0;\"">No issues detected in the recent commit. All changes look good! 🎉</p>\n</div>\n⚠️ Important:\n\nDo not return any other explanation or markdown outside the single HTML block.\n\nUse context from the diff (file type, filenames, comments, content).\n\nMake sure the output is clean, actionable, and visually consistent.\n\n {{ $json.htmlOutput }}"",
        ""options"": {},
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""aa0d60c3-de08-4ede-8e83-a41fe5917489"",
      ""name"": ""Simple Memory"",
      ""type"": ""@n8n/n8n-nodes-langchain.memoryBufferWindow"",
      ""position"": [
        528,
        40
      ],
      ""parameters"": {
        ""sessionKey"": ""dsfklasdyerbmnabfdaghkjhgashgkjhgaksjdhfgaoaiwrqwkbclayga"",
        ""sessionIdType"": ""customKey""
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""c17c6c0d-ca9c-428e-a094-f4552d32e8d0"",
      ""name"": ""Groq Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGroq"",
      ""position"": [
        408,
        40
      ],
      ""parameters"": {
        ""model"": ""llama-3.1-8b-instant"",
        ""options"": {}
      },
      ""credentials"": {
        ""groqApi"": {
          ""id"": ""HJl5cdJzjhf727zW"",
          ""name"": ""Groq - Akhil""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""34f15fd6-354d-4890-a6a7-dfe5e5b9ab07"",
      ""name"": ""End Workflow"",
      ""type"": ""n8n-nodes-base.noOp"",
      ""position"": [
        1196,
        -180
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""151e34ff-2dfe-4421-9311-aa5155195d29"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -560,
        -300
      ],
      ""parameters"": {
        ""height"": 120,
        ""content"": ""## 👨‍💻 Github Trigger \ncustomize the fields inside the github trigger to listen to specific project""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""5bc8c0fe-b21a-47d9-a346-01ec2bd74c74"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        360,
        -300
      ],
      ""parameters"": {
        ""width"": 280,
        ""height"": 100,
        ""content"": ""## Customize AI Agent\nUpdate the prompt to focus on different review aspects.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""86c25475-ccd9-4556-ba60-e4647b0df269"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        320,
        160
      ],
      ""parameters"": {
        ""height"": 100,
        ""content"": ""## Customize LLM\nSwap for other supported LLMs if needed.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ad3cbae3-a1bc-4bad-a546-b0c100a8bc78"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        940,
        -20
      ],
      ""parameters"": {
        ""height"": 100,
        ""content"": ""## Email Update\nChange recipient or email styling.""
      },
      ""typeVersion"": 1
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""Code"": {
      ""main"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Gmail"": {
      ""main"": [
        [
          {
            ""node"": ""End Workflow"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Parser"": {
      ""main"": [
        [
          {
            ""node"": ""HTTP Request"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""AI Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Output Parser"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""HTTP Request"": {
      ""main"": [
        [
          {
            ""node"": ""Code"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Output Parser"": {
      ""main"": [
        [
          {
            ""node"": ""Gmail"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Simple Memory"": {
      ""ai_memory"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_memory"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Github Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""Parser"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Groq Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
"Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API","{
  ""id"": ""MfKB97VVSuXMo3Fm"",
  ""meta"": {
    ""instanceId"": ""1e003a7ea4715b6b35e9947791386a7d07edf3b5bf8d4c9b7ee4fdcbec0447d7""
  },
  ""name"": ""Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""4e9ed246-e4d7-4a9f-9bb1-cf74e16c3c6f"",
      ""name"": ""output1"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        3980,
        260
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""0107a930-1d7a-459c-a3ab-ceb28b43b8b8"",
              ""name"": ""video1"",
              ""type"": ""string"",
              ""value"": ""={{ $json.data.output.video_url }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""d696b66a-3726-4fe5-989e-9405b53c62e1"",
      ""name"": ""output2"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        4680,
        240
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""0107a930-1d7a-459c-a3ab-ceb28b43b8b8"",
              ""name"": ""video2"",
              ""type"": ""string"",
              ""value"": ""={{ $json.data.output.video_url }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""33e054fb-b747-4227-9884-f020e78ef5d5"",
      ""name"": ""Get Prompt"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        600,
        -80
      ],
      ""parameters"": {
        ""jsCode"": ""const content = $input.first().json.choices[0].message.content;\n\nconst prompts = JSON.parse(content);\n\nreturn { prompts };""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""af4dee94-7bb0-4cb9-9372-a2a1e96d0b19"",
      ""name"": ""Basic Params"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        220,
        -80
      ],
      ""parameters"": {
        ""mode"": ""raw"",
        ""options"": {},
        ""jsonOutput"": ""{\n  \""x-api-key\"":\""\"",\n  \""style\"": \""a children’s book cover, ages 6-10. --s 500 --sref 4028286908  --niji 6\"",\n  \""character\"": \""A gentle girl and a fluffy rabbit explore a sunlit forest together, playing by a sparkling stream\"",\n  \""situational_keywords\"": \""Butterflies flutter around them as golden sunlight filters through green leaves. Warm and peaceful atmosphere\""\n}\n""
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""c0890cdd-642a-48cd-b770-05fbae86abb4"",
      ""name"": ""Get Task ID of the First Image"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        380,
        140
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""d52d19d1-3a37-47bb-ad23-e809323c0c54"",
              ""name"": ""image1"",
              ""type"": ""string"",
              ""value"": ""={{ $('Midjourney Generator of the First Image').item.json.data.task_id }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""a2d1e854-53c3-4115-a206-f55c2cff54f1"",
      ""name"": ""Midjourney Generator of the First Image"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        160,
        140
      ],
      ""parameters"": {
        ""url"": ""https://api.piapi.ai/api/v1/task"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""model\"": \""midjourney\"",\n  \""task_type\"": \""imagine\"",\n  \""input\"": {\n    \""prompt\"": \""{{ $('Basic Params').item.json.character }},{{ $json.prompts.prompt1 }},{{ $('Basic Params').item.json.style }}\"",\n    \""aspect_ratio\"": \""2:3\"",\n    \""process_mode\"": \""turbo\"",\n    \""skip_prompt_check\"": false\n  }\n}"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').item.json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""ac342912-7d94-4019-a0c8-43b555d8566f"",
      ""name"": ""Wait for the First Image Generation"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        220,
        400
      ],
      ""webhookId"": ""af79053d-1291-4dd2-889e-4593dbbb2512"",
      ""parameters"": {},
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""cd774311-252a-43ec-aaea-28eb7d87ccc1"",
      ""name"": ""Verify the first image generation status"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        600,
        400
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""or"",
          ""conditions"": [
            {
              ""id"": ""e97a02cc-8d1d-4500-bce5-0a296c792b76"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""completed""
            },
            {
              ""id"": ""50b63a7a-52b5-4766-a859-96ac1ff949ec"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""failed""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""a4b8ce31-0ffd-4c9a-b102-162139fa553b"",
      ""name"": ""Get the First Image URL"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1000,
        200
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""d52d19d1-3a37-47bb-ad23-e809323c0c54"",
              ""name"": ""image_urls1"",
              ""type"": ""array"",
              ""value"": ""={{ $json.data.output.temporary_image_urls }}""
            },
            {
              ""id"": ""f519111b-5cb4-4562-bb8c-944a500e2df3"",
              ""name"": """",
              ""type"": ""string"",
              ""value"": """"
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""c28e46a7-999c-4a63-a3ae-aa813d7669cd"",
      ""name"": ""Midjourney Generator of the Second Image"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1220,
        200
      ],
      ""parameters"": {
        ""url"": ""https://api.piapi.ai/api/v1/task"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""model\"": \""midjourney\"",\n  \""task_type\"": \""imagine\"",\n  \""input\"": {\n    \""prompt\"": \""{{ $('Basic Params').item.json.character }},{{ $('Get Prompt').item.json.prompts.prompt2 }},{{ $('Basic Params').item.json.style }}\"",\n    \""aspect_ratio\"": \""2:3\"",\n    \""process_mode\"": \""turbo\"",\n    \""skip_prompt_check\"": false\n  }\n}"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').item.json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""529f0561-d29f-4df2-b61d-0720d33bf6b9"",
      ""name"": ""Midjourney Generator of the Third Image"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1920,
        220
      ],
      ""parameters"": {
        ""url"": ""https://api.piapi.ai/api/v1/task"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""model\"": \""midjourney\"",\n  \""task_type\"": \""imagine\"",\n  \""input\"": {\n    \""prompt\"": \""{{ $('Basic Params').item.json.character }},{{ $('Get Prompt').item.json.prompts.prompt3 }},{{ $('Basic Params').item.json.style }}\"",\n    \""aspect_ratio\"": \""2:3\"",\n    \""process_mode\"": \""turbo\"",\n    \""skip_prompt_check\"": false\n  }\n}"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').item.json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""a1a0b0f4-ac4e-4eca-9aa4-52f815731875"",
      ""name"": ""Get the First Image Generation Status"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        800,
        200
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""5f61ee56-4ebe-411f-95e6-b47d9741e7a2"",
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.data.status }}"",
                    ""rightValue"": ""completed""
                  }
                ]
              }
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.2
    },
    {
      ""id"": ""6f2b83a9-2557-461e-9d5b-9f96440182f0"",
      ""name"": ""Get the Second Image Generation Status"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        1480,
        220
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""5f61ee56-4ebe-411f-95e6-b47d9741e7a2"",
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.data.status }}"",
                    ""rightValue"": ""completed""
                  }
                ]
              }
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.2
    },
    {
      ""id"": ""10802f7a-d262-4f6f-aa48-0dce95c6fa41"",
      ""name"": ""Get the Third Image Generation Status"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        2380,
        220
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""5f61ee56-4ebe-411f-95e6-b47d9741e7a2"",
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.data.status }}"",
                    ""rightValue"": ""completed""
                  }
                ]
              }
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.2
    },
    {
      ""id"": ""c968472d-29e6-428d-99bc-1d3f79b3f0ac"",
      ""name"": ""Get the Second Image URL"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1720,
        220
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""d52d19d1-3a37-47bb-ad23-e809323c0c54"",
              ""name"": ""image_urls1"",
              ""type"": ""array"",
              ""value"": ""={{ $json.data.output.temporary_image_urls }}""
            },
            {
              ""id"": ""f519111b-5cb4-4562-bb8c-944a500e2df3"",
              ""name"": """",
              ""type"": ""string"",
              ""value"": """"
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""44fe09ee-b16a-4c00-b589-4634a5f795d2"",
      ""name"": ""Get the Third Image URL"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        2560,
        220
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""d52d19d1-3a37-47bb-ad23-e809323c0c54"",
              ""name"": ""image_urls1"",
              ""type"": ""array"",
              ""value"": ""={{ $json.data.output.temporary_image_urls }}""
            },
            {
              ""id"": ""f519111b-5cb4-4562-bb8c-944a500e2df3"",
              ""name"": """",
              ""type"": ""string"",
              ""value"": """"
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""472804c0-3f58-4ff3-aaca-b970bef425df"",
      ""name"": ""Wait for the Second Image Generation"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        900,
        440
      ],
      ""webhookId"": ""af79053d-1291-4dd2-889e-4593dbbb2512"",
      ""parameters"": {},
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""f4004d5a-fd04-4d1c-9376-026d12d690d5"",
      ""name"": ""Get Task of the First Image"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        420,
        400
      ],
      ""parameters"": {
        ""url"": ""=https://api.piapi.ai/api/v1/task/{{ $('Get Task ID of the First Image').item.json.image1 }}"",
        ""options"": {},
        ""sendHeaders"": true,
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').item.json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""ce09e4ec-97f7-4575-a133-a2c98a55b60e"",
      ""name"": ""Get Task of the Second Image"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1100,
        440
      ],
      ""parameters"": {
        ""url"": ""=https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}"",
        ""options"": {},
        ""sendHeaders"": true,
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').item.json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""2fa361f8-d580-4aa8-ae76-ca336669b0e1"",
      ""name"": ""Verify the second image generation status"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1300,
        440
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""or"",
          ""conditions"": [
            {
              ""id"": ""e97a02cc-8d1d-4500-bce5-0a296c792b76"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""completed""
            },
            {
              ""id"": ""50b63a7a-52b5-4766-a859-96ac1ff949ec"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""failed""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""a01d33a5-8419-4919-ae53-d90005244734"",
      ""name"": ""Verify the third image generation status"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        2100,
        460
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""or"",
          ""conditions"": [
            {
              ""id"": ""e97a02cc-8d1d-4500-bce5-0a296c792b76"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""completed""
            },
            {
              ""id"": ""50b63a7a-52b5-4766-a859-96ac1ff949ec"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""failed""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""e2ed41b1-daf4-4da2-a320-b2c10d11e6b1"",
      ""name"": ""Get Task of the Third Image"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1880,
        460
      ],
      ""parameters"": {
        ""url"": ""=https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}"",
        ""options"": {},
        ""sendHeaders"": true,
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').item.json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""1d9a3356-2f3e-4829-af75-cdb6f02d3375"",
      ""name"": ""Wait for the Third Image Generation"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        1680,
        460
      ],
      ""webhookId"": ""af79053d-1291-4dd2-889e-4593dbbb2512"",
      ""parameters"": {},
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""e7a4f69a-bf86-4469-8135-9fc5b18bf54d"",
      ""name"": ""Get three Image URLs"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        2740,
        220
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""d52d19d1-3a37-47bb-ad23-e809323c0c54"",
              ""name"": ""image_output1"",
              ""type"": ""string"",
              ""value"": ""={{ $('Get the First Image URL').item.json.image_urls1[0] }}""
            },
            {
              ""id"": ""333c0676-342a-40ea-bcc7-c13e9145818f"",
              ""name"": ""image_output2"",
              ""type"": ""string"",
              ""value"": ""={{ $('Get the Second Image URL').item.json.image_urls1[1] }}""
            },
            {
              ""id"": ""cc21180a-d88a-40ed-b5d1-0abcfd86bf86"",
              ""name"": ""image_output3"",
              ""type"": ""string"",
              ""value"": ""={{ $json.image_urls1[2] }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""83c07d12-31c5-4364-9fff-f82d30530925"",
      ""name"": ""Generate the First Video"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        2960,
        40
      ],
      ""parameters"": {
        ""url"": ""https://api.piapi.ai/api/v1/task"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n    \""model\"": \""kling\"",\n    \""task_type\"": \""video_generation\"",\n    \""input\"": {\n        \""version\"": \""1.6\"",\n        \""mode\"": \""pro\"",\n        \""image_url\"": \""{{ $json.image_output1 }}\"",\n        \""prompt\"": \""Natural swing\""\n    }\n} "",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').first().json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""5bd0161c-c217-4234-b36b-4826f2ffc0c9"",
      ""name"": ""Generate the Second Video"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        3160,
        40
      ],
      ""parameters"": {
        ""url"": ""https://api.piapi.ai/api/v1/task"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n    \""model\"": \""kling\"",\n    \""task_type\"": \""video_generation\"",\n    \""input\"": {\n        \""version\"": \""1.6\"",\n        \""mode\"": \""pro\"",\n        \""image_url\"": \""{{ $('Get three Image URLs').item.json.image_output2 }}\"",\n        \""prompt\"": \""Natural swing\""\n    }\n} "",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').first().json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""bf701aa9-ccdc-48d8-885f-193c2b1042f3"",
      ""name"": ""Generate the Third Video"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        3360,
        40
      ],
      ""parameters"": {
        ""url"": ""https://api.piapi.ai/api/v1/task"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n    \""model\"": \""kling\"",\n    \""task_type\"": \""video_generation\"",\n    \""input\"": {\n        \""version\"": \""1.6\"",\n        \""mode\"": \""pro\"",\n        \""image_url\"": \""{{ $('Get three Image URLs').item.json.image_output3 }}\"",\n        \""prompt\"": \""Natural swing\""\n    }\n} "",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').first().json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""ebf87efe-f5b6-4c96-8c12-5c7a37680851"",
      ""name"": ""Final Video Combination"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        5700,
        220
      ],
      ""parameters"": {
        ""url"": ""https://api.creatomate.com/v1/renders"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""template_id\"": \""c10c62b6-d515-4f36-a730-f4646d1b7ee2\"",\n\""modifications\"": {\n    \""Video-1.source\"": \""{{ $('output1').item.json.video1 }}\"",\n    \""Video-2.source\"": \""{{ $('output2').item.json.video2 }}\"",\n    \""Video-3.source\"": \""{{ $('Get the Third Video URL').item.json.video3 }}\"",\n    \""Text-1.text\"": \""{{ $('Get Prompt').item.json.prompts.title }}\""\n  }\n}"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""Authorization"",
              ""value"": ""Bearer ""
            },
            {
              ""name"": ""Content-Type"",
              ""value"": ""application/json""
            }
          ]
        }
      },
      ""executeOnce"": true,
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""d73069fa-f24d-4972-87cb-24c20112f251"",
      ""name"": ""Get the Third Video URL"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        5480,
        220
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""0107a930-1d7a-459c-a3ab-ceb28b43b8b8"",
              ""name"": ""video3"",
              ""type"": ""string"",
              ""value"": ""={{ $json.data.output.video_url }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""cb26d84e-55aa-4de1-819e-7704dcc2b45d"",
      ""name"": ""Get Video Task IDs"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        3560,
        40
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""d20160df-8be0-4bd0-8960-f49ebb596a64"",
              ""name"": ""video_task1"",
              ""type"": ""string"",
              ""value"": ""={{ $('Generate the First Video').first().json.data.task_id }}""
            },
            {
              ""id"": ""1be26a8b-1ba3-4de3-a458-778a33f99730"",
              ""name"": ""video_task2"",
              ""type"": ""string"",
              ""value"": ""={{ $('Generate the Second Video').first().json.data.task_id }}""
            },
            {
              ""id"": ""9718a718-8e19-4001-a0c9-2d35710d904e"",
              ""name"": ""video_task3"",
              ""type"": ""string"",
              ""value"": ""={{ $json.data.task_id }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""7b6def7e-2712-42c8-8e2b-ac5f70ef146f"",
      ""name"": ""Get the First Video Task"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        3380,
        420
      ],
      ""parameters"": {
        ""url"": ""=https://api.piapi.ai/api/v1/task/{{ $('Get Video Task IDs').item.json.video_task1 }}"",
        ""options"": {},
        ""sendHeaders"": true,
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').first().json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""8c5a2fe8-75b1-42b5-b861-db3e11ba03d7"",
      ""name"": ""Verify the First Video Generation"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        3580,
        420
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""or"",
          ""conditions"": [
            {
              ""id"": ""e97a02cc-8d1d-4500-bce5-0a296c792b76"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""completed""
            },
            {
              ""id"": ""50b63a7a-52b5-4766-a859-96ac1ff949ec"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""failed""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""9b6925e2-3f9a-46b9-acea-06abbce4033a"",
      ""name"": ""Verify the Second Video Generation"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        4320,
        420
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""or"",
          ""conditions"": [
            {
              ""id"": ""e97a02cc-8d1d-4500-bce5-0a296c792b76"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""completed""
            },
            {
              ""id"": ""50b63a7a-52b5-4766-a859-96ac1ff949ec"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""failed""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""a591a522-65d8-4a4d-a326-64bc2e6463c5"",
      ""name"": ""Verify the Third Video Generation"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        5040,
        420
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""or"",
          ""conditions"": [
            {
              ""id"": ""e97a02cc-8d1d-4500-bce5-0a296c792b76"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""completed""
            },
            {
              ""id"": ""50b63a7a-52b5-4766-a859-96ac1ff949ec"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""failed""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""376176c5-20c5-4a16-9fd5-10f9f2560575"",
      ""name"": ""Wait for Video Generation for at Least 4 min"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        3780,
        40
      ],
      ""webhookId"": ""d7fc1084-fd2e-4aac-98aa-60c719d73c4c"",
      ""parameters"": {
        ""unit"": ""minutes"",
        ""amount"": 4
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""dba60967-840b-4c3e-8673-080eae901185"",
      ""name"": ""Wait for the First Video Generation"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        3800,
        440
      ],
      ""webhookId"": ""db4734c5-f793-4b3b-a660-ae87c516dfc1"",
      ""parameters"": {},
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""b337b044-7da8-494d-9d55-3685b2585e93"",
      ""name"": ""Wait for the Second Video Generation"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        4480,
        460
      ],
      ""webhookId"": ""d9cde4b3-5755-4fde-b58e-9b5849a21c2b"",
      ""parameters"": {},
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""372f89ed-b771-4c6f-9bc2-faa7e31bfc6d"",
      ""name"": ""Wait for the Third Video Generation"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        5260,
        460
      ],
      ""webhookId"": ""d077385d-bd8f-4d14-b332-22a974f98ea7"",
      ""parameters"": {},
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""756d9cb7-da96-4515-a391-f152d3ca8ea9"",
      ""name"": ""Get the First Video Generation"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        3800,
        260
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""5f61ee56-4ebe-411f-95e6-b47d9741e7a2"",
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.data.status }}"",
                    ""rightValue"": ""completed""
                  }
                ]
              }
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.2
    },
    {
      ""id"": ""7b96363c-55f3-4773-9d50-f2e71c7ac4eb"",
      ""name"": ""Get the Second Video Generation"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        4520,
        240
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""5f61ee56-4ebe-411f-95e6-b47d9741e7a2"",
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.data.status }}"",
                    ""rightValue"": ""completed""
                  }
                ]
              }
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.2
    },
    {
      ""i",
Build your own CUSTOM API MCP server,"{
  ""meta"": {
    ""instanceId"": ""408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""4bdd4360-b518-4b46-81fa-0d3183ce642d"",
      ""name"": ""When Executed by Another Workflow"",
      ""type"": ""n8n-nodes-base.executeWorkflowTrigger"",
      ""position"": [
        680,
        260
      ],
      ""parameters"": {
        ""workflowInputs"": {
          ""values"": [
            {
              ""name"": ""operation""
            },
            {
              ""name"": ""query""
            },
            {
              ""name"": ""employeeId""
            },
            {
              ""name"": ""values"",
              ""type"": ""object""
            }
          ]
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""74bdcff0-0615-4d81-82ff-ff8340939399"",
      ""name"": ""Operation"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        1040,
        260
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""outputKey"": ""searchEmployee"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""81b134bc-d671-4493-b3ad-8df9be3f49a6"",
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $('When Executed by Another Workflow').first().json.operation }}"",
                    ""rightValue"": ""searchEmployees""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""getEmployeeById"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""8d57914f-6587-4fb3-88e0-aa1de6ba56c1"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $('When Executed by Another Workflow').first().json.operation }}"",
                    ""rightValue"": ""getEmployeeById""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""updateEmployee"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""7c38f238-213a-46ec-aefe-22e0bcb8dffc"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $('When Executed by Another Workflow').first().json.operation }}"",
                    ""rightValue"": ""updateEmployee""
                  }
                ]
              },
              ""renameOutput"": true
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.2
    },
    {
      ""id"": ""8850cd57-9bc1-43b7-9366-7d91afc7bc42"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -80,
        -120
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 680,
        ""height"": 660,
        ""content"": ""## 1. Set up an MCP Server Trigger\n[Read more about the MCP Server Trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger)""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ad541df3-44ed-4ef4-af91-841dc9986b4c"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        620,
        -120
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 600,
        ""height"": 260,
        ""content"": ""## 2. Build Your MCP Server from Existing APIs\n[Read more about the HTTP Request Node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest)\n\nN8N allows any organisation to quickly build and host their own MCP server by leveraging existing APIs. Here's a quick example for PayCaptain.com - a cloud-based payroll software for modern companies.\n\nWith this set of tools, Paycaptain customers can simplify employee management from within their favourite MCP client such as Claude Desktop. Better yet, n8n also handles distribution so this MCP server can serve entire departments as well.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""962cb379-8916-4a9f-8a7b-5aa9d31d5d88"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -80,
        -240
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 380,
        ""height"": 100,
        ""content"": ""### Always Authenticate Your Server!\nBefore going to production, it's always advised to enable authentication on your MCP server trigger.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""27163110-36d7-46f3-92fc-dce7d000655e"",
      ""name"": ""Paycaptain MCP Server"",
      ""type"": ""@n8n/n8n-nodes-langchain.mcpTrigger"",
      ""position"": [
        80,
        40
      ],
      ""webhookId"": ""5f6728df-d3e8-48bb-9a38-0f2e54c7962c"",
      ""parameters"": {
        ""path"": ""5f6728df-d3e8-48bb-9a38-0f2e54c7962c""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""13a69580-de33-489a-85c8-582877efbfe0"",
      ""name"": ""Update Employee"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        380,
        260
      ],
      ""parameters"": {
        ""name"": ""updateEmployee"",
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $workflow.id }}""
        },
        ""description"": ""Updates an employee's details."",
        ""workflowInputs"": {
          ""value"": {
            ""query"": ""null"",
            ""values"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('values', ``, 'string') }}"",
            ""operation"": ""updateEmployee"",
            ""employeeId"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('employeeId', ``, 'string') }}""
          },
          ""schema"": [
            {
              ""id"": ""operation"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""operation"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""query"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""query"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""employeeId"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""employeeId"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""values"",
              ""type"": ""object"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""values"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""68c066f0-657c-46cb-a9fe-b31e9850c512"",
      ""name"": ""Get Employee"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        240,
        360
      ],
      ""parameters"": {
        ""name"": ""getEmployeeById"",
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $workflow.id }}""
        },
        ""description"": ""Returns an employee's details by employee ID."",
        ""workflowInputs"": {
          ""value"": {
            ""query"": ""null"",
            ""values"": ""null"",
            ""operation"": ""getEmployeeById"",
            ""employeeId"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('employeeId', ``, 'string') }}""
          },
          ""schema"": [
            {
              ""id"": ""operation"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""operation"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""query"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""query"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""employeeId"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""employeeId"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""values"",
              ""type"": ""object"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""values"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""87661e95-b618-4701-b0f3-9f0532d5fc75"",
      ""name"": ""Get Employees"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1380,
        60
      ],
      ""parameters"": {
        ""url"": ""https://api.paycaptain.com/employees"",
        ""options"": {
          ""pagination"": {
            ""pagination"": {
              ""parameters"": {
                ""parameters"": [
                  {
                    ""name"": ""page"",
                    ""value"": ""={{ $request.qs.page + 1 }}""
                  }
                ]
              },
              ""maxRequests"": 3,
              ""requestInterval"": 1000,
              ""limitPagesFetched"": true
            }
          }
        },
        ""sendQuery"": true,
        ""authentication"": ""genericCredentialType"",
        ""genericAuthType"": ""httpHeaderAuth"",
        ""queryParameters"": {
          ""parameters"": [
            {
              ""name"": ""company"",
              ""value"": ""paycaptain""
            },
            {
              ""name"": ""page"",
              ""value"": ""={{ $json.page ?? 1 }}""
            }
          ]
        }
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""sPolCkoJ1zhzWabJ"",
          ""name"": ""JWT TOKEN""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""866868e2-e0b0-4d8d-bf3c-57d68fea8b86"",
      ""name"": ""Search Employees"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        100,
        260
      ],
      ""parameters"": {
        ""name"": ""searchEmployees"",
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $workflow.id }}""
        },
        ""description"": ""Searches for and returns an employee's details."",
        ""workflowInputs"": {
          ""value"": {
            ""query"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('query', ``, 'string') }}"",
            ""values"": ""null"",
            ""operation"": ""searchEmployees"",
            ""employeeId"": ""null""
          },
          ""schema"": [
            {
              ""id"": ""operation"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""operation"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""query"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""query"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""employeeId"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""employeeId"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""values"",
              ""type"": ""object"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""values"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""679a2413-448f-43d8-98fc-7fd8b83775e7"",
      ""name"": ""Log Call"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        860,
        260
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""query"": ""={{ $json.query }}"",
            ""values"": ""={{ $json.values.toJsonString() }}"",
            ""operation"": ""={{ $json.operation }}"",
            ""timestamp"": ""={{ $now.toISO() }}"",
            ""employeeId"": ""={{ $json.employeeId }}""
          },
          ""schema"": [
            {
              ""id"": ""timestamp"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""timestamp"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""operation"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""operation"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""query"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""query"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""employeeId"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""employeeId"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""values"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""values"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {
          ""useAppend"": true
        },
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1Ls_3pmzIafl1NUAzzflkJgyq1smPW6vfGjbVuVzdkac/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1Ls_3pmzIafl1NUAzzflkJgyq1smPW6vfGjbVuVzdkac"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1Ls_3pmzIafl1NUAzzflkJgyq1smPW6vfGjbVuVzdkac/edit?usp=drivesdk"",
          ""cachedResultName"": ""98. MCP Audit""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""XHvC7jIRR8A2TlUl"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""7723947c-94a3-4bf1-b6c8-b595027a33dc"",
      ""name"": ""Filter Matches"",
      ""type"": ""n8n-nodes-base.filter"",
      ""position"": [
        1580,
        60
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""baa681eb-d6d9-450b-99ab-58d33e81cef4"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{\n[\n  $json.hrEmployeeId,\n  $json.payrollCode,\n  $json.firstName + ' ' + $json.lastName,\n  $json.email,\n  $json.niNumber,\n  $json.mailingCity,\n  $json.jobTitle,\n  $json.jobGrade,\n  $json.department,\n  $json.team\n]\n  .join(' ')\n  .toLowerCase()\n}}"",
              ""rightValue"": ""={{ $('When Executed by Another Workflow').first().json.query.toLowerCase() }}""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""f4d1ddd9-dde7-437f-9aa2-969ea0832f71"",
      ""name"": ""Aggregate Search Results"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        2020,
        60
      ],
      ""parameters"": {
        ""options"": {},
        ""aggregate"": ""aggregateAllItemData"",
        ""destinationFieldName"": ""response""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""45076cec-f554-44ae-b314-e43ba080abb5"",
      ""name"": ""Get Employees1"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1380,
        260
      ],
      ""parameters"": {
        ""url"": ""https://api.paycaptain.com/employees"",
        ""options"": {
          ""pagination"": {
            ""pagination"": {
              ""parameters"": {
                ""parameters"": [
                  {
                    ""name"": ""page"",
                    ""value"": ""={{ $request.qs.page + 1 }}""
                  }
                ]
              },
              ""maxRequests"": 3,
              ""requestInterval"": 1000,
              ""limitPagesFetched"": true
            }
          }
        },
        ""sendQuery"": true,
        ""authentication"": ""genericCredentialType"",
        ""genericAuthType"": ""httpHeaderAuth"",
        ""queryParameters"": {
          ""parameters"": [
            {
              ""name"": ""company"",
              ""value"": ""paycaptain""
            },
            {
              ""name"": ""page"",
              ""value"": ""={{ $json.page ?? 1 }}""
            }
          ]
        }
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""sPolCkoJ1zhzWabJ"",
          ""name"": ""JWT TOKEN""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""b6f3a56f-5cd2-4f4d-904b-49e82ec591b8"",
      ""name"": ""Filter Matching ID"",
      ""type"": ""n8n-nodes-base.filter"",
      ""position"": [
        1580,
        260
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""cfb2ba5b-14c0-4867-be4d-180306c896ae"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.hrEmployeeId }}"",
              ""rightValue"": ""={{ $('When Executed by Another Workflow').first().json.employeeId }}""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""ecc2d8d5-4a23-4bfd-840b-63c28980462f"",
      ""name"": ""Strip Sensitive Fields1"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1800,
        260
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""e20217cf-7c70-4907-9da6-a114104a099e"",
              ""name"": ""company"",
              ""type"": ""string"",
              ""value"": ""={{ $json.company }}""
            },
            {
              ""id"": ""2dfe8342-c442-4ac3-90bd-92fe7d38d407"",
              ""name"": ""hrEmployeeId"",
              ""type"": ""string"",
              ""value"": ""={{ $json.hrEmployeeId }}""
            },
            {
              ""id"": ""57fe4519-246b-44aa-a0c9-22e1e865041c"",
              ""name"": ""payrollCode"",
              ""type"": ""string"",
              ""value"": ""={{ $json.payrollCode }}""
            },
            {
              ""id"": ""d296021c-09b2-43b2-8b8e-ebb5d7d9d14d"",
              ""name"": ""firstName"",
              ""type"": ""string"",
              ""value"": ""={{ $json.firstName }}""
            },
            {
              ""id"": ""661e0049-d28f-4f78-83fc-7a1b21f742c2"",
              ""name"": ""lastName"",
              ""type"": ""string"",
              ""value"": ""={{ $json.lastName }}""
            },
            {
              ""id"": ""59f7fd87-ba84-426a-ad61-c682cf8227bf"",
              ""name"": ""email"",
              ""type"": ""string"",
              ""value"": ""={{ $json.email }}""
            },
            {
              ""id"": ""9769c078-c5f5-4d56-b467-765dd73444f9"",
              ""name"": ""phone"",
              ""type"": ""string"",
              ""value"": ""={{ $json.phone }}""
            },
            {
              ""id"": ""e387bc11-dccf-4baf-b87f-a2abb5f61b5d"",
              ""name"": ""mailingStreet"",
              ""type"": ""string"",
              ""value"": ""={{ $json.mailingStreet }}""
            },
            {
              ""id"": ""415451c5-c3c1-42d4-9f5b-829277bfb7f3"",
              ""name"": ""mailingStateProvince"",
              ""type"": ""string"",
              ""value"": ""={{ $json.mailingStateProvince }}""
            },
            {
              ""id"": ""cf2a83f4-28a8-44bd-9d06-780db1406f8f"",
              ""name"": ""mailingPostalCode"",
              ""type"": ""string"",
              ""value"": ""={{ $json.mailingPostalCode }}""
            },
            {
              ""id"": ""94ee2e05-9969-43f2-a732-57356f8b4dfe"",
              ""name"": ""mailingCountry"",
              ""type"": ""string"",
              ""value"": ""={{ $json.mailingCountry }}""
            },
            {
              ""id"": ""b01a56c9-fc42-4bff-9443-27075699986f"",
              ""name"": ""location"",
              ""type"": ""string"",
              ""value"": ""={{ $json.location }}""
            },
            {
              ""id"": ""b9175d72-6976-4765-b773-f4521668d130"",
              ""name"": ""department"",
              ""type"": ""string"",
              ""value"": ""={{ $json.department }}""
            },
            {
              ""id"": ""d784e800-e13b-4d43-907c-11aaaf4ee24f"",
              ""name"": ""team"",
              ""type"": ""string"",
              ""value"": ""={{ $json.team }}""
            },
            {
              ""id"": ""1ff68eb6-35f9-4a2d-9a37-14b3a6f6e0ee"",
              ""name"": ""jobGrade"",
              ""type"": ""string"",
              ""value"": ""={{ $json.jobGrade }}""
            },
            {
              ""id"": ""5628bbf8-872d-4e3a-bf37-c36f13c0f4b1"",
              ""name"": ""jobTitle"",
              ""type"": ""string"",
              ""value"": ""={{ $json.jobTitle }}""
            },
            {
              ""id"": ""34f26d59-43b3-4f2c-955b-f6d5ab22a083"",
              ""name"": ""jobEffectiveDate"",
              ""type"": ""string"",
              ""value"": ""={{ $json.jobEffectiveDate }}""
            },
            {
              ""id"": ""e3023e94-fbc8-4e9b-b106-687ea533e3f8"",
              ""name"": ""contractType"",
              ""type"": ""string"",
              ""value"": ""={{ $json.contractType }}""
            },
            {
              ""id"": ""d3dcf24c-5e9b-40e5-9f54-fca930ab1528"",
              ""name"": ""normalWeeklyHours"",
              ""type"": ""number"",
              ""value"": ""={{ $json.normalWeeklyHours }}""
            },
            {
              ""id"": ""65ed75a6-1ec1-456f-b19b-4492e31f5c18"",
              ""name"": ""daysWorkedPerWeek"",
              ""type"": ""number"",
              ""value"": ""={{ $json.daysWorkedPerWeek }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""77a71a55-f0cf-4f76-b697-b31dba447f30"",
      ""name"": ""Strip Sensitive Fields"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1800,
        60
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""e20217cf-7c70-4907-9da6-a114104a099e"",
              ""name"": ""company"",
              ""type"": ""string"",
              ""value"": ""={{ $json.company }}""
            },
            {
              ""id"": ""2dfe8342-c442-4ac3-90bd-92fe7d38d407"",
              ""name"": ""hrEmployeeId"",
              ""type"": ""string"",
              ""value"": ""={{ $json.hrEmployeeId }}""
            },
            {
              ""id"": ""57fe4519-246b-44aa-a0c9-22e1e865041c"",
              ""name"": ""payrollCode"",
              ""type"": ""string"",
              ""value"": ""={{ $json.payrollCode }}""
            },
            {
              ""id"": ""d296021c-09b2-43b2-8b8e-ebb5d7d9d14d"",
              ""name"": ""firstName"",
              ""type"": ""string"",
              ""value"": ""={{ $json.firstName }}""
            },
            {
              ""id"": ""661e0049-d28f-4f78-83fc-7a1b21f742c2"",
              ""name"": ""lastName"",
              ""type"": ""string"",
              ""value"": ""={{ $json.lastName }}""
            },
            {
              ""id"": ""59f7fd87-ba84-426a-ad61-c682cf8227bf"",
              ""name"": ""email"",
              ""type"": ""string"",
              ""value"": ""={{ $json.email }}""
            },
            {
              ""id"": ""9769c078-c5f5-4d56-b467-765dd73444f9"",
              ""name"": ""phone"",
              ""type"": ""string"",
              ""value"": ""={{ $json.phone }}""
            },
            {
              ""id"": ""e387bc11-dccf-4baf-b87f-a2abb5f61b5d"",
              ""name"": ""mailingStreet"",
              ""type"": ""string"",
              ""value"": ""={{ $json.mailingStreet }}""
            },
            {
              ""id"": ""415451c5-c3c1-42d4-9f5b-829277bfb7f3"",
              ""name"": ""mailingStateProvince"",
              ""type"": ""string"",
              ""value"": ""={{ $json.mailingStateProvince }}""
            },
            {
              ""id"": ""cf2a83f4-28a8-44bd-9d06-780db1406f8f"",
              ""name"": ""mailingPostalCode"",
              ""type"": ""string"",
              ""value"": ""={{ $json.mailingPostalCode }}""
            },
            {
              ""id"": ""94ee2e05-9969-43f2-a732-57356f8b4dfe"",
              ""name"": ""mailingCountry"",
              ""type"": ""string"",
              ""value"": ""={{ $json.mailingCountry }}""
            },
            {
              ""id"": ""b01a56c9-fc42-4bff-9443-27075699986f"",
              ""name"": ""location"",
              ""type"": ""string"",
              ""value"": ""={{ $json.location }}""
            },
            {
              ""id"": ""b9175d72-6976-4765-b773-f4521668d130"",
              ""name"": ""department"",
              ""type"": ""string"",
              ""value"": ""={{ $json.department }}""
            },
            {
              ""id"": ""d784e800-e13b-4d43-907c-11aaaf4ee24f"",
              ""name"": ""team"",
              ""type"": ""string"",
              ""value"": ""={{ $json.team }}""
            },
            {
              ""id"": ""1ff68eb6-35f9-4a2d-9a37-14b3a6f6e0ee"",
              ""name"": ""jobGrade"",
              ""type"": ""string"",
              ""value"": ""={{ $json.jobGrade }}""
            },
            {
              ""id"": ""5628bbf8-872d-4e3a-bf37-c36f13c0f4b1"",
              ""name"": ""jobTitle"",
              ""type"": ""string"",
              ""value"": ""={{ $json.jobTitle }}""
            },
            {
              ""id"": ""34f26d59-43b3-4f2c-955b-f6d5ab22a083"",
              ""name"": ""jobEffectiveDate"",
              ""type"": ""string"",
              ""value"": ""={{ $json.jobEffectiveDate }}""
            },
            {
              ""id"": ""e3023e94-fbc8-4e9b-b106-687ea533e3f8"",
              ""name"": ""contractType"",
              ""type"": ""string"",
              ""value"": ""={{ $json.contractType }}""
            },
            {
              ""id"": ""d3dcf24c-5e9b-40e5-9f54-fca930ab1528"",
              ""name"": ""normalWeeklyHours"",
              ""type"": ""number"",
              ""value"": ""={{ $json.normalWeeklyHours }}""
            },
            {
              ""id"": ""65ed75a6-1ec1-456f-b19b-4492e31f5c18"",
              ""name"": ""daysWorkedPerWeek"",
              ""type"": ""number"",
              ""value"": ""={{ $json.daysWorkedPerWeek }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""86f73b12-afc8-4694-a79d-45c908cc88dd"",
      ""name"": ""Update Employee1"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1800,
        460
      ],
      ""parameters"": {
        ""url"": ""https://api.paycaptain.com/employee"",
        ""method"": ""POST"",
        ""options"": {
          ""pagination"": {
            ""pagination"": {
              ""parameters"": {
                ""parameters"": [
                  {
                    ""name"": ""page"",
                    ""value"": ""={{ $request.qs.page + 1 }}""
                  }
                ]
              },
              ""maxRequests"": 3,
              ""requestInterval"": 1000,
              ""limitPagesFetched"": true
            }
          }
        },
        ""jsonBody"": ""={{\n{\n  hrEmployeeId: $('When Executed by Another Workflow').item.json.employeeId,\n  ..\n}\n}}"",
        ""sendBody"": true,
        ""specifyBody"": ""json"",
        ""authentication"": ""genericCredentialType"",
        ""genericAuthType"": ""httpHeaderAuth""
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""sPolCkoJ1zhzWabJ"",
          ""name"": ""JWT TOKEN""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""122fe6f7-3bcd-4f29-a95c-c727a799e1fd"",
      ""name"": ""Valid Fields Only"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1380,
        460
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""4f3d0703-21f3-4ca1-bf7a-9c80d9efc936"",
              ""name"": ""values"",
              ""type"": ""object"",
              ""value"": ""={{\n([\n  \""firstname\"",\n  \""middlename\"",\n  \""lastname\"",\n  \""mailingStreet\"",\n  \""mailingCity\"",\n  \""mailingStateProvince\"",\n  \""mailingPostalCode\"",\n  \""mailingCountry\"",\n  \""email\"",\n  \""phone\"",\n  \""niNumber\"",\n  \""location\"",\n  \""department\"",\n  \""team\"",\n  \""jobGrade\"",\n  \""jobTitle\"",\n]\n  .reduce((acc, key) => ({\n    ...acc,\n    [key]: $('When Executed by Another Workflow').item.json.values[key] ?? undefined\n  }), {}))\n}}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""13e5f143-1abf-444c-b86c-ae51fe839894"",
      ""name"": ""Has Valid Request?"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1580,
        460
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""54d35a49-e698-427d-9fca-280b83f2827d"",
              ""operator"": {
                ""type"": ""object"",
                ""operation"": ""notEmpty"",
                ""singleValue"": true
            ",
"Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API","{
  ""id"": ""MfKB97VVSuXMo3Fm"",
  ""meta"": {
    ""instanceId"": ""1e003a7ea4715b6b35e9947791386a7d07edf3b5bf8d4c9b7ee4fdcbec0447d7""
  },
  ""name"": ""Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""4e9ed246-e4d7-4a9f-9bb1-cf74e16c3c6f"",
      ""name"": ""output1"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        3980,
        260
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""0107a930-1d7a-459c-a3ab-ceb28b43b8b8"",
              ""name"": ""video1"",
              ""type"": ""string"",
              ""value"": ""={{ $json.data.output.video_url }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""d696b66a-3726-4fe5-989e-9405b53c62e1"",
      ""name"": ""output2"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        4680,
        240
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""0107a930-1d7a-459c-a3ab-ceb28b43b8b8"",
              ""name"": ""video2"",
              ""type"": ""string"",
              ""value"": ""={{ $json.data.output.video_url }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""33e054fb-b747-4227-9884-f020e78ef5d5"",
      ""name"": ""Get Prompt"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        600,
        -80
      ],
      ""parameters"": {
        ""jsCode"": ""const content = $input.first().json.choices[0].message.content;\n\nconst prompts = JSON.parse(content);\n\nreturn { prompts };""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""af4dee94-7bb0-4cb9-9372-a2a1e96d0b19"",
      ""name"": ""Basic Params"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        220,
        -80
      ],
      ""parameters"": {
        ""mode"": ""raw"",
        ""options"": {},
        ""jsonOutput"": ""{\n  \""x-api-key\"":\""\"",\n  \""style\"": \""a children’s book cover, ages 6-10. --s 500 --sref 4028286908  --niji 6\"",\n  \""character\"": \""A gentle girl and a fluffy rabbit explore a sunlit forest together, playing by a sparkling stream\"",\n  \""situational_keywords\"": \""Butterflies flutter around them as golden sunlight filters through green leaves. Warm and peaceful atmosphere\""\n}\n""
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""c0890cdd-642a-48cd-b770-05fbae86abb4"",
      ""name"": ""Get Task ID of the First Image"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        380,
        140
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""d52d19d1-3a37-47bb-ad23-e809323c0c54"",
              ""name"": ""image1"",
              ""type"": ""string"",
              ""value"": ""={{ $('Midjourney Generator of the First Image').item.json.data.task_id }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""a2d1e854-53c3-4115-a206-f55c2cff54f1"",
      ""name"": ""Midjourney Generator of the First Image"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        160,
        140
      ],
      ""parameters"": {
        ""url"": ""https://api.piapi.ai/api/v1/task"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""model\"": \""midjourney\"",\n  \""task_type\"": \""imagine\"",\n  \""input\"": {\n    \""prompt\"": \""{{ $('Basic Params').item.json.character }},{{ $json.prompts.prompt1 }},{{ $('Basic Params').item.json.style }}\"",\n    \""aspect_ratio\"": \""2:3\"",\n    \""process_mode\"": \""turbo\"",\n    \""skip_prompt_check\"": false\n  }\n}"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').item.json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""ac342912-7d94-4019-a0c8-43b555d8566f"",
      ""name"": ""Wait for the First Image Generation"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        220,
        400
      ],
      ""webhookId"": ""af79053d-1291-4dd2-889e-4593dbbb2512"",
      ""parameters"": {},
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""cd774311-252a-43ec-aaea-28eb7d87ccc1"",
      ""name"": ""Verify the first image generation status"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        600,
        400
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""or"",
          ""conditions"": [
            {
              ""id"": ""e97a02cc-8d1d-4500-bce5-0a296c792b76"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""completed""
            },
            {
              ""id"": ""50b63a7a-52b5-4766-a859-96ac1ff949ec"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""failed""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""a4b8ce31-0ffd-4c9a-b102-162139fa553b"",
      ""name"": ""Get the First Image URL"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1000,
        200
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""d52d19d1-3a37-47bb-ad23-e809323c0c54"",
              ""name"": ""image_urls1"",
              ""type"": ""array"",
              ""value"": ""={{ $json.data.output.temporary_image_urls }}""
            },
            {
              ""id"": ""f519111b-5cb4-4562-bb8c-944a500e2df3"",
              ""name"": """",
              ""type"": ""string"",
              ""value"": """"
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""c28e46a7-999c-4a63-a3ae-aa813d7669cd"",
      ""name"": ""Midjourney Generator of the Second Image"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1220,
        200
      ],
      ""parameters"": {
        ""url"": ""https://api.piapi.ai/api/v1/task"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""model\"": \""midjourney\"",\n  \""task_type\"": \""imagine\"",\n  \""input\"": {\n    \""prompt\"": \""{{ $('Basic Params').item.json.character }},{{ $('Get Prompt').item.json.prompts.prompt2 }},{{ $('Basic Params').item.json.style }}\"",\n    \""aspect_ratio\"": \""2:3\"",\n    \""process_mode\"": \""turbo\"",\n    \""skip_prompt_check\"": false\n  }\n}"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').item.json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""529f0561-d29f-4df2-b61d-0720d33bf6b9"",
      ""name"": ""Midjourney Generator of the Third Image"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1920,
        220
      ],
      ""parameters"": {
        ""url"": ""https://api.piapi.ai/api/v1/task"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""model\"": \""midjourney\"",\n  \""task_type\"": \""imagine\"",\n  \""input\"": {\n    \""prompt\"": \""{{ $('Basic Params').item.json.character }},{{ $('Get Prompt').item.json.prompts.prompt3 }},{{ $('Basic Params').item.json.style }}\"",\n    \""aspect_ratio\"": \""2:3\"",\n    \""process_mode\"": \""turbo\"",\n    \""skip_prompt_check\"": false\n  }\n}"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').item.json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""a1a0b0f4-ac4e-4eca-9aa4-52f815731875"",
      ""name"": ""Get the First Image Generation Status"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        800,
        200
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""5f61ee56-4ebe-411f-95e6-b47d9741e7a2"",
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.data.status }}"",
                    ""rightValue"": ""completed""
                  }
                ]
              }
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.2
    },
    {
      ""id"": ""6f2b83a9-2557-461e-9d5b-9f96440182f0"",
      ""name"": ""Get the Second Image Generation Status"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        1480,
        220
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""5f61ee56-4ebe-411f-95e6-b47d9741e7a2"",
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.data.status }}"",
                    ""rightValue"": ""completed""
                  }
                ]
              }
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.2
    },
    {
      ""id"": ""10802f7a-d262-4f6f-aa48-0dce95c6fa41"",
      ""name"": ""Get the Third Image Generation Status"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        2380,
        220
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""5f61ee56-4ebe-411f-95e6-b47d9741e7a2"",
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.data.status }}"",
                    ""rightValue"": ""completed""
                  }
                ]
              }
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.2
    },
    {
      ""id"": ""c968472d-29e6-428d-99bc-1d3f79b3f0ac"",
      ""name"": ""Get the Second Image URL"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1720,
        220
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""d52d19d1-3a37-47bb-ad23-e809323c0c54"",
              ""name"": ""image_urls1"",
              ""type"": ""array"",
              ""value"": ""={{ $json.data.output.temporary_image_urls }}""
            },
            {
              ""id"": ""f519111b-5cb4-4562-bb8c-944a500e2df3"",
              ""name"": """",
              ""type"": ""string"",
              ""value"": """"
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""44fe09ee-b16a-4c00-b589-4634a5f795d2"",
      ""name"": ""Get the Third Image URL"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        2560,
        220
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""d52d19d1-3a37-47bb-ad23-e809323c0c54"",
              ""name"": ""image_urls1"",
              ""type"": ""array"",
              ""value"": ""={{ $json.data.output.temporary_image_urls }}""
            },
            {
              ""id"": ""f519111b-5cb4-4562-bb8c-944a500e2df3"",
              ""name"": """",
              ""type"": ""string"",
              ""value"": """"
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""472804c0-3f58-4ff3-aaca-b970bef425df"",
      ""name"": ""Wait for the Second Image Generation"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        900,
        440
      ],
      ""webhookId"": ""af79053d-1291-4dd2-889e-4593dbbb2512"",
      ""parameters"": {},
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""f4004d5a-fd04-4d1c-9376-026d12d690d5"",
      ""name"": ""Get Task of the First Image"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        420,
        400
      ],
      ""parameters"": {
        ""url"": ""=https://api.piapi.ai/api/v1/task/{{ $('Get Task ID of the First Image').item.json.image1 }}"",
        ""options"": {},
        ""sendHeaders"": true,
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').item.json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""ce09e4ec-97f7-4575-a133-a2c98a55b60e"",
      ""name"": ""Get Task of the Second Image"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1100,
        440
      ],
      ""parameters"": {
        ""url"": ""=https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}"",
        ""options"": {},
        ""sendHeaders"": true,
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').item.json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""2fa361f8-d580-4aa8-ae76-ca336669b0e1"",
      ""name"": ""Verify the second image generation status"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1300,
        440
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""or"",
          ""conditions"": [
            {
              ""id"": ""e97a02cc-8d1d-4500-bce5-0a296c792b76"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""completed""
            },
            {
              ""id"": ""50b63a7a-52b5-4766-a859-96ac1ff949ec"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""failed""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""a01d33a5-8419-4919-ae53-d90005244734"",
      ""name"": ""Verify the third image generation status"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        2100,
        460
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""or"",
          ""conditions"": [
            {
              ""id"": ""e97a02cc-8d1d-4500-bce5-0a296c792b76"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""completed""
            },
            {
              ""id"": ""50b63a7a-52b5-4766-a859-96ac1ff949ec"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""failed""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""e2ed41b1-daf4-4da2-a320-b2c10d11e6b1"",
      ""name"": ""Get Task of the Third Image"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1880,
        460
      ],
      ""parameters"": {
        ""url"": ""=https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}"",
        ""options"": {},
        ""sendHeaders"": true,
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').item.json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""1d9a3356-2f3e-4829-af75-cdb6f02d3375"",
      ""name"": ""Wait for the Third Image Generation"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        1680,
        460
      ],
      ""webhookId"": ""af79053d-1291-4dd2-889e-4593dbbb2512"",
      ""parameters"": {},
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""e7a4f69a-bf86-4469-8135-9fc5b18bf54d"",
      ""name"": ""Get three Image URLs"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        2740,
        220
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""d52d19d1-3a37-47bb-ad23-e809323c0c54"",
              ""name"": ""image_output1"",
              ""type"": ""string"",
              ""value"": ""={{ $('Get the First Image URL').item.json.image_urls1[0] }}""
            },
            {
              ""id"": ""333c0676-342a-40ea-bcc7-c13e9145818f"",
              ""name"": ""image_output2"",
              ""type"": ""string"",
              ""value"": ""={{ $('Get the Second Image URL').item.json.image_urls1[1] }}""
            },
            {
              ""id"": ""cc21180a-d88a-40ed-b5d1-0abcfd86bf86"",
              ""name"": ""image_output3"",
              ""type"": ""string"",
              ""value"": ""={{ $json.image_urls1[2] }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""83c07d12-31c5-4364-9fff-f82d30530925"",
      ""name"": ""Generate the First Video"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        2960,
        40
      ],
      ""parameters"": {
        ""url"": ""https://api.piapi.ai/api/v1/task"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n    \""model\"": \""kling\"",\n    \""task_type\"": \""video_generation\"",\n    \""input\"": {\n        \""version\"": \""1.6\"",\n        \""mode\"": \""pro\"",\n        \""image_url\"": \""{{ $json.image_output1 }}\"",\n        \""prompt\"": \""Natural swing\""\n    }\n} "",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').first().json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""5bd0161c-c217-4234-b36b-4826f2ffc0c9"",
      ""name"": ""Generate the Second Video"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        3160,
        40
      ],
      ""parameters"": {
        ""url"": ""https://api.piapi.ai/api/v1/task"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n    \""model\"": \""kling\"",\n    \""task_type\"": \""video_generation\"",\n    \""input\"": {\n        \""version\"": \""1.6\"",\n        \""mode\"": \""pro\"",\n        \""image_url\"": \""{{ $('Get three Image URLs').item.json.image_output2 }}\"",\n        \""prompt\"": \""Natural swing\""\n    }\n} "",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').first().json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""bf701aa9-ccdc-48d8-885f-193c2b1042f3"",
      ""name"": ""Generate the Third Video"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        3360,
        40
      ],
      ""parameters"": {
        ""url"": ""https://api.piapi.ai/api/v1/task"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n    \""model\"": \""kling\"",\n    \""task_type\"": \""video_generation\"",\n    \""input\"": {\n        \""version\"": \""1.6\"",\n        \""mode\"": \""pro\"",\n        \""image_url\"": \""{{ $('Get three Image URLs').item.json.image_output3 }}\"",\n        \""prompt\"": \""Natural swing\""\n    }\n} "",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').first().json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""ebf87efe-f5b6-4c96-8c12-5c7a37680851"",
      ""name"": ""Final Video Combination"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        5700,
        220
      ],
      ""parameters"": {
        ""url"": ""https://api.creatomate.com/v1/renders"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""template_id\"": \""c10c62b6-d515-4f36-a730-f4646d1b7ee2\"",\n\""modifications\"": {\n    \""Video-1.source\"": \""{{ $('output1').item.json.video1 }}\"",\n    \""Video-2.source\"": \""{{ $('output2').item.json.video2 }}\"",\n    \""Video-3.source\"": \""{{ $('Get the Third Video URL').item.json.video3 }}\"",\n    \""Text-1.text\"": \""{{ $('Get Prompt').item.json.prompts.title }}\""\n  }\n}"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""Authorization"",
              ""value"": ""Bearer ""
            },
            {
              ""name"": ""Content-Type"",
              ""value"": ""application/json""
            }
          ]
        }
      },
      ""executeOnce"": true,
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""d73069fa-f24d-4972-87cb-24c20112f251"",
      ""name"": ""Get the Third Video URL"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        5480,
        220
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""0107a930-1d7a-459c-a3ab-ceb28b43b8b8"",
              ""name"": ""video3"",
              ""type"": ""string"",
              ""value"": ""={{ $json.data.output.video_url }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""cb26d84e-55aa-4de1-819e-7704dcc2b45d"",
      ""name"": ""Get Video Task IDs"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        3560,
        40
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""d20160df-8be0-4bd0-8960-f49ebb596a64"",
              ""name"": ""video_task1"",
              ""type"": ""string"",
              ""value"": ""={{ $('Generate the First Video').first().json.data.task_id }}""
            },
            {
              ""id"": ""1be26a8b-1ba3-4de3-a458-778a33f99730"",
              ""name"": ""video_task2"",
              ""type"": ""string"",
              ""value"": ""={{ $('Generate the Second Video').first().json.data.task_id }}""
            },
            {
              ""id"": ""9718a718-8e19-4001-a0c9-2d35710d904e"",
              ""name"": ""video_task3"",
              ""type"": ""string"",
              ""value"": ""={{ $json.data.task_id }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""7b6def7e-2712-42c8-8e2b-ac5f70ef146f"",
      ""name"": ""Get the First Video Task"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        3380,
        420
      ],
      ""parameters"": {
        ""url"": ""=https://api.piapi.ai/api/v1/task/{{ $('Get Video Task IDs').item.json.video_task1 }}"",
        ""options"": {},
        ""sendHeaders"": true,
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-api-key"",
              ""value"": ""={{ $('Basic Params').first().json['x-api-key'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""8c5a2fe8-75b1-42b5-b861-db3e11ba03d7"",
      ""name"": ""Verify the First Video Generation"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        3580,
        420
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""or"",
          ""conditions"": [
            {
              ""id"": ""e97a02cc-8d1d-4500-bce5-0a296c792b76"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""completed""
            },
            {
              ""id"": ""50b63a7a-52b5-4766-a859-96ac1ff949ec"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""failed""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""9b6925e2-3f9a-46b9-acea-06abbce4033a"",
      ""name"": ""Verify the Second Video Generation"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        4320,
        420
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""or"",
          ""conditions"": [
            {
              ""id"": ""e97a02cc-8d1d-4500-bce5-0a296c792b76"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""completed""
            },
            {
              ""id"": ""50b63a7a-52b5-4766-a859-96ac1ff949ec"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""failed""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""a591a522-65d8-4a4d-a326-64bc2e6463c5"",
      ""name"": ""Verify the Third Video Generation"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        5040,
        420
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""or"",
          ""conditions"": [
            {
              ""id"": ""e97a02cc-8d1d-4500-bce5-0a296c792b76"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""completed""
            },
            {
              ""id"": ""50b63a7a-52b5-4766-a859-96ac1ff949ec"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data.status }}"",
              ""rightValue"": ""failed""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""376176c5-20c5-4a16-9fd5-10f9f2560575"",
      ""name"": ""Wait for Video Generation for at Least 4 min"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        3780,
        40
      ],
      ""webhookId"": ""d7fc1084-fd2e-4aac-98aa-60c719d73c4c"",
      ""parameters"": {
        ""unit"": ""minutes"",
        ""amount"": 4
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""dba60967-840b-4c3e-8673-080eae901185"",
      ""name"": ""Wait for the First Video Generation"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        3800,
        440
      ],
      ""webhookId"": ""db4734c5-f793-4b3b-a660-ae87c516dfc1"",
      ""parameters"": {},
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""b337b044-7da8-494d-9d55-3685b2585e93"",
      ""name"": ""Wait for the Second Video Generation"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        4480,
        460
      ],
      ""webhookId"": ""d9cde4b3-5755-4fde-b58e-9b5849a21c2b"",
      ""parameters"": {},
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""372f89ed-b771-4c6f-9bc2-faa7e31bfc6d"",
      ""name"": ""Wait for the Third Video Generation"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        5260,
        460
      ],
      ""webhookId"": ""d077385d-bd8f-4d14-b332-22a974f98ea7"",
      ""parameters"": {},
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""756d9cb7-da96-4515-a391-f152d3ca8ea9"",
      ""name"": ""Get the First Video Generation"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        3800,
        260
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""5f61ee56-4ebe-411f-95e6-b47d9741e7a2"",
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.data.status }}"",
                    ""rightValue"": ""completed""
                  }
                ]
              }
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.2
    },
    {
      ""id"": ""7b96363c-55f3-4773-9d50-f2e71c7ac4eb"",
      ""name"": ""Get the Second Video Generation"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        4520,
        240
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""5f61ee56-4ebe-411f-95e6-b47d9741e7a2"",
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.data.status }}"",
                    ""rightValue"": ""completed""
                  }
                ]
              }
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.2
    },
    {
      ""i",
MCP Server with AI Agent as a Tool Context Reducer,"{
  ""id"": ""HCcU4mk4u2PNkp7C"",
  ""meta"": {
    ""instanceId"": ""8d2a96b0ee3db80edc0afe4f8cdbb2eb58d6fe0bc4416e4c3377314544353f7e"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""MCP Server Github Agent Tool"",
  ""tags"": [
    {
      ""id"": ""GfKcawMPAWNcS17g"",
      ""name"": ""n8n-template"",
      ""createdAt"": ""2025-05-29T21:33:12.406Z"",
      ""updatedAt"": ""2025-05-29T21:33:12.406Z""
    },
    {
      ""id"": ""HdJUguIPwIXfbzhz"",
      ""name"": ""tutorial"",
      ""createdAt"": ""2025-05-16T01:06:16.018Z"",
      ""updatedAt"": ""2025-05-16T01:06:16.018Z""
    },
    {
      ""id"": ""aWMbAleZrcWBvCQc"",
      ""name"": ""agent"",
      ""createdAt"": ""2025-05-16T20:26:50.983Z"",
      ""updatedAt"": ""2025-05-16T20:26:50.983Z""
    },
    {
      ""id"": ""m4EUH4B1Wbruf4Ui"",
      ""name"": ""server"",
      ""createdAt"": ""2025-05-15T16:58:31.287Z"",
      ""updatedAt"": ""2025-05-15T16:58:31.287Z""
    }
  ],
  ""nodes"": [
    {
      ""id"": ""0535b49f-14da-4127-a723-2647d8f8eb9e"",
      ""name"": ""MCP Server Trigger"",
      ""type"": ""@n8n/n8n-nodes-langchain.mcpTrigger"",
      ""position"": [
        -1840,
        280
      ],
      ""webhookId"": ""5b0e6a8d-f7eb-49ba-ac89-2eb4fc359967"",
      ""parameters"": {
        ""path"": ""5b0e6a8d-f7eb-49ba-ac89-2eb4fc359967""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0c5003ed-20e2-4952-b20a-f01496037a13"",
      ""name"": ""When Executed by Another Workflow"",
      ""type"": ""n8n-nodes-base.executeWorkflowTrigger"",
      ""position"": [
        -3180,
        640
      ],
      ""parameters"": {
        ""workflowInputs"": {
          ""values"": [
            {
              ""name"": ""request""
            }
          ]
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""85c1c401-ac3e-46c2-9fa0-a20e8ad3d578"",
      ""name"": ""Simple Memory"",
      ""type"": ""@n8n/n8n-nodes-langchain.memoryBufferWindow"",
      ""position"": [
        -2120,
        640
      ],
      ""parameters"": {
        ""sessionKey"": ""github"",
        ""sessionIdType"": ""customKey""
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""2fa49b82-2c86-4076-974c-1ed57be5bdc5"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        -2480,
        660
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4.1"",
          ""cachedResultName"": ""gpt-4.1""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""F4FUDxUErCUjWsCq"",
          ""name"": ""OpenAi - WILLBOT""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""a7be6db4-25b5-490c-8d1e-91473edf76c7"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -2360,
        80
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 460,
        ""height"": 500,
        ""content"": ""## GitHub AI Agent (Tools Agent)\n🤖 Specialized GitHub Agent\n- Direct connection to GitHub MCP Server\n- Processes natural language GitHub requests\n- Reduces LLM context overhead\n- Handles all GitHub API complexity""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""7cdfaa60-61bd-43d1-9aff-f27f2012e9b9"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1880,
        80
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 340,
        ""height"": 500,
        ""content"": ""## 🖥️  MCP Server Trigger\n🔧 MCP Server Trigger\n- Receives GitHub operation requests\n- Single parameter: \""request\"" (natural language)\n- Triggers specialized GitHub agent workflow""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""94b86861-9993-4de0-a56a-a3d4dd829d9b"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -2980,
        80
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 600,
        ""height"": 500,
        ""content"": ""# 🖥️ MCP Server Github Agent Tool\n\n📋 Architecture Overview\n\nThis workflow implements the MCP Agent pattern:\n\n1. Single entry point (MCP Trigger)\n\n2. Specialized agent (GitHub focus)\n\n3. Context delegation (reduced LLM load)\n\n4. Scalable operations (unlimited GitHub tools)\n\n\nPerfect for complex GitHub automations without overwhelming your main LLM with GitHub API context.\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4f6833d0-85c7-4035-8a8a-c627b1181d76"",
      ""name"": ""Github Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        -1780,
        440
      ],
      ""parameters"": {
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""UyrFAXDtcVf0TqlJ"",
          ""cachedResultName"": ""MCP Github""
        },
        ""description"": ""# Overview\nUtilize this Github Agent tool to handle all interactions with the Github. By giving the Github Agent clear commands, you can full manage repositories and their components.\n\n## Workflow\n1. Provide plain language commands in the request parameter of this tool. Include the repo name when applicable.\n2. The Github agent interprets your command and performs the task.\n\n## Example Requests\n<EXAMPLE_1>\nCreate an issue called \""Some Issue Title\"" with the description of \""Some long description about something\"". Create it in the repo named Repo 1.\n</EXAMPLE_1>\n<EXAMPLE_2>\nMark issue number 3 as closed and put a comment of \""wow that was hard work\"" on it.\n</EXAMPLE_2>\n<EXAMPLE_3>\nCreate a new branch off of the development branch and name it according to the feature / issue it relates to. Create a comment on the first issue: @Claude, please work on this, thank you.\n</EXAMPLE_3>"",
        ""workflowInputs"": {
          ""value"": {
            ""request"": ""={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('request', `Plain language command to have the Github Agent perform a task relating to Github`, 'string') }}""
          },
          ""schema"": [
            {
              ""id"": ""request"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""request"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [
            ""request""
          ],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""0d381148-29a4-4f0d-abe4-b32a409414d5"",
      ""name"": ""Github API"",
      ""type"": ""@n8n/n8n-nodes-langchain.mcpClientTool"",
      ""position"": [
        -1760,
        640
      ],
      ""parameters"": {
        ""include"": ""selected"",
        ""sseEndpoint"": ""http://localhost:8000/sse"",
        ""includeTools"": [
          ""create_issue"",
          ""list_issues"",
          ""update_issue"",
          ""add_issue_comment"",
          ""search_issues"",
          ""get_issue"",
          ""search_repositories"",
          ""create_repository"",
          ""get_pull_request_reviews"",
          ""get_pull_request_comments"",
          ""update_pull_request_branch"",
          ""get_pull_request_files"",
          ""get_pull_request_status"",
          ""search_code"",
          ""search_users"",
          ""list_pull_requests"",
          ""get_pull_request"",
          ""merge_pull_request"",
          ""create_pull_request_review"",
          ""fork_repository"",
          ""create_branch"",
          ""list_commits"",
          ""get_file_contents"",
          ""push_files"",
          ""create_or_update_file"",
          ""create_pull_request""
        ]
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""382e14d0-747f-4901-9224-cb7c8fe60958"",
      ""name"": ""Github AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        -2260,
        340
      ],
      ""parameters"": {
        ""text"": ""={{ $('When Executed by Another Workflow').item.json.request }}"",
        ""options"": {
          ""systemMessage"": ""=# Overview\nYou are a Github API and repo management specialist. You use your many tools to achieve the goals set forth by the requests you receive.\n\n## User Information\nGithub username: {{ $json.githubUsername }}""
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""47f6acc4-d405-4203-a157-f050f249b37a"",
      ""name"": ""Set Github Username"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -2860,
        640
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""baa4559f-6f06-42c6-ab23-0aa9662a5a18"",
              ""name"": ""githubUsername"",
              ""type"": ""string"",
              ""value"": ""wayum999""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""291e3f21-ab26-4a3e-be10-bfb0add9cf76"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -2980,
        600
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 340,
        ""height"": 380,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Set GitHub Username Node\n⚙️ Configuration Required\n- Replace \""your-github-username\"" with actual username\n- Used for GitHub API authentication context\n- Essential for proper API calls""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""117bbca5-4a6b-4c11-96bb-98efb561ac1d"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -2620,
        600
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 360,
        ""height"": 380,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n## OpenAI Chat Model Node\n🧠 AI Processing Engine\n- Requires OpenAI API key configuration  \n- Powers intelligent GitHub operation understanding\n- Optimized for GitHub-specific tasks""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c6b138ca-a993-4251-ab28-29ba37b93b67"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -2240,
        600
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 340,
        ""height"": 380,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Simple Memory Node\n💾 Conversation Context\n- Maintains operation history\n- Enables multi-step GitHub workflows\n- Reduces repetitive context processing""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d322205a-413c-4c85-a0de-07c996d77733"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1880,
        600
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 340,
        ""height"": 380,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n## MCP Client Node\n💾 Github Tools\n- Handles calls to the Github API\n- Manages repos and issues\n- One node connected to an MCP server""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {
    ""When Executed by Another Workflow"": [
      {
        ""json"": {
          ""request"": ""create a new repo called test repo""
        }
      }
    ]
  },
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""03753d69-363b-410e-af98-686cd0e03b2b"",
  ""connections"": {
    ""Github API"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""Github AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Github Agent"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""MCP Server Trigger"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Simple Memory"": {
      ""ai_memory"": [
        [
          {
            ""node"": ""Github AI Agent"",
            ""type"": ""ai_memory"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Github AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Set Github Username"": {
      ""main"": [
        [
          {
            ""node"": ""Github AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When Executed by Another Workflow"": {
      ""main"": [
        [
          {
            ""node"": ""Set Github Username"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Chat with Postgresql Database,"{
  ""id"": ""eOUewYsEzJmQixI6"",
  ""meta"": {
    ""instanceId"": ""77c4feba8f41570ef06dc76ece9a6ded0f0d44f7f1477a64c2d71a8508c11faa"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Chat with Postgresql Database"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""6501a54f-a68c-452d-b353-d7e871ca3780"",
      ""name"": ""When chat message received"",
      ""type"": ""@n8n/n8n-nodes-langchain.chatTrigger"",
      ""position"": [
        -300,
        -80
      ],
      ""webhookId"": ""cf1de04f-3e38-426c-89f0-3bdb110a5dcf"",
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""cd32221b-2a36-408d-b57e-8115fcd810c9"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        0,
        -80
      ],
      ""parameters"": {
        ""agent"": ""openAiFunctionsAgent"",
        ""options"": {
          ""systemMessage"": ""You are DB assistant. You need to run queries in DB aligned with user requests.\n\nRun custom SQL query to aggregate data and response to user. Make sure every table has schema prefix to it in sql query which you can get from `Get DB Schema and Tables List` tool.\n\nFetch all data to analyse it for response if needed.\n\n## Tools\n\n- Execute SQL query - Executes any sql query generated by AI\n- Get DB Schema and Tables List - Lists all the tables in database with its schema name\n- Get Table Definition - Gets the table definition from db using table name and schema name""
        }
      },
      ""typeVersion"": 1.7
    },
    {
      ""id"": ""8accbeeb-7eaf-4e9e-aabc-de8ab3a0459b"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        -60,
        160
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""48uG61Ilo8jndw3r"",
          ""name"": ""Your OpenAI Account Credentials""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""11f2013f-a080-4c9e-8773-c90492e2c628"",
      ""name"": ""Get Table Definition"",
      ""type"": ""n8n-nodes-base.postgresTool"",
      ""position"": [
        780,
        140
      ],
      ""parameters"": {
        ""query"": ""select\n  c.column_name,\n  c.data_type,\n  c.is_nullable,\n  c.column_default,\n  tc.constraint_type,\n  ccu.table_name AS referenced_table,\n  ccu.column_name AS referenced_column\nfrom\n  information_schema.columns c\nLEFT join\n  information_schema.key_column_usage kcu\n  ON c.table_name = kcu.table_name\n  AND c.column_name = kcu.column_name\nLEFT join\n  information_schema.table_constraints tc\n  ON kcu.constraint_name = tc.constraint_name\n  AND tc.constraint_type = 'FOREIGN KEY'\nLEFT join\n  information_schema.constraint_column_usage ccu\n  ON tc.constraint_name = ccu.constraint_name\nwhere\n  c.table_name = '{{ $fromAI(\""table_name\"") }}'\n  AND c.table_schema = '{{ $fromAI(\""schema_name\"") }}'\norder by\n  c.ordinal_position"",
        ""options"": {},
        ""operation"": ""executeQuery"",
        ""descriptionType"": ""manual"",
        ""toolDescription"": ""Get table definition to find all columns and types""
      },
      ""credentials"": {
        ""postgres"": {
          ""id"": ""nGI61D0TEEZz18rr"",
          ""name"": ""Your Postgresql Database Credentials""
        }
      },
      ""typeVersion"": 2.5
    },
    {
      ""id"": ""760bc9bc-0057-4088-b3f0-3ee37b3519df"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -300,
        -240
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 560,
        ""height"": 120,
        ""content"": ""### 👨‍🎤 Setup\n1. Add your **postgresql** and **OpenAI** credentials.\n2. Click **Chat** button and start asking questions to your database.\n3. Activate the workflow and you can make the chat publicly available.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0df33341-c859-4a54-b6d9-a99670e8d76d"",
      ""name"": ""Chat History"",
      ""type"": ""@n8n/n8n-nodes-langchain.memoryBufferWindow"",
      ""position"": [
        120,
        160
      ],
      ""parameters"": {},
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""4938b22e-f187-4ca0-b9f1-60835e823799"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        360,
        300
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 562,
        ""height"": 156,
        ""content"": ""🛠️ Tools Used:\n1. Execute SQL Query: Used to execute any query generated by the agent.\n2. Get DB Schema and Tables List: It returns the list of all the tables with its schema name.\n3. Get Table Definition: It returns table details like column names, foreign keys and more of a particular table in a schema.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""39780c78-4fbc-403e-a220-aa6a4b06df8c"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -100,
        300
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 162,
        ""height"": 99,
        ""content"": ""👆 You can exchange this with any other chat model of your choice.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""28a5692c-5003-46cb-9a09-b7867734f446"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        100,
        300
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 162,
        ""height"": 159,
        ""content"": ""👆 You can change how many number of messages to keep using `Context Window Length` option. It's 5 by default.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c18ced71-6330-4ba0-9c52-1bb5852b3039"",
      ""name"": ""Execute SQL Query"",
      ""type"": ""n8n-nodes-base.postgresTool"",
      ""position"": [
        380,
        140
      ],
      ""parameters"": {
        ""query"": ""{{ $fromAI(\""sql_query\"", \""SQL Query\"") }}"",
        ""options"": {},
        ""operation"": ""executeQuery"",
        ""descriptionType"": ""manual"",
        ""toolDescription"": ""Get all the data from Postgres, make sure you append the tables with correct schema. Every table is associated with some schema in the database.""
      },
      ""credentials"": {
        ""postgres"": {
          ""id"": ""nGI61D0TEEZz18rr"",
          ""name"": ""Your Postgresql Database Credentials""
        }
      },
      ""typeVersion"": 2.5
    },
    {
      ""id"": ""557623c6-e499-48a6-a066-744f64f8b6f3"",
      ""name"": ""Get DB Schema and Tables List"",
      ""type"": ""n8n-nodes-base.postgresTool"",
      ""position"": [
        580,
        140
      ],
      ""parameters"": {
        ""query"": ""SELECT \n    table_schema,\n    table_name\nFROM information_schema.tables\nWHERE table_type = 'BASE TABLE'\n    AND table_schema NOT IN ('pg_catalog', 'information_schema')\nORDER BY table_schema, table_name;"",
        ""options"": {},
        ""operation"": ""executeQuery"",
        ""descriptionType"": ""manual"",
        ""toolDescription"": ""Get list of all tables with their schema in the database""
      },
      ""credentials"": {
        ""postgres"": {
          ""id"": ""nGI61D0TEEZz18rr"",
          ""name"": ""Your Postgresql Database Credentials""
        }
      },
      ""typeVersion"": 2.5
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""10c7c74e-b383-4ac7-8cb2-c9a15a2818fe"",
  ""connections"": {
    ""Chat History"": {
      ""ai_memory"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_memory"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Execute SQL Query"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get Table Definition"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When chat message received"": {
      ""main"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get DB Schema and Tables List"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Automated daily workflow backup to GitHub,"{
  ""nodes"": [
    {
      ""id"": ""2aafc10f-0bb7-419f-a6b3-fa90f5f68653"",
      ""name"": ""Schedule Trigger"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        100,
        -20
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {}
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""da87b4f8-4507-456b-bfc3-3ae7d9400449"",
      ""name"": ""Retrieve workflows"",
      ""type"": ""n8n-nodes-base.n8n"",
      ""position"": [
        580,
        -20
      ],
      ""parameters"": {
        ""filters"": {},
        ""requestOptions"": {}
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6cd7d968-6fa0-4ab0-ac58-ceb15c8b7b4a"",
      ""name"": ""Aggregate"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        420,
        -20
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldsToAggregate"": {
          ""fieldToAggregate"": [
            {
              ""fieldToAggregate"": ""name""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""854f6e82-babb-474e-a138-2a6c398fd60e"",
      ""name"": ""List files from repo"",
      ""type"": ""n8n-nodes-base.github"",
      ""position"": [
        260,
        -20
      ],
      ""webhookId"": ""354d699e-44b0-4444-9d31-af7fd4ff5561"",
      ""parameters"": {
        ""owner"": {
          ""__rl"": true,
          ""mode"": ""name"",
          ""value"": """"
        },
        ""filePath"": ""="",
        ""resource"": ""file"",
        ""operation"": ""list"",
        ""repository"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": """"
        },
        ""authentication"": ""oAuth2""
      },
      ""typeVersion"": 1,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""8abba016-1f34-420a-b10b-3c8e44297725"",
      ""name"": ""Update file"",
      ""type"": ""n8n-nodes-base.github"",
      ""position"": [
        1380,
        -100
      ],
      ""webhookId"": ""27218087-8df7-474d-a39f-70cfa9c34ec8"",
      ""parameters"": {
        ""owner"": {
          ""__rl"": true,
          ""mode"": ""name"",
          ""value"": """"
        },
        ""filePath"": ""={{ $('Retrieve workflows').item.json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json"",
        ""resource"": ""file"",
        ""operation"": ""edit"",
        ""repository"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": """"
        },
        ""fileContent"": ""={{ $('To base64').item.json.data }}"",
        ""commitMessage"": ""=backup-{{ $('Commit date & file name').item.json.commitDate }}"",
        ""authentication"": ""oAuth2""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d55efcc7-5873-4c9a-b374-b7b31814905b"",
      ""name"": ""Upload file"",
      ""type"": ""n8n-nodes-base.github"",
      ""position"": [
        1380,
        60
      ],
      ""webhookId"": ""ce4b561b-acb9-4cd8-b76f-4928dada9674"",
      ""parameters"": {
        ""owner"": {
          ""__rl"": true,
          ""mode"": ""name"",
          ""value"": """"
        },
        ""filePath"": ""={{ $('Retrieve workflows').item.json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json"",
        ""resource"": ""file"",
        ""repository"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": """"
        },
        ""fileContent"": ""={{ $('To base64').item.json.data }}"",
        ""commitMessage"": ""=backup-{{ $node['Commit date & file name'].json.commitDate }}"",
        ""authentication"": ""oAuth2""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""09909c9f-8a68-4670-8396-65fae9be51ff"",
      ""name"": ""Check if file exists"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1220,
        -20
      ],
      ""parameters"": {
        ""conditions"": {
          ""string"": [
            {
              ""value1"": ""={{ $('Aggregate').item.json.name }}"",
              ""value2"": ""={{ $('Retrieve workflows').item.json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json"",
              ""operation"": ""contains""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""43990124-eac4-4c57-9da3-39053d9e5850"",
      ""name"": ""Json file"",
      ""type"": ""n8n-nodes-base.convertToFile"",
      ""position"": [
        740,
        -20
      ],
      ""parameters"": {
        ""mode"": ""each"",
        ""options"": {
          ""format"": true
        },
        ""operation"": ""toJson""
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""956de457-4d05-4ea8-be7b-390861a739d4"",
      ""name"": ""To base64"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        900,
        -20
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""binaryToPropery""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""fc258985-2621-42a3-9bc6-01048a92b702"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        240,
        -160
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 300,
        ""height"": 380,
        ""content"": ""### Retrieve previous file names from Github""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1bfedd8f-1921-4f33-aa45-7ab612f26059"",
      ""name"": ""Commit date & file name"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1060,
        -20
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""fe4a36ef-9f04-40e3-99bd-cc517a49b440"",
              ""name"": ""commitDate"",
              ""type"": ""string"",
              ""value"": ""={{ $now.format('dd-MM-yyyy/H:mm') }}""
            },
            {
              ""id"": ""b0fe1bcc-e79c-4a6b-b8b4-44222c8bf4e8"",
              ""name"": ""fileName"",
              ""type"": ""string"",
              ""value"": ""={{ $('Retrieve workflows').item.json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""2f36af66-12ca-451a-a1ca-c5a71b94b644"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        560,
        -160
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 460,
        ""height"": 380,
        ""content"": ""### Retrieve and process workflows from n8n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""dc914f31-e6b5-43b0-8a4e-f9f46118fa30"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1040,
        -160
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 460,
        ""height"": 380,
        ""content"": ""### Commit + edit/create files if needed""
      },
      ""typeVersion"": 1
    }
  ],
  ""connections"": {
    ""Aggregate"": {
      ""main"": [
        [
          {
            ""node"": ""Retrieve workflows"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Json file"": {
      ""main"": [
        [
          {
            ""node"": ""To base64"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""To base64"": {
      ""main"": [
        [
          {
            ""node"": ""Commit date & file name"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Schedule Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""List files from repo"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Retrieve workflows"": {
      ""main"": [
        [
          {
            ""node"": ""Json file"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Check if file exists"": {
      ""main"": [
        [
          {
            ""node"": ""Update file"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Upload file"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""List files from repo"": {
      ""main"": [
        [
          {
            ""node"": ""Aggregate"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Commit date & file name"": {
      ""main"": [
        [
          {
            ""node"": ""Check if file exists"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
AI-Powered Telegram Bot for Data Extraction with Bright Data MCP,"{
  ""meta"": {
    ""instanceId"": ""4e6be3a68285934388a854ac0ffdc5e5500688d5cdb88d0ec2d734e85f097355"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""9be111d1-4ea3-4c43-8b75-66a1123002fd"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        -1580,
        840
      ],
      ""parameters"": {
        ""text"": ""={{ $json.body.message.text }}"",
        ""options"": {
          ""systemMessage"": ""You are a helpful assistant. Run the MCP tool when dealing with the web search, scraping, and browser automation.""
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""860579ca-110e-4b7d-848a-e4085e05a6a6"",
      ""name"": ""Simple Memory"",
      ""type"": ""@n8n/n8n-nodes-langchain.memoryBufferWindow"",
      ""position"": [
        -1520,
        1060
      ],
      ""parameters"": {
        ""sessionKey"": ""={{ $json.body.message.chat.id }}"",
        ""sessionIdType"": ""customKey""
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""b9b2b497-1018-40ad-b1bd-0e04cbfdb95b"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -2480,
        400
      ],
      ""parameters"": {
        ""color"": 2,
        ""width"": 560,
        ""height"": 640,
        ""content"": ""## Receive Webhook from Telegram\nSetup telegram hook using the HTTP node below. Replace the api key placeholder in the URL field of the node.\nReplace the URL with the one generated from the Webhook trigger node.\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6fd8fd1b-0ec2-402a-8d97-13bbc6ca6ca2"",
      ""name"": ""OpenRouter Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenRouter"",
      ""position"": [
        -1660,
        1060
      ],
      ""parameters"": {
        ""model"": ""anthropic/claude-3.7-sonnet"",
        ""options"": {}
      },
      ""credentials"": {
        ""openRouterApi"": {
          ""id"": ""mShT6DheOqjTyDCh"",
          ""name"": ""OpenRouter account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""273d9378-bbea-49ea-8a4c-cf473da4639e"",
      ""name"": ""When clicking ‘Test workflow’"",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        -2400,
        580
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""4f77a573-e729-4ca2-9263-005c9c67b21a"",
      ""name"": ""Set Telegram Webhook"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -2140,
        580
      ],
      ""parameters"": {
        ""url"": ""https://api.telegram.org/bot<your-api-token>/setWebhook"",
        ""options"": {},
        ""sendBody"": true,
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""url"",
              ""value"": ""<the url generated from your workflow>""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""b29f6cbd-2ca1-455e-9372-4d7c1aee2811"",
      ""name"": ""Receive Message Trigger from Telegram"",
      ""type"": ""n8n-nodes-base.webhook"",
      ""position"": [
        -2280,
        840
      ],
      ""webhookId"": ""4f1caff9-e22f-426b-b5da-f5175be0a7bc"",
      ""parameters"": {
        ""path"": ""4f1caff9-e22f-426b-b5da-f5175be0a7bc"",
        ""options"": {},
        ""httpMethod"": ""POST""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""f8b25f38-143b-4fc8-890c-03701bde0809"",
      ""name"": ""Typing action"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        -1040,
        260
      ],
      ""webhookId"": ""84423ab1-dbb7-4105-9bb3-98abdf1a42bf"",
      ""parameters"": {
        ""chatId"": ""={{ $('Trigger by the main workflow').item.json.chatId }}"",
        ""operation"": ""sendChatAction""
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""GY19yNGJWcslVpXr"",
          ""name"": ""Telegram account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""22d5b740-0ad4-4e4d-b5b4-7961e131d3bd"",
      ""name"": ""Sub-workflow to trigger Typing Action"",
      ""type"": ""n8n-nodes-base.executeWorkflow"",
      ""position"": [
        -1580,
        260
      ],
      ""parameters"": {
        ""mode"": ""each"",
        ""options"": {
          ""waitForSubWorkflow"": false
        },
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""nnFhm4hEcyaMNkXV"",
          ""cachedResultName"": ""Basic Bright Data MCP""
        },
        ""workflowInputs"": {
          ""value"": {
            ""chatId"": ""={{ $json.body.message.chat.id }}"",
            ""executionId"": ""={{ $execution.id }}""
          },
          ""schema"": [
            {
              ""id"": ""executionId"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""executionId"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""chatId"",
              ""type"": ""number"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""chatId"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": true
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""a2d0a7ba-df6b-43d3-9fb4-1026e3d4d154"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1760,
        680
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 620,
        ""height"": 560,
        ""content"": ""## AI Agent with Bright Data MCP as a tool\nHost your SSE server using Supergateway or similar tools. Please check the template’s description for more instruction to setup the SSE from STDIO  command. Then paste the SSE endpoint tinthe MCP tool below.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a4dd5168-8a4f-4ec6-8d3c-992ceb7db7ff"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -820,
        700
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 560,
        ""height"": 460,
        ""content"": ""## Send the agent's message via Telegram Bot""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""84999800-2659-4e4d-8771-d9c5f7ff4e2a"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1720,
        120
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 1560,
        ""height"": 500,
        ""content"": ""## Loop the typing action in Telegram\nTyping action last fro 10 seconds only, so while the agent is still processing query, execute this tool in a loop until it succeed""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""266b1d20-452b-47fc-9632-437bf7f3abac"",
      ""name"": ""Reply Error Message"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        320,
        280
      ],
      ""webhookId"": ""2f426e92-cd04-4f68-a7c0-276c7a025429"",
      ""parameters"": {
        ""text"": ""There's an error with the bot. Please try again later."",
        ""chatId"": ""={{ $('Trigger by the main workflow').item.json.chatId }}"",
        ""additionalFields"": {
          ""appendAttribution"": false
        }
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""GY19yNGJWcslVpXr"",
          ""name"": ""Telegram account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""4be1ec2b-3ef2-45b8-b1d4-cf39791654f2"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        0,
        80
      ],
      ""parameters"": {
        ""width"": 560,
        ""height"": 500,
        ""content"": ""## Reply error message to the user on error""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a3d321c8-4e9d-4c0e-86b5-da002b0ac29d"",
      ""name"": ""MCP Client"",
      ""type"": ""@n8n/n8n-nodes-langchain.mcpClientTool"",
      ""position"": [
        -1340,
        1080
      ],
      ""parameters"": {
        ""sseEndpoint"": ""http://localhost:8000""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c716a991-17e0-4de4-af0d-ba6e44b5c6d2"",
      ""name"": ""Check if the execution in N8N is finished"",
      ""type"": ""n8n-nodes-base.n8n"",
      ""position"": [
        -600,
        260
      ],
      ""parameters"": {
        ""options"": {},
        ""resource"": ""execution"",
        ""operation"": ""get"",
        ""executionId"": ""={{ $('Trigger by the main workflow').item.json.executionId }}"",
        ""requestOptions"": {}
      },
      ""credentials"": {
        ""n8nApi"": {
          ""id"": ""oYyQ7JNyppFRzPaV"",
          ""name"": ""n8n account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b6f08d79-16a5-47a7-800d-7c8ba902ab52"",
      ""name"": ""If the N8N execution is finished"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        -340,
        320
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""ad6687c9-24a0-4332-8b0f-ec1aa0751cfc"",
              ""operator"": {
                ""type"": ""boolean"",
                ""operation"": ""false"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.finished }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""38342c4f-b020-4dc5-b633-ebaaf2582fef"",
      ""name"": ""Check if the N8N status is success"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        100,
        280
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""ad6687c9-24a0-4332-8b0f-ec1aa0751cfc"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notEquals""
              },
              ""leftValue"": ""={{ $json.status }}"",
              ""rightValue"": ""success""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""dd3c7d3e-b011-4856-b41e-c17882a19aab"",
      ""name"": ""Send AI’s output to the user via Telegram"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        -580,
        840
      ],
      ""webhookId"": ""56e83f5d-ba64-458d-9a5b-6c3d8ae6f584"",
      ""parameters"": {
        ""text"": ""={{ $json.output }}"",
        ""chatId"": ""={{ $('Receive Message Trigger from Telegram').item.json.body.message.chat.id }}"",
        ""additionalFields"": {
          ""appendAttribution"": false
        }
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""GY19yNGJWcslVpXr"",
          ""name"": ""Telegram account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""d415ca44-e93b-4e10-8af6-f0f6cc059e26"",
      ""name"": ""Wait for the typing action to finish by 10 seconds"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        -820,
        260
      ],
      ""webhookId"": ""812d8e5e-2b50-4cbd-a4b5-f18640aa0e61"",
      ""parameters"": {
        ""amount"": 10
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""6d7822c9-ac66-443f-909b-83596dd738c0"",
      ""name"": ""Trigger by the main workflow"",
      ""type"": ""n8n-nodes-base.executeWorkflowTrigger"",
      ""position"": [
        -1300,
        260
      ],
      ""parameters"": {
        ""workflowInputs"": {
          ""values"": [
            {
              ""name"": ""executionId""
            },
            {
              ""name"": ""chatId"",
              ""type"": ""number""
            }
          ]
        }
      },
      ""typeVersion"": 1.1
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""AI Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Send AI’s output to the user via Telegram"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""MCP Client"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Simple Memory"": {
      ""ai_memory"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_memory"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Typing action"": {
      ""main"": [
        [
          {
            ""node"": ""Wait for the typing action to finish by 10 seconds"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenRouter Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Trigger by the main workflow"": {
      ""main"": [
        [
          {
            ""node"": ""Typing action"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""If the N8N execution is finished"": {
      ""main"": [
        [
          {
            ""node"": ""Typing action"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Check if the N8N status is success"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When clicking ‘Test workflow’"": {
      ""main"": [
        [
          {
            ""node"": ""Set Telegram Webhook"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Check if the N8N status is success"": {
      ""main"": [
        [
          {
            ""node"": ""Reply Error Message"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        []
      ]
    },
    ""Receive Message Trigger from Telegram"": {
      ""main"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Sub-workflow to trigger Typing Action"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Check if the execution in N8N is finished"": {
      ""main"": [
        [
          {
            ""node"": ""If the N8N execution is finished"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Wait for the typing action to finish by 10 seconds"": {
      ""main"": [
        [
          {
            ""node"": ""Check if the execution in N8N is finished"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
GitLab Merge Request Review & Risk Analysis with Claude/GPT AI,"{
  ""id"": ""jzcvnlV8g6aseE4A"",
  ""meta"": {
    ""instanceId"": ""1abe0e4c2be794795d12bf72aa530a426a6f87aabad209ed6619bcaf0f666fb0"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""GitLab MR Auto-Review & Risk Assessment"",
  ""tags"": [
    {
      ""id"": ""DOZBZVy35P0wB50k"",
      ""name"": ""Quality Assurance (QA)"",
      ""createdAt"": ""2025-02-04T06:46:12.267Z"",
      ""updatedAt"": ""2025-02-04T06:46:12.267Z""
    },
    {
      ""id"": ""ML7fy627V46ocsUS"",
      ""name"": ""Development"",
      ""createdAt"": ""2025-02-04T06:46:44.236Z"",
      ""updatedAt"": ""2025-02-04T06:46:44.236Z""
    },
    {
      ""id"": ""fX8hRnEv4D8sLSzF"",
      ""name"": ""OpenAI"",
      ""createdAt"": ""2025-01-09T09:18:12.757Z"",
      ""updatedAt"": ""2025-01-09T09:18:12.757Z""
    },
    {
      ""id"": ""xBTtGefXwPc4Bib6"",
      ""name"": ""Engineering"",
      ""createdAt"": ""2025-02-04T06:47:02.932Z"",
      ""updatedAt"": ""2025-02-04T06:47:02.932Z""
    },
    {
      ""id"": ""yy04JQqCaXepPdSa"",
      ""name"": ""Project Management"",
      ""createdAt"": ""2024-10-30T18:27:57.309Z"",
      ""updatedAt"": ""2024-10-30T18:27:57.309Z""
    },
    {
      ""id"": ""zJaZorWWcGpTp35U"",
      ""name"": ""DevOps"",
      ""createdAt"": ""2025-01-03T12:19:34.273Z"",
      ""updatedAt"": ""2025-01-03T12:19:34.273Z""
    }
  ],
  ""nodes"": [
    {
      ""id"": ""a82f2b02-538b-4531-921c-d25f1edb97ef"",
      ""name"": ""Extract Diff"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        860,
        320
      ],
      ""parameters"": {
        ""url"": ""=     https://gitlab.com/api/v4/projects/{{ encodeURIComponent($json.body.project.path_with_namespace) }}/merge_requests/{{ $json.body.object_attributes.iid }}/changes"",
        ""options"": {},
        ""jsonHeaders"": ""{\n  \""Authorization\"": \""Bearer glpat-xxxxxxxxxxxxxxxxxxxxxxxxxxxx\""\n}"",
        ""sendHeaders"": true,
        ""specifyHeaders"": ""json""
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""cd028c77-23e7-46d6-964d-af5afe468176"",
      ""name"": ""Distribution List Generator"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        2040,
        160
      ],
      ""parameters"": {
        ""jsCode"": ""const ProjectLeads = {\n  \""alpha_backend\"": {\n    \""dev\"": [\""dev1@example.com\"", \""dev2@example.com\""],\n    \""qa\"": [\""qa1@example.com\"", \""qa2@example.com\""]\n  },\n  \""beta_webapp\"": {\n    \""dev\"": [\""dev3@example.com\"", \""dev4@example.com\""],\n    \""qa\"": [\""qa3@example.com\"", \""qa4@example.com\""]\n  },\n  \""gamma_mobile\"": {\n    \""dev\"": [\""dev5@example.com\"", \""dev6@example.com\""],\n    \""qa\"": [\""qa5@example.com\"", \""qa6@example.com\"", \""qa7@example.com\""]\n  },\n  \""delta_api\"": {\n    \""dev\"": [\""dev7@example.com\"", \""dev8@example.com\"", \""dev9@example.com\""],\n    \""qa\"": [\""qa8@example.com\"", \""qa9@example.com\"", \""qa10@example.com\""]\n  },\n  \""epsilon_service\"": {\n    \""dev\"": [\""dev10@example.com\""],\n    \""qa\"": [\""qa11@example.com\"", \""qa12@example.com\""]\n  },\n  \""zeta_scraper\"": {\n    \""dev\"": [\""dev11@example.com\""],\n    \""qa\"": [\""qa13@example.com\"", \""qa14@example.com\""]\n  },\n  \""theta_ui\"": {\n    \""dev\"": [\""dev12@example.com\"", \""dev13@example.com\""],\n    \""qa\"": [\""qa15@example.com\"", \""qa16@example.com\""]\n  },\n  \""iota_backend\"": {\n    \""dev\"": [\""dev14@example.com\"", \""dev15@example.com\""],\n    \""qa\"": [\""qa17@example.com\"", \""qa18@example.com\""]\n  },\n  \""kappa_admin\"": {\n    \""dev\"": [\""dev16@example.com\"", \""dev17@example.com\""],\n    \""qa\"": [\""qa19@example.com\"", \""qa20@example.com\""]\n  }\n};\n\n// Define the GlobalList\nconst GlobalList = [\n  \""admin1@example.com\"",\n  \""admin2@example.com\"",\n  \""admin3@example.com\""\n];\n\n// Retrieve the project name from the input data and convert it to lowercase\nconst fullName = $('Merge').first().json.body.project.path_with_namespace.toLowerCase();\nconst projectName = fullName.split('/')[1];\n\nlet emails = [];\n\nif (projectName && ProjectLeads[projectName]) {\n  // Extract the emails for the given project\n  const projectEmails = [\n    ...ProjectLeads[projectName].dev,\n    ...ProjectLeads[projectName].qa\n  ];\n\n  // Combine project-specific emails with GlobalList\n  emails = [...projectEmails, ...GlobalList];\n} else {\n  // Default to GlobalList only if project name is not found or is undefined\n  emails = [...GlobalList];\n}\n\n// Handle sender email replacement\nconst senderemail = $('Merge').first().json.body.object_attributes.last_commit.author.email;\nconst oldEmail = \""86149715+user@users.noreply.github.com\"";\nconst newEmail = \""user@example.com\"";\nconst senderEmail = senderemail.replace(oldEmail, newEmail);\n\n// Add senderEmail to emails list\nemails.push(senderEmail);\n\n// Remove duplicate emails\nemails = [...new Set(emails)];\n\n// Join all emails into a single string\nconst emailsString = emails.join(\"", \"");\n\n// Return the result\nreturn {\n  json: {\n    emails: emailsString\n  }\n};\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""922c9f5f-2db2-4034-8491-33208f04e580"",
      ""name"": ""If Some Change"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1100,
        320
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""loose""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""3c3e0e8b-7469-4394-ab99-a9ac5053197a"",
              ""operator"": {
                ""type"": ""array"",
                ""operation"": ""lengthGt"",
                ""rightType"": ""number""
              },
              ""leftValue"": ""={{ $json.changes }}"",
              ""rightValue"": 0
            }
          ]
        },
        ""looseTypeValidation"": true
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""e41fc6b0-ccc7-46c9-9667-79b199aaefc8"",
      ""name"": ""Merge"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        600,
        320
      ],
      ""parameters"": {},
      ""executeOnce"": true,
      ""typeVersion"": 3
    },
    {
      ""id"": ""1bf7f593-a7d9-48f5-be20-d73e97b030bb"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        1400,
        300
      ],
      ""parameters"": {
        ""text"": ""={\n  \""model\"": \""claude-3-5-haiku-20241022\"",\n  \""max_tokens\"": 1000,\n  \""temperature\"": 0.7,\n  \""tools\"": [\n    {\n      \""name\"": \""record_summary\"",\n      \""description\"": \""Record a structured summary of a git diff using well-defined JSON.\"",\n      \""input_schema\"": {\n        \""type\"": \""object\"",\n        \""properties\"": {\n          \""RiskLevel\"": {\n            \""type\"": \""string\"",\n            \""description\"": \""Overall risk assessment of the changes: High/Medium/Low.\""\n          },\n          \""Summary\"": {\n            \""type\"": \""string\"",\n            \""description\"": \""One-line summary of the git diff analysis\""\n          },\n          \""Recommendations\"": {\n            \""type\"": \""array\"",\n            \""items\"": {\n              \""type\"": \""object\"",\n              \""properties\"": {\n                \""Recommendation\"": {\n                  \""type\"": \""string\"",\n                  \""description\"": \""Specific recommendation in HTML format.\""\n                },\n                \""CodeSnippet\"": {\n                  \""type\"": \""string\"",\n                  \""description\"": \""Relevant code full snippet formatted in HTML.\""\n                }\n              },\n              \""required\"": [\""Recommendation\"", \""CodeSnippet\""]\n            }\n          },\n          \""Issues\"": {\n            \""type\"": \""array\"",\n            \""items\"": {\n              \""type\"": \""object\"",\n              \""properties\"": {\n                \""File\"": {\n                  \""type\"": \""string\"",\n                  \""description\"": \""HTML-formatted name of the file where the issue exists.\""\n                },\n                \""PotentialIssue\"": {\n                  \""type\"": \""string\"",\n                  \""description\"": \""HTML-formatted description of the issue.\""\n                },\n                \""Severity\"": {\n                  \""type\"": \""string\"",\n                  \""description\"": \""Severity of the issue: High/Medium/Low in HTML.\""\n                }\n              },\n              \""required\"": [\""File\"", \""PotentialIssue\"", \""Severity\""]\n            }\n          },\n          \""URL\"": {\n            \""type\"": \""string\"",\n            \""description\"": \""Link to the repository in HTML.\""\n          },\n          \""DiffTable\"": {\n            \""type\"": \""object\"",\n            \""properties\"": {\n              \""FileName\"": {\n                \""type\"": \""string\"",\n                \""description\"": \""HTML-formatted name of the file.\""\n              },\n              \""Changes\"": {\n                \""type\"": \""array\"",\n                \""items\"": {\n                  \""type\"": \""object\"",\n                  \""properties\"": {\n                    \""Line\"": {\n                      \""type\"": \""string\"",\n                      \""description\"": \""HTML-formatted line number.\""\n                    },\n                    \""Before\"": {\n                      \""type\"": \""string\"",\n                      \""description\"": \""Code before the change formatted in HTML.\""\n                    },\n                    \""After\"": {\n                      \""type\"": \""string\"",\n                      \""description\"": \""Code after the change formatted in HTML.\""\n                    }\n                  },\n                  \""required\"": [\""Line\"", \""Before\"", \""After\""]\n                }\n              }\n            }\n          },\n          \""TestCases\"": {\n            \""type\"": \""array\"",\n            \""description\"": \""List of test cases the QA team must check.\"",\n            \""items\"": {\n              \""type\"": \""object\"",\n              \""properties\"": {\n                \""TestFor\"": {\n                  \""type\"": \""string\"",\n                  \""description\"": \""Description of the functionality or area to test.\""\n                },\n                \""Steps\"": {\n                  \""type\"": \""string\"",\n                  \""description\"": \""HTML-formatted steps to test the functionality.\""\n                },\n                \""ExpectedOutcome\"": {\n                  \""type\"": \""string\"",\n                  \""description\"": \""HTML-formatted description of the expected result of the test.\""\n                }\n              },\n              \""required\"": [\""TestFor\"", \""Steps\"", \""ExpectedOutcome\""]\n            }\n          }\n        },\n        \""required\"": [\""RiskLevel\"", \""Summary\"", \""Recommendations\"", \""Issues\"", \""URL\"", \""DiffTable\"", \""TestCases\""]\n      }\n    }\n  ],\n  \""tool_choice\"": {\n    \""type\"": \""tool\"",\n    \""name\"": \""record_summary\""\n  },\n  \""messages\"": [\n    {\n      \""role\"": \""user\"",\n      \""content\"": [\n        {\n          \""type\"": \""text\"",\n          \""text\"": \""Analyze the following git diff, highlight potential issues, provide recommendations with code snippets (using HTML formatting for all values), and include the URL. Ensure proper risk evaluation. Mark issues that may break the build or reveal a security risk as High':\""\n        },\n        {\n          \""type\"": \""text\"",\n          \""text\"": \""{{ $json.changes.map(change => JSON.stringify(change.diff).slice(1, -1).replace(/[\\r]/g, '')).join(' ') }}\""\n        },\n        {\n          \""type\"": \""text\"",\n          \""text\"": \""URL: {{ $json.web_url }}\""\n        },\n        {\n          \""type\"": \""text\"",\n          \""text\"": \""Provide a table of test cases for the QA team under the 'TestCases' field.\""\n        }\n      ]\n    }\n  ]\n}"",
        ""options"": {},
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.7
    },
    {
      ""id"": ""f888ea7c-04d4-4192-aa72-10c341da80c8"",
      ""name"": ""Auto-fixing Output Parser"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserAutofixing"",
      ""position"": [
        1540,
        600
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e52227f3-e606-4ec9-b338-c36fe7ca4b6d"",
      ""name"": ""Structured Output Parser"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserStructured"",
      ""position"": [
        1760,
        940
      ],
      ""parameters"": {
        ""schemaType"": ""manual"",
        ""inputSchema"": ""{\n  \""type\"": \""object\"",\n  \""properties\"": {\n    \""RiskLevel\"": {\n      \""type\"": \""string\"",\n      \""description\"": \""Overall risk assessment of the changes: High/Medium/Low.\""\n    },\n    \""Summary\"": {\n      \""type\"": \""string\"",\n      \""description\"": \""One-line summary of the git diff analysis in HTML.\""\n    },\n    \""Recommendations\"": {\n      \""type\"": \""array\"",\n      \""items\"": {\n        \""type\"": \""object\"",\n        \""properties\"": {\n          \""Recommendation\"": {\n            \""type\"": \""string\"",\n            \""description\"": \""Specific recommendation in HTML format.\""\n          },\n          \""CodeSnippet\"": {\n            \""type\"": \""string\"",\n            \""description\"": \""Relevant code snippet formatted in HTML.\""\n          }\n        },\n        \""required\"": [\""Recommendation\"", \""CodeSnippet\""]\n      }\n    },\n    \""Issues\"": {\n      \""type\"": \""array\"",\n      \""items\"": {\n        \""type\"": \""object\"",\n        \""properties\"": {\n          \""File\"": {\n            \""type\"": \""string\"",\n            \""description\"": \""HTML-formatted name of the file where the issue exists.\""\n          },\n          \""PotentialIssue\"": {\n            \""type\"": \""string\"",\n            \""description\"": \""HTML-formatted description of the issue.\""\n          },\n          \""Severity\"": {\n            \""type\"": \""string\"",\n            \""description\"": \""Severity of the issue: High/Medium/Low in HTML.\""\n          }\n        },\n        \""required\"": [\""File\"", \""PotentialIssue\"", \""Severity\""]\n      }\n    },\n    \""URL\"": {\n      \""type\"": \""string\"",\n      \""description\"": \""Link to the repository in HTML.\""\n    },\n    \""DiffTable\"": {\n      \""type\"": \""object\"",\n      \""properties\"": {\n        \""FileName\"": {\n          \""type\"": \""string\"",\n          \""description\"": \""HTML-formatted name of the file.\""\n        },\n        \""Changes\"": {\n          \""type\"": \""array\"",\n          \""items\"": {\n            \""type\"": \""object\"",\n            \""properties\"": {\n              \""Line\"": {\n                \""type\"": \""string\"",\n                \""description\"": \""HTML-formatted line number.\""\n              },\n              \""Before\"": {\n                \""type\"": \""string\"",\n                \""description\"": \""Code before the change formatted in HTML.\""\n              },\n              \""After\"": {\n                \""type\"": \""string\"",\n                \""description\"": \""Code after the change formatted in HTML.\""\n              }\n            },\n            \""required\"": [\""Line\"", \""Before\"", \""After\""]\n          }\n        }\n      }\n    },\n    \""TestCases\"": {\n      \""type\"": \""array\"",\n      \""description\"": \""List of test cases the QA team must check.\"",\n      \""items\"": {\n        \""type\"": \""object\"",\n        \""properties\"": {\n          \""TestFor\"": {\n            \""type\"": \""string\"",\n            \""description\"": \""Description of the functionality or area to test.\""\n          },\n          \""Steps\"": {\n            \""type\"": \""string\"",\n            \""description\"": \""HTML-formatted steps to test the functionality.\""\n          },\n          \""ExpectedOutcome\"": {\n            \""type\"": \""string\"",\n            \""description\"": \""HTML-formatted description of the expected result of the test.\""\n          }\n        },\n        \""required\"": [\""TestFor\"", \""Steps\"", \""ExpectedOutcome\""]\n      }\n    }\n  },\n  \""required\"": [\""RiskLevel\"", \""Summary\"", \""Recommendations\"", \""Issues\"", \""URL\"", \""DiffTable\"", \""TestCases\""]\n}""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""360985e5-1195-4411-ab5e-daf182f3be9b"",
      ""name"": ""Anthropic Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatAnthropic"",
      ""position"": [
        1560,
        940
      ],
      ""parameters"": {
        ""model"": ""claude-3-5-haiku-20241022"",
        ""options"": {}
      },
      ""credentials"": {
        ""anthropicApi"": {
          ""id"": ""9ZxBT7yu9DmfOCQi"",
          ""name"": ""Anthropic account Vishal""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""e912886a-2a4c-4f82-b14b-71db3ee2b616"",
      ""name"": ""Anthropic Chat Model1"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatAnthropic"",
      ""position"": [
        1400,
        940
      ],
      ""parameters"": {
        ""model"": ""claude-3-5-haiku-20241022"",
        ""options"": {}
      },
      ""credentials"": {
        ""anthropicApi"": {
          ""id"": ""9ZxBT7yu9DmfOCQi"",
          ""name"": ""Anthropic account Vishal""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""320b0fa4-f864-4a3c-8d25-f2cac2512fbf"",
      ""name"": ""Comment Back on MR"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        2040,
        480
      ],
      ""parameters"": {
        ""url"": ""=     https://gitlab.com/api/v4/projects/{{ encodeURIComponent( $('Merge').item.json.body.project.path_with_namespace) }}/merge_requests/{{ $('Merge').item.json.body.object_attributes.iid }}/notes"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""jsonHeaders"": ""{\n  \""Authorization\"": \""Bearer glpatdemo -1234567890abcdef1234567890demo\""\n}\n"",
        ""sendHeaders"": true,
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""body"",
              ""value"": ""=# CodeSnape by Quantana\n\n**Summary** | {{ $('AI Agent').item.json.output.Summary }}\n--- | ---\n**Risk Level** | <span style=\""font-weight: bold; font-size: 1.5em; color: {{ $('AI Agent').item.json.output.RiskLevel.replace(/<\\/?b>/g, '') === 'Low' ? '#6B7280' : $('AI Agent').item.json.output.RiskLevel.replace(/<\\/?b>/g, '') === 'Medium' ? '#F59E0B' : '#EF4444' }};\"">{{ $('AI Agent').item.json.output.RiskLevel.replace(/<\\/?b>/g, '') }}</span>\n\n## Recommendations\n\n| Recommendation | Code Snippet |\n| --- | --- |\n{{ $('AI Agent').item.json.output.Recommendations.map(rec => `| ${rec.Recommendation} | \\`${rec.CodeSnippet}\\` |`).join('\\n') }}\n\n## Test Cases\n\n| Test For | Steps | Expected Outcome |\n| --- | --- | --- |\n{{ $('AI Agent').item.json.output.TestCases.map(test => `| ${test.TestFor} | ${test.Steps} | ${test.ExpectedOutcome} |`).join('\\n') }}\n\n## Issues\n\n| File | Potential Issue | Severity |\n| --- | --- | --- |\n{{ $('AI Agent').item.json.output.Issues.map(issue => `| ${issue.File} | ${issue.PotentialIssue} | ${issue.Severity} |`).join('\\n') }}\n\n## Diff Table\n\n| Line | Before | After |\n| --- | --- | --- |\n{{ $('AI Agent').item.json.output.DiffTable.Changes.map(change => `| ${change.Line} | \\`${change.Before}\\` | \\`${change.After}\\` |`).join('\\n') }}""
            }
          ]
        },
        ""specifyHeaders"": ""json""
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""0f8237ca-f3fb-46cc-b173-d42ea4cd447e"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -60,
        140
      ],
      ""parameters"": {
        ""width"": 220,
        ""height"": 360,
        ""content"": ""- Triggers workflow when a merge request (MR) is created or updated.  \n\n- Add GitLab credentials. Select merge_requests event.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""2ddc9aa2-3673-4b64-8ffb-ba7428b67dbe"",
      ""name"": ""GitLab Trigger"",
      ""type"": ""n8n-nodes-base.gitlabTrigger"",
      ""position"": [
        0,
        300
      ],
      ""webhookId"": ""fb878391-270b-47d8-addf-2917c71a3e09"",
      ""parameters"": {
        ""owner"": ""vishalkumar1"",
        ""events"": [
          ""merge_requests""
        ],
        ""repository"": ""istorefront_server""
      },
      ""credentials"": {
        ""gitlabApi"": {
          ""id"": ""tRWT5f3LnLNRPulP"",
          ""name"": ""Gitlab overall""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""f751cca3-781e-4eaa-bd90-da329ed53a7f"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        800,
        160
      ],
      ""parameters"": {
        ""height"": 320,
        ""content"": ""- Fetches code changes (diffs) from GitLab using API.  \n\n- Replace Authorization token with your GitLab API key.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ade683bb-8608-44bb-8047-f6c1b7de8f00"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1060,
        160
      ],
      ""parameters"": {
        ""width"": 220,
        ""height"": 320,
        ""content"": ""- Ensures that MR contains changes before proceeding.\n\n- No setup required.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""281db918-d9a9-43bc-ae51-c3631e2ac494"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1320,
        160
      ],
      ""parameters"": {
        ""width"": 380,
        ""height"": 320,
        ""content"": ""- Calls Claude AI to analyze the diff and generate: Risk Level, Issues, Recommendations, Test Cases.\n\n- Add Anthropic API Key (Claude AI).""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a7a1e7f4-1504-49be-8199-f929fc83f65e"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1480,
        500
      ],
      ""parameters"": {
        ""width"": 360,
        ""height"": 220,
        ""content"": ""- Cleans and refines AI output for structured reporting.\n- No setup required.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""fdbc74ea-a9cd-4811-b5b4-4eeadff28dff"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1700,
        900
      ],
      ""parameters"": {
        ""width"": 220,
        ""height"": 320,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n- Cleans and refines AI output for structured reporting.\n- No setup required.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e402a3ff-daac-4bae-bbb6-f9696c9adab5"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1980,
        0
      ],
      ""parameters"": {
        ""width"": 220,
        ""height"": 320,
        ""content"": ""- Creates a list of developers & QA testers for email notifications.\n\n- Update email mappings for your team.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""21818092-87db-42c6-af12-cbe1632c79ab"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2220,
        0
      ],
      ""parameters"": {
        ""width"": 220,
        ""height"": 320,
        ""content"": ""- Sends an HTML-formatted MR Report to developers & QA teams.\n\n- Add Gmail credentials.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""13e5b3fa-c3a0-4399-baf7-84b99865907c"",
      ""name"": ""Sticky Note9"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1980,
        340
      ],
      ""parameters"": {
        ""width"": 220,
        ""height"": 300,
        ""content"": ""- Posts AI-generated review report as a GitLab MR comment.\n- Replace Authorization token with your GitLab API key.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""REPLACE_WITH_GMAIL_OAUTH_ID"",
      ""name"": ""Send to DL ( Email Notification)"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        2280,
        140
      ],
      ""webhookId"": ""REPLACE_WITH_WEBHOOK_ID"",
      ""parameters"": {
        ""sendTo"": ""={{ $json.emails }}"",
        ""message"": ""=<!DOCTYPE html>\n<html lang=\""en\"">\n<head>\n  <meta charset=\""UTF-8\"">\n  <meta name=\""viewport\"" content=\""width=device-width, initial-scale=1.0\"">\n  <title>CodeSnape by Quantana</title>\n  <style>\n    body {\n      margin: 0;\n      padding: 0;\n      font-family: Arial, sans-serif;\n    }\n    table {\n      border-spacing: 0;\n      border-collapse: collapse;\n      width: 100%;\n      max-width: 960px;\n      margin: 0 auto;\n    }\n    .container {\n      width: 100%;\n      max-width: 960px;\n      margin: 0 auto;\n    }\n    .section {\n      margin-bottom: 20px;\n      padding: 10px;\n    }\n    .header {\n      background-color: #f2f2f2;\n      padding: 20px;\n      text-align: center;\n    }\n    .table-container {\n      background-color: #f9f9f9;\n      padding: 10px;\n      border-radius: 5px;\n      border: 1px solid #ddd;\n    }\n    .report-summary-table, .table-container table {\n      width: 100%;\n      border-collapse: collapse;\n    }\n    .report-summary-table th, .report-summary-table td, \n    .table-container th, .table-container td {\n      border: 1px solid #ddd;\n      padding: 8px;\n      text-align: left;\n    }\n    .report-summary-table th, .table-container th {\n      background-color: #f2f2f2;\n    }\n    .report-summary-table tbody td, .table-container tbody td {\n      background-color: #fff; /* White background for table body */\n    }\n    .summary-text {\n      color: #1D4ED8;\n    }\n    .risk-low {\n      color: #6B7280;\n    }\n    .risk-medium {\n      color: #F59E0B;\n    }\n    .risk-high {\n      color: #EF4444;\n    }\n    code {\n      background-color: #f4f4f4;\n      padding: 2px 4px;\n      border-radius: 3px;\n      font-family: \""Courier New\"", Courier, monospace;\n    }\n  </style>\n</head>\n<body>\n  <table class=\""container\"">\n    <tr>\n      <td class=\""header\"">\n        <h1>CodeSnape by Quantana</h1>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <table class=\""report-summary-table\"">\n          <tr>\n            <td><strong>Summary</strong></td>\n            <td class=\""summary-text\"">{{ $('AI Agent').item.json.output.Summary }}</td>\n            <td><strong>Risk Level</strong></td>\n  <td style=\""\n    font-weight: bold;\n    font-size: 1.5em;\n    color: \n      {{ $('AI Agent').item.json.output.RiskLevel.replace(/<\\/?b>/g, '') === 'Low' ? '#6B7280' : \n         $('AI Agent').item.json.output.RiskLevel.replace(/<\\/?b>/g, '') === 'Medium' ? '#F59E0B' : \n         '#EF4444' }};\n    \"">\n    {{ $('AI Agent').item.json.output.RiskLevel.replace(/<\\/?b>/g, '') }}\n  </td>\n          </tr>\n          <tr>\n            <td><strong>Project Name</strong></td>\n            <td>{{ $('Merge').first().json.body.project.name }}</td>\n            <td><strong>User Name</strong></td>\n            <td>{{ $('Merge').first().json.body.user.name }}</td>\n          </tr>\n          <tr>\n            <td><strong>Created Date</strong></td>\n            <td colspan=\""3\"">\n              {{ $('Merge').first().json.body.object_attributes.created_at }} (UTC)\n              <br />\n{{ new Date($('Merge').first().json.body.object_attributes.created_at).toLocaleString('en-IN', { \n  timeZone: 'Asia/Kolkata', \n  day: '2-digit', \n  month: 'short', \n  year: 'numeric', \n  hour: '2-digit', \n  minute: '2-digit', \n  second: '2-digit', \n  hour12: true \n}).replace(',', '') }} (IST)\n              </span>\n            </td>\n          </tr>\n        </table>\n      </td>\n    </tr>\n    <tr>\n      <td class=\""section\"">\n        <h2>Recommendations</h2>\n        <table class=\""table-container\"">\n          <thead>\n            <tr>\n              <th>Recommendation</th>\n              <th>Code Snippet</th>\n            </tr>\n          </thead>\n          <tbody>\n            {{ $('AI Agent').item.json.output.Recommendations.map(rec => `\n              <tr>\n                <td>${rec.Recommendation}</td>\n                <td><code>${rec.CodeSnippet}</code></td>\n              </tr>\n            `).join('') }}\n          </tbody>\n        </table>\n      </td>\n    </tr>\n    <tr>\n      <td class=\""section\"">\n        <h2>Test Cases</h2>\n        <table class=\""table-container\"">\n          <thead>\n            <tr>\n              <th>Test For</th>\n              <th>Steps</th>\n              <th>Expected Outcome</th>\n            </tr>\n          </thead>\n          <tbody>\n            {{ $('AI Agent').item.json.output.TestCases.map(test => `\n              <tr>\n                <td>${test.TestFor}</td>\n                <td>${test.Steps}</td>\n                <td>${test.ExpectedOutcome}</td>\n              </tr>\n            `).join('') }}\n          </tbody>\n        </table>\n      </td>\n    </tr>\n    <tr>\n      <td class=\""section\"">\n        <h2>Issues</h2>\n        <table class=\""table-container\"">\n          <thead>\n            <tr>\n              <th>File</th>\n              <th>Potential Issue</th>\n              <th>Severity</th>\n            </tr>\n          </thead>\n          <tbody>\n            {{ $('AI Agent').item.json.output.Issues.map(issue => `\n              <tr>\n                <td>${issue.File}</td>\n                <td>${issue.PotentialIssue}</td>\n                <td>${issue.Severity}</td>\n              </tr>\n            `).join('') }}\n          </tbody>\n        </table>\n      </td>\n    </tr>\n    <tr>\n      <td class=\""section\"">\n        <h2>Diff Table</h2>\n        <table class=\""table-container\"">\n          <thead>\n            <tr>\n              <th>Line</th>\n              <th>Before</th>\n              <th>After</th>\n            </tr>\n          </thead>\n          <tbody>\n            {{ $('AI Agent').item.json.output.DiffTable.Changes.map(change => `\n              <tr>\n                <td>${change.Line}</td>\n                <td><code>${change.Before}</code></td>\n                <td><code>${change.After}</code></td>\n              </tr>\n            `).join('') }}\n          </tbody>\n        </table>\n      </td>\n    </tr>\n    <tr>\n      <td class=\""section\"">\n        <h2>URL</h2>\n        <p><a href=\""{{ $('Extract Diff').item.json.web_url }}\"" target=\""_blank\"">{{ $('Extract Diff').item.json.web_url }}</a></p>\n      </td>\n    </tr>\n<tr><td>Email Generated by CodeSnape from <a href=“https://quantana.com.au/ai”>Quantana</a> </td></tr>\n  </table>\n</body>\n</html>"",
        ""options"": {
          ""appendAttribution"": true
        },
        ""subject"": ""=[{{ $('AI Agent').item.json.output.RiskLevel.replace(/<\\/?b>/g, '') }}] - CodeSnape for [{{ $('Merge').first().json.body.project.name }}] by [{{ $('Merge').first().json.body.user.name }}] at\n{{ $('Merge').first().json.body.object_attributes.created_at }}\n""
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""REPLACE_WITH_GMAIL_OAUTH_ID"",
          ""name"": ""Vishal Gmail""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""REPLACE_WITH_GITLAB_CRED_ID"",
      ""name"": ""GitLab Trigger1"",
      ""type"": ""n8n-nodes-base.gitlabTrigger"",
      ""position"": [
        0,
        540
      ],
      ""webhookId"": ""REPLACE_WITH_WEBHOOK_ID"",
      ""parameters"": {
        ""owner"": ""vishalkumar1"",
        ""events"": [
          ""merge_requests""
        ],
        ""repository"": ""istorefront_server""
      },
      ""credentials"": {
        ""gitlabApi"": {
          ""id"": ""tRWT5f3LnLNRPulP"",
          ""name"": ""Gitlab overall""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""REPLACE_WITH_GITLAB_CRED_ID"",
      ""name"": ""GitLab Trigger2"",
      ""type"": ""n8n-nodes-base.gitlabTrigger"",
      ""position"": [
        0,
        -20
      ],
      ""webhookId"": ""REPLACE_WITH_WEBHOOK_ID"",
      ""parameters"": {
        ""owner"": ""vishalkumar1"",
        ""events"": [
          ""merge_requests""
        ],
        ""repository"": ""istorefront_server""
      },
      ""credentials"": {
        ""gitlabApi"": {
          ""id"": ""tRWT5f3LnLNRPulP"",
          ""name"": ""Gitlab overall""
        }
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""f1d633b3-d4d8-43aa-8a6b-7c4acbc67679"",
  ""connections"": {
    ""Merge"": {
      ""main"": [
        [
          {
            ""node"": ""Extract Diff"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""AI Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Distribution List Generator"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Comment Back on MR"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract Diff"": {
      ""main"": [
        [
          {
            ""node"": ""If Some Change"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""GitLa",
AI-Powered Multi-Social Media Post Automation: Google Trends & Perplexity AI,"{
  ""id"": ""vJw8YoQhdA5CXGeB"",
  ""meta"": {
    ""instanceId"": ""f2cf6301a998e16084609c8635767c7f2fe71603e7ba21b5457aa517ce5164cb"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Social_media_post _automation_from_google_trends_and _perplexity copy"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""39b1272c-3700-4ce6-9aea-46b3a647fc26"",
      ""name"": ""X1"",
      ""type"": ""n8n-nodes-base.twitter"",
      ""position"": [
        -1500,
        0
      ],
      ""parameters"": {
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""twitterOAuth2Api"": {
          ""id"": ""tNwQsAkmjk3b0Dp6"",
          ""name"": ""X account""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""4bab1fd3-1c21-4438-8cc1-e0d0fdde390e"",
      ""name"": ""Facebook Graph API1"",
      ""type"": ""n8n-nodes-base.facebookGraphApi"",
      ""position"": [
        -1500,
        -400
      ],
      ""parameters"": {
        ""options"": {},
        ""httpRequestMethod"": ""POST""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ffcd9aa8-daef-41dc-8ad3-b9a55a817b8b"",
      ""name"": ""LinkedIn1"",
      ""type"": ""n8n-nodes-base.linkedIn"",
      ""position"": [
        -1480,
        -200
      ],
      ""parameters"": {
        ""text"": ""={{ $json['choices[0].message.content'] }}"",
        ""person"": ""[CONFIGURE_YOUR_LINKEDIN_PERSON_ID]"",
        ""authentication"": ""communityManagement"",
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""linkedInCommunityManagementOAuth2Api"": {
          ""id"": null,
          ""name"": ""[CONFIGURE_YOUR_LINKEDIN_CREDENTIALS]""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a2c2c5e5-e9b1-4744-9883-c63cda3306c9"",
      ""name"": ""Google Sheets2"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        -1280,
        -200
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Topic"": ""={{ $('Choosing Topic').item.json.message.content }}"",
            ""Status"": ""Posted"",
            ""AI Output"": ""={{ $json['choices[0].message.content'] }}"",
            ""Date Posted"": ""={{ $('Schedule Trigger').item.json.timestamp }}""
          },
          ""schema"": [
            {
              ""id"": ""Topic"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Topic"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Status"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Status"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""AI Output"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""AI Output"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Date Posted"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Date Posted"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [
            ""Topic""
          ],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""appendOrUpdate"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""[YOUR_GOOGLE_SHEETS_URL]"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""[YOUR_GOOGLE_SHEETS_DOCUMENT_ID]"",
          ""cachedResultUrl"": ""[YOUR_GOOGLE_SHEETS_URL]"",
          ""cachedResultName"": ""LinkedIn Automation""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": null,
          ""name"": ""[CONFIGURE_YOUR_GOOGLE_SHEETS_CREDENTIALS]""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""51d3733a-004c-4938-9575-d227588140b7"",
      ""name"": ""Split Out"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        -1720,
        -200
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""choices[0].message.content""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""cc9b1e41-aaeb-43fb-a283-e3faf397cc73"",
      ""name"": ""Schedule Trigger"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        -3420,
        -200
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {
              ""triggerAtHour"": 6
            },
            {
              ""triggerAtHour"": 18
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""01d0a3b7-66db-4032-b7d7-7a7b273920a7"",
      ""name"": ""Research Topic- Perplexity"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -2160,
        -200
      ],
      ""parameters"": {
        ""url"": ""https://api.perplexity.ai/chat/completions"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""model\"": \""sonar-pro\"",\n  \""messages\"": [\n    {\n      \""role\"": \""system\"",\n      \""content\"": \""Act as a skilled editor revising AI-generated text to sound authentically human. Follow these rules:\\n\\n1. Punctuation Adjustments\\n   - Replace em dashes, semicolons, or rephrase sentences where appropriate.\\n   - Avoid semicolons in casual contexts; use periods or conjunctions (e.g., 'and,' 'but').\\n   - Remove mid-sentence ellipses unless mimicking deliberate hesitation.\\n   - Limit parenthetical asides; integrate explanations into the main sentence.\\n   - Use colons sparingly.\\n\\n2. Language\\n   - Replace hedging phrases with direct statements.\\n   - Avoid stock transitions.\\n   - Vary repetitive terms.\\n   - Use contractions in informal contexts.\\n   - Replace overly formal words with simpler alternatives.\\n\\n3. Style\\n   - Prioritize concise, varied sentence lengths.\\n   - Allow minor imperfections.\\n   - Maintain the core message but adjust tone to match the audience.\""\n    },\n    {\n      \""role\"": \""user\"",\n      \""content\"": \""You are a researcher and expert copywriter in a business development team of an AI Automation Agency. Generate exactly one LinkedIn post that adheres to LinkedIn's API formatting guidelines and is easy for humans to read. Follow these rules:\\n\\nStructure:\\n1. Hook: Start with a bold opening line using Unicode characters (e.g., \\\""𝐁𝐎𝐋𝐃 𝐒𝐓𝐀𝐓𝐄𝐌𝐄𝐍𝐓\\\"").\\n2. Body: Use short paragraphs (1-3 sentences) separated by \\\\n\\\\n.\\n3. Use bullet points (•) for key features or highlights.\\n4. End with a clear call-to-action (e.g., \\\""Comment below with your thoughts!\\\"").\\n\\nFormatting Requirements:\\n- Remove all numeric citation brackets like [2], [3], [4] from the text.\\n- Instead of citation brackets, if needed, add a brief phrase like \\\""according to Google I/O 2025\\\"" or \\\""as reported by DeepMind\\\"" naturally within the sentence.\\n- No Markdown or rich text formatting.\\n- Use Unicode characters or emojis for emphasis (e.g., ★, 🚀).\\n- Include up to 3 relevant hashtags at the end (e.g., #AI #Automation).\\n- For URLs or references, use placeholders like [Link] instead of raw URLs.\\n- If mentioning users or companies, use official LinkedIn URN format (e.g., \\\""urn:li:organization:123456\\\"").\\n\\nContent Rules:\\n- Max 1,200 characters.\\n- Avoid promotional language.\\n- Include one statistical claim or industry insight.\\n- Add one personal anecdote or professional observation.\\n\\nReturn the post as plain text without additional commentary.\\n\\nInput: {{ $json.message.content }}\""\n    }\n  ]\n}\n"",
        ""sendBody"": true,
        ""specifyBody"": ""json"",
        ""authentication"": ""genericCredentialType"",
        ""genericAuthType"": ""httpHeaderAuth""
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": null,
          ""name"": ""[CONFIGURE_YOUR_PERPLEXITY_API_KEY]""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""1b226459-7dc7-46c2-9b02-769cd213e927"",
      ""name"": ""2 Most Trending"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -2980,
        -200
      ],
      ""parameters"": {
        ""mode"": ""raw"",
        ""options"": {},
        ""jsonOutput"": ""={\n  \""most-trending\"": {\n\n    \""#1\"": { \n\n      \""query\"":\""{{ $json.related_queries.rising[0].query }}\"",\n      \""score\"":\""{{ $json.related_queries.rising[0].extracted_value }}\""\n\n    },\n\n\n    \""#2\"": { \n\n      \""query\"":\""{{ $json.related_queries.rising[1].query }}\"",\n      \""score\"":\""{{ $json.related_queries.rising[1].extracted_value }}\""\n\n    }\n  }\n}""
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""75ccf42a-7dc8-4cc8-9d5d-202ff4b2b795"",
      ""name"": ""High search volume keywords"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        -2760,
        -200
      ],
      ""parameters"": {
        ""jsCode"": ""// Get the top array from your JSON\nconst topItems = $('Google Trends').first().json.related_queries.top;\n\n// Filter the items to only include those with extracted_value > 30\nconst filtered = topItems.filter(item => item.extracted_value > 30);\n\n// Map the filtered items to their query values and join them with commas\nconst resultString = filtered.map(item => item.query).join(', ');\n\n// Return the result in a new JSON property\nreturn [{ json: { result: resultString } }];\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""c85503d1-76e7-4dd7-a2e3-69966f69e0cd"",
      ""name"": ""Choosing Topic"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        -2540,
        -200
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-3.5-turbo"",
          ""cachedResultName"": ""GPT-3.5-TURBO""
        },
        ""options"": {},
        ""messages"": {
          ""values"": [
            {
              ""content"": ""=You are part of a team that creates world class blog posts. Your job is to choose the topic for each blog post. \n\nThe blog posts are posted on the website of a [COMPANY NAME + DESCRIPTION + PRODUCTS + TARGET MARKET]. The blog posts are mainly posted as part of an SEO campaign to get [YOUR_COMPANY] to rank high for its products and services.\n\nIn this instance, you are given a list of 2 keywords which have been trending the most on Google news search over the past few days. \n\nYour job is to pick one which you think would make for the most relevant blog post with the best SEO outcomes for the client. \n\nThe keywords have two attributes: \n\n1. query: This attribute determines the search query that users have been searching for which is trending. \n\n2. value: This attribute determines what percentage increase the keyword has seen compared to previous periods (i.e. the increase in search volume). \n\nYou must choose one out of the taking into consideration both the relevance of the keyword for [YOUR_COMPANY]'s SEO efforts and the comparative trendiness determined by the value attribute. \n\nOutput the keyword you decided to post a blog on and nothing else. Don't explain your reasoning. Just output the keyword. \n\nThis instance: \n\nKeyword 1:\n{{ $('2 Most Trending').item.json['most-trending']['#1'].toJsonString() }} \n\nKeyword2: \n{{ $('2 Most Trending').item.json['most-trending']['#2'].toJsonString() }} ""
            }
          ]
        }
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": null,
          ""name"": ""[CONFIGURE_YOUR_OPENAI_API_KEY]""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""37d7191c-878e-424e-90be-3fe2bdff625a"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -3240,
        -280
      ],
      ""parameters"": {
        ""width"": 400,
        ""height"": 240,
        ""content"": ""## Find Trend\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9987f2ae-0ec1-48b5-81f5-44a2f5a705b7"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -2820,
        -280
      ],
      ""parameters"": {
        ""width"": 200,
        ""height"": 240,
        ""content"": ""## High Volume Keywords\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""f4a25815-10e6-409c-a89a-baa2efecb119"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -2580,
        -280
      ],
      ""parameters"": {
        ""width"": 340,
        ""height"": 240,
        ""content"": ""## Choosing Blog Topic\n\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c9206a42-1471-4a87-99ad-25bd5d318fb4"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -2200,
        -280
      ],
      ""parameters"": {
        ""width"": 600,
        ""height"": 240,
        ""content"": ""## Research\n\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""089fdbf7-f1a0-4cd5-9769-caf94b05a939"",
      ""name"": ""Google Trends"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -3200,
        -200
      ],
      ""parameters"": {
        ""url"": ""https://serpapi.com/search"",
        ""options"": {},
        ""sendQuery"": true,
        ""queryParameters"": {
          ""parameters"": [
            {
              ""name"": ""q"",
              ""value"": ""=ai agents""
            },
            {
              ""name"": ""geo"",
              ""value"": ""US""
            },
            {
              ""name"": ""hl"",
              ""value"": ""en""
            },
            {
              ""name"": ""date"",
              ""value"": ""={{ $now.minus({ days: 3 }).format('yyyy-MM-dd') }} {{ $now.format('yyyy-MM-dd') }}""
            },
            {
              ""name"": ""data_type"",
              ""value"": ""RELATED_QUERIES""
            },
            {
              ""name"": ""engine"",
              ""value"": ""google_trends""
            },
            {
              ""name"": ""api_key"",
              ""value"": ""[YOUR_SERPAPI_KEY]""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""13f0ea49-1dbe-4b33-9c73-ebe9d3099003"",
      ""name"": ""Wait"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        -1940,
        -200
      ],
      ""webhookId"": ""[GENERATED_WEBHOOK_ID]"",
      ""parameters"": {
        ""amount"": 10
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""c582949e-858f-4aa7-984b-0bd94212009f"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1560,
        -540
      ],
      ""parameters"": {
        ""height"": 800,
        ""content"": ""## Multi Social Media Posting""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""77f592f4-fc6c-4633-ba2e-e671b18d6a1b"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1300,
        -280
      ],
      ""parameters"": {
        ""height"": 260,
        ""content"": ""## Status update""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""9211dd42-49be-406b-94aa-297f48c13f3e"",
  ""connections"": {
    ""Wait"": {
      ""main"": [
        [
          {
            ""node"": ""Split Out"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""LinkedIn1"": {
      ""main"": [
        [
          {
            ""node"": ""Google Sheets2"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Split Out"": {
      ""main"": [
        [
          {
            ""node"": ""X1"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Facebook Graph API1"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""LinkedIn1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Google Trends"": {
      ""main"": [
        [
          {
            ""node"": ""2 Most Trending"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Choosing Topic"": {
      ""main"": [
        [
          {
            ""node"": ""Research Topic- Perplexity"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""2 Most Trending"": {
      ""main"": [
        [
          {
            ""node"": ""High search volume keywords"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Schedule Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""Google Trends"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Research Topic- Perplexity"": {
      ""main"": [
        [
          {
            ""node"": ""Wait"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""High search volume keywords"": {
      ""main"": [
        [
          {
            ""node"": ""Choosing Topic"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Clone Viral TikToks with AI Avatars & Auto-Post to 9 Platforms using Perplexity & Blotato,"{
  ""id"": ""21dF4yje1iQpP4jQ"",
  ""meta"": {
    ""instanceId"": ""a2b23892dd6989fda7c1209b381f5850373a7d2b85609624d7c2b7a092671d44"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""💥Clone a viral TikTok and auto-post it to 9 platforms using Perplexity & Blotato vide"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""8ad59e84-639c-4a44-afdc-611d15f32d7f"",
      ""name"": ""Assign Social Media IDs"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -80,
        920
      ],
      ""parameters"": {
        ""mode"": ""raw"",
        ""options"": {},
        ""jsonOutput"": ""{\n  \""instagram_id\"": \""0000\"",\n  \""youtube_id\"": \""0000\"",\n  \""threads_id\"": \""0000\"",\n  \""tiktok_id\"": \""0000\"",\n  \""facebook_id\"": \""0000\"",\n  \""facebook_page_id\"": \""000000000000\"",\n  \""twitter_id\"": \""0000\"",\n  \""linkedin_id\"": \""0000\"",\n  \""pinterest_id\"": \""0000\"",\n  \""pinterest_board_id\"": \""00000000000000000000\"",\n  \""bluesky_id\"": \""0000\""\n}\n""
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""2e243d6a-81ef-487f-8852-bd48cfaf5ad8"",
      ""name"": ""Upload Video to Blotato"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        140,
        920
      ],
      ""parameters"": {
        ""url"": ""https://backend.blotato.com/v2/media"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""url"",
              ""value"": ""={{ $('Update Final Video URL in Sheet').item.json['URL de la vidéo'] }}""
            }
          ]
        },
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""blotato-api-key"",
              ""value"": ""YOUR_API_KEY""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""f84ff66b-9270-494f-80e7-29ad2fd51b4d"",
      ""name"": ""INSTAGRAM"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        420,
        680
      ],
      ""parameters"": {
        ""url"": ""https://backend.blotato.com/v2/posts"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""post\"": {\n    \""accountId\"": \""{{ $('Assign Social Media IDs').item.json.instagram_id }}\"",\n    \""target\"": {\n      \""targetType\"": \""instagram\""\n    },\n    \""content\"": {\n      \""text\"": \""{{ $('Save Rewritten Video to Google Sheets').item.json.Caption }}\"",\n      \""platform\"": \""instagram\"",\n      \""mediaUrls\"": [\n        \""{{ $json.url }}\""\n      ]\n    }\n  }\n}\n\n"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""blotato-api-key"",
              ""value"": ""=YOUR_API_KEY""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""3776e592-07be-47e2-89a8-f8d338f0c25e"",
      ""name"": ""YOUTUBE"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        640,
        680
      ],
      ""parameters"": {
        ""url"": ""https://backend.blotato.com/v2/posts"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""post\"": {\n    \""accountId\"": \""{{ $('Assign Social Media IDs').item.json.youtube_id }}\"",\n    \""target\"": {\n      \""targetType\"": \""youtube\"",\n      \""title\"": \""{{ $('Save Rewritten Video to Google Sheets').item.json['Texte superposé'] }}\"",\n      \""privacyStatus\"": \""unlisted\"",\n      \""shouldNotifySubscribers\"": \""false\""\n    },\n    \""content\"": {\n      \""text\"": \""{{ $('Save Rewritten Video to Google Sheets').item.json.Caption }}\"",\n      \""platform\"": \""youtube\"",\n      \""mediaUrls\"": [\n        \""{{ $json.url }}\""\n      ]\n    }\n  }\n}\n"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""blotato-api-key"",
              ""value"": ""YOUR_API_KEY""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""c590765f-deb4-4221-ada7-37c700656ff1"",
      ""name"": ""TIKTOK"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        840,
        680
      ],
      ""parameters"": {
        ""url"": ""https://backend.blotato.com/v2/posts"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""post\"": {\n    \""accountId\"": \""{{ $('Assign Social Media IDs').item.json.tiktok_id }}\"",\n    \""target\"": {\n      \""targetType\"": \""tiktok\"",\n      \""isYourBrand\"": \""false\"", \n      \""disabledDuet\"": \""false\"",\n      \""privacyLevel\"": \""PUBLIC_TO_EVERYONE\"",\n      \""isAiGenerated\"": \""true\"",\n      \""disabledStitch\"": \""false\"",\n      \""disabledComments\"": \""false\"",\n      \""isBrandedContent\"": \""false\""\n      \n    },\n    \""content\"": {\n      \""text\"": \""{{ $('Save Rewritten Video to Google Sheets').item.json.Caption }}\"",\n      \""platform\"": \""tiktok\"",\n      \""mediaUrls\"": [\n        \""{{ $json.url }}\""\n      ]\n    }\n  }\n}\n"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""blotato-api-key"",
              ""value"": ""YOUR_API_KEY""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""9a9dc42a-20b6-427d-a7d9-08f4ab924e9e"",
      ""name"": ""FACEBOOK"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        420,
        920
      ],
      ""parameters"": {
        ""url"": ""https://backend.blotato.com/v2/posts"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""post\"": {\n    \""accountId\"": \""{{ $('Assign Social Media IDs').item.json.facebook_id }}\"",\n    \""target\"": {\n      \""targetType\"": \""facebook\"",\n      \""pageId\"": \""{{ $('Assign Social Media IDs').item.json.facebook_page_id }}\""\n\n      \n    },\n    \""content\"": {\n      \""text\"": \""{{ $('Save Rewritten Video to Google Sheets').item.json.Caption }}\"",\n      \""platform\"": \""facebook\"",\n      \""mediaUrls\"": [\n        \""{{ $json.url }}\""\n      ]\n    }\n  }\n}"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""blotato-api-key"",
              ""value"": ""YOUR_API_KEY""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""987a372a-d27e-4a3e-a8b7-b2085463c05a"",
      ""name"": ""THREADS"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        640,
        920
      ],
      ""parameters"": {
        ""url"": ""https://backend.blotato.com/v2/posts"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""post\"": {\n    \""accountId\"": \""{{ $('Assign Social Media IDs').item.json.threads_id }}\"",\n    \""target\"": {\n      \""targetType\"": \""threads\""\n      \n    },\n    \""content\"": {\n      \""text\"": \""{{ $('Save Rewritten Video to Google Sheets').item.json.Caption }}\"",\n      \""platform\"": \""threads\"",\n      \""mediaUrls\"": [\n        \""{{ $json.url }}\""\n      ]\n    }\n  }\n}\n"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""blotato-api-key"",
              ""value"": ""YOUR_API_KEY""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""e9d66412-e27d-47f0-9d17-5ec36fe81859"",
      ""name"": ""TWETTER"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        840,
        920
      ],
      ""parameters"": {
        ""url"": ""https://backend.blotato.com/v2/posts"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""post\"": {\n    \""accountId\"": \""{{ $('Assign Social Media IDs').item.json.twitter_id }}\"",\n    \""target\"": {\n      \""targetType\"": \""twitter\""\n      \n    },\n    \""content\"": {\n      \""text\"": \""{{ $('Save Rewritten Video to Google Sheets').item.json.Caption }}\"",\n      \""platform\"": \""twitter\"",\n      \""mediaUrls\"": [\n        \""{{ $json.url }}\""\n      ]\n    }\n  }\n}\n"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""blotato-api-key"",
              ""value"": ""=YOUR_API_KEY""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""9e7e0fa8-3f0e-4111-9d78-96123ccec1c8"",
      ""name"": ""LINKEDIN"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        420,
        1160
      ],
      ""parameters"": {
        ""url"": ""https://backend.blotato.com/v2/posts"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""post\"": {\n    \""accountId\"": \""{{ $('Assign Social Media IDs').item.json.linkedin_id }}\"",\n    \""target\"": {\n      \""targetType\"": \""linkedin\""\n      \n    },\n    \""content\"": {\n      \""text\"": \""{{ $('Save Rewritten Video to Google Sheets').item.json.Caption }}\"",\n      \""platform\"": \""linkedin\"",\n      \""mediaUrls\"": [\n        \""{{ $json.url }}\""\n      ]\n    }\n  }\n}\n"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""blotato-api-key"",
              ""value"": ""YOUR_API_KEY""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""3368ee92-d40f-482d-8174-53bfd188d2c8"",
      ""name"": ""BLUESKY"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        640,
        1160
      ],
      ""parameters"": {
        ""url"": ""https://backend.blotato.com/v2/posts"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""= {\n  \""post\"": {\n    \""accountId\"": \""{{ $('Assign Social Media IDs').item.json.bluesky_id }}\"",\n    \""target\"": {\n      \""targetType\"": \""bluesky\""\n      \n    },\n    \""content\"": {\n      \""text\"": \""{{ $('Save Rewritten Video to Google Sheets').item.json.Caption }}\"",\n      \""platform\"": \""bluesky\"",\n      \""mediaUrls\"": [\n        \""https://pbs.twimg.com/media/GE8MgIiWEAAfsK3.jpg\""\n      ]\n    }\n  }\n}\n"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""blotato-api-key"",
              ""value"": ""YOUR_API_KEY""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""fea89732-09cc-420d-b2e0-f0f4160d27cb"",
      ""name"": ""PINTEREST"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        840,
        1160
      ],
      ""parameters"": {
        ""url"": ""https://backend.blotato.com/v2/posts"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""post\"": {\n    \""accountId\"": \""{{ $('Assign Social Media IDs').item.json.pinterest_id }}\"",\n    \""target\"": {\n      \""targetType\"": \""pinterest\"",\n      \""boardId\"": \""{{ $('Assign Social Media IDs').item.json.pinterest_board_id }}\""      \n    },\n    \""content\"": {\n      \""text\"": \""{{ $('Save Rewritten Video to Google Sheets').item.json.Caption }}\"",\n      \""platform\"": \""pinterest\"",\n      \""mediaUrls\"": [\n        \""https://pbs.twimg.com/media/GE8MgIiWEAAfsK3.jpg\""\n      ]\n    }\n  }\n}\n\n"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""blotato-api-key"",
              ""value"": ""YOUR_API_KEY""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""d1400430-0340-4194-b5eb-bd3ae150d577"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -740,
        -380
      ],
      ""parameters"": {
        ""width"": 2460,
        ""height"": 300,
        ""content"": ""# 🟫 STEP 1 — Clone a viral TikTok video""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""91bf1e19-3e2c-44b3-a7d0-8bea3f80eb04"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -740,
        -20
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 1920,
        ""height"": 320,
        ""content"": ""# 🟦 STEP 2 — Suggest new content idea\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a831f320-0b5f-4853-8b9c-0ddeaaf84083"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -740,
        340
      ],
      ""parameters"": {
        ""width"": 1920,
        ""height"": 300,
        ""content"": ""# 🟪 STEP 3 — Create the new video with your avatar\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3bb22fc4-b5b4-4323-9039-5b6cf0458084"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -740,
        660
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 1920,
        ""height"": 680,
        ""content"": ""# 🟥 STEP 4 — Publish to 9 platforms\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6ad81fc8-d79d-44d1-bf17-cdea14e915d1"",
      ""name"": ""Trigger: Get TikTok URL via Telegram"",
      ""type"": ""n8n-nodes-base.telegramTrigger"",
      ""position"": [
        -620,
        -280
      ],
      ""webhookId"": ""9a749f58-0f17-45ef-80a9-0e8d17bde5b5"",
      ""parameters"": {
        ""updates"": [
          ""message""
        ],
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""fO6eyZMLBk66Au44"",
          ""name"": ""Telegram account 5""
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""4047a3b1-1fb9-40da-b127-f2e7432a649e"",
      ""name"": ""Download TikTok Video (RapidAPI)"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -400,
        -280
      ],
      ""parameters"": {
        ""url"": ""=https://tiktok-download-video1.p.rapidapi.com/getVideo?url={{ $json.message.text }}"",
        ""options"": {},
        ""sendHeaders"": true,
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-rapidapi-host"",
              ""value"": ""tiktok-download-video1.p.rapidapi.com""
            },
            {
              ""name"": ""x-rapidapi-key"",
              ""value"": ""YOUR_API_KEY""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""6ec78da8-f197-42c0-b631-055bd7bf1eef"",
      ""name"": ""Extract Video Thumbnail"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -180,
        -280
      ],
      ""parameters"": {
        ""url"": ""={{ $json.data.origin_cover }}"",
        ""options"": {}
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""f17f39cd-d9f4-4b1b-85de-ade8a5492542"",
      ""name"": ""Upload Thumbnail to Cloudinary"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        40,
        -280
      ],
      ""parameters"": {
        ""url"": ""https://api.cloudinary.com/v1_1/YOUR_ID/image/upload"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""contentType"": ""multipart-form-data"",
        ""authentication"": ""genericCredentialType"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""file"",
              ""parameterType"": ""formBinaryData"",
              ""inputDataFieldName"": ""data""
            },
            {
              ""name"": ""upload_preset"",
              ""value"": ""n8n_clone""
            }
          ]
        },
        ""genericAuthType"": ""httpBasicAuth""
      },
      ""credentials"": {
        ""httpBasicAuth"": {
          ""id"": ""K1UGehJnDI8N25UA"",
          ""name"": ""Unnamed credential""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""160a5960-1312-4c5f-b066-f1ecc30202e6"",
      ""name"": ""Analyze Thumbnail (GPT-4o Vision)"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        260,
        -280
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o"",
          ""cachedResultName"": ""GPT-4O""
        },
        ""options"": {},
        ""resource"": ""image"",
        ""imageUrls"": ""={{ $json.url }}"",
        ""operation"": ""analyze""
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""6h3DfVhNPw9I25nO"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""14a42907-4bc7-4c4a-9ced-a2a23bb88343"",
      ""name"": ""Extract Overlay Text (GPT-4o)"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        480,
        -280
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o"",
          ""cachedResultName"": ""GPT-4O""
        },
        ""options"": {},
        ""messages"": {
          ""values"": [
            {
              ""content"": ""=Identify the primary text located at the top of the image described above:\n{{ $json.content }}\n\nReturn only that specific top text as the output.\n\nDo not include any quotation marks.\n\nFocus only on the top section's text in the image and disregard any other content.""
            }
          ]
        }
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""6h3DfVhNPw9I25nO"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""2c183a03-3bb5-45b8-8bc9-5981f0bc30b5"",
      ""name"": ""Download TikTok Audio"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        840,
        -280
      ],
      ""parameters"": {
        ""url"": ""={{ $('Download TikTok Video (RapidAPI)').item.json.data.music }}"",
        ""options"": {}
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""c6614b8c-6415-4094-a800-302ae8711d14"",
      ""name"": ""Transcribe Audio to Script (GPT)"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        1060,
        -280
      ],
      ""parameters"": {
        ""options"": {},
        ""resource"": ""audio"",
        ""operation"": ""transcribe""
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""6h3DfVhNPw9I25nO"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""02ddecfe-5a85-4247-9a33-fc95c42775a0"",
      ""name"": ""Generate Unique Template ID"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        1280,
        -280
      ],
      ""parameters"": {
        ""jsCode"": ""// Utility to create a random alphanumeric ID\nfunction createUniqueId(length = 12) {\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let id = '';\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * characters.length);\n    id += characters[randomIndex];\n  }\n  return id;\n}\n\n// Return the ID in the expected output structure\nreturn [\n  {\n    json: {\n      code: createUniqueId()\n    }\n  }\n];""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""e7e17a73-c75d-413d-842b-aecd0da25eb7"",
      ""name"": ""Save Original Video to Google Sheets"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        1500,
        -280
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Caption"": ""={{ $('Download TikTok Video (RapidAPI)').item.json.data.title }}"",
            ""ID du modèle"": ""={{ $json.code }}"",
            ""Lien de la vidéo"": ""={{ $('Trigger: Get TikTok URL via Telegram').item.json.message.text }}"",
            ""Modèle de script vidéo"": ""={{ $('Transcribe Audio to Script (GPT)').item.json.text }}"",
            ""Modèle de texte superposé"": ""={{ $('Download TikTok Audio').item.json.message.content }}""
          },
          ""schema"": [
            {
              ""id"": ""ID du modèle"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""ID du modèle"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Lien de la vidéo"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Lien de la vidéo"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Modèle de texte superposé"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Modèle de texte superposé"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Modèle de script vidéo"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Modèle de script vidéo"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Caption"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Caption"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1SoYJvZbVNn4L1FNfk9eFqx_vGlCsMxgw8bx0DVFgBLY/edit#gid=0"",
          ""cachedResultName"": ""Template""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""=""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""51us92xkOlrvArhV"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""e6647507-595e-4f13-9c06-818f90b7759a"",
      ""name"": ""Suggest Similar Idea (Perplexity)"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -620,
        60
      ],
      ""parameters"": {
        ""url"": ""https://api.perplexity.ai/chat/completions"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""model\"": \""sonar-reasoning\"",\n  \""messages\"": [\n    {\n      \""role\"": \""user\"",\n      \""content\"": \""Suggest a content idea different from this video script: \\\""{{ $json['Modèle de script vidéo'] }}\\\"". It should be in the same niche and on the exact same topic or content idea but offer fresh value. You must pick one idea from your research that matches the topic idea of the video script exactly but is also different and unique from it so it would stand out on social media. Example: if the video script contains a list of tools, your topic must also be a list of tools in that video script topic but slightly different, maybe different tools etc. If the video's script is about a plan, strategies, or whatever, you must also make your topic about that. So you must maintain the nature of the topic in the video script. You absolutely must be specific as the original video script. You can't just mention generic tools or strategies if the original video script contains specific tools. Etc. That is the level of accuracy and perfect matching of the video script original topic. Make sure it appeals to a broad audience like the example.\""\n    }\n  ]\n}\n"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""Authorization"",
              ""value"": ""Bearer YOUR_API_KEY""
            },
            {
              ""name"": ""Content-Type"",
              ""value"": ""application/json""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""a6c047ca-824e-4e33-895f-3be02e509fc6"",
      ""name"": ""Clean Perplexity Response"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        -380,
        60
      ],
      ""parameters"": {
        ""jsCode"": ""// Step 1: Pull raw input\nlet raw = $input.first().json.choices[0].message.content;\n// Step 2: Forcefully remove anything between <think> and </think>\nlet cleaned = raw.replace(/<think>(.|\\n)*?<\\/think>/gi,\n'').trim();\n// Optional cleanup: remove leading/trailing blank lines\ncleaned = cleaned.replace(/^\\s+|\\s+$/g, '');\n// Done\nreturn [\n{\njson: {\ncleanedResponse: cleaned\n}\n}\n];\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""3b5e242f-b10c-4c8e-be2a-acbc95a92658"",
      ""name"": ""Rewrite Script, Caption, Overlay (GPT-4o)"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        -60,
        60
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o"",
          ""cachedResultName"": ""GPT-4O""
        },
        ""options"": {},
        ""messages"": {
          ""values"": [
            {
              ""content"": ""=You are rewriting a TikTok video script, caption, and overlay —\nnot inventing a new one. You must follow this format and obey\nthese rules strictly.\n---\n### CONTEXT:\nHere is the content idea to use:\n{{ $json.cleanedResponse }}\n\n---\n### STEP 1: Rewrite the original video script BELOW using the new\ntopic/context above but maintaiin as stubbornly as possible the\noriginal script structure and style:\nOriginal script: {{ $('Save Original Video to Google Sheets').item.json['Modèle de script vidéo'] }}\n\n\n🛑 DO NOT CHANGE the original structure or style but\nThis includes:\n- Numbered list\n- Sentence breaks\n- \""I\"" or first-person narration\n- Colloquial/informal tone (like “you're gonna wanna...”)\n✂️ You MUST keep:\n- first person narration of the orignal script at all costs\n- MUST be under 700 characters (yes \""Characters\"" not wordcount)\nthis is an absolute MUST, no more than 700 characters!!! But never\nchange the structure or narration style of the original script. It\nmust be an exact imitation.\n✏️ You MAY change:\n- Tool names\n- Use cases\n- Descriptions\n- Niche-specific keywords\n\n#Rule: never use any characers like \""\"" in your generated video\nscript as this will yeild syntax errors.\n---\n### STEP 2: Rewrite the caption text using the new topic.\nKeep:\n- Same structure and tone\n- Same use of #hashtags but space between each hashtag\n- Similar sentence count and layout\nCaption:\n{{ $('Save Original Video to Google Sheets').item.json.Caption }}\n\n---\n### STEP 3: Rewrite the text overlay (short version for the\nthumbnail or first screen)\nKeep:\n- EXACT Same length format, case, structure\n- Do NOT invent new words unless absolutely necessary\nOverlay:\n{{ $('Save Original Video to Google Sheets').item.json['Modèle de texte superposé'] }}\n---\n### FINAL OUTPUT FORMAT (no markdown formatting):\nText Overlay: [REWRITTEN TEXT OVERLAY]\nVideo Script: [REWRITTEN SCRIPT]\nCaption Text: [REWRITTEN CAPTION TEXT]\nDO NOT return any explanations. Only return the rewritten\nsections.""
            }
          ]
        }
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""6h3DfVhNPw9I25nO"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""befec852-bca2-4c54-9c2c-49a8c082e2b4"",
      ""name"": ""Split Rewritten Content into Sections"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        420,
        60
      ],
      ""parameters"": {
        ""jsCode"": ""// Récupère le contenu du premier item\nconst input = $input.first().json.message.content;\n\n// On tolère les retours à la ligne réels (\\n) ou échappés (\\\\n)\n\n// Text Overlay\nconst textOverlayMatch = input.match(\n  /Text\\s*Overlay:\\s*(.+?)(?:\\r?\\n|\\\\n)/s\n);\n\n// Video Script\nconst videoScriptMatch = input.match(\n  /Video\\s*Script:\\s*(.+?)(?:\\r?\\n|\\\\n)Caption\\s*Text:/s\n);\n\n// Caption Text (jusqu'à la fin)\nconst captionTextMatch = input.match(\n  /Caption\\s*Text:\\s*(.+)/s\n);\n\nreturn [\n  {\n    json: {\n      textOverlay:   textOverlayMatch   ? textOverlayMatch[1].trim()   : null,\n      videoScript:   videoScriptMatch   ? videoScriptMatch[1].trim()   : null,\n      captionText:   captionTextMatch   ? captionTextMatch[1].trim()   : null,\n    }\n  }\n];\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""49828685-cf54-45ac-96d9-03697215f80e"",
      ""name"": ""Generate New Video ID"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        640,
        60
      ],
      ""parameters"": {
        ""jsCode"": ""// Utility to create a random alphanumeric ID\nfunction createUniqueId(length = 12) {\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let id = '';\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * characters.length);\n    id += characters[randomIndex];\n  }\n  return id;\n}\n\n// Return the ID in the expected output structure\nreturn [\n  {\n    json: {\n      code: createUniqueId()\n    }\n  }\n];""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""c9f02616-a944-471b-9c4d-7fa381d684b9"",
      ""name"": ""Save Rewritten Video to Google Sheets"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        820,
        60
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Sujet"": ""={{ $('Clean Perplexity Response').first().json.cleanedResponse }}"",
            ""Script"": ""={{ $('Split Rewritten Content into Sections').item.json.videoScript }}"",
            ""Caption"": ""={{ $('Split Rewritten Content into Sections').item.json.captionText }}"",
            ""ID du modèle"": ""={{ $('Generate Unique Template ID').first().json.code }}"",
            ""ID de la vidéo"": ""={{ $json.code }}"",
            ""Texte superposé"": ""={{ $('Split Rewritten Content into Sections').item.json.textOverlay }}""
          },
          ""schema"": [
            {
              ""id"": ""ID du modèle"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""ID du modèle"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""ID de la vidéo"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""ID de la vidéo"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Sujet"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Sujet"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Texte superposé"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Texte superposé"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Script"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Script"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Caption"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Caption"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""URL de la vidéo"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""URL de la vidéo"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Date de publication"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Date de publication"",
              ""defaultMatch"": false,
              ""canBeUsed",
Automate Business Lead Scraping from Apify to Google Sheets with Data Cleaning,"{
  ""id"": ""8dpOtivR6zGMa8Nf"",
  ""meta"": {
    ""instanceId"": ""2000c64071c20843606b95c63795bb0797c41036047055a6586498e855b96efc"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Automated Lead Scraper: Apify to Google Sheets"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""331e904a-362e-4b18-ac01-60bd138a7ee1"",
      ""name"": ""Manual Trigger"",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        -1740,
        -300
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""c8c72d6e-4558-4ab1-9c19-2b8e3cefc856"",
      ""name"": ""Run Apify Scraper"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -1280,
        -300
      ],
      ""parameters"": {
        ""url"": ""={{ 'https://api.apify.com/v2/actor-tasks/' + $json.APIFY_TASK_ID + '/run-sync-get-dataset-items?token=' +$json.APIFY_TOKEN}}"",
        ""options"": {
          ""splitIntoItems"": true
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""fb61d5a9-0352-4079-a00f-c42df06bb09e"",
      ""name"": ""Clean Data"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        -1080,
        -300
      ],
      ""parameters"": {
        ""jsCode"": ""// Clean scraped data before LLM processing\nreturn $input.all().map(item => ({\n  ...item.json,\n  phone: item.json.phone?.replace(/[^\\d+]/g, '') || '',\n  email: item.json.email?.toLowerCase().trim() || ''\n}));""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""a6988139-87e5-423c-bec9-ce155f617dab"",
      ""name"": ""Export to Google Sheets"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        -760,
        -300
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""phone"": ""={{ $json.phone }}"",
            ""Address"": ""={{ $json.address }}"",
            ""company name"": ""={{ $json.title }}""
          },
          ""schema"": [
            {
              ""id"": ""company name"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""company name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""website"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""website"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""phone"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""phone"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Address"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Address"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""Sheet1"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1UHkd_OuK1Xzc0ZXo7FPrsd5M1JlsIY9pJDC3fsJ3oq8/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""YOUR_GOOGLE_SHEET_ID"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1UHkd_OuK1Xzc0ZXo7FPrsd5M1JlsIY9pJDC3fsJ3oq8/edit?usp=drivesdk"",
          ""cachedResultName"": ""leas list solar""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""f4398fd2-bff0-4e9c-ae1b-f5950be0a384"",
      ""name"": ""Variables"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -1500,
        -300
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""4486360c-2296-41ad-a48f-706e24c49a4f"",
              ""name"": ""APIFY_TOKEN"",
              ""type"": ""string"",
              ""value"": ""YOUR_APIFY_API_TOKEN""
            },
            {
              ""id"": ""6e56b0e3-36ae-4f1e-b0e5-38767bbe8af9"",
              ""name"": ""APIFY_TASK_ID"",
              ""type"": ""string"",
              ""value"": ""YOUR_APIFY_TASK_ID""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""04a980cf-365b-4cc3-8439-fd71cb1f05a3"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1860,
        -820
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 1660,
        ""height"": 780,
        ""content"": ""## Automated Business Lead Scraper with Apify to Google Sheets\n**Purpose:** Automates scraping business leads using Apify, cleaning the data, and exporting them to Google Sheets.\n\n**Workflow Steps:**\n1. **Manual Trigger**: Starts the workflow manually.\n2. **Set API Credentials**: Add your `APIFY_TOKEN` and `APIFY_TASK_ID`.\n3. **Run Apify Scraper**: Fetches leads using Apify HTTP API.\n4. **Clean Data**: Formats phone numbers and emails.\n5. **Export to Google Sheets**: Appends data to your spreadsheet.\n\n**Google Sheet Requirements:**\n- Sheet name: `Sheet1`\n- Columns: `company name`, `phone`, `Address`\n\n**Customization Tips:**\n- Add more fields like `email`, `website` in Clean Data and mapping.\n- Add conditions or filters before exporting.\n- Add email alerts if needed.\n""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""47bf9abd-67aa-49c8-81c9-761e75ee731f"",
  ""connections"": {
    ""Start"": {
      ""main"": [
        [
          {
            ""node"": ""Variables"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Variables"": {
      ""main"": [
        [
          {
            ""node"": ""Run Apify Scraper"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Clean Data"": {
      ""main"": [
        [
          {
            ""node"": ""Export to Google Sheets"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Run Apify Scraper"": {
      ""main"": [
        [
          {
            ""node"": ""Clean Data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
AI YouTube Analytics Agent: Comment Analyzer & Insights Reporter,"{
  ""meta"": {
    ""instanceId"": ""5aaf4236c70e34e423fbdb2c7b754d19253a933bb1476d548f75848a01e473cf"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""e0eae618-d330-4b74-b5a4-528a28ec91c6"",
      ""name"": ""Sticky Note12"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1260,
        220
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 480,
        ""height"": 740,
        ""content"": ""=======================================\n            WORKFLOW ASSISTANCE\n=======================================\nFor any questions or support, please contact:\n    Yaron@nofluff.online\n\nExplore more tips and tutorials here:\n   - YouTube: https://www.youtube.com/@YaronBeen/videos\n   - LinkedIn: https://www.linkedin.com/in/yaronbeen/\n=======================================\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e73f0186-b1a7-4ab9-a23e-94a38d51f8bb"",
      ""name"": ""Workflow Overview"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -640,
        420
      ],
      ""parameters"": {
        ""color"": 2,
        ""width"": 350,
        ""height"": 820,
        ""content"": ""# 📊 YouTube Comment Analyzer Workflow\n\n**Purpose:** Automate YouTube comment collection, sentiment analysis, and email reporting\n\n**Schedule:** Triggers every minute for new/updated rows\n\n**Required Setup:**\n1. Google Sheet with video IDs\n2. YouTube API credentials\n3. OpenAI API key\n4. Gmail account\n\n## Workflow Steps:\n1. **Trigger** - Monitor Google Sheet\n2. **Filter** - Process only 'Pending' videos\n3. **Fetch** - Get video details & comments\n4. **Analyze** - AI sentiment analysis\n5. **Report** - Send email summary\n6. **Update** - Mark as processed""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""606f8cb5-54a5-4a90-be41-089d7ccae72f"",
      ""name"": ""Trigger Documentation"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -260,
        320
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 380,
        ""height"": 340,
        ""content"": ""## 🚀 Trigger Section\n\n**Google Sheets Trigger**\nMonitors the spreadsheet every minute for:\n- New video IDs added\n- Status changes to 'Pending'\n\n**Required Sheet Structure:**\n| ID | Video Title | YouTube Video ID | Status |\n\n⚠️ Set Status to 'Pending' to trigger analysis""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""f225b68e-272e-4414-82c2-2f79cfbcc381"",
      ""name"": ""YouTube API Section"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        560,
        440
      ],
      ""parameters"": {
        ""width"": 280,
        ""height"": 200,
        ""content"": ""## 📹 YouTube Data Collection\n\n**This section fetches:**\n- Video metadata (title, channel)\n- Top 100 comments\n- Comment statistics\n\n**API Limits:**\n- Max 100 comments per request\n- Ordered by relevance\n- Top-level comments only""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""628d65ff-007c-4b7a-862e-64158fa80e7c"",
      ""name"": ""AI Analysis Documentation"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1300,
        420
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 320,
        ""height"": 250,
        ""content"": ""## 🤖 AI Analysis Section\n\n**GPT-4o analyzes comments for:**\n1. Sentiment breakdown (positive/negative/neutral)\n2. Main themes & topics\n3. Common viewer questions\n4. Key feedback points\n5. Actionable insights\n\n**Output Format:** Structured JSON with underscore keys\n\n💡 Customize the prompt in AI Agent node for different analysis needs""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""85b58261-88e1-499a-a082-548713da293e"",
      ""name"": ""Email & Status Update"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1820,
        460
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 300,
        ""height"": 220,
        ""content"": ""## 📧 Email & Update Section\n\n**Email Report includes:**\n- Video statistics\n- Sentiment analysis\n- Key insights\n- Formatted HTML\n\n**Final Step:**\nUpdates Google Sheet status to 'Mail Sent' to prevent duplicate processing\n\n⚠️ Update recipient email in Gmail node""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e0ba6c37-8b04-406b-9158-aef610274135"",
      ""name"": ""Data Processing Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1060,
        900
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 250,
        ""height"": 180,
        ""content"": ""⚠️ **Data Preparation**\n\nThis node:\n- Extracts comment texts\n- Calculates statistics\n- Performs basic sentiment analysis\n- Prepares data for AI\n\nLimited to 50 comments for AI analysis to manage token usage""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d7edbd68-9213-426b-ae6b-71a13bb23690"",
      ""name"": ""Limit"",
      ""type"": ""n8n-nodes-base.limit"",
      ""notes"": ""Limits processing to 1 item at a time to prevent API overload"",
      ""position"": [
        220,
        700
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""42f0f581-57a0-438d-b1a1-29a89e984554"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""notes"": ""Uses OpenAI GPT-4o to analyze comments and generate insights. Customize the prompt for different analysis needs."",
      ""position"": [
        1320,
        700
      ],
      ""parameters"": {
        ""text"": ""=Analyze these comments from the video \""{{ $json.videoTitle }}\"":\n\nTotal Comments: {{ $json.totalComments }}\nAverage Likes: {{ $json.avgLikes }}\n\nComments to analyze:\n{{ $json.commentTexts }}"",
        ""options"": {
          ""maxIterations"": 100,
          ""systemMessage"": ""You are a YouTube comment analyst. Analyze the provided comments and return a structured analysis with:\n1. Overall sentiment breakdown (positive/negative/neutral percentages)\n2. Top 3-5 main themes or topics discussed\n3. Common questions from viewers\n4. Key feedback points and suggestions\n5. Actionable insights for content improvement\n\nFormat your response in clear sections with headers in json key value format and use underscore in the key name. Always use following keys for output json: \n1. overall_sentiment_breakdown\n2. main_themes\n3. common_questions\n4. key_feedback_points\n5. actionable_insights""
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""35abbd58-e69a-4d86-963e-0a758aaff7b2"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        1420,
        920
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {
          ""responseFormat"": ""json_object""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""747fb13b-ee39-4dd7-8338-8db07e3b568e"",
      ""name"": ""If"",
      ""type"": ""n8n-nodes-base.if"",
      ""notes"": ""Filters rows to process only videos with 'Pending' status"",
      ""position"": [
        0,
        700
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""5f1eae10-5270-4e99-8627-597e3451c82c"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.Status }}"",
              ""rightValue"": ""Pending""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""6895d6b4-4ae4-4092-9302-33b1c69167d6"",
      ""name"": ""Set Video Details"",
      ""type"": ""n8n-nodes-base.set"",
      ""notes"": ""Prepares video ID and sets max comments limit (100)"",
      ""position"": [
        440,
        700
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""219795ef-daa4-4444-9865-c5d3856be63b"",
              ""name"": ""videoId"",
              ""type"": ""string"",
              ""value"": ""={{ $json['Youtube video id'] }}""
            },
            {
              ""id"": ""cd4f519d-4c84-496c-8974-29ef69c890fc"",
              ""name"": ""maxComments "",
              ""type"": ""number"",
              ""value"": 100
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""df200d75-d932-4bb4-9e57-16a940963db3"",
      ""name"": ""Get Youtube Video Details"",
      ""type"": ""n8n-nodes-base.youTube"",
      ""notes"": ""Fetches video metadata including title, channel name, and other details"",
      ""position"": [
        660,
        700
      ],
      ""parameters"": {
        ""options"": {},
        ""videoId"": ""={{ $json.videoId }}"",
        ""resource"": ""video"",
        ""operation"": ""get""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""5346229d-9386-497b-99c7-192e75896bf2"",
      ""name"": ""Get Youtube Video Comments"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""notes"": ""Retrieves top 100 comments ordered by relevance using YouTube API"",
      ""position"": [
        880,
        700
      ],
      ""parameters"": {
        ""url"": ""https://www.googleapis.com/youtube/v3/commentThreads"",
        ""options"": {},
        ""sendQuery"": true,
        ""authentication"": ""predefinedCredentialType"",
        ""queryParameters"": {
          ""parameters"": [
            {
              ""name"": ""part"",
              ""value"": ""snippet""
            },
            {
              ""name"": ""videoId"",
              ""value"": ""={{ $('Set Video Details').item.json.videoId }}""
            },
            {
              ""name"": ""maxResults"",
              ""value"": ""100""
            },
            {
              ""name"": ""order"",
              ""value"": ""relevance""
            }
          ]
        },
        ""nodeCredentialType"": ""youTubeOAuth2Api""
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""ffee99ec-ad6d-4ac9-b0ad-e466a18ad7de"",
      ""name"": ""Prepare Comments Data"",
      ""type"": ""n8n-nodes-base.code"",
      ""notes"": ""Processes raw comments: extracts text, calculates stats, performs basic sentiment analysis, limits to 50 comments for AI"",
      ""position"": [
        1100,
        700
      ],
      ""parameters"": {
        ""jsCode"": ""// Get comments from HTTP Request node\nconst comments = $input.first().json.items\n//const comments = response.items || [];\n\n// Get video title from the YouTube node (step 5)\n//const videoData = ;\nconst videoTitle = $('Get Youtube Video Details').first().json.snippet.title;\n\n// Extract comment data\nconst processedComments = comments.map(item => {\n  const comment = item.snippet.topLevelComment.snippet;\n  return {\n    text: comment.textDisplay,\n    author: comment.authorDisplayName,\n    likes: comment.likeCount || 0,\n    publishedAt: comment.publishedAt,\n    replyCount: item.snippet.totalReplyCount || 0\n  };\n});\n\n// Calculate statistics\nconst totalComments = processedComments.length;\nconst totalLikes = processedComments.reduce((sum, c) => sum + c.likes, 0);\nconst avgLikes = totalComments > 0 ? (totalLikes / totalComments).toFixed(2) : 0;\nconst totalReplies = processedComments.reduce((sum, c) => sum + c.replyCount, 0);\n\n// Get top comments by likes\nconst topComments = processedComments\n  .sort((a, b) => b.likes - a.likes)\n  .slice(0, 5);\n\n// Prepare comment texts for AI analysis\nconst commentTexts = processedComments\n  .slice(0, 50) // Limit to 50 comments for AI analysis\n  .map(c => c.text)\n  .join('\\n---\\n');\n\n// Basic sentiment analysis (count positive/negative keywords)\nconst positiveWords = ['love', 'great', 'awesome', 'amazing', 'excellent', 'good', 'fantastic', 'helpful', 'thanks'];\nconst negativeWords = ['hate', 'terrible', 'awful', 'bad', 'worst', 'horrible', 'useless', 'waste'];\n\nlet positiveCount = 0;\nlet negativeCount = 0;\n\nprocessedComments.forEach(comment => {\n  const lowerText = comment.text.toLowerCase();\n  positiveWords.forEach(word => {\n    if (lowerText.includes(word)) positiveCount++;\n  });\n  negativeWords.forEach(word => {\n    if (lowerText.includes(word)) negativeCount++;\n  });\n});\n\nreturn [{\n  json: {\n    videoTitle,\n    totalComments,\n    avgLikes,\n    totalReplies,\n    topComments,\n    commentTexts,\n    processedComments,\n    sentimentCounts: {\n      positive: positiveCount,\n      negative: negativeCount,\n      neutral: totalComments - positiveCount - negativeCount\n    }\n  }\n}];\n\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""7eab55e1-e9e2-4750-a07d-f02941c7a8c6"",
      ""name"": ""Prepare HTML for Email"",
      ""type"": ""n8n-nodes-base.code"",
      ""notes"": ""Converts AI analysis into formatted HTML email with statistics, insights, and professional styling"",
      ""position"": [
        1700,
        700
      ],
      ""parameters"": {
        ""mode"": ""runOnceForEachItem"",
        ""jsCode"": ""const output = JSON.parse($json.output)\n //return output; \n//return output.overall_sentiment_breakdown.Positive;\n\nlet common_question = \""\"";\n  \noutput.common_questions.map(rec => {\n  return common_question += \""<li>\""+rec.trim().replace(new RegExp(\"".*,$\""), \""\"")+\""</li>\""\n})\n\nlet key_feedback_points_and_suggestions = \""\"";\n\noutput.key_feedback_points.map(rec => {\n  return key_feedback_points_and_suggestions += \""<li>\""+rec.trim().replace(new RegExp(\"".*,$\""), \""\"")+\""</li>\""\n})\n\n\nlet actionable_insights_for_content_improvement = \""\""\n\noutput.actionable_insights.map(rec => {\n  return actionable_insights_for_content_improvement += \""<li>\""+rec.trim().replace(new RegExp(\"".*,$\""), \""\"")+\""</li>\""\n})\n\n\n// return {common_question};\n\n\n     \n\n//return output; \n// Generate the email HTML\nconst emailHTML = `\n<!DOCTYPE html>\n<html>\n<head>\n  <style>\n    body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n    .header { background: #f4f4f4; padding: 20px; border-radius: 5px; }\n    .section { margin: 20px 0; }\n    .stats { background: #e9ecef; padding: 15px; border-radius: 5px; }\n    .analysis { background: #f8f9fa; padding: 20px; border-radius: 5px; }\n    h2 { color: #2c3e50; }\n    h3 { color: #34495e; }\n    h4 { color: #7f8c8d; }\n    .footer { margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd; color: #666; font-size: 0.9em; }\n  </style>\n</head>\n<body>\n  <div class=\""header\"">\n    <h2>YouTube Comments Analysis Report</h2>\n    <h3>Video: ${$(\""Prepare Comments Data\"").item.json.videoTitle}</h3>\n  </div>\n\n  <div class=\""section stats\"">\n    <h3> Quick Statistics</h3>\n    <ul>\n      <li><strong>Total Comments Analyzed:</strong> ${$('Prepare Comments Data').item.json.totalComments}</li>\n      <li><strong>Average Likes per Comment:</strong> ${$('Prepare Comments Data').item.json.avgLikes}</li>\n      <li><strong>Total Replies:</strong> ${$('Prepare Comments Data').item.json.totalReplies}</li>\n      <li><strong>Sentiment Summary:</strong> \n        Positive: ${output.overall_sentiment_breakdown.positive}, \n        Negative: ${output.overall_sentiment_breakdown.negative}, \n        Neutral: ${output.overall_sentiment_breakdown.neutral}\n      </li>\n    </ul>\n  </div>\n\n  <div class=\""section stats\"">\n    <h3>Common Questions</h3>\n    <ul>\n      ${common_question}\n    </ul>\n  </div>\n\n    <div class=\""section stats\"">\n    <h3>Key feedback points and suggestions</h3>\n    <ul>\n      ${key_feedback_points_and_suggestions}\n    </ul>\n  </div>\n\n\n  <div class=\""section stats\"">\n    <h3>Actionable insights for content improvement</h3>\n    <ul>\n      ${actionable_insights_for_content_improvement}\n    </ul>\n  </div>\n\n\n\n\n  <div class=\""footer\"">\n    <p><em>Report generated on ${new Date().toLocaleString()}</em></p>\n    \n  </div>\n</body>\n</html>`;\n\n\n// Return the formatted data\nreturn  {\n  json: {\n    emailHTML,\n    subject: `YouTube Analysis: ${$('Prepare Comments Data').item.json.videoTitle} - ${$('Prepare Comments Data').item.json.totalComments} comments analyzed`,\n    videoTitle: $('Prepare Comments Data').item.json.videoTitle\n  }\n};""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""f789c4e0-813b-4f6d-9584-86a274fba969"",
      ""name"": ""Gmail Account Configuration"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""notes"": ""Sends formatted analysis report via Gmail. Update SENDER_EMAIL_ADDRESS with actual recipient"",
      ""position"": [
        1920,
        700
      ],
      ""webhookId"": ""90b8f9ad-4226-42a0-971b-7fa9f5f190bd"",
      ""parameters"": {
        ""sendTo"": ""SENDER_EMAIL_ADDRESS"",
        ""message"": ""={{ $json.emailHTML }}"",
        ""options"": {},
        ""subject"": ""={{ $json.subject }}""
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""309d2e7d-2da0-439b-b2ac-87196d9f5733"",
      ""name"": ""Update Status on Google Sheet"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""notes"": ""Updates video status to 'Mail Sent' to prevent duplicate processing"",
      ""position"": [
        2140,
        700
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Id"": ""={{ $('Pick Video Ids from Google sheet').item.json.Id }}"",
            ""Status"": ""Mail Sent""
          },
          ""schema"": [
            {
              ""id"": ""Id"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Id"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Youtube video id"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Youtube video id"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Status"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Status"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""row_number"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""readOnly"": true,
              ""required"": false,
              ""displayName"": ""row_number"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [
            ""Id""
          ],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""update"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""GOOGLE_DRIVE_URL"",
          ""cachedResultName"": ""Youtube_Video ""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1qe6Ovp_pfmwZA2k5c7LmmZx-OKqv3hnu8Dg80Pw4KoY"",
          ""cachedResultUrl"": ""GOOGLE_DRIVE_URL"",
          ""cachedResultName"": ""Youtube_Video""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""b62a4e3a-c843-4ed2-9ee4-cbfb1a218259"",
      ""name"": ""Pick Video Ids from Google sheet"",
      ""type"": ""n8n-nodes-base.googleSheetsTrigger"",
      ""notes"": ""Triggers on new YouTube videos added to spreadsheet. Polls every minute for changes"",
      ""position"": [
        -220,
        700
      ],
      ""parameters"": {
        ""options"": {},
        ""pollTimes"": {
          ""item"": [
            {
              ""mode"": ""everyMinute""
            }
          ]
        },
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""GOOGLE_DRIVE_URL"",
          ""cachedResultName"": ""Youtube_Video ""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1qe6Ovp_pfmwZA2k5c7LmmZx-OKqv3hnu8Dg80Pw4KoY"",
          ""cachedResultUrl"": ""GOOGLE_DRIVE_URL"",
          ""cachedResultName"": ""Youtube_Video""
        }
      },
      ""typeVersion"": 1
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""If"": {
      ""main"": [
        [
          {
            ""node"": ""Limit"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Limit"": {
      ""main"": [
        [
          {
            ""node"": ""Set Video Details"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""AI Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Prepare HTML for Email"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Set Video Details"": {
      ""main"": [
        [
          {
            ""node"": ""Get Youtube Video Details"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Prepare Comments Data"": {
      ""main"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Prepare HTML for Email"": {
      ""main"": [
        [
          {
            ""node"": ""Gmail Account Configuration"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get Youtube Video Details"": {
      ""main"": [
        [
          {
            ""node"": ""Get Youtube Video Comments"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get Youtube Video Comments"": {
      ""main"": [
        [
          {
            ""node"": ""Prepare Comments Data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Gmail Account Configuration"": {
      ""main"": [
        [
          {
            ""node"": ""Update Status on Google Sheet"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Pick Video Ids from Google sheet"": {
      ""main"": [
        [
          {
            ""node"": ""If"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
"AI-Generated LinkedIn Posts with OpenAI, Google Sheets & Email Approval Workflow","{
  ""id"": ""w9YVsuUtlNgXOEAQ"",
  ""meta"": {
    ""instanceId"": ""58a9e858b82757a75629d435ec0da2448ad5d9e906a9ce3b7dcbb64c90fda9fe"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""LinkedIn Post Generation & Approval Automation"",
  ""tags"": [
    {
      ""id"": ""3bzbXbpZW83y48aK"",
      ""name"": ""content-approval"",
      ""createdAt"": ""2025-05-13T18:45:19.225Z"",
      ""updatedAt"": ""2025-05-13T18:45:19.225Z""
    },
    {
      ""id"": ""9SfWdyKRFVbPxrNL"",
      ""name"": ""post-generator"",
      ""createdAt"": ""2025-05-13T18:45:09.255Z"",
      ""updatedAt"": ""2025-05-13T18:45:09.255Z""
    },
    {
      ""id"": ""VWnkUEKQKJB2WmbL"",
      ""name"": ""linkedin"",
      ""createdAt"": ""2025-05-13T18:45:04.175Z"",
      ""updatedAt"": ""2025-05-13T18:45:04.175Z""
    }
  ],
  ""nodes"": [
    {
      ""id"": ""d0f86395-aeec-4284-a2d5-26db2dfebd53"",
      ""name"": ""Get Image"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1592,
        2120
      ],
      ""parameters"": {
        ""url"": ""={{ $('Get Data from Sheets').item.json.Image }}"",
        ""options"": {}
      },
      ""typeVersion"": 4.2,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""b8ca88a6-aaf1-4191-8b75-9a63b746af77"",
      ""name"": ""Schedule Trigger"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        -260,
        2595
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {}
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""8e4e294f-56d4-4317-aea8-ea258527f55a"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        268,
        2815
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""7OVQwPA6RZRwFmwI"",
          ""name"": ""OpenAI Account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""d262684e-7671-4602-ba77-4270441a69fb"",
      ""name"": ""Get Data from Sheets"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        -40,
        2595
      ],
      ""parameters"": {
        ""options"": {
          ""returnFirstMatch"": true
        },
        ""filtersUI"": {
          ""values"": [
            {
              ""lookupValue"": ""Pending"",
              ""lookupColumn"": ""Status""
            }
          ]
        },
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1EAdLU9-l0ATGDa5_xwTwFO-rPhvZurM2BOSKjH2P-W8/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1EAdLU9-l0ATGDa5_xwTwFO-rPhvZurM2BOSKjH2P-W8"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1EAdLU9-l0ATGDa5_xwTwFO-rPhvZurM2BOSKjH2P-W8/edit?usp=drivesdk"",
          ""cachedResultName"": ""LinkedIn Post Automation""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""Gs7mfT220sbLQ7PS"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""93d3e57f-a22d-4c04-9ccc-7ee655bedbdb"",
      ""name"": ""Generate Post Content"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        180,
        2595
      ],
      ""parameters"": {
        ""text"": ""=# LinkedIn Post Generation\n\n## Post Description:\n{{ $json[\""Post Description\""] }}\n\n## Instructions:\n{{ $json[\""Instructions\""] }}\n\n---\n\n**Task:**\nUsing the information above, generate the content for a LinkedIn post:\n- Use the Description and Instructions to create a new post.\n- Ensure your output is positive, professional, clear, and follows all provided instructions and feedback.\n- Do not include any explanations, just the final post content only, ready to publish on LinkedIn.\n- Limit to 1300 characters.\n- If the user demands to keep the same post as the Post Descrioption (in the instructions), then keep the same post content as provided in the Post Description, and output it."",
        ""messages"": {
          ""messageValues"": [
            {
              ""message"": ""=You are an expert social media and LinkedIn content writer.\n\nYou will be provided with:\n- A brief post description\n- Specific instructions from the user\n\nPlease follow these steps:\n\n1. Initial Creation:\nIf you are given a post description and instructions, write a polished, professionally worded LinkedIn post suitable for sharing. Strictly follow the instructions and ensure the message is engaging and succinct.\nIf instructed, add a call to action or particular phrase (for example, \""Connect with me\"" at the bottom).\n\n2. Formatting:\nKeep the tone positive, inclusive, and professional.\nAdd relevant hashtags in small case.\nLimit the content to within 1300 characters.\nPlace the call to action or special instruction at the end if requested.\nOutput ONLY the final LinkedIn post content. Do NOT include any explanations, markdown, headings, or commentary—just the post text, ready to copy and share on LinkedIn.""
            }
          ]
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.6
    },
    {
      ""id"": ""6ea121f4-661c-4dd4-a0bc-7edb8a0b884a"",
      ""name"": ""Data Formatting 1"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        556,
        2595
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""bded6f56-99e2-4f1a-be41-27a8dd417844"",
              ""name"": ""Post Content"",
              ""type"": ""string"",
              ""value"": ""={{ $json.text }}""
            },
            {
              ""id"": ""c222c42e-b639-4a74-a1b0-7a3e6e141d55"",
              ""name"": ""Post Description"",
              ""type"": ""string"",
              ""value"": ""={{ $('Get Data from Sheets').item.json['Post Description'] }}""
            },
            {
              ""id"": ""14775ff7-e005-4a86-9623-c322365f7d3a"",
              ""name"": ""Instructions"",
              ""type"": ""string"",
              ""value"": ""={{ $('Get Data from Sheets').item.json.Instructions }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""a00ec081-07c0-4f8a-9139-6606a65236ff"",
      ""name"": ""Send Content Confirmation"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        776,
        2495
      ],
      ""webhookId"": ""29614d41-05c1-44af-93a6-4831a27f9331"",
      ""parameters"": {
        ""sendTo"": ""youremail@gmail.com"",
        ""message"": ""=Generated Post:\n{{ $json['Post Content'] }}\n\n----------\n\nPost Description:\n{{ $json['Post Description'] }}\n\n----------\n\nInstructions:\n{{ $json.Instructions }}"",
        ""options"": {},
        ""subject"": ""Approval for LinkedIn Post"",
        ""operation"": ""sendAndWait"",
        ""formFields"": {
          ""values"": [
            {
              ""fieldType"": ""dropdown"",
              ""fieldLabel"": ""Confirm  Content?"",
              ""fieldOptions"": {
                ""values"": [
                  {
                    ""option"": ""Yes""
                  },
                  {
                    ""option"": ""No""
                  },
                  {
                    ""option"": ""Cancel""
                  }
                ]
              },
              ""requiredField"": true
            },
            {
              ""fieldType"": ""textarea"",
              ""fieldLabel"": ""Any Changes?""
            }
          ]
        },
        ""responseType"": ""customForm""
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""n47Kn2N5BwXYv6eA"",
          ""name"": ""Gmail account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""5a1e8061-ef79-4974-888d-8670e60a1b0c"",
      ""name"": ""Content Confirmation Logic"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        996,
        2495
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""outputKey"": ""Yes"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""99ec185e-80ac-451d-bb69-662f84a7cf52"",
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.data['Confirm  Content?'] }}"",
                    ""rightValue"": ""Yes""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""No"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""77031007-a912-4b9b-9cca-846c57ffaec8"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.data['Confirm  Content?'] }}"",
                    ""rightValue"": ""No""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""Cancel"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""e94de530-6451-48aa-892c-924a9c41cfb0"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.data['Confirm  Content?'] }}"",
                    ""rightValue"": ""Cancel""
                  }
                ]
              },
              ""renameOutput"": true
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.2
    },
    {
      ""id"": ""c139fda0-4be1-4ad7-bb28-802b7150365d"",
      ""name"": ""Regenerate Post Content"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        1216,
        2670
      ],
      ""parameters"": {
        ""text"": ""=Apply the modification requests on the following LinkedIn post. Besides applying the reqested modifications, return the same linkedin post.\n\nLinkedIn post:\n```\n{{ $('Data Formatting 1').item.json['Post Content'] }}\n```\n\nChange requests:\n{{ $('Send Content Confirmation').item.json.data['Any Changes?'] }}\n\n**Task:**\nUsing the information above, update the LinkedIn post content:\n- Do not include any explanations, just the final post content only (with all the change requests included in the post), ready to publish on LinkedIn.\n- Limit to 1300 characters.\n- If the user demands to keep the same post as the Post Description (in the instructions), then keep the same post content as provided in the Post Description, and output it."",
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.6
    },
    {
      ""id"": ""b8587578-03a6-4975-8907-667628dc958a"",
      ""name"": ""If Image Provided"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1294,
        2220
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""9a78220d-35f5-48b6-9ce3-faecaac24b74"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notEmpty"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $('Get Data from Sheets').item.json.Image }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""30bf76c8-8420-4d77-bc2b-8a1c27fbf36a"",
      ""name"": ""Post With Image"",
      ""type"": ""n8n-nodes-base.linkedIn"",
      ""position"": [
        1812,
        2120
      ],
      ""parameters"": {
        ""text"": ""={{ $('Data Formatting 1').item.json['Post Content'] }}"",
        ""person"": ""pM247vR8Se"",
        ""additionalFields"": {},
        ""shareMediaCategory"": ""IMAGE""
      },
      ""credentials"": {
        ""linkedInOAuth2Api"": {
          ""id"": ""Fg8i5E17dzZcPtMH"",
          ""name"": ""LinkedIn account 2""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""62bf9597-3e38-45ec-853c-aa2d77c40bc2"",
      ""name"": ""Post Without Image"",
      ""type"": ""n8n-nodes-base.linkedIn"",
      ""position"": [
        1812,
        2320
      ],
      ""parameters"": {
        ""text"": ""={{ $('Data Formatting 1').item.json['Post Content'] }}"",
        ""person"": ""pM247vR8Se"",
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""linkedInOAuth2Api"": {
          ""id"": ""Fg8i5E17dzZcPtMH"",
          ""name"": ""LinkedIn account 2""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0ddd307d-5e54-42cf-b65a-25f111fb4bea"",
      ""name"": ""Update Google Sheet"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        2032,
        2320
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Output"": ""={{ $json.urn }}"",
            ""Status"": ""=Completed"",
            ""Post Link"": ""={{ $json.urn }}"",
            ""row_number"": ""={{ $('Get Data from Sheets').item.json.row_number }}""
          },
          ""schema"": [
            {
              ""id"": ""Post Description"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Post Description"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Instructions"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Instructions"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Image"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Image"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Status"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Status"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Output"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Output"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Post Link"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Post Link"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""row_number"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": true,
              ""required"": false,
              ""displayName"": ""row_number"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [
            ""row_number""
          ],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""update"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1EAdLU9-l0ATGDa5_xwTwFO-rPhvZurM2BOSKjH2P-W8/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1EAdLU9-l0ATGDa5_xwTwFO-rPhvZurM2BOSKjH2P-W8"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1EAdLU9-l0ATGDa5_xwTwFO-rPhvZurM2BOSKjH2P-W8/edit?usp=drivesdk"",
          ""cachedResultName"": ""LinkedIn Post Automation""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""Gs7mfT220sbLQ7PS"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""c4a55beb-8459-4faa-b072-51c500562ae3"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -780,
        2480
      ],
      ""parameters"": {
        ""width"": 420,
        ""height"": 380,
        ""content"": ""## 1. Schedule & Sheet Data Retrieval\n\nThis workflow starts automatically on a defined schedule (e.g., daily or hourly).\n\nIt retrieves the next Google Sheet row marked as ‘Pending’.\n\nThe sheet should include columns like:\n1. Post Description\n2. Instructions\n3. Image\n4. Status\n5. row_number (required for updates)\n\nEnsure your Google Sheets credentials are correctly configured.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""09dade5b-e26a-4b97-9b8a-a5c807cff937"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -220,
        3040
      ],
      ""parameters"": {
        ""width"": 420,
        ""height"": 240,
        ""content"": ""## 2. AI-Powered Post Generation & Formatting\n\nUses OpenAI GPT to generate a LinkedIn post based on the sheet’s Post Description and Instructions.\n\nYou can modify the prompt if needed.\nThe generated post is then formatted along with relevant data for easy reference and consistency.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""f373dfd9-f971-4925-8e74-15201c8a47c4"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        440,
        3040
      ],
      ""parameters"": {
        ""width"": 440,
        ""height"": 240,
        ""content"": ""## 3. Gmail Approval Workflow\n\nSends the formatted post to an approver via Gmail.\n\nThe approver can respond with:\n✅ Yes – Approve\n✏️ No – Request changes\n❌ Cancel – Abort the post\n\nSet Gmail credentials and recipient email in the node.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""66d51a35-262e-469b-bcd8-aca3cf60452c"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1120,
        3040
      ],
      ""parameters"": {
        ""width"": 440,
        ""height"": 240,
        ""content"": ""## 4. Approval Handling & Regeneration\n\nHandles all approval responses:\n- If Yes, proceed to post.\n- If No, regenerate content based on the feedback and resend.\n- If Cancel, update the Google Sheet as Cancelled.\n\nThis ensures a complete review cycle before posting.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ad4023af-0e8b-4ec1-be1d-9313ec4f5ca7"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1800,
        3040
      ],
      ""parameters"": {
        ""width"": 460,
        ""height"": 320,
        ""content"": ""## 5. Image Check, Posting & Sheet Update\n\nChecks if an image URL is provided.\n- If present: Downloads the image and posts with it.\n- If not: Posts content without an image.\n\nAfter posting, it updates the Google Sheet with:\n- Status = Completed or Cancelled\n- LinkedIn post link/output\n\nUses row_number for precise sheet updates.""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""65685909-274a-4d41-8f8a-fbba9442597b"",
  ""connections"": {
    ""Get Image"": {
      ""main"": [
        [
          {
            ""node"": ""Post With Image"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Post With Image"": {
      ""main"": [
        [
          {
            ""node"": ""Update Google Sheet"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Schedule Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""Get Data from Sheets"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Data Formatting 1"": {
      ""main"": [
        [
          {
            ""node"": ""Send Content Confirmation"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""If Image Provided"": {
      ""main"": [
        [
          {
            ""node"": ""Get Image"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Post Without Image"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Generate Post Content"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          },
          {
            ""node"": ""Regenerate Post Content"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Post Without Image"": {
      ""main"": [
        [
          {
            ""node"": ""Update Google Sheet"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get Data from Sheets"": {
      ""main"": [
        [
          {
            ""node"": ""Generate Post Content"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Generate Post Content"": {
      ""main"": [
        [
          {
            ""node"": ""Data Formatting 1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Regenerate Post Content"": {
      ""main"": [
        [
          {
            ""node"": ""Data Formatting 1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Send Content Confirmation"": {
      ""main"": [
        [
          {
            ""node"": ""Content Confirmation Logic"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Content Confirmation Logic"": {
      ""main"": [
        [
          {
            ""node"": ""If Image Provided"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Regenerate Post Content"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Update Google Sheet"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
"Personalized AI Tech Newsletter Using RSS, OpenAI and Gmail","{
  ""id"": ""ni6SfqC3kthAlPtX"",
  ""meta"": {
    ""instanceId"": ""a2eaba9e45ad7aab18b25cf863df1e910fb6dd3b85279bde97d9bae4a72f6862"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Personalized AI Tech Newsletter Using RSS, OpenAI and Gmail"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""5cc6bfe1-dbaa-4196-ac52-27e3d5b7e91d"",
      ""name"": ""Split Out"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        420,
        -300
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""rss""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c696de41-aeb1-4e2c-9e7e-8b04f7800bdb"",
      ""name"": ""Embeddings OpenAI"",
      ""type"": ""@n8n/n8n-nodes-langchain.embeddingsOpenAi"",
      ""position"": [
        960,
        -100
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""DyPIpHdVscqT5xeY"",
          ""name"": ""OpenAI Templates Account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""4b127a8f-14b3-4a0e-86f6-3157c59bc09c"",
      ""name"": ""Default Data Loader"",
      ""type"": ""@n8n/n8n-nodes-langchain.documentDefaultDataLoader"",
      ""position"": [
        1120,
        -140
      ],
      ""parameters"": {
        ""options"": {
          ""metadata"": {
            ""metadataValues"": [
              {
                ""name"": ""title"",
                ""value"": ""={{ $json.title }}""
              },
              {
                ""name"": ""createDate"",
                ""value"": ""={{ $now.toISO() }}""
              },
              {
                ""name"": ""publishDate"",
                ""value"": ""={{ $json.date }}""
              },
              {
                ""name"": ""link"",
                ""value"": ""={{ $json.link }}""
              }
            ]
          }
        },
        ""jsonData"": ""=# {{ $json.title }}\n{{ $json.content }}"",
        ""jsonMode"": ""expressionData""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c32d87cd-28ee-4b28-ad53-43320169b6df"",
      ""name"": ""Recursive Character Text Splitter"",
      ""type"": ""@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"",
      ""position"": [
        1260,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""chunkSize"": 3000
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c912148b-1142-4713-9769-1588ff308c62"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        400,
        520
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o"",
          ""cachedResultName"": ""gpt-4o""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""DyPIpHdVscqT5xeY"",
          ""name"": ""OpenAI Templates Account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""ba7aef6b-efec-4c35-a9d6-b2b8afb6b6c4"",
      ""name"": ""Get Articles Daily"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        -20,
        -300
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {}
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""0827bf1b-1322-4e4a-8c5b-0da90382b202"",
      ""name"": ""Send Weekly Summary"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        -40,
        360
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {
              ""field"": ""weeks"",
              ""triggerAtDay"": [
                1
              ],
              ""triggerAtHour"": 5
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""b1625ec0-fd2f-4098-ba79-1f522123cb86"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -100,
        -460
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 1560,
        ""height"": 600,
        ""content"": ""## 1. Save news in a vector store (runs daily)""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""7edbdba1-43ac-4754-91ae-d506ee38e8ff"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -100,
        200
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 1380,
        ""height"": 580,
        ""content"": ""## 2. Send a summary (runs once a week)""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e166715b-f579-4d22-bf2f-9318e4e86f2a"",
      ""name"": ""News reader AI"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        420,
        300
      ],
      ""parameters"": {
        ""text"": ""=Summarize the most relevant tech news published in the past 7 days. Today is {{ $now }}"",
        ""options"": {
          ""systemMessage"": ""=Write in clear, concise, and easy-to-understand English, as if curating a weekly tech newsletter.\n\nPrioritize stories related to the following topics: {{ $json.Interests }}.\nIf those topics aren't present, choose the most impactful, widely reported, and noteworthy tech events from the week.\n\nFor each news item:\n\nProvide a short, informative summary (1–3 sentences max)\n\nInclude the article title and a direct link to the original source\n\nAvoid duplicate stories.\n\nInclude exactly {{ $json['Number of news items to include'] }} distinct news items.\nMaintain a tone that's friendly yet professional, suitable for a broad audience of tech enthusiasts.""
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""c88c6c60-493e-41cf-b08d-3eef48e7cbc4"",
      ""name"": ""Send Newsletter"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        1020,
        360
      ],
      ""webhookId"": ""0de8b6e8-8611-48a9-ba25-1d023698f577"",
      ""parameters"": {
        ""sendTo"": ""your@email.com"",
        ""message"": ""={{ $json.data }}"",
        ""options"": {},
        ""subject"": ""Weekly tech newsletter""
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""VVLm2UzmGbMNTTNO"",
          ""name"": ""Gmail account 2""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""8e303102-f68c-4cf8-a2bb-4538830610e6"",
      ""name"": ""Convert Response to an Email-Friendly Format"",
      ""type"": ""n8n-nodes-base.markdown"",
      ""position"": [
        780,
        300
      ],
      ""parameters"": {
        ""mode"": ""markdownToHtml"",
        ""options"": {},
        ""markdown"": ""={{ $json.output }}""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3f90c79c-a04d-4537-b426-33900acfcb8a"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        120,
        300
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 220,
        ""height"": 240,
        ""content"": ""### Edit this:""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""de315b7c-065c-45a7-be50-5d7a4eedeeaf"",
      ""name"": ""Your topics of interest"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        180,
        360
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""018882ca-37c3-45af-944f-2081b0605065"",
              ""name"": ""Interests"",
              ""type"": ""string"",
              ""value"": ""AI, games, gadgets""
            },
            {
              ""id"": ""4cfdafc1-47a4-41cc-9eb8-72880ea34511"",
              ""name"": ""Number of news items to include"",
              ""type"": ""string"",
              ""value"": ""15""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""8a1d6ac3-6fda-4916-a021-3d5db7d413e0"",
      ""name"": ""Store News Articles"",
      ""type"": ""@n8n/n8n-nodes-langchain.vectorStoreInMemory"",
      ""position"": [
        1080,
        -300
      ],
      ""parameters"": {
        ""mode"": ""insert"",
        ""memoryKey"": ""news_store_key""
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""b7fd5c59-3ed7-4706-bdd7-a62c62cd65af"",
      ""name"": ""Set Tech News RSS Feeds"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        200,
        -300
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""b8c00469-890b-4b5b-8e2e-2ad9ec2d0815"",
              ""name"": ""rss"",
              ""type"": ""array"",
              ""value"": ""=[\n  \""https://www.engadget.com/rss.xml\"",\n  \""https://feeds.arstechnica.com/arstechnica/index\"",\n  \""https://www.theverge.com/rss/index.xml\"",\n  \""https://www.wired.com/feed/rss\"",\n  \""https://www.technologyreview.com/topnews.rss\"",\n  \""https://techcrunch.com/feed/\""\n]\n""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""77f5f3bc-8ecd-481a-a570-6e49e4fda01b"",
      ""name"": ""Read RSS News Feeds"",
      ""type"": ""n8n-nodes-base.rssFeedRead"",
      ""position"": [
        640,
        -300
      ],
      ""parameters"": {
        ""url"": ""={{ $json.rss }}"",
        ""options"": {
          ""ignoreSSL"": false
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""540f55b3-10d1-4f7e-bbdf-793ae6524fd7"",
      ""name"": ""Get News Articles"",
      ""type"": ""@n8n/n8n-nodes-langchain.vectorStoreInMemory"",
      ""position"": [
        540,
        500
      ],
      ""parameters"": {
        ""mode"": ""retrieve-as-tool"",
        ""topK"": 20,
        ""toolName"": ""get_news"",
        ""memoryKey"": ""news_store_key"",
        ""toolDescription"": ""Call this tool to get the latest news articles.""
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""f5e37288-ef4c-41ea-87bd-1e9ee1e9ab0f"",
      ""name"": ""Embeddings OpenAI2"",
      ""type"": ""@n8n/n8n-nodes-langchain.embeddingsOpenAi"",
      ""position"": [
        740,
        620
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""DyPIpHdVscqT5xeY"",
          ""name"": ""OpenAI Templates Account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""f6e050de-8dc1-41dd-a18f-225a2f5f68ad"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        140,
        -360
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 220,
        ""height"": 240,
        ""content"": ""### Edit this:""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4d773ce7-cbca-4568-bd40-0f9914e835bb"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -580,
        -460
      ],
      ""parameters"": {
        ""width"": 420,
        ""height"": 920,
        ""content"": ""\n## Let AI read the tech news for you\n\nThis workflow fetches news via [RSS feeds](https://en.wikipedia.org/wiki/RSS) from selected tech websites, stores them in a vector database and uses an AI agent to send you a weekly, personalized newsletter - keeping you informed without daily distractions.\n\n### How it works\n* A **daily scheduled trigger** fetches articles from multiple popular tech RSS feeds like Wired, TechCrunch, and The Verge.\n\n* Fetched articles are:\n  * **Normalized** to extract titles, summaries, and publish dates.\n  * **Converted to vector embeddings** via OpenAI and stored in memory for fast semantic querying.\n\n* A **weekly scheduled trigger** activates the AI summarization flow:\n  * The AI is provided with your interests (e.g., *AI, games, gadgets*) and the desired number of items (e.g., 15).\n  * It queries the vector store to retrieve relevant articles and summarizes the most newsworthy stories.\n  * The summary is converted into a clean, email-friendly format and sent to your inbox.\n\n### How to use\n1. Connect your **OpenAI** and **Gmail** accounts to n8n.\n2. Customize the list of RSS feeds in the “Set Tech News RSS Feeds” node.\n3. Update your interests and number of desired news items in the “Your Topics of Interest” node.\n4. Enter your email address in the \""Send Newsletter\"" node.\n4. Activate the workflow and let the automation run on schedule.\n\n### Requirements\n* **OpenAI** credentials for embeddings and summarization\n* **Gmail** (or another email service) for sending the newsletter""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""796c2a13-c168-4bc9-b79b-fc80c31274c1"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        900,
        580
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 520,
        ""height"": 280,
        ""content"": ""### 💡 Customizing this workflow\n\n* Want to use different sources? Swap in your own RSS feeds, or use an API-based news aggregator.\n* Replace the in-memory vector store with **Pinecone**, **Weaviate**, or another persistent vector DB for longer-term storage.\n* Adjust the agent's summarization style to suit internal updates, industry-specific briefings, or even entertainment recaps.\nHere’s an additional bullet point to include under **Customizing this workflow**:\n* Prefer chat over email? Replace the email node with a **Telegram bot** to receive your personalized tech newsletter directly in a Telegram chat.\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4bd264b8-b088-413d-b44b-dae3b7cc3e77"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        960,
        300
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 220,
        ""height"": 240,
        ""content"": ""### Add your email:""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6d2b402d-22e0-4cc5-a070-8b4169f18a99"",
      ""name"": ""Set and Normalize Fields"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        860,
        -300
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""e9f27ceb-c5f2-4997-8cb1-67576a7bb337"",
              ""name"": ""title"",
              ""type"": ""string"",
              ""value"": ""={{ $json.title }}""
            },
            {
              ""id"": ""4c4f9417-40f2-4fb0-9976-d09f5984680f"",
              ""name"": ""content"",
              ""type"": ""string"",
              ""value"": ""={{ $json['content:encodedSnippet'] ?? $json.contentSnippet}}""
            },
            {
              ""id"": ""e1986bac-054e-4240-ba50-536dbcd27337"",
              ""name"": ""date"",
              ""type"": ""string"",
              ""value"": ""={{ $json.isoDate}}""
            },
            {
              ""id"": ""9566e23c-ac30-4d66-abbd-889f322688b7"",
              ""name"": ""link"",
              ""type"": ""string"",
              ""value"": ""={{ $json.link }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""9b875084-83f0-43e6-968a-caec8fb29d7b"",
  ""connections"": {
    ""Split Out"": {
      ""main"": [
        [
          {
            ""node"": ""Read RSS News Feeds"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""News reader AI"": {
      ""main"": [
        [
          {
            ""node"": ""Convert Response to an Email-Friendly Format"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Send Newsletter"": {
      ""main"": [
        []
      ]
    },
    ""Embeddings OpenAI"": {
      ""ai_embedding"": [
        [
          {
            ""node"": ""Store News Articles"",
            ""type"": ""ai_embedding"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get News Articles"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""News reader AI"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""News reader AI"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Embeddings OpenAI2"": {
      ""ai_embedding"": [
        [
          {
            ""node"": ""Get News Articles"",
            ""type"": ""ai_embedding"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get Articles Daily"": {
      ""main"": [
        [
          {
            ""node"": ""Set Tech News RSS Feeds"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Default Data Loader"": {
      ""ai_document"": [
        [
          {
            ""node"": ""Store News Articles"",
            ""type"": ""ai_document"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Read RSS News Feeds"": {
      ""main"": [
        [
          {
            ""node"": ""Set and Normalize Fields"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Send Weekly Summary"": {
      ""main"": [
        [
          {
            ""node"": ""Your topics of interest"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Set Tech News RSS Feeds"": {
      ""main"": [
        [
          {
            ""node"": ""Split Out"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Your topics of interest"": {
      ""main"": [
        [
          {
            ""node"": ""News reader AI"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Set and Normalize Fields"": {
      ""main"": [
        [
          {
            ""node"": ""Store News Articles"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Recursive Character Text Splitter"": {
      ""ai_textSplitter"": [
        [
          {
            ""node"": ""Default Data Loader"",
            ""type"": ""ai_textSplitter"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Convert Response to an Email-Friendly Format"": {
      ""main"": [
        [
          {
            ""node"": ""Send Newsletter"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Find Content Gaps in Competitors' Websites with InfraNodus GraphRAG for SEO,"{
  ""id"": ""bkRodBs0nMPT5cDv"",
  ""meta"": {
    ""instanceId"": ""2a26454b0172ffcb8d70ba77c235b1209f92cd71bf06c79ba609c7173b416d68"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Find the Content Gaps in Your Competitors' Discourse for Market Research and SEO"",
  ""tags"": [
    {
      ""id"": ""MyFEaUe9Eo4t7SvF"",
      ""name"": ""SEO"",
      ""createdAt"": ""2025-05-20T13:16:17.982Z"",
      ""updatedAt"": ""2025-05-20T13:16:17.982Z""
    },
    {
      ""id"": ""kRM0hQV2zw7VxrON"",
      ""name"": ""Research"",
      ""createdAt"": ""2025-05-21T19:44:19.136Z"",
      ""updatedAt"": ""2025-05-21T19:44:19.136Z""
    },
    {
      ""id"": ""sJk9cUvmMU8FkJXv"",
      ""name"": ""AI"",
      ""createdAt"": ""2025-05-20T13:16:15.636Z"",
      ""updatedAt"": ""2025-05-20T13:16:15.636Z""
    },
    {
      ""id"": ""kldZpTCan1suEN8v"",
      ""name"": ""Marketing"",
      ""createdAt"": ""2025-05-20T13:16:20.459Z"",
      ""updatedAt"": ""2025-05-20T13:16:20.459Z""
    },
    {
      ""id"": ""9QurS5Kb1CkCYrnG"",
      ""name"": ""Product"",
      ""createdAt"": ""2025-05-21T17:06:29.704Z"",
      ""updatedAt"": ""2025-05-21T17:06:29.704Z""
    }
  ],
  ""nodes"": [
    {
      ""id"": ""17af96f8-2f12-48b3-864f-bd28aa765ba6"",
      ""name"": ""When clicking \""Execute Workflow\"""",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        -200,
        520
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""9f270d49-c494-4c67-8749-e9ae3dfd0cef"",
      ""name"": ""HTTP Request"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        380,
        300
      ],
      ""parameters"": {
        ""url"": ""={{ $json.URL }}"",
        ""options"": {
          ""redirect"": {
            ""redirect"": {
              ""followRedirects"": true
            }
          }
        }
      },
      ""typeVersion"": 3,
      ""continueOnFail"": true
    },
    {
      ""id"": ""3290629e-655a-4091-aee4-41482f441a52"",
      ""name"": ""HTML Extract"",
      ""type"": ""n8n-nodes-base.htmlExtract"",
      ""position"": [
        560,
        300
      ],
      ""parameters"": {
        ""options"": {
          ""trimValues"": false
        },
        ""extractionValues"": {
          ""values"": [
            {
              ""key"": ""body"",
              ""cssSelector"": ""html""
            }
          ]
        }
      },
      ""typeVersion"": 1,
      ""continueOnFail"": true
    },
    {
      ""id"": ""94146021-3b01-43d0-b6d7-9fcfca0d065a"",
      ""name"": ""Merge"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        1580,
        140
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""combinationMode"": ""mergeByPosition""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""08e5118b-37df-47a7-a50d-dbd2854d3dee"",
      ""name"": ""Clean Content"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        720,
        300
      ],
      ""parameters"": {
        ""mode"": ""runOnceForEachItem"",
        ""jsCode"": ""if ($input.item.json.body){\n\n\n\n$input.item.json.content = $input.item.json.body.replaceAll('/^\\s+|\\s+$/g', '').replace('/(\\r\\n|\\n|\\r)/gm', \""\"").replace(/\\s+/g, ' ')\n\n\n  $input.item.json.contentShort = $input.item.json.content.slice(0, 10000)\n}\n\n\n\n\nreturn $input.item""
      },
      ""executeOnce"": false,
      ""typeVersion"": 1,
      ""continueOnFail"": true,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""6eed41aa-176b-4a7c-8288-8c6dd47361df"",
      ""name"": ""Split In Batches"",
      ""type"": ""n8n-nodes-base.splitInBatches"",
      ""position"": [
        120,
        220
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1ca73312-3b32-4fd7-85e9-05850383d0b4"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -300,
        -200
      ],
      ""parameters"": {
        ""width"": 300,
        ""height"": 640,
        ""content"": ""## 1. Specify the Google Sheet file\n\n#### It should contain the company names and their URLs (in the URL column). Also the Topical Summary and the Graph Summary columns that we will copy the data to.\n\n🤌 [SEE GOOGLE SHEETS TEMPLATE HERE](https://docs.google.com/spreadsheets/d/14qR7Gi8SRCd3eM6_V3ftRcDODkEFAILEqogjUvk7hKs/edit?usp=sharing) - use the same column names and replace with your data. Can be a list of companies generated with the workflow below, or Manus AI or any other Deep Research mode or a list of URLs you'd like to analyze for SEO.\n\n\n🚨 Make sure you specify the file here""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""8c657ce2-a363-4a77-9417-a758a8f3d3a0"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        60,
        -160
      ],
      ""parameters"": {
        ""width"": 220,
        ""height"": 600,
        ""content"": ""## 2. Avoid rate limit error\n\n#### Split requests into batches of 10 \n\nso you don't make too many requests at once. \n\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ebd2ae92-1757-4dc4-b21b-09ad906398ca"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        340,
        -80
      ],
      ""parameters"": {
        ""width"": 520,
        ""height"": 520,
        ""content"": ""## 3. Make an HTTP request and extract text content from the links provided\n\n#### Clean up the content to extract only text, not HTML\n\nwe will then use this content to analyze data""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6ef3a264-586f-406a-ad44-cdbe2aa28654"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        920,
        -240
      ],
      ""parameters"": {
        ""width"": 440,
        ""height"": 680,
        ""content"": ""## 4. Use InfraNodus GraphRAG Content Enhancer Tool \n\n#### It will use its AI to generate topical summaries and structural insights from every company's website. \n\nIt will generate a \n\n1) Topical Summary — AI generated summaries of the main topical clusters found in the document (if `graph summary` requestMode is used or a single summary if `summary` requestMode is used.\n\n2) Graph Summary — the information about the content gaps, the main topical clusters, keywords, and keyword combinations for the websites you provided.\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""727b3598-b759-4c4c-bbaa-50704d159b96"",
      ""name"": ""InfraNodus GraphRAG Content Enhancer"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1080,
        260
      ],
      ""parameters"": {
        ""url"": ""https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&optimize=develop&includeGraph=false&includeGraphSummary=true"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""authentication"": ""genericCredentialType"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""name"",
              ""value"": ""n8n_dummy_graph""
            },
            {
              ""name"": ""aiTopics"",
              ""value"": ""true""
            },
            {
              ""name"": ""text"",
              ""value"": ""={{ $json.contentShort }}""
            },
            {
              ""name"": ""requestMode"",
              ""value"": ""summary""
            }
          ]
        },
        ""genericAuthType"": ""httpBearerAuth""
      },
      ""credentials"": {
        ""httpBearerAuth"": {
          ""id"": ""6lSuuSDajZrvI2GM"",
          ""name"": ""InfraNodus API Key""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""77584973-d4fd-4a5b-9344-baebdfb4e584"",
      ""name"": ""Google Docs"",
      ""type"": ""n8n-nodes-base.googleDocs"",
      ""position"": [
        3780,
        600
      ],
      ""parameters"": {
        ""actionsUi"": {
          ""actionFields"": [
            {
              ""text"": ""={{ $('InfraNodus AI Advice').item.json.aiAdvice[0].text }}\n\n{{ $('InfraNodus Question Generator').item.json.aiAdvice.slice(0, 3).map(advice => advice.text).join('\\n\\n') }}"",
              ""action"": ""insert""
            }
          ]
        },
        ""operation"": ""update"",
        ""documentURL"": ""https://docs.google.com/document/d/1q_pjPlg7flnP5TooBEC_4r-SkyY6F5tgrC-kE7lbFls/edit?tab=t.0""
      },
      ""credentials"": {
        ""googleDocsOAuth2Api"": {
          ""id"": ""EHbGAxRKLI2ejgPv"",
          ""name"": ""Google Docs account 2""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""fd082093-c2b1-483e-b418-31bebd15d2c6"",
      ""name"": ""Aggregate"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        3100,
        600
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldsToAggregate"": {
          ""fieldToAggregate"": [
            {
              ""fieldToAggregate"": ""Topical Summary""
            },
            {
              ""fieldToAggregate"": ""Graph Summary""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4c82a7bf-aa76-4d43-83dc-de54679b5f10"",
      ""name"": ""Read a Google Sheets File"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        -200,
        240
      ],
      ""parameters"": {
        ""options"": {},
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": 1122486654,
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1l4RBfavkqZLz8JdwrgNsSwD8xERlDm6BrA2gXFPm0Dg/edit#gid=1122486654"",
          ""cachedResultName"": ""Empty""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1l4RBfavkqZLz8JdwrgNsSwD8xERlDm6BrA2gXFPm0Dg"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1l4RBfavkqZLz8JdwrgNsSwD8xERlDm6BrA2gXFPm0Dg/edit?usp=drivesdk"",
          ""cachedResultName"": ""Visual Text Analysis Tools""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""DHJcCtarL7rWLBsF"",
          ""name"": ""Google Sheets account 2""
        }
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""5c8a772c-573d-4115-ab61-54a492f69907"",
      ""name"": ""Update Google Sheets with Content Insights"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        2000,
        240
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldsUi"": {
          ""values"": [
            {
              ""column"": ""Graph Summary"",
              ""fieldValue"": ""={{ $json.graphSummary }}""
            },
            {
              ""column"": ""Topical Summary"",
              ""fieldValue"": ""={{ $json.aiAdvice[0].text }}""
            }
          ]
        },
        ""operation"": ""update"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": 1122486654,
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1l4RBfavkqZLz8JdwrgNsSwD8xERlDm6BrA2gXFPm0Dg/edit#gid=1122486654"",
          ""cachedResultName"": ""Empty""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""url"",
          ""value"": ""https://docs.google.com/spreadsheets/d/1l4RBfavkqZLz8JdwrgNsSwD8xERlDm6BrA2gXFPm0Dg/edit?gid=1287901638#gid=1287901638""
        },
        ""valueToMatchOn"": ""={{ $json.URL }}"",
        ""columnToMatchOn"": ""URL""
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""DHJcCtarL7rWLBsF"",
          ""name"": ""Google Sheets account 2""
        }
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""47de0abb-b1ff-4620-a80f-ac3c3a2369a6"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1500,
        -140
      ],
      ""parameters"": {
        ""width"": 260,
        ""height"": 460,
        ""content"": ""## 5. Add the enhanced content to original row\n\n#### We use this node to match the result to the table row (company and URL) we used to generate this result.\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0a665031-77de-4649-a274-b19092d5f0cf"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1920,
        -100
      ],
      ""parameters"": {
        ""width"": 260,
        ""height"": 520,
        ""content"": ""## 6. Enrich the original Google sheets with the content\n\n#### We save the keywords, topical clusters, topical summaries, and content gaps to the Google sheets, so you can reuse it later in other workflows. \n\n🚨 Make sure to specify the Google sheets file here""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6955a297-326e-4c30-bfd7-a3abdb2eb712"",
      ""name"": ""Wait to avoid API overload"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        2280,
        500
      ],
      ""webhookId"": ""e48bd7c5-7bc3-4f1d-8134-e25c7619ba83"",
      ""parameters"": {
        ""unit"": ""seconds""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""f1a16bb2-231f-46ae-87d8-91852223092a"",
      ""name"": ""If Node: did we process all the data?"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        2500,
        500
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""6b987d9e-7977-4c1e-a22c-42f1bd47e780"",
              ""operator"": {
                ""type"": ""boolean"",
                ""operation"": ""false"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $node[\""Split In Batches\""].context[\""noItemsLeft\""] }}"",
              ""rightValue"": ""value2""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""d6aa6d5d-0cb8-4149-ad78-44b51312ad1a"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2240,
        300
      ],
      ""parameters"": {
        ""width"": 420,
        ""height"": 400,
        ""content"": ""## 7. Batch complete? Go to the next one.\n\n#### We process content in batches of 10 to avoid API overload and rate limit errors.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e1814824-cb3d-46d3-8747-57bce510493f"",
      ""name"": ""Get the content from Google Sheets"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        2800,
        600
      ],
      ""parameters"": {
        ""options"": {},
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": 1122486654,
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1l4RBfavkqZLz8JdwrgNsSwD8xERlDm6BrA2gXFPm0Dg/edit#gid=1122486654"",
          ""cachedResultName"": ""Empty""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1l4RBfavkqZLz8JdwrgNsSwD8xERlDm6BrA2gXFPm0Dg"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1l4RBfavkqZLz8JdwrgNsSwD8xERlDm6BrA2gXFPm0Dg/edit?usp=drivesdk"",
          ""cachedResultName"": ""Visual Text Analysis Tools""
        },
        ""combineFilters"": ""OR""
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""DHJcCtarL7rWLBsF"",
          ""name"": ""Google Sheets account 2""
        }
      },
      ""typeVersion"": 4.6
    },
    {
      ""id"": ""15dbb650-6c59-49fa-a2fd-8cf4a691b667"",
      ""name"": ""InfraNodus AI Advice"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        3320,
        480
      ],
      ""parameters"": {
        ""url"": ""https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&optimize=develop&includeGraph=false&includeGraphSummary=true"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""authentication"": ""genericCredentialType"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""aiTopics"",
              ""value"": ""true""
            },
            {
              ""name"": ""prompt"",
              ""value"": ""=Tell me what are the main topics and gaps in the discourse provided""
            },
            {
              ""name"": ""requestMode"",
              ""value"": ""response""
            },
            {
              ""name"": ""text"",
              ""value"": ""={{ $json['Topical Summary'].join(' ') }}""
            }
          ]
        },
        ""genericAuthType"": ""httpBearerAuth""
      },
      ""credentials"": {
        ""httpBearerAuth"": {
          ""id"": ""6lSuuSDajZrvI2GM"",
          ""name"": ""InfraNodus API Key""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""c7512eb4-d37f-4613-9b35-94739190515f"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2740,
        240
      ],
      ""parameters"": {
        ""height"": 580,
        ""content"": ""## 8. Enrich the original Google sheets with your insights\n\n#### We can then use this data for further research and SEO\n\n🚨 Make sure to specify the Google sheets file here""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""987fd873-00ed-48c8-bbb5-ef309fbd2f21"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        3040,
        240
      ],
      ""parameters"": {
        ""width"": 500,
        ""height"": 580,
        ""content"": ""## 9. Get all the insights obtained from all the documents and create the final report.\n\n#### Synthesize the final report based on the main topics, summaries, and content gaps discovered in the previous steps\n\nOptional: You can also feed this output to another workflow to create a full report or SEO-friendly article. ""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""7c83852a-8a77-471e-b105-6ef31e1e210e"",
      ""name"": ""Sticky Note9"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -300,
        760
      ],
      ""parameters"": {
        ""width"": 300,
        ""height"": 300,
        ""content"": ""## 0. Specify the starting point\n\n#### You may choose to connect this node directly to the Step 8 if you already enriched the data in the Excel sheet.\n\nIn that case, the workflow will take data from the Topical Summary column and generate the results for you\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""f0b063d7-65e3-4bea-8065-af0b6fdb7e8f"",
      ""name"": ""Sticky Note10"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -300,
        -400
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 2940,
        ""height"": 100,
        ""content"": ""# Stage 1: Data Enrichment""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""5e697fdf-85b2-4761-a4e1-d555179afed8"",
      ""name"": ""Sticky Note11"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2720,
        -400
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 1220,
        ""height"": 100,
        ""content"": ""# Stage 2: Insight Generation""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""75beedd8-bbb4-465e-98be-932af51e5199"",
      ""name"": ""Sticky Note12"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        3720,
        240
      ],
      ""parameters"": {
        ""height"": 580,
        ""content"": ""## 10. Save the insights into a Google Doc\n\n#### We can then use this data for further research and SEO\n\n🚨 Make sure to specify the Google docs file here""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3fdfae7a-456e-45fb-b1ed-c263838a5e20"",
      ""name"": ""Merge1"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        3580,
        600
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""joinMode"": ""keepEverything"",
        ""fieldsToMatchString"": ""aiAdvice""
      },
      ""typeVersion"": 3.1
    },
    {
      ""id"": ""f1ef6074-08e1-4afe-8175-9f6d9d0317a7"",
      ""name"": ""InfraNodus Question Generator"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        3320,
        700
      ],
      ""parameters"": {
        ""url"": ""https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&optimize=gap&includeGraph=false&includeGraphSummary=true"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""authentication"": ""genericCredentialType"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""aiTopics"",
              ""value"": ""true""
            },
            {
              ""name"": ""prompt"",
              ""value"": ""=Tell me what are the main topics and gaps in the discourse provided""
            },
            {
              ""name"": ""requestMode"",
              ""value"": ""question""
            },
            {
              ""name"": ""text"",
              ""value"": ""={{ $json['Topical Summary'].join(' ') }}""
            }
          ]
        },
        ""genericAuthType"": ""httpBearerAuth""
      },
      ""credentials"": {
        ""httpBearerAuth"": {
          ""id"": ""6lSuuSDajZrvI2GM"",
          ""name"": ""InfraNodus API Key""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""0b415fbb-5a2b-4b9a-a4ff-53d2cd3a9a33"",
      ""name"": ""Perplexity Research"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        620,
        1060
      ],
      ""parameters"": {
        ""url"": ""https://api.perplexity.ai/chat/completions"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""model\"": \""sonar-pro\"",\n  \""messages\"": [\n    {\n      \""role\"": \""system\"",\n      \""content\"": \""Act as a professional  researcher  whose task is to create the most comprehensive list of links that relate to the niche provided.\""\n    },\n    {\n      \""role\"": \""user\"",\n      \""content\"": \""Find all the link that relate to the following field: '{{ $json['Niche'] }}'\\n\\nAdditional instructions: '{{ $json['Model Instructions'] }}'\\n IMPORTANT: \\nMake a json list of at least 20 of them. One column is the name, the other is the URL, the third one is the category they operate in. Be as comprehensive in your search as you can. IMPORTANT: answer exclusively in JSON, do NOT add any additional comments.EXAMPLE OF YOUR RESPONSE\\n\\n[{\\\""Name\\\"":\\\""A\\\"",\\\""URL\\\"":\\\""https://website.com\\\""}]\""\n    }\n  ]\n}\n"",
        ""sendBody"": true,
        ""specifyBody"": ""json"",
        ""authentication"": ""genericCredentialType"",
        ""genericAuthType"": ""httpBearerAuth""
      },
      ""credentials"": {
        ""httpBearerAuth"": {
          ""id"": ""9fXf9Np7XsCWgxhg"",
          ""name"": ""Perplexity""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""a73d5f72-c5f1-46c8-ae7a-08c9ec7f0755"",
      ""name"": ""On form submission"",
      ""type"": ""n8n-nodes-base.formTrigger"",
      ""disabled"": true,
      ""position"": [
        280,
        1060
      ],
      ""webhookId"": ""fcf3ba43-d94f-4aad-a8a0-62492274b372"",
      ""parameters"": {
        ""options"": {},
        ""formTitle"": ""Generate a List of Companies for a Market Niche"",
        ""formFields"": {
          ""values"": [
            {
              ""fieldLabel"": ""Niche"",
              ""placeholder"": ""e.g. customer feedback analysis tools"",
              ""requiredField"": true
            },
            {
              ""fieldLabel"": ""Additional Search Instructions"",
              ""placeholder"": ""e.g. make sure to include only big companies""
            }
          ]
        },
        ""formDescription"": ""Describe the market for which you want to get a list of companies""
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""19becdd1-a2f6-4be7-89c7-780a8e80a11b"",
      ""name"": ""OpenAI"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        920,
        1060
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini"",
          ""cachedResultName"": ""GPT-4O-MINI""
        },
        ""options"": {},
        ""messages"": {
          ""values"": [
            {
              ""content"": ""=Take this content and generate a JSON from it: {{ $json.choices[0].message.content }}. Make sure your JSON is just a list of companies like an array. Don't give it an additional name. Your response should be in the `response` object.""
            }
          ]
        },
        ""jsonOutput"": true
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""07wFa8Wa4mMRCHAj"",
          ""name"": ""OpenAi account 2""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""5a14b12b-9645-4a16-a377-e707562af837"",
      ""name"": ""Google Sheets"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        1760,
        1060
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {},
          ""schema"": [
            {
              ""id"": ""Name"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""URL"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""URL"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Category"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Category"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""autoMapInputData"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": 1122486654,
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1l4RBfavkqZLz8JdwrgNsSwD8xERlDm6BrA2gXFPm0Dg/edit#gid=1122486654"",
          ""cachedResultName"": ""Empty""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1l4RBfavkqZLz8JdwrgNsSwD8xERlDm6BrA2gXFPm0Dg"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1l4RBfavkqZLz8JdwrgNsSwD8xERlDm6BrA2gXFPm0Dg/edit?usp=drivesdk"",
          ""cachedResultName"": ""Visual Text Analysis Tools""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""DHJcCtarL7rWLBsF"",
          ""name"": ""Google Sheets account 2""
        }
      },
      ""typeVersion"": 4.6
    },
    {
      ""id"": ""068b21f2-b4e8-4ccb-9756-b0e5ee3a6833"",
      ""name"": ""Split Out"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        1260,
        1060
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""message.content.response""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""02e38788-8624-4e8f-bb9a-3e0cbed63b49"",
      ""name"": ""Loop Over Items"",
      ""type"": ""n8n-nodes-base.splitInBatches"",
      ""position"": [
        1460,
        1060
      ],
      ""parameters"": {
        ""options"": {
          ""reset"": false
        }
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""c2a4b61b-74c4-443c-a15e-252f896c372e"",
      ""name"": ""Sticky Note13"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        220,
        840
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 1740,
        ""height"": 480,
        ""content"": ""## Generate a List of URLs to Analyze \n\n#### Use this workflow to seed the Excel file with the list of URLs you'd like to analyze using the workflow above \n\nTrigger execution by clicking \""Test Workflow\"" next to the form""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""2e3a437d-bf75-4612-9ca4-b53e6c2efd31"",
  ""connections"": {
    ""Merge"": {
      ""main"": [
        [
          {
            ""node"": ""Update Google Sheets with Content Insights"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Merge1"": {
      ""main"": [
        [
          {
            ""node"": ""Google Docs"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI"": {
      ""main"": [
        [
          {
            ""node"": ""Split Out"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Aggregate"": {
      ""main"": [
        [
          {
            ""node"": ""InfraNodus AI Advice"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""InfraNodus Question Generator"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Split Out"": {
      ""main"": [
        [
          {
            ""node"": ""Loop Over Items"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""HTML Extract"": {
      ""main"": [
        [
          {
            ""node"": ""Clean Content"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""HTTP Request"": {
      ""main"": [
        [
          {
            ""node"": ""HTML Extract"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Clean Content"": {
      ""main"": [
        [
          {
            ""node"": ""InfraNodus GraphRAG Content Enhancer"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Google Sheets"": {
      ""main"": [
        [
          {
            ""node"": ""Loop Over Items"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Loop Over Items"": {
      ""main"": [
        [],
        [
          {
            ""node"": ""Google Sheets"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Split In Batches"": {
      ""main"": [
        [
          {
            ""node"": ""HTTP Request"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Merge"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""On form submission"": {
      ""main"": [
        [
          {
            ""node"": ""Perplexity Research"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Perplexity Research"": {
      ""main"": [
        [
          {
            ""node"": ""OpenAI"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""InfraNodus AI Advice"": {
      ""main"": [
        [
          {
            ""node"": ""Merge1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Read a Google Sheets File"": {
      ""main"": [
        [
          {
            ""node"": ""Split In Batches"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Wait to avoid API overload"": {
      ""main"": [
        [
          {
            ""node"": ""If Node: did we process all the data?"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""InfraNodus Question Generator"": {
      ""main"": [
        [
          {
            ""node"": ""Merge1"",
            ""type"": ""main"",
            ""index"": 1
          }
        ]
      ]
    },
    ""When clicking \""Execute Workflow\"""": {
      ""main"": [
        [
          {
            ""node"": ""Read a Google Sheets File"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get the content from Google Sheets"": {
      ""main"": [
        [
          {
            ""node"": ""Aggregate"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""InfraNodus GraphRAG Content Enhancer"": {
      ""main"": [
        [
          {
            ""node"": ""Merge"",
            ""type"": ""main"",
            ""index"": 1
          }
        ]
      ]
    },
    ""If Node: did we process all the data?"": {
      ""main"": [
        [
          {
            ""node"": ""Split In Batches"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Get the content from Google Sheets"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Update Google Sheets with Content Insights"": {
      ""main"": [
        [
          {
            ""node"": ""Wait to avoid API overload"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
   ",
Real Estate Intelligence Tracker with Bright Data & OpenAI,"{
  ""id"": ""M3htaKFJfCuko2uB"",
  ""meta"": {
    ""instanceId"": ""885b4fb4a6a9c2cb5621429a7b972df0d05bb724c20ac7dac7171b62f1c7ef40"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Real Estate Intelligence Tracker with Bright Data & OpenAI"",
  ""tags"": [
    {
      ""id"": ""Kujft2FOjmOVQAmJ"",
      ""name"": ""Engineering"",
      ""createdAt"": ""2025-04-09T01:31:00.558Z"",
      ""updatedAt"": ""2025-04-09T01:31:00.558Z""
    },
    {
      ""id"": ""ZOwtAMLepQaGW76t"",
      ""name"": ""Building Blocks"",
      ""createdAt"": ""2025-04-13T15:23:40.462Z"",
      ""updatedAt"": ""2025-04-13T15:23:40.462Z""
    },
    {
      ""id"": ""ddPkw7Hg5dZhQu2w"",
      ""name"": ""AI"",
      ""createdAt"": ""2025-04-13T05:38:08.053Z"",
      ""updatedAt"": ""2025-04-13T05:38:08.053Z""
    }
  ],
  ""nodes"": [
    {
      ""id"": ""7dc6c3d9-55e0-4f32-b00d-96c92482eca8"",
      ""name"": ""When clicking ‘Test workflow’"",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        -1700,
        -210
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""196a1630-ca74-4fee-a7bf-0555a3693908"",
      ""name"": ""Set URL and Bright Data Zone"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -1480,
        -210
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""3aedba66-f447-4d7a-93c0-8158c5e795f9"",
              ""name"": ""url"",
              ""type"": ""string"",
              ""value"": ""https://www.redfin.com/IL/Chicago/5814-W-Roscoe-St-60634/home/13464782""
            },
            {
              ""id"": ""4e7ee31d-da89-422f-8079-2ff2d357a0ba"",
              ""name"": ""zone"",
              ""type"": ""string"",
              ""value"": ""web_unlocker1""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""80131d8e-b359-4b2a-8291-faf9c4e8892f"",
      ""name"": ""Perform Bright Data Web Request"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -1260,
        -210
      ],
      ""parameters"": {
        ""url"": ""https://api.brightdata.com/request"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""authentication"": ""genericCredentialType"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""zone"",
              ""value"": ""={{ $json.zone }}""
            },
            {
              ""name"": ""url"",
              ""value"": ""={{ $json.url }}""
            },
            {
              ""name"": ""format"",
              ""value"": ""raw""
            },
            {
              ""name"": ""data_format"",
              ""value"": ""markdown""
            }
          ]
        },
        ""genericAuthType"": ""httpHeaderAuth"",
        ""headerParameters"": {
          ""parameters"": [
            {}
          ]
        }
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""kdbqXuxIR8qIxF7y"",
          ""name"": ""Header Auth account""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""2b0c3867-3c8d-4dc2-b9e9-fc9f074efaea"",
      ""name"": ""Markdown to Textual Data Extractor"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        -1040,
        -210
      ],
      ""parameters"": {
        ""text"": ""=You need to analyze the below markdown and convert to textual data. Please do not output with your own thoughts. Make sure to output with textual data only with no links, scripts, css etc.\n\n{{ $json.data }}"",
        ""messages"": {
          ""messageValues"": [
            {
              ""message"": ""You are a markdown expert""
            }
          ]
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.6
    },
    {
      ""id"": ""52dc4add-92e6-4118-948e-63c4a706a017"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1720,
        -640
      ],
      ""parameters"": {
        ""width"": 400,
        ""height"": 320,
        ""content"": ""## Note\n\nDeals with the Realestate data extraction by utilizing the Bright Data Web Unlocker Product.\n\n**Please make sure to set the Real-estate website URL with the Bright Data zone name. Also update the Webhook Notification URL of your interest**""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0b64779e-d4c6-4c67-8b67-fcddac760db6"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1260,
        -640
      ],
      ""parameters"": {
        ""width"": 480,
        ""height"": 320,
        ""content"": ""## LLM Usages\n\nOpenAI GPT 4o model is being used.\n\nBasic LLM Chain for converting the markdown to textual content.\n\nInformation Extractor is being used for the structured data extraction.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9d4eaebe-eb56-4d57-abe6-7d2beaff5af0"",
      ""name"": ""Review Data Extractor"",
      ""type"": ""@n8n/n8n-nodes-langchain.informationExtractor"",
      ""position"": [
        -500,
        -560
      ],
      ""parameters"": {
        ""text"": ""=Extract all the reviews from the provided content\n\n {{ $json.text }}"",
        ""options"": {},
        ""schemaType"": ""fromJson"",
        ""jsonSchemaExample"": ""[{\n      \""@type\"": \""Review\"",\n      \""datePublished\"": \""2025-04-29\"",\n      \""review\"": \""Incredible support and empathy. Shemi truly listened and understood my concerns. Outstanding service!\"",\n      \""rating\"": {\n        \""@type\"": \""Rating\"",\n        \""value\"": \""5\""\n      }\n    }]""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""84473d2e-4243-402a-98b3-b80179b9a5ae"",
      ""name"": ""Structured Data Extractor"",
      ""type"": ""@n8n/n8n-nodes-langchain.informationExtractor"",
      ""position"": [
        -500,
        -100
      ],
      ""parameters"": {
        ""text"": ""=Extract structured data from the provided content\n\n {{ $json.text }}"",
        ""options"": {},
        ""schemaType"": ""fromJson"",
        ""jsonSchemaExample"": ""{\n  \""@context\"": \""https://schema.org\"",\n  \""@type\"": \""Offer\"",\n  \""itemOffered\"": {\n    \""@type\"": \""SingleFamilyResidence\"",\n    \""name\"": \""Luxury 4BHK Villa with Pool in Herzliya\"",\n    \""description\"": \""A stunning 4-bedroom villa featuring private pool, garden, smart-home automation, and ocean views. Located in one of Herzliya’s premium neighborhoods.\"",\n    \""address\"": {\n      \""@type\"": \""PostalAddress\"",\n      \""streetAddress\"": \""456 Seaside Road\"",\n      \""addressLocality\"": \""Herzliya\"",\n      \""postalCode\"": \""4685105\"",\n      \""addressCountry\"": \""IL\""\n    },\n    \""floorSize\"": {\n      \""@type\"": \""QuantitativeValue\"",\n      \""value\"": 300,\n      \""unitCode\"": \""MTK\""\n    },\n    \""numberOfRooms\"": 7,\n    \""numberOfBedrooms\"": 4,\n    \""numberOfBathroomsTotal\"": 3,\n    \""amenityFeature\"": [\n      {\n        \""@type\"": \""LocationFeatureSpecification\"",\n        \""name\"": \""Swimming Pool\"",\n        \""value\"": true\n      },\n      {\n        \""@type\"": \""LocationFeatureSpecification\"",\n        \""name\"": \""Smart Home Enabled\"",\n        \""value\"": true\n      },\n      {\n        \""@type\"": \""LocationFeatureSpecification\"",\n        \""name\"": \""Sea View\"",\n        \""value\"": true\n      }\n    ],\n    \""image\"": [\n      \""https://brightrealty.com/listings/villa1_front.jpg\"",\n      \""https://brightrealty.com/listings/villa1_pool.jpg\"",\n      \""https://brightrealty.com/listings/villa1_living.jpg\""\n    ],\n    \""petsAllowed\"": \""Yes\"",\n    \""url\"": \""https://brightrealty.com/properties/luxury-4bhk-villa-herzliya\""\n  },\n  \""priceCurrency\"": \""ILS\"",\n  \""price\"": \""8500000\"",\n  \""availability\"": \""https://schema.org/InStock\"",\n  \""seller\"": {\n    \""@type\"": \""RealEstateAgent\"",\n    \""name\"": \""Bright Realty Services\"",\n    \""url\"": \""https://brightrealty.com\"",\n    \""telephone\"": \""+972-3-1234567\"",\n    \""email\"": \""sales@brightrealty.com\"",\n    \""address\"": {\n      \""@type\"": \""PostalAddress\"",\n      \""streetAddress\"": \""123 Main St\"",\n      \""addressLocality\"": \""Tel Aviv\"",\n      \""postalCode\"": \""6100000\"",\n      \""addressCountry\"": \""IL\""\n    }\n  }\n}""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d1b44002-2a50-4c0c-bf55-bf57a994bd2b"",
      ""name"": ""Google Sheets"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        460,
        -520
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""data"": ""={{ $json.data }}""
          },
          ""schema"": [
            {
              ""id"": ""data"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""data"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [
            ""data""
          ],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""appendOrUpdate"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1DGx_-sZ59wZlrhQRfj-qyMFMF6Z1IxpJrSNHD8rTZR8/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1DGx_-sZ59wZlrhQRfj-qyMFMF6Z1IxpJrSNHD8rTZR8"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1DGx_-sZ59wZlrhQRfj-qyMFMF6Z1IxpJrSNHD8rTZR8/edit?usp=drivesdk"",
          ""cachedResultName"": ""Real-estate data""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""Zjoxh2BUZ6VXGQhA"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""9f203292-0806-48a9-a409-f64706b1b0b6"",
      ""name"": ""Create a binary data for Structured Data Extract"",
      ""type"": ""n8n-nodes-base.function"",
      ""position"": [
        460,
        -320
      ],
      ""parameters"": {
        ""functionCode"": ""items[0].binary = {\n  data: {\n    data: new Buffer(JSON.stringify(items[0].json, null, 2)).toString('base64')\n  }\n};\nreturn items;""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9a64deed-1f56-4e10-9e11-31bfcfd6abac"",
      ""name"": ""Write the structured content to disk"",
      ""type"": ""n8n-nodes-base.readWriteFile"",
      ""position"": [
        680,
        -320
      ],
      ""parameters"": {
        ""options"": {},
        ""fileName"": ""=d:\\Realestate-StructuredData.json"",
        ""operation"": ""write""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""83e7f6d7-216c-496b-9011-47d0b95561ba"",
      ""name"": ""Merge the responses"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        20,
        -320
      ],
      ""parameters"": {},
      ""typeVersion"": 3.1
    },
    {
      ""id"": ""cf515b99-e139-48f8-9878-7950fa352d1e"",
      ""name"": ""Aggregate the responses"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        240,
        -320
      ],
      ""parameters"": {
        ""options"": {},
        ""aggregate"": ""aggregateAllItemData""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a93e59ab-f384-4b05-90f8-71b305a3bfb7"",
      ""name"": ""Initiate a Webhook Notification for the Structured Data"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        460,
        -120
      ],
      ""parameters"": {
        ""url"": ""https://webhook.site/7b5380a0-0544-48dc-be43-0116cb2d52c2"",
        ""options"": {},
        ""sendBody"": true,
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""summary"",
              ""value"": ""={{ $json.data }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""a2f0de15-7d1d-42bb-aa22-1a3bd359ead5"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1720,
        -1100
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 400,
        ""height"": 400,
        ""content"": ""## Logo\n\n\n![logo](https://images.seeklogo.com/logo-png/43/1/brightdata-logo-png_seeklogo-439974.png)\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6ecb7f50-2d16-43e2-b999-98492ec81668"",
      ""name"": ""OpenAI Chat Model for Markdown to Textual"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        -960,
        20
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""vPKynKbDzJ5ZU4cU"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""fe6f00e3-efaa-4d57-8abd-1fbc789152a9"",
      ""name"": ""OpenAI Chat Model for Structured Data"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        -420,
        120
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""vPKynKbDzJ5ZU4cU"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""4ce2647e-9796-4bfd-8dc2-0aa7f7466824"",
      ""name"": ""OpenAI Chat Model for Review Data Extractor"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        -420,
        -340
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""vPKynKbDzJ5ZU4cU"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""fad15f6e-0ccb-4810-94d6-bc4f42527071"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -60,
        -640
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 1000,
        ""height"": 760,
        ""content"": ""## Outbound Data Push\nOutbound data handling by merging, aggregating the data and pushing the same to multiple sources such as Google Sheets, Save to Disk, Webhook Notification""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""db35bf88-1a4c-482e-abfd-49349b35952b"",
  ""connections"": {
    ""Merge the responses"": {
      ""main"": [
        [
          {
            ""node"": ""Aggregate the responses"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Review Data Extractor"": {
      ""main"": [
        [
          {
            ""node"": ""Merge the responses"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Aggregate the responses"": {
      ""main"": [
        [
          {
            ""node"": ""Google Sheets"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Initiate a Webhook Notification for the Structured Data"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Create a binary data for Structured Data Extract"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Structured Data Extractor"": {
      ""main"": [
        [
          {
            ""node"": ""Merge the responses"",
            ""type"": ""main"",
            ""index"": 1
          }
        ]
      ]
    },
    ""Set URL and Bright Data Zone"": {
      ""main"": [
        [
          {
            ""node"": ""Perform Bright Data Web Request"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Perform Bright Data Web Request"": {
      ""main"": [
        [
          {
            ""node"": ""Markdown to Textual Data Extractor"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When clicking ‘Test workflow’"": {
      ""main"": [
        [
          {
            ""node"": ""Set URL and Bright Data Zone"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Markdown to Textual Data Extractor"": {
      ""main"": [
        [
          {
            ""node"": ""Review Data Extractor"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Structured Data Extractor"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model for Structured Data"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Structured Data Extractor"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model for Markdown to Textual"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Markdown to Textual Data Extractor"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model for Review Data Extractor"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Review Data Extractor"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Create a binary data for Structured Data Extract"": {
      ""main"": [
        [
          {
            ""node"": ""Write the structured content to disk"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Auto-Publish YouTube Videos to Facebook & Instagram with AI-Generated Captions,"{
  ""id"": ""kPBvBnjidCFr5v69"",
  ""meta"": {
    ""instanceId"": ""2c6d3d38af8a4c0f79fb39f43818e6004a0dbcc85be9dad124fc43e13d64847f"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Youtube to Instagram_Facebook"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""workflow-overview-social"",
      ""name"": ""Workflow Overview"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1300,
        -320
      ],
      ""parameters"": {
        ""color"": 2,
        ""width"": 350,
        ""height"": 380,
        ""content"": ""# 📱 YouTube to Social Media Automation\n\n**Purpose:** Auto-publish YouTube videos to Facebook & Instagram\n\n**Schedule:** Checks for new videos every hour\n\n**Required Setup:**\n1. YouTube channel RSS feed\n2. OpenAI API key (GPT-4o-mini)\n3. Meta App with permissions\n4. Long-lived access token\n\n## Workflow Steps:\n1. **Monitor** - RSS feed for new videos\n2. **Generate** - AI creates social caption\n3. **Publish** - Posts to FB & Instagram\n\n💡 Update all `<Access_Token>` and `<Facebook_PageID>` placeholders""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""rss-trigger-note"",
      ""name"": ""RSS Trigger Info"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1040,
        -320
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 280,
        ""height"": 220,
        ""content"": ""## 🎥 YouTube RSS Trigger\n\n**Monitors your YouTube channel:**\n- Checks every hour for new uploads\n- Uses YouTube RSS feed format\n\n**To find your channel ID:**\n1. Go to your YouTube channel\n2. View page source\n3. Search for \""channelId\""\n\n⚠️ Replace channel_id in RSS URL""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ai-caption-note"",
      ""name"": ""AI Caption Generation"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -740,
        -320
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 280,
        ""height"": 200,
        ""content"": ""## 🤖 AI Caption Generation\n\n**OpenAI GPT-4o-mini:**\n- Generates engaging social media captions\n- Includes emojis automatically\n- Adds call-to-action\n\n**Customize the prompt to:**\n- Match your brand voice\n- Include specific hashtags\n- Target your audience""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""facebook-post-note"",
      ""name"": ""Facebook Publishing"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -390,
        -440
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 250,
        ""height"": 180,
        ""content"": ""## 📘 Facebook Publishing\n\n**Direct post to Facebook Page**\n\n⚠️ **Required updates:**\n- Replace `<Facebook_PageID>`\n- Replace `<Access_Token>`\n\n**Note:** Uses error handling to continue workflow even if Facebook fails""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""instagram-flow-note"",
      ""name"": ""Instagram Publishing Flow"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -120,
        -180
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 300,
        ""height"": 220,
        ""content"": ""## 📸 Instagram Publishing Flow\n\n**3-step process:**\n1. Get Business Account ID\n2. Create media container with thumbnail\n3. Publish the post\n\n**Automatic thumbnail:**\nPulls YouTube video thumbnail as Instagram image\n\n⚠️ Requires Instagram Business Account linked to Facebook Page""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""api-requirements-note"",
      ""name"": ""API Requirements"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -440,
        280
      ],
      ""parameters"": {
        ""color"": 1,
        ""width"": 250,
        ""height"": 200,
        ""content"": ""⚠️ **Meta API Requirements**\n\n**Required Permissions:**\n- pages_manage_posts\n- pages_read_engagement\n- pages_show_list\n- instagram_content_publish\n- instagram_basic\n\n**Token Type:** Long-lived access token\n**API Version:** v22.0""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""cda123c2-21a3-421d-918e-5a6973002aa3"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""notes"": ""Formats post caption using video metadata. Customize prompt for your brand voice and hashtags"",
      ""position"": [
        -740,
        -80
      ],
      ""parameters"": {
        ""text"": ""=Write a short, engaging social media post about this new YouTube video:\n\nTitle: {{ $json.title }}\nURL: {{ $json.link }}\n\nInclude emojis and a call to action."",
        ""options"": {},
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""d215f6c3-f9d7-4103-8c26-419f468cf74b"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""notes"": ""Uses GPT-4o-mini to generate the caption text"",
      ""position"": [
        -740,
        160
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""p5RrjC1K9qFbdflM"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""fbf6f102-1f8d-4e22-a850-1f5f163b94d5"",
      ""name"": ""Post on Facebook"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""notes"": ""Publishes the caption using Facebook Graph API. Replace <Facebook_PageID> and <Access_Token>"",
      ""onError"": ""continueErrorOutput"",
      ""position"": [
        -340,
        -240
      ],
      ""parameters"": {
        ""url"": ""=https://graph.facebook.com/v22.0/<Facebook_PageID>/feed\n"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""contentType"": ""form-urlencoded"",
        ""authentication"": ""genericCredentialType"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""message"",
              ""value"": ""={{ $json.output }}""
            },
            {
              ""name"": ""access_token"",
              ""value"": ""<Access_Token>""
            }
          ]
        },
        ""genericAuthType"": ""httpHeaderAuth""
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""jfdonlZifjvvr"",
          ""name"": ""Header Auth account""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""000891de-e3e2-4de8-8742-ad45a2a958db"",
      ""name"": ""Publish Post On Instagram"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""notes"": ""Publishes post to Instagram feed using the media container ID"",
      ""position"": [
        180,
        60
      ],
      ""parameters"": {
        ""url"": ""=https://graph.facebook.com/v22.0/{{ $('Get IG Business Account ID').item.json.instagram_business_account.id }}/media_publish\n"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""contentType"": ""form-urlencoded"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""creation_id"",
              ""value"": ""={{ $json.id }}""
            },
            {
              ""name"": ""access_token"",
              ""value"": ""<Access_Token>""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""2e65dd2e-7f9e-4abd-b6c7-e811b3a86349"",
      ""name"": ""Get IG Business Account ID"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""notes"": ""Retrieves Instagram Business account ID linked to Facebook Page"",
      ""onError"": ""continueErrorOutput"",
      ""position"": [
        -340,
        80
      ],
      ""parameters"": {
        ""url"": ""https://graph.facebook.com/v22.0/<Facebook_PageID>"",
        ""options"": {},
        ""sendQuery"": true,
        ""queryParameters"": {
          ""parameters"": [
            {
              ""name"": ""fields"",
              ""value"": ""instagram_business_account""
            },
            {
              ""name"": ""access_token"",
              ""value"": ""<Access_Token>""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""c2d089b9-754c-49fe-aa4d-976072340a0e"",
      ""name"": ""Create Media Container"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""notes"": ""Uploads YouTube thumbnail as Instagram image with AI-generated caption"",
      ""position"": [
        -80,
        60
      ],
      ""parameters"": {
        ""url"": ""=https://graph.facebook.com/v22.0/{{ $json.instagram_business_account.id }}/media"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""contentType"": ""form-urlencoded"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""image_url"",
              ""value"": ""=https://img.youtube.com/vi/{{ $('Pull Youtube Video From Channel').item.json.link.split(\""=\"")[1] }}/maxresdefault.jpg""
            },
            {
              ""name"": ""caption"",
              ""value"": ""={{ $('AI Agent').item.json.output }}""
            },
            {
              ""name"": ""access_token"",
              ""value"": ""<Access_Token>""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""29656ae1-d60e-4f4d-9326-17801ddcbb65"",
      ""name"": ""Pull Youtube Video From Channel"",
      ""type"": ""n8n-nodes-base.rssFeedReadTrigger"",
      ""notes"": ""Monitors new uploads from your YouTube channel. Replace channel_id in RSS URL"",
      ""position"": [
        -1000,
        -80
      ],
      ""parameters"": {
        ""feedUrl"": ""https://www.youtube.com/feeds/videos.xml?channel_id=UC2Tf8MGUzFX-GPkuBEBSKMg"",
        ""pollTimes"": {
          ""item"": [
            {
              ""mode"": ""everyHour""
            }
          ]
        }
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""a459b777-6ecf-46d2-9543-061a888393a6"",
  ""connections"": {
    ""AI Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Get IG Business Account ID"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Post on Facebook"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Post on Facebook"": {
      ""main"": [
        []
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Create Media Container"": {
      ""main"": [
        [
          {
            ""node"": ""Publish Post On Instagram"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Publish Post On Instagram"": {
      ""main"": [
        []
      ]
    },
    ""Get IG Business Account ID"": {
      ""main"": [
        [
          {
            ""node"": ""Create Media Container"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Pull Youtube Video From Channel"": {
      ""main"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Automate News Publishing to LinkedIn with Gemini AI and RSS Feeds,"{
  ""id"": ""LC0IcmbjYuCMHZod"",
  ""meta"": {
    ""instanceId"": ""8c2c429dd3943ee62e07d4501247518aac7a4e0ac2348a289df368ce47041939"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""RSS a linkedin con IA"",
  ""tags"": [
    {
      ""id"": ""gvVTOTyDYvE5GHF0"",
      ""name"": ""autoreboot"",
      ""createdAt"": ""2025-05-05T20:28:22.814Z"",
      ""updatedAt"": ""2025-05-05T20:28:22.814Z""
    }
  ],
  ""nodes"": [
    {
      ""id"": ""8b3652a8-6b3c-477d-8636-8fbfe9b3c8c2"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        -500,
        660
      ],
      ""parameters"": {
        ""text"": ""={{ $json.prompt}}"",
        ""options"": {},
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""f9bdcc21-02ec-4ad6-afc8-b16b40c6c57e"",
      ""name"": ""Google Gemini Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""position"": [
        -500,
        860
      ],
      ""parameters"": {
        ""options"": {},
        ""modelName"": ""models/gemini-2.0-flash""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""9KMVOu6vEVg8Q1M3"",
          ""name"": ""Google Gemini(PaLM) Api CIAP""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""7b30aa2a-c6b4-42cc-b714-8c1e6744b4e6"",
      ""name"": ""Schedule Trigger"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        -3180,
        860
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {
              ""field"": ""weeks"",
              ""triggerAtDay"": [
                2,
                3,
                4,
                0
              ],
              ""triggerAtHour"": 15
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""f8ee49fd-aaab-4366-8b5d-3be59c5a08ca"",
      ""name"": ""RSS Read Testing Catalog"",
      ""type"": ""n8n-nodes-base.rssFeedRead"",
      ""position"": [
        -2960,
        1060
      ],
      ""parameters"": {
        ""url"": ""https://www.testingcatalog.com/rss/"",
        ""options"": {
          ""ignoreSSL"": true
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""a8285394-b8b4-42a4-8be3-45dbfc7ed1e3"",
      ""name"": ""Transform date"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -2520,
        860
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""9aec0a09-4b6f-4fca-98e6-789abd5fdc51"",
              ""name"": ""title"",
              ""type"": ""string"",
              ""value"": ""={{ $json.title }}""
            },
            {
              ""id"": ""56277e54-31a0-4804-ad23-c9ee6d244641"",
              ""name"": ""content"",
              ""type"": ""string"",
              ""value"": ""={{ $json.contentSnippet }}""
            },
            {
              ""id"": ""a3586a80-588e-42d1-9780-370a956ddf6b"",
              ""name"": ""link"",
              ""type"": ""string"",
              ""value"": ""={{ $json.link }}""
            },
            {
              ""id"": ""58f01618-8014-4685-9192-d15d596ffcd9"",
              ""name"": ""timestampDate"",
              ""type"": ""number"",
              ""value"": ""={{ new Date($json.isoDate).getTime() }}""
            },
            {
              ""id"": ""716bb078-8df3-4d96-8a1b-4aec4f8cf206"",
              ""name"": ""categories"",
              ""type"": ""array"",
              ""value"": ""={{ $json.categories }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""5c5392e3-65d9-44f6-b4f2-03bfb6c5ba49"",
      ""name"": ""Filter by date (more than 7 days)"",
      ""type"": ""n8n-nodes-base.filter"",
      ""position"": [
        -2300,
        780
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""e7cf09fb-af35-495d-a840-341f8d0ddcd8"",
              ""operator"": {
                ""type"": ""number"",
                ""operation"": ""gt""
              },
              ""leftValue"": ""={{ $json.timestampDate}}"",
              ""rightValue"": ""={{ Date.now() - 7 * 24 * 60 * 60 * 1000 }}""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""db4bedbb-c84e-4acb-83dc-fbb97ca6c2ca"",
      ""name"": ""Sort by date"",
      ""type"": ""n8n-nodes-base.sort"",
      ""position"": [
        -2080,
        780
      ],
      ""parameters"": {
        ""options"": {},
        ""sortFieldsUi"": {
          ""sortField"": [
            {
              ""order"": ""descending"",
              ""fieldName"": ""timestampDate""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4842aae7-e5f3-4fcb-8b47-eac954182cde"",
      ""name"": ""Limit news to x"",
      ""type"": ""n8n-nodes-base.limit"",
      ""position"": [
        -1860,
        780
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""f9a0b527-30b3-4f65-8845-b1ae584d7b76"",
      ""name"": ""Merge"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        -2740,
        860
      ],
      ""parameters"": {
        ""numberInputs"": 3
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""1e26c489-cfe1-4b36-9071-4d41bbe1a82a"",
      ""name"": ""RSS Read marktechpost"",
      ""type"": ""n8n-nodes-base.rssFeedRead"",
      ""position"": [
        -2960,
        860
      ],
      ""parameters"": {
        ""url"": ""https://www.marktechpost.com/feed/"",
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""44b400c2-6404-488b-8d84-e24cf66445ee"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -3060,
        540
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 500,
        ""height"": 660,
        ""content"": ""## RSS sources \nHere you can add up to nine sources of RSS. To do so, modify the merge node for the number of RSS feeds you want, duplicate the RSS node and wire it to the trigger and the merge node\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""cd5c4246-01f9-434a-8b38-9514e4e5b0d4"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -2340,
        520
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 640,
        ""height"": 420,
        ""content"": ""## Age and number of the news \nHere you can set the number of days behind by changing the 7 by any number in the filter by date node:\n```\nDate.now() - 7 * 24 * 60 * 60 * 1000\n```\nYou can also modify the number of news in the \""limit news to x\"" node""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""bd10d075-b967-4633-9ba2-25dbf0b2869e"",
      ""name"": ""AI Agent1"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        -1520,
        640
      ],
      ""parameters"": {
        ""text"": ""=Analyze the news article below. Identify and summarize these elements: core innovation, main goal, problem addressed, benefits, context, significance, key entities. For each element, output one line in plain text using a hyphen, the element name, a colon, and the description. Do not use any markdown formatting, bold, italics, or nested lists. Return only the list.\n\nTitle: {{ $json.title }}\nContent: {{ $json.content }}"",
        ""options"": {},
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""ab1c0a4d-01e8-4100-a62a-886587526299"",
      ""name"": ""Google Gemini Chat Model1"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""position"": [
        -1520,
        840
      ],
      ""parameters"": {
        ""options"": {},
        ""modelName"": ""models/gemini-2.0-flash""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""9KMVOu6vEVg8Q1M3"",
          ""name"": ""Google Gemini(PaLM) Api CIAP""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e76371ee-84cc-41f0-8959-7d0741354ffa"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1620,
        440
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 680,
        ""height"": 560,
        ""content"": ""# Etapa de IA: usando el API de Gemini\n\n## Modulo de análisis de contenido""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""24a564ad-32d3-42b9-aaca-4c9d8d77fb46"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -900,
        440
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 680,
        ""height"": 560,
        ""content"": ""# Etapa de IA: usando el API de Gemini\n\n## Modulo de obtención de hashtags""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0092b8e8-c0d3-4d9c-a790-8617e93e43db"",
      ""name"": ""Information"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        -160,
        180
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""combineBy"": ""combineByPosition"",
        ""numberInputs"": 3
      },
      ""typeVersion"": 3.1
    },
    {
      ""id"": ""a57550da-78ec-4d54-a416-622859ed017d"",
      ""name"": ""Information2"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -1700,
        180
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""a87eedc7-035a-4672-8f4b-025603473aa0"",
              ""name"": ""Enlace"",
              ""type"": ""string"",
              ""value"": ""={{ $json.link }}""
            },
            {
              ""id"": ""586747c1-cdde-46b2-b504-50721e22c7e1"",
              ""name"": ""Fecha_sinFormato"",
              ""type"": ""string"",
              ""value"": ""={{ $json.timestampDate}}""
            },
            {
              ""id"": ""891b44a6-7e36-4bfc-97c2-73defa2e4aef"",
              ""name"": ""Titulo_original"",
              ""type"": ""string"",
              ""value"": ""={{ $json.title }}""
            },
            {
              ""id"": ""0549ed91-6247-45d7-b165-c7ece53accc9"",
              ""name"": ""Contenido"",
              ""type"": ""string"",
              ""value"": ""={{ $json.content }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""7876cd0d-cc88-4912-815c-c43ea2d25448"",
      ""name"": ""Information3"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -1360,
        1240
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""341ed383-56fc-4ebb-a76a-3c5ad97da091"",
              ""name"": ""Categorias"",
              ""type"": ""string"",
              ""value"": ""={{ $json.categories }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""6ce78f24-fa0d-4843-b9e2-6321beb262ff"",
      ""name"": ""Code1"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        -700,
        660
      ],
      ""parameters"": {
        ""mode"": ""runOnceForEachItem"",
        ""jsCode"": ""// Accede a los datos del merge\nconst analysis = $json.output.trim();\nconst categories = JSON.parse($json.Categorias);\n\n// Construye el prompt de ingeniería avanzada\nconst prompt = `Based on the analysis: ${analysis} and these categories: ${categories.join(', ')}, select the most relevant keywords to convert into LinkedIn hashtags. Choose only those closely related to the topic, popular within the AI community, innovative, and attention-grabbing. Generate five hashtags minimum. Return only the list of hashtags formatted with “#” and separated by commas, with no additional text or line breaks. Example: #AI, #Langchain, #ModelContextProtocols.`;\n\n// Devuelve el prompt para usarlo en el siguiente nodo\nreturn { prompt };""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""025824b0-92b1-4fef-896e-ed659a31259c"",
      ""name"": ""Information1"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        -880,
        660
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""combineBy"": ""combineByPosition""
      },
      ""typeVersion"": 3.1
    },
    {
      ""id"": ""3f479d20-69eb-42f1-9de3-94fafe0cfea9"",
      ""name"": ""Edit Fields"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -800,
        300
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""516a13eb-fd6d-4524-870f-937bd0c8a4ec"",
              ""name"": ""Analisis"",
              ""type"": ""string"",
              ""value"": ""={{ $json.output }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""466fb541-3a67-422e-94cc-79ff7aa564a1"",
      ""name"": ""LinkedIn"",
      ""type"": ""n8n-nodes-base.linkedIn"",
      ""position"": [
        3080,
        260
      ],
      ""parameters"": {
        ""text"": ""={{ $('AI Agent2').item.json.output }}"",
        ""postAs"": ""organization"",
        ""organization"": ""=89339025"",
        ""authentication"": ""communityManagement"",
        ""additionalFields"": {},
        ""shareMediaCategory"": ""IMAGE""
      },
      ""credentials"": {
        ""linkedInCommunityManagementOAuth2Api"": {
          ""id"": ""1Wx2ujF9qglMVHJi"",
          ""name"": ""LinkedIn Community Management account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b65ea250-f029-43c8-9aa2-4da538b468c5"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2860,
        0
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 560,
        ""height"": 540,
        ""content"": ""# Etapa: Publicación en LinkedIn \n\n## Módulo de publicación de información obtenida en LinkedIn""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""7e668a0d-99fa-42f4-9609-cad6a02b844c"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        3540,
        0
      ],
      ""parameters"": {
        ""color"": 2,
        ""width"": 900,
        ""height"": 540,
        ""content"": ""# Generación de Código QR\n\n## Módulo de generación de código QR de la publicación realizada""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""afa9677c-283e-45c7-817c-98ef5147bab9"",
      ""name"": ""Conversión a enlace de LinkedIn"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        3620,
        260
      ],
      ""parameters"": {
        ""mode"": ""raw"",
        ""options"": {},
        ""jsonOutput"": ""={\n  \""link\"": \""https://www.linkedin.com/feed/update/{{ $json.urn }}\""\n} ""
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""25a8647e-093e-4f95-bdcc-002b36d52704"",
      ""name"": ""Generar QR"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        3920,
        260
      ],
      ""parameters"": {
        ""url"": ""https://api.qrserver.com/v1/create-qr-code/"",
        ""options"": {},
        ""sendQuery"": true,
        ""queryParameters"": {
          ""parameters"": [
            {
              ""name"": ""data"",
              ""value"": ""={{ $json.link }}""
            },
            {
              ""name"": ""size"",
              ""value"": ""300x300""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""1f482175-4527-44d7-899b-c59ffcf0dd33"",
      ""name"": ""Escribir archivo"",
      ""type"": ""n8n-nodes-base.writeBinaryFile"",
      ""position"": [
        4200,
        260
      ],
      ""parameters"": {
        ""options"": {},
        ""fileName"": ""qr.png""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9f2f06d6-c200-43c9-87ca-3bac64f6a752"",
      ""name"": ""Convert to File"",
      ""type"": ""n8n-nodes-base.convertToFile"",
      ""position"": [
        2500,
        260
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""toBinary"",
        ""sourceProperty"": ""candidates[0].content.parts[0].inlineData.data""
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""7e842770-c617-4adc-a0cd-e0c6295d2e2e"",
      ""name"": ""Sticky Note10"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2080,
        0
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 680,
        ""height"": 540,
        ""content"": ""# Etapa de IA: Generación de Imagen\n\n## Generación de Imagen mediante Gemini 2.0 y conversión a PNG""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0f7f43ab-c827-43fe-9daf-f6b659fb060f"",
      ""name"": ""Generación de Imagen1"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        2220,
        260
      ],
      ""parameters"": {
        ""url"": ""https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp-image-generation:generateContent"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""contents\"": [\n    {\n      \""role\"": \""user\"",\n      \""parts\"": [\n        {\n          \""text\"": \""{{ $json.output.slice(0, -2) }}\""\n        }\n      ]\n    }\n  ],\n  \""generationConfig\"": {\n    \""responseModalities\"": [\""Text\"", \""Image\""]\n  }\n}"",
        ""sendBody"": true,
        ""specifyBody"": ""json"",
        ""authentication"": ""predefinedCredentialType"",
        ""nodeCredentialType"": ""googlePalmApi""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""4oDRxTpOIr5AefZt"",
          ""name"": ""Google Gemini(PaLM) Api account 2""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""559ade49-80f1-4fab-9388-bbd32d1cdca0"",
      ""name"": ""Google Sheets"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        3940,
        600
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Title"": ""={{ $('Information').item.json.Titulo_original }}"",
            ""Link_pub"": ""={{ $json.link }}"",
            ""Link_raw"": ""={{ $('Information').item.json.Enlace }}""
          },
          ""schema"": [
            {
              ""id"": ""Title"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Title"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Link_raw"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Link_raw"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Link_pub"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Link_pub"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/13Q6dJDpnuQBYiPvXRWElkhKT0c7MvfmeDmG8Gbz-1Cs/edit#gid=0"",
          ""cachedResultName"": ""Hoja 1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""url"",
          ""value"": ""https://docs.google.com/spreadsheets/d/13Q6dJDpnuQBYiPvXRWElkhKT0c7MvfmeDmG8Gbz-1Cs/edit?usp=sharing""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""gHDZ1bBcTv3KGueR"",
          ""name"": ""Google Sheets account 2""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""63b9cc44-abac-4a07-8a7b-4e7809af1cc6"",
      ""name"": ""Google Sheets1"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        40,
        180
      ],
      ""parameters"": {
        ""options"": {},
        ""filtersUI"": {
          ""values"": [
            {
              ""lookupValue"": ""={{ $json.Enlace }}"",
              ""lookupColumn"": ""Link_raw""
            }
          ]
        },
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/13Q6dJDpnuQBYiPvXRWElkhKT0c7MvfmeDmG8Gbz-1Cs/edit#gid=0"",
          ""cachedResultName"": ""Hoja 1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""url"",
          ""value"": ""https://docs.google.com/spreadsheets/d/13Q6dJDpnuQBYiPvXRWElkhKT0c7MvfmeDmG8Gbz-1Cs/edit?usp=sharing""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""gHDZ1bBcTv3KGueR"",
          ""name"": ""Google Sheets account 2""
        }
      },
      ""typeVersion"": 4.5,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""937c68b8-9f9a-46bc-89ca-966c638e1f68"",
      ""name"": ""If exists"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        240,
        180
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""04a473df-24f7-4dd6-aa55-0960263caa71"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""exists"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.Link_raw }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""68c4d695-bad7-41e4-b88a-fbd5d8cb0867"",
      ""name"": ""Code"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        600,
        200
      ],
      ""parameters"": {
        ""jsCode"": ""// Acceder a todas las entradas fusionadas del nodo \""Information\"" (Merge)\nconst outputs = $('Information').all();  // Accede a todas las salidas fusionadas\n\n// Extraer la información de la noticia desde la primera entrada (índice 0)\nconst informacion = outputs[0].json[\""Contenido\""] || \""No disponible\"";  // Información (noticia)\n\n// Extraer los hashtags desde la tercera entrada (índice 2)\nconst hashtags = outputs[0].json[\""output\""] || \""No disponibles\"";  // Hashtags\n\n// Extraer los datos adicionales de la tercera entrada (índice 2)\nconst enlace = outputs[0].json[\""Enlace\""] || \""No disponible\"";  // Enlace\nconst titulo_original = outputs[0].json[\""Titulo_original\""] || \""No disponible\"";  // Título original\nconst analisis = outputs[0].json[\""Analisis\""] || \""No disponible\"";  // Análisis\n\n// Construir el prompt final con toda la información y estructura requerida\nconst prompt = `\n\nYour Input Fields:\n- News Title: ${titulo_original}\n- News Content: ${informacion}\n- News Analysis: ${analisis}\n- Suggested Hashtags: ${hashtags}\n- Article Link: ${enlace}\n\nPost Structure:\n1. Attractive title with emoji: create a catchy title using a relevant emoji (for example, 🚀, 💡, 🔍). The title should be concise and appropriate for LinkedIn, but it should not be the same as the news title. Make it appealing to grab the readers' attention.\n\n2. Initial summary (max. 3 lines): write a clear and direct summary that introduces the core of the news. Use professional, simple language. Avoid unnecessary technical terms.\n\n3. Relevance of the Advancement (mandatory, 3 bullet points exactly): emphasize the potential impact of the advancement and how it could shape future developments. Avoid repeating information already presented in the title or summary. This section is the most persuasive part of the post, so it must be compelling and informative. Do not use hashtags or similar elements in the opening question or bullet points. \n\n- Opening question: the opening question should introduce the significance of the advancement and prompt curiosity, directly tying it to the topic and analysis of the news. This question should smoothly lead into the 3 key points. Ensureis not too long. Ensure the opening question are shorter than a line and concise. \n\n- Bullet points: provide context (AI, science, industry, etc.) and explain its significance. Capture attention by illustrating the benefits, implications, or future potential of the advancement. Ensure the bullet points are shorter than a line and concise, avoiding excessive detail. You can use emojis if necessary, but avoid overusing them.\n\n4. Call to Action (CTA – topic-related): end the post with a short, clever question or comment directly related to the topic. It must encourage reflection or interaction. Place it as the final line, after the article link\n\n5. Link to full article: add this line right before the closing *conoce más de esta noticia en el artículo completo: ${enlace}*\n\n6. Hashtags: choose 5 to 7 hashtags from the provided list. Include only those highly relevant to the topic and professional community.\n`;\n\n// Retornar solo el prompt\nreturn { \""prompt\"": prompt };""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""879ad0d7-6c0e-481d-b203-5637ef6cd580"",
      ""name"": ""AI Agent2"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        820,
        200
      ],
      ""parameters"": {
        ""text"": ""={{ $json.prompt }}"",
        ""options"": {
          ""systemMessage"": ""=You are a professional content creator preparing a LinkedIn post in Spanish based on the news provided. The post must be concise (approx. 1200 characters), visually structured, and written in a professional and accessible tone. Follow the format and constraints below exactly.""
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""99792b7b-919f-42d2-9ac4-75f4512e5eaf"",
      ""name"": ""Google Gemini Chat Model2"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""position"": [
        820,
        380
      ],
      ""parameters"": {
        ""options"": {},
        ""modelName"": ""models/gemini-2.0-flash""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""9KMVOu6vEVg8Q1M3"",
          ""name"": ""Google Gemini(PaLM) Api CIAP""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d145c813-7366-45f4-b35c-1606c5323277"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        520,
        20
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 680,
        ""height"": 540,
        ""content"": ""# Etapa de IA: usando el API de Gemini\n\n## Modulo de obtención de la publicación""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""aa78a09e-53a2-45ca-8603-7ab8d2071c0c"",
      ""name"": ""AI Agent4"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        1620,
        220
      ],
      ""parameters"": {
        ""text"": ""=Create a prompt that generates only one response with no comments and no line breaks: a clean professional image for a LinkedIn news post based on the following news {{ $json.text }}. Ensure it reflects the core message conveying trust innovation and professionalism with space for overlay text. Do not use quotation marks, apostrophes, or any other punctuation marks."",
        ""options"": {
          ""systemMessage"": ""=1. Title Placement: place the provided title in Spanish at the upper center of the image. The title must be legible and appropriately sized. It should integrate smoothly into the design without overpowering other visual elements. Ensure it clearly reflects the core message of the news without disrupting the overall balance.\n\n2. Color Palette: choose a color palette that aligns with the theme of the news. Use colors that enhance the core message—such as blue or gray for technology or business, earth tones for sustainability, or neutral tones for leadership. The colors should work together harmoniously, supporting the message without causing distractions or overwhelming the design.\n\n3. Core Message Visualization: visualize the core message through minimalistic and relevant visuals. Use abstract symbols, icons, or relevant imagery that represent the key concepts of the article, ensuring the visuals enhance the message. Avoid overcrowding the design, maintaining a professional, clean appearance.\n\n4. Overlay Text Space: ensure clear space for overlay text (e.g., subtitles or keywords). The text should be legible, well-integrated into the design, and should not obscure important visual elements or the main message. The design should be balanced and allow the text to enhance the image, not overpower it.\n\n5. Composition: maintain a minimalist, balanced composition that adheres to LinkedIn’s professional standards. All elements—title, visuals, and text—should work harmoniously together. Ensure that nothing feels cluttered, and the layout directs the viewer’s attention in a clear, logical flow. The design should feel polished and professional.\n\n6. Output Format: the image must be designed to fit LinkedIn’s standard post dimensions. Ensure the resolution is high enough for clarity and sharpness across both desktop and mobile devices, maintaining high visual quality while fitting LinkedIn’s specifications.\n\n""
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""5e15478c-cef0-4f33-ad76-5ac9e4970680"",
      ""name"": ""Google Gemini Chat Model4"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""position"": [
        1620,
        420
      ],
      ""parameters"": {
        ""options"": {},
        ""modelName"": ""models/gemini-2.0-flash""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""9KMVOu6vEVg8Q1M3"",
          ""name"": ""Google Gemini(PaLM) Api CIAP""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""68fd37f9-c871-410a-b533-9da3d5599d40"",
      ""name"": ""Sticky Note9"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1340,
        -20
      ],
      ""parameters"": {
        ""width"": 640,
        ""height"": 600,
        ""content"": ""# Etapa de IA: Prompt para imagen\n\n## Limpieza de contenido de noticia y generación de prompt para obtener una imagen adecuada al contexto de la noticia""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""83afd162-9160-4a0e-8ac4-deee4e65690c"",
      ""name"": ""Limpieza de contenido de Noticia1"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        1400,
        220
      ],
      ""parameters"": {
        ""jsCode"": ""let texto = $input.first().json.output\n  .replace(/[\\n\\r\\t]/g, \"" \"")  // Reemplaza saltos de línea, retorno de carro y tabulaciones por espacio\n  .replace(/['\""\\\\]/g, \""\"")      // Elimina comillas simples, dobles y barras invertidas\n  .replace(/\\s+/g, \"" \"")        // Reemplaza múltiples espacios por un solo espacio\n  .trim();                     // Elimina los espacios en blanco al inicio y al final\n\nreturn {\n  text: texto\n};""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""93bae040-4a3b-415d-80d6-fd3c8dac97a3"",
      ""name"": ""RSS LatinxinAI"",
      ""type"": ""n8n-nodes-base.rssFeedRead"",
      ""position"": [
        -2960,
        660
      ],
      ""parameters"": {
        ""url"": ""https://medium.com/feed/latinxinai"",
        ""options"": {}
      },
      ""typeVersion"": 1.1
    }
  ],
  ""active"": true,
  ""pinData"": {},
  ""settings"": {
    ""timezone"": ""America/Guayaquil"",
    ""callerPolicy"": ""workflowsFromSameOwner"",
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""e0a1c8c3-bece-4ab6-ae4f-cd83e486d413"",
  ""connections"": {
    ""Code"": {
      ""main"": [
        [
          {
            ""node"": ""AI Agent2"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Code1"": {
      ""main"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Merge"": {
      ""main"": [
        [
          {
            ""node"": ""Transform date"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""AI Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Information"",
            ""type"": ""main"",
            ""index"": 2
          }
        ]
      ]
    },
    ""LinkedIn"": {
      ""main"": [
        [
          {
            ""node"": ""Conversión a enlace de LinkedIn"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""AI Agent1"": {
      ""main"": [
        [
          {
            ""node"": ""Information1"",
        ",
"Automate Blog Content Creation with OpenAI, Google Sheets & Email Approval Flow","{
  ""meta"": {
    ""instanceId"": ""d1786ab0d745a7498abf13a9c2cdabb1374c006e889b79eef64ce0386b8f8a41"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""44e86584-788d-429b-b74c-87db2807ce5c"",
      ""name"": ""Schedule Trigger"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        -820,
        40
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {}
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""efee3941-0589-4666-b2cb-43b221732b18"",
      ""name"": ""Copywriter AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        -160,
        -40
      ],
      ""parameters"": {
        ""text"": ""=You are an expert-level SEO content strategist and copywriter with years of experience writing high-performing blog posts.\n\nYour task is to:\n\n1. Improve the provided topic title by generating a better, SEO-optimized blog post title that is more attractive and ranks well on search engines.\n\n2. Write a complete blog post based on the improved title. The post must:\n- Be between 800–1200 words\n- Use a clear, conversational, and engaging tone\n- Be SEO-friendly with natural keyword integration\n- Start with a hooking introduction that introduces the topic smoothly\n- Use headings and subheadings (H1 for the title, H2 for main sections, H3 for supporting points)\n- Use bullet points or numbered lists where helpful\n- Have a strong conclusion that summarizes the key points and includes a call-to-action or final insight\n- Ensure smooth flow and concise, informative paragraphs\n\n3. Output the result as a JSON object with this format:\n\n```json\n{\n  \""title\"": \""Improved SEO-Optimized Title\"",\n  \""content\"": \""Full blog post content in markdown format\""\n}\n```\n\nHere is the topic you should improve and write about:\n{{ $json.Topic }}\n\nGenerate the improved title and the full blog post now.\n"",
        ""options"": {},
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""e50273d0-e7c4-4467-b91d-ff1c08128bd0"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        -180,
        260
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""MGwGMKEkdcjzlYCw"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""bb251d01-b847-475b-b5cf-79665cab92ad"",
      ""name"": ""Simple Memory"",
      ""type"": ""@n8n/n8n-nodes-langchain.memoryBufferWindow"",
      ""position"": [
        20,
        260
      ],
      ""parameters"": {
        ""sessionKey"": ""={{ $('Get Topic from Google Sheets').item.json.Topic }}"",
        ""sessionIdType"": ""customKey"",
        ""contextWindowLength"": 10
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""8c0ff9a8-3484-41cd-a614-6880212fb4a2"",
      ""name"": ""Copywriter Revision Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        340,
        420
      ],
      ""parameters"": {
        ""text"": ""=You are an expert-level copywriter with strong SEO knowledge and a clear, engaging writing style. Your task is to revise an existing blog post based on the given topic and user feedback.\n\nHere are your responsibilities:\n- Carefully apply all of the user's feedback to improve the blog post.\n- Preserve the good parts of the original content, but rewrite or adjust areas based on the feedback.\n- Keep the tone friendly, professional, and easy to read.\n- Organize the blog post with clear headings and subheadings.\n- Use bullet points or numbered lists when it makes the content clearer.\n- Ensure a strong hook in the introduction and a solid conclusion with a call-to-action or takeaway.\n- Aim for a length between 800–1200 words unless the feedback suggests otherwise.\n\nHere is the topic title:\n{{ $('Get Topic from Google Sheets').item.json.Topic }}\n\nHere is the user's feedback:\n{{ $('Send Content for Approval').item.json.data['Content Feedback'] }}\n\nHere is the original content:\n{{ $('Copywriter AI Agent').item.json.output }}\n\nNow, rewrite the blog post using this input, fully incorporating the feedback.\n"",
        ""options"": {},
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""00a499d7-7897-4e47-8559-1fb78c49e1d6"",
      ""name"": ""Set Data"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        280,
        -40
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""c4dbce1a-8b34-46b7-a740-b49339233e68"",
              ""name"": ""Topic Title"",
              ""type"": ""string"",
              ""value"": ""={{ $json.output.title }}""
            },
            {
              ""id"": ""4924b496-db60-4618-bab7-a9d5e689c8eb"",
              ""name"": ""Content"",
              ""type"": ""string"",
              ""value"": ""={{ $json.output.content }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""74287c5b-12a3-4a39-802c-40c98ab72bfa"",
      ""name"": ""Structured Output Parser"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserStructured"",
      ""position"": [
        120,
        440
      ],
      ""parameters"": {
        ""jsonSchemaExample"": ""{\n  \""title\"": \""Improved SEO-Optimized Title\"",\n  \""content\"": \""Full blog post content in markdown format\""\n}""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""c288be21-d948-4d10-87c9-795049c64ee3"",
      ""name"": ""Add Generated Content to Google Sheets"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        1220,
        -40
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Title"": ""={{ $('Set Data').item.json['Topic Title'] }}"",
            ""Content"": ""={{ $('Set Data').item.json.Content }}"",
            ""Generation Date"": ""={{ $now }}""
          },
          ""schema"": [
            {
              ""id"": ""Title"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Title"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Content"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Content"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Generation Date"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Generation Date"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": 1579104486,
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1CyELzPxCDHAXJVu-p2_QRiGRGYwjPtJpeGwWXvlWjLw/edit#gid=1579104486"",
          ""cachedResultName"": ""Generated Content""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1CyELzPxCDHAXJVu-p2_QRiGRGYwjPtJpeGwWXvlWjLw"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1CyELzPxCDHAXJVu-p2_QRiGRGYwjPtJpeGwWXvlWjLw/edit?usp=drivesdk"",
          ""cachedResultName"": ""Content Topics""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""ypmzFxQFfAacuVVC"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""8c129e32-763c-4a7f-8e57-fec1fbbd89e4"",
      ""name"": ""Update Topic Status on Google Sheets"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        880,
        -40
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Status"": ""Completed"",
            ""row_number"": ""={{ $('Get Topic from Google Sheets').item.json.row_number }}""
          },
          ""schema"": [
            {
              ""id"": ""Topic"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Topic"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Status"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Status"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Output"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Output"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""row_number"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": true,
              ""required"": false,
              ""displayName"": ""row_number"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [
            ""row_number""
          ],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""update"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1CyELzPxCDHAXJVu-p2_QRiGRGYwjPtJpeGwWXvlWjLw/edit#gid=0"",
          ""cachedResultName"": ""Topic List""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1CyELzPxCDHAXJVu-p2_QRiGRGYwjPtJpeGwWXvlWjLw"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1CyELzPxCDHAXJVu-p2_QRiGRGYwjPtJpeGwWXvlWjLw/edit?usp=drivesdk"",
          ""cachedResultName"": ""Content Topics""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""ypmzFxQFfAacuVVC"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""066a262a-94f5-428e-b15e-a01e3b295cf7"",
      ""name"": ""Get Topic from Google Sheets"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        -480,
        40
      ],
      ""parameters"": {
        ""options"": {
          ""returnFirstMatch"": true
        },
        ""filtersUI"": {
          ""values"": [
            {
              ""lookupValue"": ""Pending"",
              ""lookupColumn"": ""Status""
            }
          ]
        },
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1CyELzPxCDHAXJVu-p2_QRiGRGYwjPtJpeGwWXvlWjLw/edit#gid=0"",
          ""cachedResultName"": ""Topic List""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1CyELzPxCDHAXJVu-p2_QRiGRGYwjPtJpeGwWXvlWjLw"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1CyELzPxCDHAXJVu-p2_QRiGRGYwjPtJpeGwWXvlWjLw/edit?usp=drivesdk"",
          ""cachedResultName"": ""Content Topics""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""ypmzFxQFfAacuVVC"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""f38b1a69-b222-4232-a930-7cd4dab7805b"",
      ""name"": ""Send Content for Approval"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        440,
        -40
      ],
      ""webhookId"": ""a23938a4-fc6c-4445-8dee-17e501e92e06"",
      ""parameters"": {
        ""sendTo"": ""replace_with_your_email@yopmail.com"",
        ""message"": ""=Generated Title:\n{{ $json['Topic Title'] }}\n\nGenerated Content:\n{{ $json.Content }}"",
        ""options"": {},
        ""subject"": ""Approval Required for Blog Content"",
        ""operation"": ""sendAndWait"",
        ""formFields"": {
          ""values"": [
            {
              ""fieldType"": ""dropdown"",
              ""fieldLabel"": ""Approve Content?"",
              ""fieldOptions"": {
                ""values"": [
                  {
                    ""option"": ""Yes""
                  },
                  {
                    ""option"": ""No""
                  },
                  {
                    ""option"": ""Cancel""
                  }
                ]
              },
              ""requiredField"": true
            },
            {
              ""fieldType"": ""textarea"",
              ""fieldLabel"": ""Content Feedback""
            }
          ]
        },
        ""responseType"": ""customForm""
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""sWl7FFMkEUYBj0zM"",
          ""name"": ""Gmail account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""67f16627-daf0-4af9-b01e-1e3fc1822e1d"",
      ""name"": ""Approval Result"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        580,
        -40
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""outputKey"": ""Yes"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""317039f4-754e-4cb0-a674-eb8d26c9ed27"",
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.data['Approve Content?'] }}"",
                    ""rightValue"": ""Yes""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""No"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""caace3ea-4ca0-40de-84fb-5a8fd809a0eb"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.data['Approve Content?'] }}"",
                    ""rightValue"": ""No""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""Cancel"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""f93e5649-6a21-49a9-9993-85f1323139b0"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.data['Approve Content?'] }}"",
                    ""rightValue"": ""Cancel""
                  }
                ]
              },
              ""renameOutput"": true
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.2
    },
    {
      ""id"": ""73207a91-a427-4f1a-a703-ce85aefc0dbe"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -920,
        -140
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 320,
        ""height"": 360,
        ""content"": ""🕒 WORKFLOW STARTER\nThis triggers the content generation process automatically.\n\nSetup Required:\n• Set your preferred trigger interval.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b058cff4-b0b2-4ee3-865c-2e3a43e91fb7"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -580,
        -260
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 320,
        ""height"": 480,
        ""content"": ""📊 TOPIC RETRIEVAL\nFetches the first \""Pending\"" topic from your topic list.\n\nSetup Required:\n• Connect your Google account\n• Update Sheet ID in node settings\n• Ensure \""Topic List\"" sheet exists with columns:\n  - Topic (A), Status (B)\n\nOutput: Topic title + row number for tracking""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""534cf5ed-a0dd-4e72-9809-33234dd82b1e"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1200,
        -240
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 260,
        ""height"": 460,
        ""content"": ""## SETUP REQUIRED\n\nGoogle Sheets Structure:\nSheet 1: \""Topic List\""\n• Column A: Topic\n• Column B: Status (\""Pending\"", \""Completed\"")\n\nSheet 2: \""Generated Content\""\n• Column A: Title\n• Column B: Content\n• Column C: Generation Date\n\nRequired Credentials:\n• OpenAI API Key\n• Google Sheets Credential\n• Gmail Credential""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b73b1fb1-6b9f-402d-8127-5386ab3129bd"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -240,
        -260
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 460,
        ""height"": 800,
        ""content"": ""🤖 CONTENT CREATION\nAI writes SEO-optimized blog posts (800-1200 words).\n\nSetup Required:\n• Add OpenAI API key in credentials\n• Uses structured prompts for consistency\n\nOutput: JSON with title + content ready for review""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""66a66e35-04e8-4b8f-a516-662153570419"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        260,
        -260
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 440,
        ""height"": 440,
        ""content"": ""📧 HUMAN REVIEW\nThis step sends the generated content via email for approval.\n\n✅ Update the To Email Field in the Gmail node with your own email address.\n\n⚠️ Note: The workflow will pause here until a response is received.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4836beb9-5ad7-4439-a99d-ffcdc2ef92ab"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        260,
        200
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 440,
        ""height"": 420,
        ""content"": ""✏️ CONTENT REVISION\nAI improves content based on human feedback.\n\nTriggered when: Approval = \""No\""\nUses: Original topic + feedback + original content\nSame AI model as initial generation\n\nOutput: Revised content incorporating feedback""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""bb912715-f4e6-4907-881e-b8fc0c1a9e10"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        780,
        -280
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 300,
        ""height"": 480,
        ""content"": ""✅ TOPIC STATUS UPDATE\nUpdates topic status to \""Completed\"" in tracking sheet.\n\nPurpose:\n• Prevents duplicate processing\n• Tracks workflow progress\n• Uses row number from initial fetch\n\nColumn Updated: Status (B) → \""Completed\""\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a9ca1a23-9156-4d33-9967-586374c4eca4"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1120,
        -280
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 300,
        ""height"": 480,
        ""content"": ""💾 ADD GENERATED CONTENT\nSaves approved content to \""Generated Content\"" sheet.\n\nSetup Required:\n• Ensure \""Generated Content\"" sheet exists\n• Columns: Title (A), Content (B), Date (C)\n\nPurpose: Permanent storage for published content\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""35400105-1c1a-44e4-8e6c-684de99da88d"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1200,
        240
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 420,
        ""height"": 420,
        ""content"": ""## 🚀 Automate Blog Content Creation with OpenAI, Google Sheets & Email Approval Workflow\n\nWhat This Template Does:\n- Automatically generates SEO-optimized blog posts\n- Uses AI (GPT-4) to write 800-1200 word articles\n- Includes human approval process for quality control\n- Manages topics via Google Sheets\n- Handles revisions based on feedback\n\nPerfect For:\n- Content marketers scaling blog production\n- Agencies managing multiple clients\n- Bloggers wanting consistent publishing\n- SEO professionals creating optimized content""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3a54ea70-bf4f-48b7-80f2-15c8b961b8b5"",
      ""name"": ""Sticky Note9"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -760,
        240
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 500,
        ""height"": 420,
        ""content"": ""## 📋 WORKFLOW PROCESS OVERVIEW\n\nStep 1: 📅 Schedule automatically starts process\nStep 2: 📊 Fetch pending topic from Google Sheets\nStep 3: 🤖 AI generates complete blog post\nStep 4: 📧 Send content to you for approval\nStep 5: ✅ You approve, request changes, or cancel\nStep 6: ✏️ AI revises content if changes requested\nStep 7: 💾 Save final content & mark topic complete\n""
      },
      ""typeVersion"": 1
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""Set Data"": {
      ""main"": [
        [
          {
            ""node"": ""Send Content for Approval"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Simple Memory"": {
      ""ai_memory"": [
        [
          {
            ""node"": ""Copywriter AI Agent"",
            ""type"": ""ai_memory"",
            ""index"": 0
          },
          {
            ""node"": ""Copywriter Revision Agent"",
            ""type"": ""ai_memory"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Approval Result"": {
      ""main"": [
        [
          {
            ""node"": ""Update Topic Status on Google Sheets"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Copywriter Revision Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Update Topic Status on Google Sheets"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Schedule Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""Get Topic from Google Sheets"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Copywriter AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          },
          {
            ""node"": ""Copywriter Revision Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Copywriter AI Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Set Data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Structured Output Parser"": {
      ""ai_outputParser"": [
        [
          {
            ""node"": ""Copywriter AI Agent"",
            ""type"": ""ai_outputParser"",
            ""index"": 0
          },
          {
            ""node"": ""Copywriter Revision Agent"",
            ""type"": ""ai_outputParser"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Copywriter Revision Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Set Data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Send Content for Approval"": {
      ""main"": [
        [
          {
            ""node"": ""Approval Result"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get Topic from Google Sheets"": {
      ""main"": [
        [
          {
            ""node"": ""Copywriter AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Update Topic Status on Google Sheets"": {
      ""main"": [
        [
          {
            ""node"": ""Add Generated Content to Google Sheets"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
"Search LinkedIn companies, Score with AI and add them to Google Sheet CRM","{
  ""id"": ""GW4dTYPBXwOrCUxo"",
  ""meta"": {
    ""instanceId"": ""95a1299fb2b16eb2219cb044f54e72c2d00dcd2c72efe717b3c308d200f29927"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Search LinkedIn companies, Score with AI and add them to Google Sheet CRM"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""a6af7206-4b90-421a-aee6-d71aa02e2182"",
      ""name"": ""Process Each Company"",
      ""type"": ""n8n-nodes-base.splitInBatches"",
      ""onError"": ""continueRegularOutput"",
      ""position"": [
        -260,
        320
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 3,
      ""alwaysOutputData"": false
    },
    {
      ""id"": ""7a003d97-ff9b-4cac-a2e3-95b00e590904"",
      ""name"": ""Get Company Info"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""onError"": ""continueRegularOutput"",
      ""position"": [
        -20,
        320
      ],
      ""parameters"": {
        ""url"": ""https://api.ghostgenius.fr/v2/company"",
        ""options"": {
          ""batching"": {
            ""batch"": {
              ""batchSize"": 1,
              ""batchInterval"": 2000
            }
          }
        },
        ""sendQuery"": true,
        ""authentication"": ""genericCredentialType"",
        ""genericAuthType"": ""httpHeaderAuth"",
        ""queryParameters"": {
          ""parameters"": [
            {
              ""name"": ""url"",
              ""value"": ""={{ $json.url }}""
            }
          ]
        }
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""XdFg4wGkcxwRPUMo"",
          ""name"": ""Header Auth account 4""
        }
      },
      ""retryOnFail"": true,
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""9bee1921-c96e-4373-8321-cce33a3184d6"",
      ""name"": ""Filter Valid Companies"",
      ""type"": ""n8n-nodes-base.if"",
      ""onError"": ""continueRegularOutput"",
      ""position"": [
        200,
        320
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""5ea943a6-8f6c-4cb0-b194-8c92d4b2aacc"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notEmpty"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.website }}"",
              ""rightValue"": ""[null]""
            },
            {
              ""id"": ""8235b9bb-3cd4-4ed4-a5dc-921127ff47c7"",
              ""operator"": {
                ""type"": ""number"",
                ""operation"": ""gt""
              },
              ""leftValue"": ""={{ $json.followers_count }}"",
              ""rightValue"": 200
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""5913869a-4811-4b6f-bbf5-ec6a1f4ee50a"",
      ""name"": ""Is New Company?"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        600,
        320
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""050c33be-c648-44d7-901c-51f6ff024e97"",
              ""operator"": {
                ""type"": ""object"",
                ""operation"": ""empty"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $('Check If Company Exists').all().first().json }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""ebb0ba8c-beec-4ec0-97b6-a5e706c73546"",
      ""name"": ""Set Variables"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -1000,
        320
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""e81e4891-4786-4dd9-a338-d1095e27f382"",
              ""name"": ""Your target"",
              ""type"": ""string"",
              ""value"": ""Growth Marketing Agency""
            },
            {
              ""id"": ""ed2b6b08-66aa-4d4b-b68c-698b5e841930"",
              ""name"": ""B: 1-10 employees, C: 11-50 employees, D: 51-200 employees, E: 201-500 employees, F: 501-1000 employees, G: 1001-5000 employees, H: 5001-10,000 employees, I: 10,001+ employees"",
              ""type"": ""string"",
              ""value"": ""C""
            },
            {
              ""id"": ""f1d02f1a-8115-4e0c-a5ec-59bf5b54263b"",
              ""name"": ""Location (find it on : https://www.ghostgenius.fr/tools/search-sales-navigator-locations-id)"",
              ""type"": ""string"",
              ""value"": ""103644278""
            },
            {
              ""id"": ""21bdb871-9327-4553-bb4a-a138be9f735c"",
              ""name"": ""Your product or service"",
              ""type"": ""string"",
              ""value"": ""our CRM implementation services""
            },
            {
              ""id"": ""31f5adfc-8a8f-498c-9e57-24584c42f7de"",
              ""name"": ""Positive indicators (3-5 specific factors that indicate a company might need your product)"",
              ""type"": ""string"",
              ""value"": ""- Mentions challenges with customer relationships or sales processes \n- Company is in growth phase with expanding client base \n- Mentions need for better data organization or customer insights \n- References marketing automation, sales pipelines, or customer retention ""
            },
            {
              ""id"": ""630807cb-9d06-41ee-8534-a652ed76cb4c"",
              ""name"": ""Negative indicators (3-5 specific factors that indicate a company might NOT need your product)"",
              ""type"": ""string"",
              ""value"": ""- Very small companies (1-5 employees) or extremely large enterprises \n- Already mentions using advanced CRM solutions \n- No indication of sales process or customer relationship management in description \n- Pure manufacturing or product-based business with minimal customer interaction \n- Non-profit or government entity with unique relationship management needs""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""d2392572-3ef0-44e7-a2a1-ee6a1967ad16"",
      ""name"": ""Search Companies"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -800,
        320
      ],
      ""parameters"": {
        ""url"": ""https://api.ghostgenius.fr/v2/search/companies"",
        ""options"": {
          ""pagination"": {
            ""pagination"": {
              ""parameters"": {
                ""parameters"": [
                  {
                    ""name"": ""page"",
                    ""value"": ""={{ $pageCount + 1 }}""
                  }
                ]
              },
              ""maxRequests"": 3,
              ""requestInterval"": 2000,
              ""limitPagesFetched"": true,
              ""completeExpression"": ""={{ $response.body.data.isEmpty() }}"",
              ""paginationCompleteWhen"": ""other""
            }
          }
        },
        ""sendQuery"": true,
        ""authentication"": ""genericCredentialType"",
        ""genericAuthType"": ""httpHeaderAuth"",
        ""queryParameters"": {
          ""parameters"": [
            {
              ""name"": ""keywords"",
              ""value"": ""={{ $json['Your target'] }}""
            },
            {
              ""name"": ""locations"",
              ""value"": ""={{ $json['Location (find it on : https://www'].ghostgenius['fr/tools/search-sales-navigator-locations-id)'] }}""
            },
            {
              ""name"": ""company_size"",
              ""value"": ""={{ $json['B: 1-10 employees, C: 11-50 employees, D: 51-200 employees, E: 201-500 employees, F: 501-1000 employees, G: 1001-5000 employees, H: 5001-10,000 employees, I: 10,001+ employees'] }}""
            }
          ]
        }
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""XdFg4wGkcxwRPUMo"",
          ""name"": ""Header Auth account 4""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""7ecac7ee-b51e-4a14-8295-b122974c0a14"",
      ""name"": ""Extract Company Data"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""onError"": ""continueRegularOutput"",
      ""position"": [
        -600,
        320
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""data""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a4b63dcd-0d5d-46dd-9279-c7872ac721d6"",
      ""name"": ""Check If Company Exists"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        420,
        320
      ],
      ""parameters"": {
        ""options"": {},
        ""filtersUI"": {
          ""values"": [
            {
              ""lookupValue"": ""={{ $json.id }}"",
              ""lookupColumn"": ""ID""
            }
          ]
        },
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1LfhqpyjimLjyQcmWY8mUr6YtNBcifiOVLIhAJGV9jiM/edit#gid=0"",
          ""cachedResultName"": ""Companies""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1LfhqpyjimLjyQcmWY8mUr6YtNBcifiOVLIhAJGV9jiM"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1LfhqpyjimLjyQcmWY8mUr6YtNBcifiOVLIhAJGV9jiM/edit?usp=drivesdk"",
          ""cachedResultName"": ""CRM""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""Y8D8KsfgZCZmP2Vh"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""dfbd3bdb-0efb-4e09-99ae-3dc9a0d9e64d"",
      ""name"": ""AI Company Scoring"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        920,
        340
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4.1"",
          ""cachedResultName"": ""GPT-4.1""
        },
        ""options"": {
          ""temperature"": 0.2
        },
        ""messages"": {
          ""values"": [
            {
              ""role"": ""system"",
              ""content"": ""=You are an AI assistant that evaluates companies to determine if they might be interested in {{ $('Set Variables').item.json['Your product or service'] }}.\n\nEvaluate the company information provided on a scale of 0 to 10, where:\n- 0 = Not at all likely to be interested\n- 10 = Extremely likely to be interested\n\nBase your evaluation on these criteria:\n1. Industry fit: How well does the company's industry align with {{ $('Set Variables').item.json['Your product or service'] }}?\n2. Company profile: Is the company size, growth stage, and location appropriate for {{ $('Set Variables').item.json['Your product or service'] }}?\n3. Pain points: Based on their description, do they likely have challenges that {{ $('Set Variables').item.json['Your product or service'] }} solves?\n\nFactors that indicate a good fit:\n{{ $('Set Variables').item.json['Positive indicators (3-5 specific factors that indicate a company might need your product)'] }}\n\nFactors that indicate a poor fit:\n{{ $('Set Variables').item.json['Negative indicators (3-5 specific factors that indicate a company might NOT need your product)'] }}\n\nRespond ONLY with this JSON format:\n```json\n{\n  \""score\"": [number between 0 and 10],\n}""
            },
            {
              ""content"": ""=Here is the company to analyze:\nName: {{ $('Filter Valid Companies').item.json.name }}\n{{ $('Filter Valid Companies').item.json.tagline }}\n{{ $('Filter Valid Companies').item.json.description }}\nNumber of employees: {{ $('Filter Valid Companies').item.json.staff_count }}\nIndustry: {{ $('Filter Valid Companies').item.json.industries }}\nSpecialties: {{ $('Filter Valid Companies').item.json.specialities }}\nLocation: {{ $('Filter Valid Companies').item.json.locations?.toJsonString() }}\nFounded in: {{ $('Filter Valid Companies').item.json.founded_on }}\nFunding: {{ $('Filter Valid Companies').item.json.funding?.toJsonString() }}\n""
            }
          ]
        },
        ""jsonOutput"": true
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""SSQ6BcbSKW6I0uSn"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""b50d1d4f-63bb-4d51-8db6-bdc1ab52783f"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1280,
        -20
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 860,
        ""height"": 560,
        ""content"": ""## LinkedIn Company Search\nThis section initiates the workflow and searches for your target companies on LinkedIn using the Ghost Genius API.\n\nYou can filter and refine your search using keywords, company size, location, industry, or even whether the company has active job postings. Use the \""Set Variables\"" node for it (this node also allows you to customize the AI Lead Scoring prompt).\n\nNote that you can retrieve a maximum of 1000 companies per search (corresponding to 100 LinkedIn pages), so it's important not to exceed this number of results to avoid losing prospects.\n\nExample: Let's say I want to target Growth Marketing Agencies with 11-50 employees. I do my search and see that there are 10,000 results. So I refine my search by using location to go country by country and retrieve all 10,000 results in several batches ranging from 500 to 1000 depending on the country.\n\nTips: To test the workflow or to see the number of results of your search, change the pagination parameter (Max Pages) in the \""Search Companies\"" node. It will be displayed at the very top of the response JSON.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""74c0b7a1-3d98-4eb6-b195-fe025cb06202"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -340,
        -20
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 1120,
        ""height"": 560,
        ""content"": ""## Company Data Processing \nThis section processes each company individually.\n\nWe retrieve all the company information using Get Company Details by using the LinkedIn link obtained from the previous section.\n\nThen we filter the company based on the number of followers, which gives us a first indication of the company's credibility (200 in this case), and whether their LinkedIn page has a website listed.\n\nThe workflow implements batch processing with a 2-second delay between requests to respect API rate limits. This methodical approach ensures reliable data collection while preventing API timeouts.\n\nYou can adjust these thresholds based on your target market - increasing the follower count for more established businesses or decreasing it for emerging markets.\n\nThe last two modules checks if the company already exists in your database (using LinkedIn ID) to prevent duplicates because when you do close enough searches, some companies may come up several times.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""440959e6-151c-4e4f-ad62-72bb99ba6135"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        860,
        -20
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 780,
        ""height"": 560,
        ""content"": ""## AI Scoring and Storage\nThis section scores the company and stores it in a Google Sheet.\n\nIt's important to properly fill in the \""Set variables\"" node at the beginning of the workflow to get a result relevant to your use case. You can also manually modify the system prompt.\n\nRegardless of the score obtained, it's very important to always store the company. Note that we add a 2-second \""wait\"" module to respect Google Sheet's rate limits.\n\nWe add the company to the \""Companies\"" sheet in this [Google Sheet](https://docs.google.com/spreadsheets/d/1LfhqpyjimLjyQcmWY8mUr6YtNBcifiOVLIhAJGV9jiM/edit?usp=sharing) which you can make a copy of and use.\n\nThis AI scoring functionality is extremely impressive once perfectly configured, so I recommend taking some time to test with several companies to ensure the scoring system works well for your needs!\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""7de84aac-73a0-4362-bc1e-9e917a45699b"",
      ""name"": ""Wait 2s"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        1280,
        340
      ],
      ""webhookId"": ""d22fd305-d8f6-4fc3-8a96-62386fa30f94"",
      ""parameters"": {
        ""amount"": 2
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""565f8580-fc51-481f-81f6-cc86142e67af"",
      ""name"": ""Add Company to CRM"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        1480,
        340
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""ID"": ""={{ $('Get Company Info').item.json.id }}"",
            ""Name"": ""={{ $('Get Company Info').item.json.name }}"",
            ""Score"": ""={{ $json.message.content.score }}"",
            ""State"": ""Qualified"",
            ""Summary"": ""={{ $('Get Company Info').item.json.description }}"",
            ""Website"": ""={{ $('Get Company Info').item.json.website }}"",
            ""LinkedIn"": ""={{ $('Get Company Info').item.json.url }}""
          },
          ""schema"": [
            {
              ""id"": ""Name"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Website"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Website"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""LinkedIn"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""LinkedIn"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""ID"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""ID"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Summary"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Summary"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Score"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Score"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""State"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""State"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/10lxvwdeCf7vrAuWsNRGIsSTICEI3z-SUCDVHr8XzAYQ/edit#gid=0"",
          ""cachedResultName"": ""Companies""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1LfhqpyjimLjyQcmWY8mUr6YtNBcifiOVLIhAJGV9jiM"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1LfhqpyjimLjyQcmWY8mUr6YtNBcifiOVLIhAJGV9jiM/edit?usp=drivesdk"",
          ""cachedResultName"": ""CRM""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""Y8D8KsfgZCZmP2Vh"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""5878ea6f-3ea4-4a25-8f45-111cfeb267e2"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -780,
        -460
      ],
      ""parameters"": {
        ""width"": 600,
        ""height"": 380,
        ""content"": ""## Introduction\nWelcome to my template! Before explaining how to set it up, here's some important information:\n\nThis automation is an alternative version of [this template](https://n8n.io/workflows/3717-search-linkedin-companies-and-add-them-to-airtable-crm/) that differs by using Google Sheets instead of Airtable and adding a Lead Scoring system allowing for more precision in our targeting.\n\nThis automation therefore allows you, starting from a LinkedIn search, to enrich company data and score them to determine if they might be interested in your services/product.\n\nFor any questions, you can send me a DM on my [LinkedIn](https://www.linkedin.com/in/matthieu-belin83/) :)  ""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""45ee97ed-5200-40dc-b786-24f26518769b"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -100,
        -460
      ],
      ""parameters"": {
        ""width"": 600,
        ""height"": 380,
        ""content"": ""## Setup\n- Create an account on [Ghost Genius API](ghostgenius.fr) and get your API key.\n\n- Configure the Search Companies and Get Company Info modules by creating a \""Header Auth\"" credential:\n**Name: \""Authorization\""**\n**Value: \""Bearer api_key\""**\n\n- Create a copy of this [Google Sheet](https://docs.google.com/spreadsheets/d/1LfhqpyjimLjyQcmWY8mUr6YtNBcifiOVLIhAJGV9jiM/edit?usp=sharing) by clicking on File => Make a copy (in Google Sheet).\n\n- Configure your Google Sheet credential by following the n8n documentation.\n\n- Create an OpenAI key [here](https://platform.openai.com/docs/overview) and add the credential to the \""AI Company Scoring\"" node following the n8n documentation.\n\n- Add your information to the \""Set Variables\"" node.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""da0f35e1-c377-4362-af91-c6558c59cf47"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        580,
        -460
      ],
      ""parameters"": {
        ""width"": 600,
        ""height"": 380,
        ""content"": ""## Tools \n**(You can use the API and CRM of your choice; this is only a suggestion)**\n\n- API Linkedin : [Ghost Genius API](https://ghostgenius.fr) \n\n- API Documentation : [Documentation](https://ghostgenius.fr/docs)\n\n- CRM : [Google Sheet](https://workspace.google.com/intl/en/products/sheets/)\n\n- AI : [OpenAI](https://openai.com)\n\n- LinkedIn Location ID Finder : [Ghost Genius Locations ID Finder](https://ghostgenius.fr/tools/search-sales-navigator-locations-id)""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b681dc61-85f9-4e38-9e86-1ad399161153"",
      ""name"": ""Start"",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        -1200,
        320
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""b2dc41db-f86c-407b-a2bd-1e81d72bb5fc"",
  ""connections"": {
    ""Start"": {
      ""main"": [
        [
          {
            ""node"": ""Set Variables"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Wait 2s"": {
      ""main"": [
        [
          {
            ""node"": ""Add Company to CRM"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Set Variables"": {
      ""main"": [
        [
          {
            ""node"": ""Search Companies"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Is New Company?"": {
      ""main"": [
        [
          {
            ""node"": ""AI Company Scoring"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Process Each Company"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get Company Info"": {
      ""main"": [
        [
          {
            ""node"": ""Filter Valid Companies"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Search Companies"": {
      ""main"": [
        [
          {
            ""node"": ""Extract Company Data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""AI Company Scoring"": {
      ""main"": [
        [
          {
            ""node"": ""Wait 2s"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Add Company to CRM"": {
      ""main"": [
        [
          {
            ""node"": ""Process Each Company"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract Company Data"": {
      ""main"": [
        [
          {
            ""node"": ""Process Each Company"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Process Each Company"": {
      ""main"": [
        [],
        [
          {
            ""node"": ""Get Company Info"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Filter Valid Companies"": {
      ""main"": [
        [
          {
            ""node"": ""Check If Company Exists"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Process Each Company"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Check If Company Exists"": {
      ""main"": [
        [
          {
            ""node"": ""Is New Company?"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
"Jobs Newsletter Automation System (N8N, Bolt.new, RapidAPI, Mails.so & ChatGPT)","{
  ""id"": ""ypa8bWM40du6QADu"",
  ""meta"": {
    ""instanceId"": ""b3c467df4053d13fe31cc98f3c66fa1d16300ba750506bfd019a0913cec71ea3"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Newsletter Management (n8n + Bolt.new)"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""e125e5b8-eb83-4907-a149-6975df76fc80"",
      ""name"": ""Webhook"",
      ""type"": ""n8n-nodes-base.webhook"",
      ""position"": [
        -280,
        0
      ],
      ""webhookId"": ""5ec8dcf6-b2ba-4fb3-bf62-d253d2f39f02"",
      ""parameters"": {
        ""path"": ""5ec8dcf6-b2ba-4fb3-bf62-d253d2f39f02"",
        ""options"": {},
        ""httpMethod"": ""POST"",
        ""responseMode"": ""responseNode""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""7e5fd2a0-5e1b-461c-b24d-bacd248bd471"",
      ""name"": ""Confirm Email Validity"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        380,
        180
      ],
      ""parameters"": {
        ""url"": ""=https://api.mails.so/v1/validate?email={{ $('Webhook').item.json.body.email }}"",
        ""options"": {},
        ""sendHeaders"": true,
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-mails-api-key"",
              ""value"": ""\""your-api-key\""""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""fc0c24fd-8243-4892-862e-61d31d62ac0e"",
      ""name"": ""Send Email1"",
      ""type"": ""n8n-nodes-base.emailSend"",
      ""position"": [
        380,
        -160
      ],
      ""webhookId"": ""d8073085-1413-40df-9d78-d7b6190c8101"",
      ""parameters"": {
        ""html"": ""=<!DOCTYPE html>\n<html lang=\""en\"">\n<head>\n  <meta charset=\""UTF-8\"">\n  <title>You're Already Subscribed</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      background-color: #f4f7fa;\n      margin: 0;\n      padding: 0;\n    }\n    .container {\n      max-width: 600px;\n      margin: 40px auto;\n      background-color: #ffffff;\n      padding: 40px;\n      border-radius: 10px;\n      box-shadow: 0 10px 30px rgba(0,0,0,0.05);\n    }\n    .header {\n      text-align: center;\n      padding-bottom: 20px;\n    }\n    .header h1 {\n      color: #2d3748;\n      font-size: 22px;\n      margin-bottom: 10px;\n    }\n    .content {\n      font-size: 16px;\n      color: #4a5568;\n      line-height: 1.6;\n    }\n    .footer {\n      margin-top: 40px;\n      font-size: 12px;\n      text-align: center;\n      color: #a0aec0;\n    }\n    .footer a {\n      color: #2b6cb0;\n      text-decoration: none;\n    }\n  </style>\n</head>\n<body>\n  <div class=\""container\"">\n    <div class=\""header\"">\n      <h1>You're Already Subscribed</h1>\n    </div>\n    <div class=\""content\"">\n      <p>Hi there,</p>\n      <p>It looks like someone recently tried to subscribe <strong>your email</strong> to the Jobs 4 U Newsletter.</p>\n      <p>You're already on our list — no further action is needed!</p>\n      <p>If you did not initiate this request, feel free to ignore this email. Your subscription status has not changed.</p>\n      <p>Thank you for staying with us — great opportunities are always heading your way. 🚀</p>\n    </div>\n    <div class=\""footer\"">\n      <p>Review our \n        <a href=\""https://magnificent-tanuki-11356e.netlify.app//terms\"" target=\""_blank\"">Terms & Conditions</a> and \n        <a href=\""https://magnificent-tanuki-11356e.netlify.app//privacy\"" target=\""_blank\"">Privacy Policy</a>.\n      </p>\n    </div>\n  </div>\n</body>\n</html>\n"",
        ""options"": {},
        ""subject"": ""Already Subscribed to Jobs 4 U"",
        ""toEmail"": ""={{ $('Webhook').item.json.body.email }}"",
        ""fromEmail"": ""\""your-from-email\""""
      },
      ""credentials"": {
        ""smtp"": {
          ""id"": ""xcnAVXwtuOa1IOqE"",
          ""name"": ""SMTP account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""c14789f7-06b6-42de-8459-7fd7a30a4b38"",
      ""name"": ""If1"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        580,
        180
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""loose""
          },
          ""combinator"": ""or"",
          ""conditions"": [
            {
              ""id"": ""bc3200af-7ae4-4944-b410-ebb459e2d927"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notContains""
              },
              ""leftValue"": ""={{ $json.data.result }}"",
              ""rightValue"": ""undeliverable""
            },
            {
              ""id"": ""b0c7d1c3-a733-4547-899e-ff76b66765ad"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notEmpty"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.data.mx_record }}"",
              ""rightValue"": ""[null]""
            }
          ]
        },
        ""looseTypeValidation"": true
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""3b23881d-e393-4686-9356-aa43e08611bf"",
      ""name"": ""Merge"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        1140,
        -160
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""combineBy"": ""combineAll""
      },
      ""typeVersion"": 3.1
    },
    {
      ""id"": ""82960352-541b-49a6-b1f7-114583be0feb"",
      ""name"": ""Schedule Trigger"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        -300,
        1200
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {}
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""a246e968-15be-4492-bbc1-c99a5937d794"",
      ""name"": ""Split Out"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        540,
        1040
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""jobs""
      },
      ""executeOnce"": false,
      ""typeVersion"": 1
    },
    {
      ""id"": ""a284e406-f403-4837-abf9-e770d222f773"",
      ""name"": ""Merge1"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        1640,
        1180
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""combineBy"": ""combineAll""
      },
      ""executeOnce"": false,
      ""typeVersion"": 3.1
    },
    {
      ""id"": ""e8a459f4-e498-42b8-a901-e107864e260c"",
      ""name"": ""Aggregate"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        1320,
        1040
      ],
      ""parameters"": {
        ""options"": {},
        ""aggregate"": ""aggregateAllItemData""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ad32bd78-a7f9-4225-9a8b-410330a5c043"",
      ""name"": ""Aggregate1"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        1220,
        1320
      ],
      ""parameters"": {
        ""options"": {},
        ""aggregate"": ""aggregateAllItemData""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ff46019a-9524-4d0c-954b-4a796c531534"",
      ""name"": ""Webhook1"",
      ""type"": ""n8n-nodes-base.webhook"",
      ""position"": [
        -280,
        660
      ],
      ""webhookId"": ""709bb303-2c56-456a-b039-db5254c14328"",
      ""parameters"": {
        ""path"": ""709bb303-2c56-456a-b039-db5254c14328"",
        ""options"": {},
        ""httpMethod"": ""POST""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""347f8cbe-52f4-4f99-81d0-99e93c4860fc"",
      ""name"": ""get rows in all subscribers sheet"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        -60,
        660
      ],
      ""parameters"": {
        ""options"": {},
        ""filtersUI"": {
          ""values"": [
            {
              ""lookupValue"": ""={{ $json.body.email }}"",
              ""lookupColumn"": ""Email Address""
            }
          ]
        },
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw/edit#gid=0"",
          ""cachedResultName"": ""All Subscribers""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw/edit?usp=drivesdk"",
          ""cachedResultName"": ""Jobs 4 U Newsletter""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""d0qeLhShx9sGXalR"",
          ""name"": ""Google Sheets""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""de531168-450e-4177-9c88-6bdeb51170b8"",
      ""name"": ""change status to unsubscribed"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        160,
        660
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Email Address"": ""={{ $json['Email Address'] }}"",
            ""Subscription Status"": ""Unsubscribed""
          },
          ""schema"": [
            {
              ""id"": ""Email Address"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Email Address"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Name"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Subscribe Date"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Subscribe Date"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Subscription Status"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Subscription Status"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""row_number"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""readOnly"": true,
              ""required"": false,
              ""displayName"": ""row_number"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [
            ""Email Address""
          ],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""update"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw/edit#gid=0"",
          ""cachedResultName"": ""All Subscribers""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw/edit?usp=drivesdk"",
          ""cachedResultName"": ""Jobs 4 U Newsletter""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""d0qeLhShx9sGXalR"",
          ""name"": ""Google Sheets""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""6202d3eb-4f86-4b19-84c9-50a02f136cac"",
      ""name"": ""add to unsubscribed sheet"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        380,
        660
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Name"": ""={{ $('get rows in all subscribers sheet').item.json.Name }}"",
            ""Email Address"": ""={{ $json['Email Address'] }}""
          },
          ""schema"": [
            {
              ""id"": ""Email Address"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Email Address"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Name"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": 1629686868,
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw/edit#gid=1629686868"",
          ""cachedResultName"": ""Unsubscribed""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw/edit?usp=drivesdk"",
          ""cachedResultName"": ""Jobs 4 U Newsletter""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""d0qeLhShx9sGXalR"",
          ""name"": ""Google Sheets""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""e567a35a-83be-48aa-bca6-7f560b18ad0a"",
      ""name"": ""get row in subscribed sheet"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        600,
        660
      ],
      ""parameters"": {
        ""options"": {},
        ""filtersUI"": {
          ""values"": [
            {
              ""lookupValue"": ""={{ $json['Email Address'] }}"",
              ""lookupColumn"": ""Email Address""
            }
          ]
        },
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": 1253191037,
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw/edit#gid=1253191037"",
          ""cachedResultName"": ""Subscribed""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw/edit?usp=drivesdk"",
          ""cachedResultName"": ""Jobs 4 U Newsletter""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""d0qeLhShx9sGXalR"",
          ""name"": ""Google Sheets""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""1fad75fe-83a6-4a1d-a235-0890cbc7932f"",
      ""name"": ""delete row from subscribed"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        820,
        660
      ],
      ""parameters"": {
        ""operation"": ""delete"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": 1253191037,
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw/edit#gid=1253191037"",
          ""cachedResultName"": ""Subscribed""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw/edit?usp=drivesdk"",
          ""cachedResultName"": ""Jobs 4 U Newsletter""
        },
        ""startIndex"": ""={{ $json.row_number }}""
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""d0qeLhShx9sGXalR"",
          ""name"": ""Google Sheets""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""150912ac-0735-4e09-a04e-4dfa2e98def8"",
      ""name"": ""Get Subscribers"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        -120,
        1200
      ],
      ""parameters"": {
        ""options"": {},
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": 1253191037,
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw/edit#gid=1253191037"",
          ""cachedResultName"": ""Subscribed""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw/edit?usp=drivesdk"",
          ""cachedResultName"": ""Jobs 4 U Newsletter""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""d0qeLhShx9sGXalR"",
          ""name"": ""Google Sheets""
        }
      },
      ""typeVersion"": 4.5,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""3f79310b-2609-43b7-b5f4-9b355b9dd5aa"",
      ""name"": ""Get Jobs"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        320,
        1040
      ],
      ""parameters"": {
        ""url"": ""https://jobs-search-api.p.rapidapi.com/getjobs"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""{\n  \""search_term\"": \""product manager\"",\n  \""location\"": \""remote\"",\n  \""results_wanted\"": 10,\n  \""site_name\"": [\n    \""indeed\"",\n    \""linkedin\"",\n    \""zip_recruiter\"",\n    \""glassdoor\""\n  ],\n  \""distance\"": 0,\n  \""job_type\"": \""fulltime\"",\n  \""is_remote\"": true,\n  \""linkedin_fetch_description\"": true,\n  \""hours_old\"": 24\n}"",
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-rapidapi-host"",
              ""value"": ""jobs-search-api.p.rapidapi.com""
            },
            {
              ""name"": ""x-rapidapi-key"",
              ""value"": ""\""your-rapid-api-key\""""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""59c28a80-2863-4a60-b846-5fbf02507140"",
      ""name"": ""Summarize Job Descriprions"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        960,
        1040
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-3.5-turbo"",
          ""cachedResultName"": ""GPT-3.5-TURBO""
        },
        ""options"": {},
        ""messages"": {
          ""values"": [
            {
              ""content"": ""=Summarize this job description to one sentences: {{ $json.description }}""
            }
          ]
        }
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""DO9F6MAeTGLeqgoF"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""6fb33d05-c609-460a-8302-e87628380bc4"",
      ""name"": ""Format Newsletter"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        1820,
        1180
      ],
      ""parameters"": {
        ""jsCode"": ""// HTML Newsletter Generation Function for n8n\n// This function formats the aggregated job data into an HTML newsletter\n\nfunction generateNewsletter() {\n  // Get current date for the newsletter\n  const currentDate = new Date().toLocaleDateString('en-US', {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n  \n  // Start building the HTML newsletter\n  let htmlContent = `\n  <!DOCTYPE html>\n  <html lang=\""en\"">\n  <head>\n    <meta charset=\""UTF-8\"">\n    <meta name=\""viewport\"" content=\""width=device-width, initial-scale=1.0\"">\n    <title>Job Opportunities Newsletter</title>\n    <style>\n      body {\n        font-family: Arial, sans-serif;\n        line-height: 1.6;\n        color: #333;\n        max-width: 800px;\n        margin: 0 auto;\n        padding: 20px;\n      }\n      .header {\n        background-color: #0066cc;\n        color: white;\n        padding: 20px;\n        text-align: center;\n        border-radius: 5px 5px 0 0;\n      }\n      .job-listing {\n        border: 1px solid #ddd;\n        padding: 15px;\n        margin-bottom: 20px;\n        border-radius: 5px;\n        background-color: #f9f9f9;\n      }\n      .job-title {\n        color: #0066cc;\n        margin-top: 0;\n        margin-bottom: 5px;\n        font-size: 18px;\n      }\n      .job-company {\n        font-weight: bold;\n        margin-bottom: 5px;\n      }\n      .job-details {\n        margin-bottom: 10px;\n        font-size: 14px;\n        color: #666;\n      }\n      .job-description {\n        margin-bottom: 15px;\n      }\n      .job-salary {\n        font-weight: bold;\n        color: #4CAF50;\n      }\n      .job-link {\n        display: inline-block;\n        background-color: #0066cc;\n        color: white;\n        padding: 8px 15px;\n        text-decoration: none;\n        border-radius: 3px;\n        margin-top: 10px;\n      }\n      .job-link:hover {\n        background-color: #004c99;\n      }\n      .footer {\n        background-color: #f5f5f5;\n        border-top: 1px solid #ddd;\n        padding: 20px;\n        margin-top: 30px;\n        border-radius: 0 0 5px 5px;\n      }\n      .footer-logo {\n        text-align: center;\n        margin-bottom: 15px;\n      }\n      .footer-logo a {\n        color: #0066cc;\n        font-size: 24px;\n        font-weight: bold;\n        text-decoration: none;\n      }\n      .footer-links {\n        text-align: center;\n        margin-bottom: 15px;\n      }\n      .footer-links a {\n        color: #666;\n        text-decoration: none;\n        margin: 0 15px;\n        font-size: 14px;\n      }\n      .footer-links a:hover {\n        text-decoration: underline;\n      }\n      .unsubscribe {\n        text-align: center;\n        font-size: 12px;\n        color: #999;\n      }\n      .unsubscribe a {\n        color: #999;\n        text-decoration: underline;\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\""header\"">\n      <h1>Top Job Opportunities</h1>\n      <p>${currentDate}</p>\n    </div>\n    <div class=\""content\"">\n      <p>Hello ${$('Get Subscribers').first().json.Name}, here are the latest Jobs 4 U:</p>\n  `;\n  \n  // Loop through each job (0 to 9) to add to the newsletter\n  for (let i = 0; i < 10; i++) {\n    // Only include jobs that actually exist in the data\n    if ($('Aggregate1').first().json.data[i] && $('Aggregate1').first().json.data[i].title) {\n      // Get job details from Aggregate1 node\n      const title = $('Aggregate1').first().json.data[i].title || 'No Title';\n      const company = $('Aggregate1').first().json.data[i].company || 'Company not specified';\n      const location = $('Aggregate1').first().json.data[i].location || 'Location not specified';\n      const currency = $('Aggregate1').first().json.data[i].currency || '';\n      const minAmount = $('Aggregate1').first().json.data[i].min_amount || 'Not specified';\n      const maxAmount = $('Aggregate1').first().json.data[i].max_amount || 'Not specified';\n      const datePosted = $('Aggregate1').first().json.data[i].date_posted || 'Date not specified';\n      const jobUrl = $('Aggregate1').first().json.data[i].job_url || '#';\n      \n      // Get job description from Aggregate node\n      const description = $('Aggregate').first().json.data[i]?.message?.content || 'No description available';\n      \n      // Add this job to the HTML content\n      htmlContent += `\n        <div class=\""job-listing\"">\n          <h2 class=\""job-title\"">${title}</h2>\n          <div class=\""job-company\"">${company}</div>\n          <div class=\""job-details\"">\n            <span>${location}</span> • \n            <span>Posted: ${datePosted}</span>\n          </div>\n          <div class=\""job-description\"">\n            ${description}\n          </div>\n          <div class=\""job-salary\"">\n            Salary: ${currency}${minAmount} - ${currency}${maxAmount}\n          </div>\n          <a href=\""${jobUrl}\"" class=\""job-link\"" target=\""_blank\"">Apply Now</a>\n        </div>\n      `;\n    }\n  }\n  \n  // Add the improved footer\n  htmlContent += `\n      <div class=\""footer\"">\n        <div class=\""footer-logo\"">\n          <a href=\""https://magnificent-tanuki-11356e.netlify.app/\"">Job 4 U</a>\n        </div>\n        <div class=\""footer-links\"">\n          <a href=\""https://magnificent-tanuki-11356e.netlify.app/terms\"">Terms of Service</a>\n          <a href=\""https://magnificent-tanuki-11356e.netlify.app/privacy\"">Privacy Policy</a>\n          <a href=\""https://magnificent-tanuki-11356e.netlify.app/\"">Contact Us</a>\n        </div>\n        <div class=\""unsubscribe\"">\n          <p>Don't want to receive these emails? <a href=\""https://magnificent-tanuki-11356e.netlify.app/unsubscribe?email=${$('Get Subscribers').first().json['Email Address']}\"">Unsubscribe</a></p>\n        </div>\n      </div>\n    </div>\n  </body>\n  </html>\n  `;\n  \n  // Return the formatted HTML newsletter\n  return { htmlNewsletter: htmlContent };\n}\n\n// Return the generated newsletter\nreturn generateNewsletter();""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""f4814333-4ec8-4dc0-bedc-df24f54d5abe"",
      ""name"": ""Get All Subscribers"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        -60,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""filtersUI"": {
          ""values"": [
            {
              ""lookupValue"": ""={{ $json.body.email }}"",
              ""lookupColumn"": ""Email Address""
            }
          ]
        },
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw/edit#gid=0"",
          ""cachedResultName"": ""All Subscribers""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1jSVIqvy74zfz106k-16tFCFTU-l2c5buNxHvKKBgQCw/edit?usp=drivesdk"",
          ""cachedResultName"": ""Jobs 4 U Newsletter""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""d0qeLhShx9sGXalR"",
          ""name"": ""Google Sheets""
        }
      },
      ""typeVersion"": 4.5,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""419bfccb-9d98-4a62-961b-a537ffbc121f"",
      ""name"": ""If email is already in database"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        160,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""loose""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""3a5acb6e-d1bb-4b9b-b5db-a0ba52910750"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""exists"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.row_number }}"",
              ""rightValue"": """"
            }
          ]
        },
        ""looseTypeValidation"": true
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""62936656-05ba-4492-9cb3-e924c510c689"",
      ""name"": ""Send Welcome Email"",
      ""type"": ""n8n-nodes-base.emailSend"",
      ""position"": [
        780,
        -320
      ],
      ""webhookId"": ""29812df7-d962-495a-b1fe-f755968dc932"",
      ""parameters"": {
        ""html"": ""=<!DOCTYPE html>\n<html lang=\""en\"">\n<head>\n  <meta charset=\""UTF-8\"">\n  <title>Welcome to Jobs 4 U Newsletter</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      background-color: #f4f7fa;\n      margin: 0;\n      padding: 0;\n    }\n    .container {\n      max-width: 600px;\n      margin: 40px auto;\n      background-color: #ffffff;\n      padding: 40px;\n      border-radius: 10px;\n      box-shadow: 0 10px 30px rgba(0,0,0,0.05);\n    }\n    .header {\n      text-align: center;\n      padding-bottom: 20px;\n    }\n    .header h1 {\n      color: #2d3748;\n      font-size: 24px;\n      margin-bottom: 10px;\n    }\n    .content {\n      font-size: 16px;\n      color: #4a5568;\n      line-height: 1.6;\n    }\n    .button {\n      display: inline-block;\n      margin-top: 20px;\n      padding: 12px 24px;\n      background-color: #2b6cb0;\n      color: white;\n      text-decoration: none;\n      border-radius: 6px;\n      font-weight: bold;\n    }\n    .footer {\n      margin-top: 40px;\n      font-size: 12px;\n      text-align: center;\n      color: #a0aec0;\n    }\n    .footer a {\n      color: #2b6cb0;\n      text-decoration: none;\n    }\n  </style>\n</head>\n<body>\n  <div class=\""container\"">\n    <div class=\""header\"">\n      <h1>Welcome to the Jobs Newsletter!</h1>\n    </div>\n    <div class=\""content\"">\n      <p>Hi {{ $('Webhook').item.json.body.name }},</p>\n      <p>Thanks for subscribing to the <strong>Jobs 4 U Newsletter</strong>! 🧑‍💻</p>\n      <p>Each week, you'll receive handpicked job opportunities straight to your inbox — from remote roles to top-tier tech companies looking for talent just like you.</p>\n      <p>Stay tuned and keep an eye on your inbox. We’re excited to help you take the next step in your career!</p>\n      <p>If you ever want to unsubscribe, you can do so at the bottom of any email we send.</p>\n    </div>\n    <div class=\""footer\"">\n      <p>By subscribing, you agree to our \n        <a href=\""https://magnificent-tanuki-11356e.netlify.app/terms\"" target=\""_blank\"">Terms & Conditions</a> and \n        <a href=\""https://magnificent-tanuki-11356e.netlify.app/privacy\"" target=\""_blank\"">Privacy Policy</a>.\n      </p>\n      <p>Happy job hunting! 🚀</p>\n    </div>\n  </div>\n</body>\n</html>\n"",
        ""options"": {
          ""appendAttribution"": false
        },
        ""subject"": ""Welcome to Jobs 4 U Newsletter"",
        ""toEmail"": ""={{ $('Webhook').item.json.body.email }}"",
        ""fromEmail"": ""\""your-from-email\""""
      },
      ""credentials"": {
        ""smtp"": {
          ""id"": ""xcnAVXwtuOa1IOqE"",
          ""name"": ""SMTP account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""f0e80aea-bd08-4a58-b8ae-89782a9662a5"",
      ""name"": ""Add Email to All Subscribers Sheet"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        780,
        -160
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Name"": ""={{ $('Webhook').item.json.body.name }}"",
            ""Email Address"": ""={{ $('Webhook').item.json.body.email }}"",
            ""Subscribe Date"": ""={{ $now.toFormat('yyyy-MM-dd') }}"",
            ""Subscription Status"": ""Subscribed""
          },
          ""schema"": [
            {
              ""id"": ""Email Address"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Email Address"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Name"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Subscribe Date"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Subscribe Date"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Subscription Status"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Subscription Status"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.googl",
AI Testimonial Extractor Agent: Feedback to Marketing Gold,"{
  ""id"": ""GFNi9RFv4O8aZfzf"",
  ""meta"": {
    ""instanceId"": ""57c71fe69aec521b7d0bd3751d2e0aaa08f8884418e122571610a23c9eb8a65c""
  },
  ""name"": ""AI Testimonial Extractor Agent: Feedback to Marketing Gold"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""148abbeb-5366-4b37-8461-e7a5f9f12f1a"",
      ""name"": ""Sticky Note - Assistance"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        940,
        560
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 440,
        ""height"": 640,
        ""content"": ""=======================================\n            WORKFLOW ASSISTANCE\n=======================================\nFor any questions or support, please contact:\n    Yaron@nofluff.online\n\nExplore more tips and tutorials here:\n   - YouTube: https://www.youtube.com/@YaronBeen/videos\n   - LinkedIn: https://www.linkedin.com/in/yaronbeen/\n=======================================\n\nAuthor:\nYaron Been\n![Yaron Been](https://1.gravatar.com/avatar/a4e4dcaa1f76ff5266bbf80e8df86d22efda890474c68f7796e72fd82e3f2375?size=512&d=initials)""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""127a9a55-64e8-4798-ac2b-0b79c3d1db25"",
      ""name"": ""Sticky Note - Description"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -460,
        360
      ],
      ""parameters"": {
        ""width"": 480,
        ""content"": ""Workflow Name: Testimonial Extractor\n\nDescription:\nThis workflow listens for new rows added to a Google Sheet form response, extracts a short emotional testimonial using a language model, writes it back to the sheet, and sends an email notification with the extracted quote.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""aa56fe49-6cda-4d2f-853c-353c106fab01"",
      ""name"": ""Google Gemini Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""position"": [
        -140,
        940
      ],
      ""parameters"": {
        ""options"": {},
        ""modelName"": ""models/gemini-2.0-flash""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""cHiuNFEYYehlLyFW"",
          ""name"": ""Google Gemini(PaLM) Api account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6c6861c2-8d0d-407a-9d9c-e477f33fcfe9"",
      ""name"": ""New Form Response Trigger"",
      ""type"": ""n8n-nodes-base.googleSheetsTrigger"",
      ""position"": [
        -260,
        580
      ],
      ""parameters"": {
        ""event"": ""rowAdded"",
        ""options"": {},
        ""pollTimes"": {
          ""item"": [
            {
              ""mode"": ""everyMinute""
            }
          ]
        },
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": 352165437,
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/14nmSXdGURNj3a1uQsxNcspdN5HrjGl8TA8t-hdQUF2s/edit#gid=352165437"",
          ""cachedResultName"": ""Form Responses 1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""14nmSXdGURNj3a1uQsxNcspdN5HrjGl8TA8t-hdQUF2s"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/14nmSXdGURNj3a1uQsxNcspdN5HrjGl8TA8t-hdQUF2s/edit?usp=drivesdk"",
          ""cachedResultName"": ""Testimonial""
        }
      },
      ""credentials"": {
        ""googleSheetsTriggerOAuth2Api"": {
          ""id"": ""HyhUBfOVRIuLMcGw"",
          ""name"": ""Google Sheets Trigger account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""24e5c25a-61f5-4543-a927-392ba5a69305"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -320,
        760
      ],
      ""parameters"": {
        ""width"": 220,
        ""height"": 80,
        ""content"": "" Starts the workflow whenever a user submits new feedback via Google Form.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a8d7f6b3-41c1-43f2-9f11-d4102e3fe884"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        0,
        760
      ],
      ""parameters"": {
        ""width"": 220,
        ""height"": 80,
        ""content"": ""Uses Gemini to generate a concise testimonial quote from user feedback.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4245358e-744f-42f4-9cd6-fd32480684b5"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        300,
        760
      ],
      ""parameters"": {
        ""width"": 220,
        ""height"": 80,
        ""content"": ""Stores original feedback, extracted quote, and user info in a testimonials tab.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9bcc0d37-c47e-4b89-b7bd-3f40baca27cf"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        540,
        760
      ],
      ""parameters"": {
        ""width"": 220,
        ""height"": 80,
        ""content"": ""Sends email alert to marketing when a new testimonial is added.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""fd4ec61f-6af7-423e-ac97-43c15d0c19f4"",
      ""name"": ""Extract Testimonial with Gemini"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        -40,
        580
      ],
      ""parameters"": {
        ""text"": ""=Extract a short, emotionally engaging testimonial quote from the following user feedback. Ignore neutral or irrelevant text. Only return the quote.\n\""{{ $json.Feedback }}\""\n\nFeedback: \""{{ $json[\""Feedback\""] }}\""\n"",
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.5
    },
    {
      ""id"": ""c72c0de6-cc21-4b9c-8bf8-b7aa6fd90d7b"",
      ""name"": ""Save Extracted Testimonial"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        320,
        580
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {},
          ""schema"": [
            {
              ""id"": ""Timestamp"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Timestamp"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Name"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Email"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Email"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Feedback"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Feedback"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Testimony"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Testimony"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""text"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""text"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""autoMapInputData"",
          ""matchingColumns"": [
            ""Testimony""
          ],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""appendOrUpdate"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": 352165437,
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/14nmSXdGURNj3a1uQsxNcspdN5HrjGl8TA8t-hdQUF2s/edit#gid=352165437"",
          ""cachedResultName"": ""Form Responses 1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""14nmSXdGURNj3a1uQsxNcspdN5HrjGl8TA8t-hdQUF2s"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/14nmSXdGURNj3a1uQsxNcspdN5HrjGl8TA8t-hdQUF2s/edit?usp=drivesdk"",
          ""cachedResultName"": ""Testimonial""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""pIXaxnRxnyRBTUfl"",
          ""name"": ""Google Sheets account 3""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""64020a72-449b-489f-8a21-c2371f1af8f5"",
      ""name"": ""Notify Marketing Team"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        540,
        580
      ],
      ""webhookId"": ""acce1be8-39ab-4f30-8549-9e06614abbf3"",
      ""parameters"": {
        ""sendTo"": ""nataylamesa@gmail.com"",
        ""message"": ""={{ $json.text }}"",
        ""options"": {},
        ""subject"": ""New Testimonial Extracted""
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""4xTRVs8hsWgrdhHr"",
          ""name"": ""Gmail account 2""
        }
      },
      ""typeVersion"": 2.1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""6a7b7d30-00a5-47eb-8d18-0a63adbbcbc7"",
  ""connections"": {
    ""Google Gemini Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Extract Testimonial with Gemini"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""New Form Response Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""Extract Testimonial with Gemini"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Save Extracted Testimonial"": {
      ""main"": [
        [
          {
            ""node"": ""Notify Marketing Team"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract Testimonial with Gemini"": {
      ""main"": [
        [
          {
            ""node"": ""Save Extracted Testimonial"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
"Invoice Processor & Validator with OCR, AI & Google Sheets","{
  ""meta"": {
    ""instanceId"": ""761a3dddae2bb21eb8973ffca0ba97d5b4f499405873760164a536f547546882"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""0d426dc6-d9ff-44cd-82f0-9d87bda8821a"",
      ""name"": ""When clicking ‘Test workflow’"",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        -200,
        405
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""2722d720-22e9-488b-9b39-4273fe88257c"",
      ""name"": ""OpenRouter Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenRouter"",
      ""position"": [
        548,
        625
      ],
      ""parameters"": {
        ""model"": ""deepseek/deepseek-chat-v3-0324"",
        ""options"": {}
      },
      ""credentials"": {
        ""openRouterApi"": {
          ""id"": ""ykjF5geNxohYAYJ9"",
          ""name"": ""OpenRouter account - sentiimenta.ai""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6992dfda-d65e-4694-8261-2328a7d0bc09"",
      ""name"": ""Split Out"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        1276,
        280
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""line_items""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""06e91f54-fbc3-4161-949c-779ecd7924b9"",
      ""name"": ""Post-Processing"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        880,
        380
      ],
      ""parameters"": {
        ""jsCode"": ""const output = $input.first().json.output;\nlet raw = output.result || output.completion || output.text || JSON.stringify(output);\n\n// Step 1: Remove backticks if present\nraw = raw.trim();\nif (raw.startsWith(\""```json\"")) {\n  raw = raw.replace(/^```json\\s*/, '').replace(/```$/, '').trim();\n} else if (raw.startsWith(\""```\"")) {\n  raw = raw.replace(/^```\\s*/, '').replace(/```$/, '').trim();\n}\n\n// Step 2: Find full JSON block from first { to last }\nconst start = raw.indexOf('{');\nconst end = raw.lastIndexOf('}');\nif (start === -1 || end === -1 || end <= start) {\n  return [{\n    json: {\n      error: \""No valid JSON block found\"",\n      raw_output: raw\n    }\n  }];\n}\n\nlet jsonCandidate = raw.substring(start, end + 1).trim();\n\n// Step 3: Unescape characters\njsonCandidate = jsonCandidate\n  .replace(/\\\\n/g, '')\n  .replace(/\\\\t/g, '')\n  .replace(/\\\\\""/g, '\""')\n  .replace(/\\\\'/g, \""'\"")\n  .replace(/\\\\\\\\/g, '\\\\');\n\n// Step 4: Parse JSON safely\ntry {\n  let parsed = JSON.parse(jsonCandidate);\n\n  // Only double-parse if it looks like stringified JSON\n  if (typeof parsed === \""string\"" && parsed.trim().startsWith('{') && parsed.trim().endsWith('}')) {\n    parsed = JSON.parse(parsed);\n  }\n\n  return [{ json: parsed }];\n} catch (e) {\n  return [{\n    json: {\n      error: \""JSON parsing failed\"",\n      raw_output: raw,\n      attempted_extraction: jsonCandidate,\n      message: e.message\n    }\n  }];\n}\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""34f5988b-9c83-4828-a13d-1ff33615e509"",
      ""name"": ""Text Extractor"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        460,
        420
      ],
      ""parameters"": {
        ""text"": ""=- You must respond ONLY with valid raw rendered JSON.\n- Do NOT include the word \""json\"".\n- Do NOT include the word \""```json\"".\n- Do NOT use triple backticks or markdown formatting.\n- Do NOT wrap the response in any key like \""output\"".\n- Do NOT write anything starting at output directly start with valid root-level JSON.\n- Only respond with a valid, root-level JSON object.\n- Do NOT skip any line item. Continue extracting all line items until the sum of all line_total values exactly equals the total sale amount extracted from the invoice. This verification ensures that all items are fully extracted and no entries are missed. If the totals do not match, keep parsing and extracting additional line items until they do. Only then stop.\n\nText to convert: {{ $json.text }}"",
        ""options"": {
          ""systemMessage"": ""=You are a document parsing assistant designed to extract structured data from invoice PDFs for automated uploading and validation in a financial system.\n\nExtract the following fields from the invoice text:\n\ninvoice_number: Extract from the 'Invoice No' field.\n\nvendor_name: Company name issuing the invoice.\n\ninvoice_date: Format as DD/MM/YYYY.\n\npo_number: Extract the PO number or return null if not found.\n\npo_date: Extract the PO date in DD/MM/YYYY format or return null if not found.\n\ntotal_amount: Extract the invoice total as a float.\n\ntax_details: Include total CGST, total SGST.\n\nline_items: List of all items in the invoice. For each item, extract:\n\n  Serial No.: Item Serial No. In invoice.\n\n  code: The TWW word and its postfix only (e.g., TWW, TWW-Cover, TWW-HPCN). Do not include HSN code or numbers. This field must always be present.\n\n  description: Item description, never include HSN code of product in product description.\n\n  last character: This is a single word/character string found just after or around the line item, typically at the end of the price line or just on the next line. It will never be a number, HSN code, GST %, or unit (like PCS). Examples: G, C, S, 5C, .C If nothing is present (only digits or blank), return \""\"". Check the next 1–2 lines after each item if it's not found on the same line.\n\n  quantity: Quantity value.\n\n  unit_price: Price per unit.\n\n  line_total: Total price for the line.\n\n  hsn_code: HSN code of the item.\n\n  cgst: Only extract the CGST percentage (e.g., 9%, 6%) as written in the invoice. Do not calculate based on line total.\n\n  sgst: Only extract the SGST percentage (e.g., 9%, 6%) as written in the invoice. Do not calculate based on line total.\n\nImportant: Double-check that all line items are extracted without omission.\n\nDo NOT skip any line item. Continue extracting all line items until the sum of all line_total values exactly equals the total_amount extracted from the invoice. This verification ensures that all items are fully extracted and no entries are missed. If the totals do not match, keep parsing and extracting additional line items until they do. Only then stop.""
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""3446d02e-2c94-4575-9062-455dbd71ecd8"",
      ""name"": ""Read/Write Files from Disk"",
      ""type"": ""n8n-nodes-base.readWriteFile"",
      ""position"": [
        20,
        405
      ],
      ""parameters"": {
        ""options"": {},
        ""fileSelector"": ""=E:/SentIImenta AI/SentIImenta AI Website/White Willow/Invoice Validator/May Invoices/Jumax TWW Daily PO Invoices 05_05_2025/661.pdf""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""95e99fb0-a12f-40e6-9126-d84cf2b0c493"",
      ""name"": ""Extract from File"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        240,
        405
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""pdf""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ce0a9035-c99f-4cc3-9ec3-b2be2158623e"",
      ""name"": ""If"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1100,
        340
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""e73c23b4-39e9-4719-8a72-53808eefe607"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.error }}"",
              ""rightValue"": ""JSON parsing failed""
            },
            {
              ""id"": ""b3b7d3d4-c709-40fe-8782-ffd34180ba8b"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.error }}"",
              ""rightValue"": ""No valid JSON block found""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""6675d752-7230-4335-9c68-387396728e7f"",
      ""name"": ""Send Raw Text Again"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1340,
        520
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""18f61f00-03e8-4fd4-b305-f3742bb32d17"",
              ""name"": ""text"",
              ""type"": ""string"",
              ""value"": ""={{ $('Extract from File').item.json.text }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""7706b71b-25dc-4f61-b975-51322d7b9d32"",
      ""name"": ""Validation"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        2156,
        280
      ],
      ""parameters"": {
        ""jsCode"": ""// --- Helper: Levenshtein Distance ---\nfunction levenshtein(a, b) {\n  const matrix = Array.from({ length: b.length + 1 }, (_, i) => [i]);\n  for (let j = 0; j <= a.length; j++) matrix[0][j] = j;\n\n  for (let i = 1; i <= b.length; i++) {\n    for (let j = 1; j <= a.length; j++) {\n      const cost = a[j - 1] === b[i - 1] ? 0 : 1;\n      matrix[i][j] = Math.min(\n        matrix[i - 1][j] + 1,\n        matrix[i][j - 1] + 1,\n        matrix[i - 1][j - 1] + cost\n      );\n    }\n  }\n  return matrix[b.length][a.length];\n}\n\n// --- Helper: Clean String ---\nfunction cleanString(str) {\n  if (str && typeof str === 'string') {\n    return str\n      .replace(/(^\""|\""$|\\[|\\])/g, '') // remove unwanted chars\n      .replace(/\\s{2,}/g, ' ')       // replace multiple spaces with one\n      .toLowerCase()\n      .trim();\n  }\n  return '';\n}\n\n// --- 1. Get all SKUs from \""Split Out\"" and corresponding Unique Keys ---\nconst splitOutItems = $items('Split Out');\nconst uniqueKeyItems = $items('Generate Unique Key');\n\nconst inputSKUs = splitOutItems.map((item, index) => {\n  const uniqueKeyItem = uniqueKeyItems[index];\n\n  const code = cleanString(item.json.code);\n  const description = cleanString(item.json.description);\n  // handle both possible keys for last character\n  const lastCharacter = cleanString(item.json['last_character'] ?? item.json['last character'] ?? '');\n\n  let sku = `${code} ${description}`;\n\n  if (lastCharacter) {\n    if (/^[a-z0-9]+$/i.test(lastCharacter)) {\n      // Append directly without space if alphanumeric postfix\n      sku += lastCharacter;\n    } else {\n      // Otherwise, add a space\n      sku += ` ${lastCharacter}`;\n    }\n  }\n  \n  sku = sku.trim().replace(/\\s{2,}/g, ' ');\n\n  return {\n    Unique_Key: uniqueKeyItem ? uniqueKeyItem.json['Unique Key'] || uniqueKeyItem.json.Unique_Key || '' : '',\n    serial_no: item.json['Serial No.'] ?? item.json['Serial_No.'] ?? '',\n    sku,\n    quantity: item.json.quantity,\n    unit_price: item.json.unit_price,\n    line_total: item.json.line_total,\n    hsn_code: item.json.hsn_code,\n    cgst: item.json.cgst,\n    sgst: item.json.sgst\n  };\n});\n\n// --- 2. Get all rows from \""Google Sheets\"" ---\nconst sheetRows = $items('Fetch Master Data').map(i => i.json);\n\n// --- 3. Set Levenshtein match threshold ---\nconst threshold = 5;\nconst results = [];\n\nfor (const inputSKU of inputSKUs) {\n  let bestMatch = null;\n  let lowestDistance = Infinity;\n\n  for (const row of sheetRows) {\n    const descriptionRaw = row['Jumax PDF Description'] || '';\n    const description = cleanString(descriptionRaw);\n    if (!description) continue;\n\n    const distance = levenshtein(inputSKU.sku, description);\n\n    if (distance < lowestDistance) {\n      lowestDistance = distance;\n      bestMatch = row;\n    }\n  }\n\n  if (bestMatch && lowestDistance <= threshold) {\n    const jumaxASIN = cleanString(bestMatch['ASIN']);\n    const tASIN = cleanString(bestMatch['TWW ASIN']);\n    const cost = Number(bestMatch['Cost '] || bestMatch['Cost'] || bestMatch['Rate']);\n    const unitPrice = Number(inputSKU.unit_price);\n\n    const asinMatch = jumaxASIN === tASIN;\n    const costMatch = cost === unitPrice;\n    const allConditionsMet = asinMatch && costMatch;\n\n    results.push({\n      json: {\n        Unique_Key: inputSKU.Unique_Key,\n        serial_no: inputSKU.serial_no,\n        matchedSKU: inputSKU.sku,\n        matchedRow: bestMatch,\n        distance: lowestDistance,\n        Jumax_ASIN: jumaxASIN,\n        T_ASIN: tASIN,\n        asinMatch,\n        costMatch,\n        quantity: inputSKU.quantity,\n        unit_price: inputSKU.unit_price,\n        costFromSheet: cost,\n        line_total: inputSKU.line_total,\n        hsn_code: inputSKU.hsn_code,\n        cgst: inputSKU.cgst,\n        sgst: inputSKU.sgst,\n        message: allConditionsMet\n          ? '✅ Match found, ASINs match, and Cost matches Unit Price'\n          : asinMatch\n            ? '⚠️ ASINs match but Cost does not match Unit Price'\n            : '❌ Match found but ASINs do not match',\n        All_Conditions_Met: allConditionsMet\n      }\n    });\n  } else {\n    results.push({\n      json: {\n        Unique_Key: inputSKU.Unique_Key,\n        serial_no: inputSKU.serial_no,\n        matchedSKU: inputSKU.sku,\n        matchedRow: null,\n        message: `❌ No match found for SKU: ${inputSKU.sku}`,\n        closestDistance: lowestDistance,\n        quantity: inputSKU.quantity,\n        unit_price: inputSKU.unit_price,\n        line_total: inputSKU.line_total,\n        hsn_code: inputSKU.hsn_code,\n        cgst: inputSKU.cgst,\n        sgst: inputSKU.sgst,\n        All_Conditions_Met: false\n      }\n    });\n  }\n}\n\n// --- 4. Return final results ---\nreturn results;\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""34e482d2-9658-496b-ad2f-fc376f3490ff"",
      ""name"": ""Send Invoice Data"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        1716,
        280
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""HSN"": ""={{ $('Split Out').item.json.hsn_code }}"",
            ""Qty"": ""={{ $('Split Out').item.json.quantity }}"",
            ""CGST%"": ""={{ $('Split Out').item.json.cgst }}"",
            ""SGST%"": ""={{ $('Split Out').item.json.sgst }}"",
            ""SR No."": ""={{ $('Split Out').item.json['serial_no'] }}"",
            ""PO Date"": ""={{ $('Post-Processing').item.json.po_date }}"",
            ""PO Number"": ""={{ $('Post-Processing').item.json.po_number }}"",
            ""Unique Key"": ""={{ $json['Unique Key'] }}"",
            ""Invoice No."": ""={{ $('Post-Processing').item.json.invoice_number }}"",
            ""Sale Amount"": ""={{ $('Split Out').item.json.line_total }}"",
            ""Invoice Date"": ""={{ $('Post-Processing').item.json.invoice_date }}"",
            ""Rate (Vendor)"": ""={{ $('Split Out').item.json.unit_price }}"",
            ""TWW Description"": ""={{ \n  $node[\""Split Out\""].json[\""code\""] + \"" \"" + \n  $node[\""Split Out\""].json[\""description\""] + \"" \"" + \n  ($node[\""Split Out\""].json[\""last character\""] ?? $node[\""Split Out\""].json[\""last_character\""] ?? \""\"") \n}}""
          },
          ""schema"": [
            {
              ""id"": ""SR No."",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""SR No."",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Invoice No."",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Invoice No."",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Unique Key"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Unique Key"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Invoice Date"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Invoice Date"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""PO Number"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""PO Number"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""PO Date"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""PO Date"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""TWW Description"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""TWW Description"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""HSN"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""HSN"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Qty"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Qty"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Rate (Vendor)"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Rate (Vendor)"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Sale Amount"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Sale Amount"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""CGST%"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""CGST%"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""SGST%"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""SGST%"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Matched Cost (Actual Price)"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Matched Cost (Actual Price)"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Matched Unit Price (Vendor Price)"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Matched Unit Price (Vendor Price)"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Price Difference (₹)"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Price Difference (₹)"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Total Loss/Gain (₹)"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Total Loss/Gain (₹)"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Mismatch Note"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Mismatch Note"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""SKU Matched"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""SKU Matched"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""ASIN"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""ASIN"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Taxable Amount"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Taxable Amount"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Invoice Amount"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Invoice Amount"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Total Quantity"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Total Quantity"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1L2DN1aGp1uhLhNm7TrI54tC0Yuk4ER9y2DU-jbHrSrk/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1L2DN1aGp1uhLhNm7TrI54tC0Yuk4ER9y2DU-jbHrSrk"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1L2DN1aGp1uhLhNm7TrI54tC0Yuk4ER9y2DU-jbHrSrk/edit?usp=drivesdk"",
          ""cachedResultName"": ""Invoice Validation""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""vRHrArbX33qgxWfK"",
          ""name"": ""Google Sheets account 3""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""3e30f4f1-15e1-41d9-a7f3-bf49d6273c02"",
      ""name"": ""Fetch Master Data"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        1980,
        280
      ],
      ""parameters"": {
        ""options"": {},
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": 305288444,
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1ZBODB_mwa17Amtxnme5l8MxyEcWHYy9SSjQ6atPJXhc/edit#gid=305288444"",
          ""cachedResultName"": ""Cost-Priority sheet-GPT""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1ZBODB_mwa17Amtxnme5l8MxyEcWHYy9SSjQ6atPJXhc"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1ZBODB_mwa17Amtxnme5l8MxyEcWHYy9SSjQ6atPJXhc/edit?usp=drivesdk"",
          ""cachedResultName"": ""Mapping Sheet Final""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""vRHrArbX33qgxWfK"",
          ""name"": ""Google Sheets account 3""
        }
      },
      ""executeOnce"": true,
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""7a46cfd3-3e2f-4818-80cd-e2776d0303a5"",
      ""name"": ""Update Results"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        2460,
        280
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Unique Key"": ""={{ $json.Unique_Key }}"",
            ""Mismatch Note"": ""={{ $('Validation').item.json.message }}"",
            ""Total Loss/Gain (₹)"": ""={{ ($json.unit_price - $json.costFromSheet) * $json.quantity}}"",
            ""Price Difference (₹)"": ""={{ $json.unit_price - $json.costFromSheet }}"",
            ""Matched Cost (Actual Price)"": ""={{ $json.costFromSheet }}"",
            ""Matched Unit Price (Vendor Price)"": ""={{ $('Validation').item.json.unit_price }}""
          },
          ""schema"": [
            {
              ""id"": ""SR No."",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""SR No."",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Invoice No."",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Invoice No."",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Unique Key"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Unique Key"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Invoice Date"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Invoice Date"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""PO Number"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""PO Number"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""PO Date"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""PO Date"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""TWW Description"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""TWW Description"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""HSN"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""HSN"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Qty"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Qty"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Rate (Vendor)"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Rate (Vendor)"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Sale Amount"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""Sale Amount"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""CGST%"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""CGST%"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""SGST%"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""required"": false,
              ""displayName"": ""SGST%"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Matched Cost (Actual Price)"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Matched Cost (Actual Price)"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Matched Unit Price (Vendor Price)"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Matched Unit Price (Vendor Price)"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Price Difference (₹)"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Price Difference (₹)"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Total Loss/Gain (₹)"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Total Loss/Gain (₹)"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Mismatch Note"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Mismatch Note"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""row_number"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": true,
              ""required"": false,
              ""displayName"": ""row_number"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [
            ""Unique Key""
          ],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""update"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1L2DN1aGp1uhLhNm7TrI54tC0Yuk4ER9y2DU-jbHrSrk/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1L2DN1aGp1uhLhNm7TrI54tC0Yuk4ER9y2DU-jbHrSrk"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1L2DN1aGp1uhLhNm7TrI54tC0Yuk4ER9y2DU-jbHrSrk/edit?usp=drivesdk"",
          ""cachedResultName"": ""Invoice Validation""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""vRHrArbX33qgxWfK"",
          ""name"": ""Google Sheets account 3""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""d9752205-2712-46d0-9058-86857f28e470"",
      ""name"": ""Generate Unique Key"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1496,
        280
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""1907451f-cc09-45d7-a04f-113f8f94d918"",
              ""name"": ""Unique Key"",
              ""type"": ""string"",
              ""value"": ""={{ $('If').item.json.invoice_number + \""-\"" + $itemIndex }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""52a2b54a-69e8-4a83-9861-5931a51a7162"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""p",
Extract Invoice Data from Email to Google Sheets using GPT-4o AI Automation,"{
  ""meta"": {
    ""instanceId"": ""5aaf4236c70e34e423fbdb2c7b754d19253a933bb1476d548f75848a01e473cf"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""70ca3a90-55c8-4e46-9278-6a8fd3d107cd"",
      ""name"": ""Gmail Trigger"",
      ""type"": ""n8n-nodes-base.gmailTrigger"",
      ""position"": [
        -1820,
        220
      ],
      ""parameters"": {
        ""simple"": false,
        ""filters"": {
          ""labelIds"": [
            ""Label_1393502052621954450""
          ]
        },
        ""options"": {
          ""downloadAttachments"": true
        },
        ""pollTimes"": {
          ""item"": [
            {
              ""mode"": ""everyMinute""
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""f7dcff0f-7e98-4042-a33e-2fc32d876908"",
      ""name"": ""Create blank spreadsheet"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        -780,
        220
      ],
      ""parameters"": {
        ""title"": ""=invoice_{{ $now }}"",
        ""options"": {},
        ""resource"": ""spreadsheet"",
        ""sheetsUi"": {
          ""sheetValues"": [
            {
              ""title"": ""=invoice_details""
            }
          ]
        }
      },
      ""executeOnce"": false,
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""9769ad04-a41c-4d55-806a-042b7d00e131"",
      ""name"": ""Move spreadsheet in invoice folder"",
      ""type"": ""n8n-nodes-base.googleDrive"",
      ""position"": [
        -560,
        220
      ],
      ""parameters"": {
        ""fileId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $json.spreadsheetId }}""
        },
        ""driveId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""My Drive"",
          ""cachedResultUrl"": ""https://drive.google.com/drive/my-drive"",
          ""cachedResultName"": ""My Drive""
        },
        ""folderId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1JIdajTJvK6gj4bRjniBJvHEJbQ1pn3AM"",
          ""cachedResultUrl"": ""https://drive.google.com/drive/folders/1JIdajTJvK6gj4bRjniBJvHEJbQ1pn3AM"",
          ""cachedResultName"": ""invoices""
        },
        ""operation"": ""move""
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""f9dbfe55-70b0-4abc-9745-9f4a65d5d1c2"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        -1180,
        480
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {
          ""responseFormat"": ""json_object""
        }
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""7dME1fmMlkFyzFjq"",
          ""name"": ""OpenAi account 2""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""00c59142-6079-4e9c-9374-ad487e48f072"",
      ""name"": ""Attachment Verification"",
      ""type"": ""n8n-nodes-base.filter"",
      ""position"": [
        -1600,
        220
      ],
      ""parameters"": {
        ""options"": {
          ""ignoreCase"": false
        },
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""efd974d9-aa20-461a-86ae-6e0a16d1527d"",
              ""operator"": {
                ""type"": ""object"",
                ""operation"": ""exists"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $('Gmail Trigger').item.binary }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""8a29ac14-be2b-468a-97fa-540d28e80006"",
      ""name"": ""Extract Invoice data"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        -1380,
        220
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""pdf"",
        ""binaryPropertyName"": ""={{ $('Attachment Verification').item.binary.keys() }}""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ae08cdc8-fcf9-4891-be86-b2dcf6f35278"",
      ""name"": ""Preparing Final data"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        -340,
        220
      ],
      ""parameters"": {
        ""mode"": ""runOnceForEachItem"",
        ""jsCode"": ""// Loop over input items and add a new field called 'myNewField' to the JSON of $input$json.output.first().json.outputeach one\n\nlet invoice_details = $('Invoice AI Agent').item.json.output\n\nreturn JSON.parse(invoice_details)""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""7615a5b0-8761-43e2-82b0-32ac5c772f44"",
      ""name"": ""Final Spreadsheet with Invoice data"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        -140,
        220
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {},
          ""schema"": [
            {
              ""id"": ""billed_to"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""billed_to"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""invoice_number"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""invoice_number"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""date_of_issue"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""date_of_issue"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""due_date"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""due_date"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""item_0_description"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""item_0_description"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""item_0_quantity"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""item_0_quantity"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""item_0_rate"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""item_0_rate"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""item_0_amount"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""item_0_amount"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""tax_0_cgst_rate"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""tax_0_cgst_rate"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""tax_0_cgst_amount"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""tax_0_cgst_amount"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""tax_0_sgst_rate"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""tax_0_sgst_rate"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""tax_0_sgst_amount"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""tax_0_sgst_amount"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""item_0_total_amount"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""item_0_total_amount"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""subtotal"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""subtotal"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""total"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""total"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""terms"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""terms"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""conditions_instructions"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""conditions_instructions"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""company_name"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""company_name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""company_mobile"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""company_mobile"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""company_email"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""company_email"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""company_website"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""company_website"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""payment_transaction_ids"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""payment_transaction_ids"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""mode_of_payment"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""mode_of_payment"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""billing_address"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""billing_address"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""shipping_address"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""shipping_address"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""place_of_supply"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""place_of_supply"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""place_of_delivery"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""place_of_delivery"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""gst_registration_no"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""gst_registration_no"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""pan_no"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""pan_no"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""autoMapInputData"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""name"",
          ""value"": ""invoice_details""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $('Create blank spreadsheet').item.json.spreadsheetId }}""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""e68aa386-7150-4070-a5d7-1dcb963b620d"",
      ""name"": ""Invoice AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        -1160,
        220
      ],
      ""parameters"": {
        ""text"": ""={{ $json.text }}"",
        ""options"": {
          ""systemMessage"": ""you are an financial advisor , who reads the array of data to identify certain elements of an Invoice, from the input data and provide a json response. use only following specified keys \nfor example:\n{\n\""billed_to\"": \""John\"",\n\""invoice_number\"": \""569871234\"",\n\""date_of_issue\"": \""2025-05-21\"",\n\""due_date\"": \""2025-05-25\"",\n\""item_0_description\"": \""Computer CPU\"",\n\""item_0_quantity\"": 6,\n\""item_0_rate\"": 15,\n\""item_0_amount\"": 90,\n\""item_1_description\"": \""Chair Wooden\"",\n\""item_1_quantity\"": 8,\n\""item_1_rate\"": 10,\n\""item_1_amount\"": 80,\n\""subtotal\"": 170.00,\n\""discount\"": 20.00,\n\""total\"": 150.00,\n\""terms\"": \""Sold items not be acceptable\"",\n\""conditions_instructions\"": \""xyaABC\"",\n\""company_name\"": \""Digital Electronics\"",\n\""company_mobile\"": \""987654321\"",\n\""company_email\"": \""ayz@gmail.com\"",\n\""company_website\"": \""www.abc.com\""\n}""
        },
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.9,
      ""alwaysOutputData"": false
    },
    {
      ""id"": ""335a80c5-ad86-4379-b1a6-9a2ef7285f3c"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -2860,
        100
      ],
      ""parameters"": {
        ""width"": 880,
        ""height"": 1520,
        ""content"": ""AI Invoice Processor Agent: Email to Structured Data\nAutomatically extract, analyze, and organize invoice data from Gmail attachments into structured Google Sheets. Perfect for:\n✅ Accountants & bookkeepers — eliminate manual data entry from invoices\n✅ Small businesses — streamline invoice processing and tracking\n✅ Finance teams — automate accounts payable workflows\n\n⚙️ What's Used\nn8n Nodes:\nGmail Trigger → File Extraction → AI Agent → OpenAI Chat Model → Google Sheets → Google Drive\nExternal Tools:\n\nGmail API – Monitor specific labeled emails with attachments\nPDF Extraction – Convert invoice PDFs to readable text\nOpenAI GPT-4 – Intelligent invoice data extraction and structuring\nGoogle Sheets – Create organized spreadsheets with invoice details\nGoogle Drive – Automatically organize files in invoice folders\n\n\n🔑 Setup – Credentials Needed\n\nGmail OAuth2 → Access emails and download attachments\nOpenAI API Key → For AI-powered invoice data extraction\nGoogle Sheets OAuth2 → Create and populate spreadsheets\nGoogle Drive OAuth2 → Organize files in designated folders\n\n\n📧 Gmail Setup Required\nCreate a Gmail label (e.g., \""Invoice Processing\"") and apply it to emails containing invoice attachments. The workflow will monitor this label for new emails every minute.\n\n🚀 Workflow Steps\n\nEmail Monitoring\nContinuously watches Gmail for new emails with specific labels and attachments\nAttachment Verification\nFilters emails to ensure they contain PDF attachments before processing\nData Extraction\nConverts PDF invoices to text and extracts readable content\nAI-Powered Analysis\nGPT processes invoice text and extracts structured data including:\n\nCompany details and contact information\nInvoice numbers, dates, and due dates\nLine items with quantities, rates, and amounts\nTax calculations (CGST, SGST, VAT)\nPayment terms and billing addresses\n\n\nSpreadsheet Creation\nCreates timestamped Google Sheets with organized invoice data\nFile Organization\nMoves processed spreadsheets to designated Drive folders for easy access\n\n\n📊 Extracted Data Fields\nThe AI identifies and organizes 25+ invoice elements:\n\nHeader Info: Billed to, invoice number, dates\nLine Items: Description, quantity, rate, amount\nTax Details: CGST/SGST rates and amounts\nCompany Info: Name, contact details, GST numbers\nPayment Info: Transaction IDs, payment methods\nAddresses: Billing, shipping, delivery locations\n\n\n💡 Pro Tips\n\nUse clear Gmail labels for different invoice types (vendors, clients, etc.)\nEnsure invoice PDFs are text-based (not scanned images) for best results\nCreate separate Drive folders for different accounting periods\nReview AI extraction accuracy and refine prompts as needed\nSet up email filters to automatically apply labels to vendor emails\n\n\n🛠️ Customize It\n\nAdd invoice approval workflows with email notifications\nConnect to accounting software (QuickBooks, Xero, SAP)\nInclude OCR processing for scanned invoice images\nAdd duplicate invoice detection and alerts\nCreate automated payment reminders based on due dates""
      },
      ""typeVersion"": 1
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""Gmail Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""Attachment Verification"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Invoice AI Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Create blank spreadsheet"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Invoice AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract Invoice data"": {
      ""main"": [
        [
          {
            ""node"": ""Invoice AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Preparing Final data"": {
      ""main"": [
        [
          {
            ""node"": ""Final Spreadsheet with Invoice data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Attachment Verification"": {
      ""main"": [
        [
          {
            ""node"": ""Extract Invoice data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Create blank spreadsheet"": {
      ""main"": [
        [
          {
            ""node"": ""Move spreadsheet in invoice folder"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Move spreadsheet in invoice folder"": {
      ""main"": [
        [
          {
            ""node"": ""Preparing Final data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Automated PDF Invoice Processing & Approval Flow using OpenAI and Google Sheets,"{
  ""meta"": {
    ""instanceId"": ""d1786ab0d745a7498abf13a9c2cdabb1374c006e889b79eef64ce0386b8f8a41"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""32dec238-615e-461d-ac9b-e09bdcb2a73f"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        560,
        200
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""MGwGMKEkdcjzlYCw"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""4cb973bc-385f-42db-b79e-942c75d97a84"",
      ""name"": ""Structured Output Parser"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserStructured"",
      ""position"": [
        780,
        200
      ],
      ""parameters"": {
        ""jsonSchemaExample"": ""{\n  \""invoice_number\"": \""\"",\n  \""invoice_date\"": \""\"",\n  \""due_date\"": \""\"",\n  \""vendor_name\"": \""\"",\n  \""total_amount\"": \""\"",\n  \""currency\"": \""\"",\n  \""items\"": [\n    {\n      \""description\"": \""\"",\n      \""amount\"": \""\""\n    }\n  ],\n  \""tax\"": \""\"",\n  \""category\"": \""\""\n}""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""b7ed6cf6-e965-43e0-abab-919ab598e62a"",
      ""name"": ""Invoice Folder Monitor"",
      ""type"": ""n8n-nodes-base.googleDriveTrigger"",
      ""position"": [
        -100,
        -220
      ],
      ""parameters"": {
        ""event"": ""fileCreated"",
        ""options"": {},
        ""pollTimes"": {
          ""item"": [
            {
              ""mode"": ""everyMinute""
            }
          ]
        },
        ""triggerOn"": ""specificFolder"",
        ""folderToWatch"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""1KJ4fvXcKVMGJunsKvPYf8PkX5K9SVwFk""
        }
      },
      ""credentials"": {
        ""googleDriveOAuth2Api"": {
          ""id"": ""SEUhrgz30NMJS3cH"",
          ""name"": ""Google Drive account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d2a0d543-1ee3-4852-9751-69aae3b9864a"",
      ""name"": ""Download Invoice PDF"",
      ""type"": ""n8n-nodes-base.googleDrive"",
      ""position"": [
        100,
        -220
      ],
      ""parameters"": {
        ""fileId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $json.id }}""
        },
        ""options"": {},
        ""operation"": ""download""
      },
      ""credentials"": {
        ""googleDriveOAuth2Api"": {
          ""id"": ""SEUhrgz30NMJS3cH"",
          ""name"": ""Google Drive account""
        }
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""80345f83-02fa-47ab-86f0-1e01bd3429e7"",
      ""name"": ""Invoice Parser AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        580,
        0
      ],
      ""parameters"": {
        ""text"": ""=You are an intelligent invoice parser. I will give you raw text extracted from a PDF invoice. \n\n========================\nSTART OF RAW INVOICE TEXT\n\n{{ $json.text }}\n\nEND OF RAW INVOICE TEXT\n========================\n\nYour job is to:\n\n1. Extract key information from the invoice such as:\n   - invoice_number\n   - invoice_date\n   - due_date (if available)\n   - vendor_name\n   - total_amount\n   - currency (e.g., USD, IDR, etc.)\n   - items (as a list of item descriptions and their amounts)\n   - tax (if available)\n\n2. Detect the invoice **category**, such as:\n   - Utilities\n   - Office Supplies\n   - Travel\n   - Software\n   - Food & Beverage\n   - Others (if unknown)\n\n3. Return the result in this exact JSON format:\n\n```json\n{\n  \""invoice_number\"": \""\"",\n  \""invoice_date\"": \""\"",\n  \""due_date\"": \""\"",\n  \""vendor_name\"": \""\"",\n  \""total_amount\"": \""\"",\n  \""currency\"": \""\"",\n  \""items\"": [\n    {\n      \""description\"": \""\"",\n      \""amount\"": \""\""\n    }\n  ],\n  \""tax\"": \""\"",\n  \""category\"": \""\""\n}\n"",
        ""options"": {},
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""57649f6a-2d4d-4072-92bd-ffea26fdd4dd"",
      ""name"": ""Insert Invoice Data"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        1460,
        0
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Tax"": ""={{ $('Invoice Parser AI Agent').item.json.output.tax }}"",
            ""Items"": ""={{ $('Invoice Parser AI Agent').item.json.output.items }}"",
            ""Approved"": ""={{ $json.data['Approve Invoice?'] }}"",
            ""Category"": ""={{ $('Invoice Parser AI Agent').item.json.output.category }}"",
            ""Currency"": ""={{ $('Invoice Parser AI Agent').item.json.output.currency }}"",
            ""Due Date"": ""={{ $('Invoice Parser AI Agent').item.json.output.due_date }}"",
            ""Reviewed By"": ""={{ $json.data['Reviewed By'] }}"",
            ""Vendor Name"": ""={{ $('Invoice Parser AI Agent').item.json.output.vendor_name }}"",
            ""Invoice Date"": ""={{ $('Invoice Parser AI Agent').item.json.output.invoice_date }}"",
            ""Total Amount"": ""={{ $('Invoice Parser AI Agent').item.json.output.total_amount }}"",
            ""Approval Notes"": ""={{ $json.data['Approval Notes'] }}"",
            ""Invoice Number"": ""={{ $('Invoice Parser AI Agent').item.json.output.invoice_number }}""
          },
          ""schema"": [
            {
              ""id"": ""Invoice Number"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Invoice Number"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Invoice Date"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Invoice Date"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Due Date"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Due Date"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Vendor Name"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Vendor Name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Total Amount"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Total Amount"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Currency"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Currency"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Items"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Items"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Tax"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Tax"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Category"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Category"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Approved"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Approved"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Approval Notes"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Approval Notes"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Reviewed By"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Reviewed By"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1ueJfN5dFTXY3_AdvnYUL5_RjV9YwSFvbxwA_ivtqnJk/edit#gid=0"",
          ""cachedResultName"": ""Invoices""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1ueJfN5dFTXY3_AdvnYUL5_RjV9YwSFvbxwA_ivtqnJk"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1ueJfN5dFTXY3_AdvnYUL5_RjV9YwSFvbxwA_ivtqnJk/edit?usp=drivesdk"",
          ""cachedResultName"": ""Copy of PDF Invoice Parser - n8n template""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""ypmzFxQFfAacuVVC"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""2993f865-d46c-489b-ab34-3c62b2c3cb1f"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -460,
        -220
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 280,
        ""height"": 500,
        ""content"": ""## SETUP REQUIRED\n\nGoogle Sheets Structure:\nSheet: \""Invoices\""\n• Column A: Invoice Number  \n• Column B: Invoice Date  \n• Column C: Due Date  \n• Column D: Vendor Name  \n• Column E: Total Amount  \n• Column F: Currency  \n• Column G: Items  \n• Column H: Tax  \n• Column I: Category  \n• Column J: Approved\n• Column K: Approval Notes\n• Column L: Reviewed By\n\nRequired Credentials:\n• Google Drive Credential  \n• Gmail Credential \n• Google Sheets Credential \n• OpenAI API Key (GPT-4)\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""691f4972-8d18-49fd-b8cd-0c6b2464b078"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -120,
        420
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 700,
        ""height"": 560,
        ""content"": ""## 🧾 Automated PDF Invoice Processing & Approval Flow using OpenAI and Google Sheets\n\nWhat This Template Does:\n\n- Monitors **Google Drive**, **Gmail**, and a **web form** for incoming PDF invoices  \n- Automatically downloads and extracts raw text from PDF attachments  \n- Uses **GPT-4o-mini** to intelligently parse invoice data (invoice number, vendor, date, amount, tax, items, etc.)  \n- Categorizes invoices into types such as *Utilities, Travel, Office Supplies, Food & Beverage, Others*  \n- Sends a dynamic **approval request email** with an embedded decision form (Yes/No, reviewer name, notes)  \n- Stores both approved and rejected invoice data into **Google Sheets** for recordkeeping  \n- Sends rejection notifications to the finance team for follow-up  \n- Provides a complete, automated approval pipeline with human oversight  \n- Includes a structured JSON schema for consistent and error-free AI output  \n- Polls input sources every minute to ensure timely and responsive processing  \n- Ideal for businesses seeking to **automate their invoice approval and bookkeeping workflows** with AI\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""2463666d-8c40-4821-b907-9741e62ce1e7"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        620,
        420
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 620,
        ""height"": 620,
        ""content"": ""## 📋 WORKFLOW PROCESS OVERVIEW\n\n1. **Invoice Collection**  \nInvoices are captured through three triggers: new PDFs in a Google Drive folder, incoming Gmail messages with PDF attachments, or direct uploads via a web form.\n\n2. **File Handling**  \nIf uploaded via Drive, the PDF is downloaded using its file ID; if via Gmail or form, the PDF is already available as binary data.\n\n3. **Text Extraction**  \nThe system extracts raw text from the PDF using the appropriate method based on its source (Drive, Email, or Form).\n\n4. **AI Data Parsing**  \nGPT-4 processes the extracted text into structured JSON, identifying invoice details like vendor, date, amount, and categorizing the invoice.\n\n5. **Approval Request**  \nAn email is sent to the reviewer with an approval form asking for a Yes/No decision along with optional notes.\n\n6. **Decision Routing**  \nIf approved, the data moves forward for storage; if rejected, a notification is sent to the finance team.\n\n7. **Save Invoice Data**  \nAll extracted and reviewed invoice data is saved into a Google Sheet, maintaining a full record of each invoice and its status.\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""8483b8ef-83d7-4b3f-ad54-b9ec23efc911"",
      ""name"": ""Send Invoice for Approval"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        920,
        0
      ],
      ""webhookId"": ""a23938a4-fc6c-4445-8dee-17e501e92e06"",
      ""parameters"": {
        ""sendTo"": ""replace_with_approver_email@yopmail.com"",
        ""message"": ""=A new invoice has been submitted and requires your review and approval:"",
        ""options"": {},
        ""subject"": ""=[Action Required] Invoice Approval Request – {{ $json.output.vendor_name }}"",
        ""operation"": ""sendAndWait"",
        ""formFields"": {
          ""values"": [
            {
              ""fieldType"": ""dropdown"",
              ""fieldLabel"": ""Approve Invoice?"",
              ""fieldOptions"": {
                ""values"": [
                  {
                    ""option"": ""Yes""
                  },
                  {
                    ""option"": ""No""
                  }
                ]
              },
              ""requiredField"": true
            },
            {
              ""fieldLabel"": ""Reviewed By"",
              ""requiredField"": true
            },
            {
              ""fieldType"": ""textarea"",
              ""fieldLabel"": ""Approval Notes""
            }
          ]
        },
        ""responseType"": ""customForm""
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""sWl7FFMkEUYBj0zM"",
          ""name"": ""Gmail account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""0fece28b-13c8-4b0d-9c1b-84047a3503f6"",
      ""name"": ""Monitor Email Attachments"",
      ""type"": ""n8n-nodes-base.gmailTrigger"",
      ""position"": [
        100,
        0
      ],
      ""parameters"": {
        ""simple"": false,
        ""filters"": {},
        ""options"": {
          ""downloadAttachments"": true,
          ""dataPropertyAttachmentsPrefixName"": ""attachment_""
        },
        ""pollTimes"": {
          ""item"": [
            {
              ""mode"": ""everyMinute""
            }
          ]
        }
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""sWl7FFMkEUYBj0zM"",
          ""name"": ""Gmail account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""d210d1c5-865f-494e-a69c-d25ac462869b"",
      ""name"": ""Upload Invoice (PDF) Form"",
      ""type"": ""n8n-nodes-base.formTrigger"",
      ""position"": [
        100,
        200
      ],
      ""webhookId"": ""e033bea9-70e8-41e2-aea4-1b95714ea257"",
      ""parameters"": {
        ""options"": {},
        ""formTitle"": ""Upload Invoice (PDF)"",
        ""formFields"": {
          ""values"": [
            {
              ""fieldType"": ""file"",
              ""fieldLabel"": ""Upload"",
              ""multipleFiles"": false,
              ""requiredField"": true,
              ""acceptFileTypes"": "".pdf""
            }
          ]
        },
        ""formDescription"": ""Upload your invoice PDF using this form.""
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""4703ddb5-1e07-43b9-a465-c9aced0ac9d8"",
      ""name"": ""Extract Text from Drive PDF"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        300,
        -220
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""pdf""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""7ca78f71-8c1e-42e2-8686-08f2a9bfc009"",
      ""name"": ""Extract Text from Email PDF"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        300,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""pdf"",
        ""binaryPropertyName"": ""attachment_0""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0b4aff7d-8c92-4964-a38c-996b546ed23a"",
      ""name"": ""Extract Text from Form PDF"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        300,
        200
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""pdf"",
        ""binaryPropertyName"": ""Upload""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""eef8e5e5-2b01-4ddd-8ea2-312fb41356de"",
      ""name"": ""Check Approval Decision"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1180,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""451bfdfc-f645-4e3c-91cc-895558f45b11"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.data['Approve Invoice?'] }}"",
              ""rightValue"": ""Yes""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""ac5dd79d-9d32-44f9-8a9b-2cc45757110b"",
      ""name"": ""Send Rejection Alert"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        1320,
        260
      ],
      ""webhookId"": ""1c33c42a-0d8e-466f-a424-faba306c56af"",
      ""parameters"": {
        ""sendTo"": ""finance_team@yopmail.com"",
        ""message"": ""=Hi Finance Team,\n\nAn invoice from {{ $('Invoice Parser AI Agent').item.json.output.vendor_name }} has been disapproved during the approval process.\n\nReviewed By: {{ $('Send Invoice for Approval').item.json.data['Reviewed By'] }}\nApproval Notes: {{ $('Send Invoice for Approval').item.json.data['Approval Notes'] }}\n\nPlease review and follow up as needed.\n\nThank you,\nAutomated Invoice System\n\n"",
        ""options"": {
          ""appendAttribution"": false
        },
        ""subject"": ""=[Alert] Invoice Disapproved – {{ $('Invoice Parser AI Agent').item.json.output.vendor_name }}"",
        ""emailType"": ""text""
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""sWl7FFMkEUYBj0zM"",
          ""name"": ""Gmail account""
        }
      },
      ""typeVersion"": 2.1
    }
  ],
  ""pinData"": {
    ""Invoice Parser AI Agent"": [
      {
        ""output"": {
          ""tax"": ""8.50"",
          ""items"": [
            {
              ""amount"": ""85.00"",
              ""description"": ""Web Design - This is a sample description...""
            }
          ],
          ""category"": ""Others"",
          ""currency"": ""USD"",
          ""due_date"": ""January 31, 2016"",
          ""vendor_name"": ""DEMO - Sliced Invoices"",
          ""invoice_date"": ""January 25, 2016"",
          ""total_amount"": ""93.50"",
          ""invoice_number"": ""INV-3337""
        }
      }
    ],
    ""Send Invoice for Approval"": [
      {
        ""data"": {
          ""Reviewed By"": ""jack"",
          ""Approval Notes"": ""notes approval"",
          ""Approve Invoice?"": ""Yes""
        }
      }
    ]
  },
  ""connections"": {
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Invoice Parser AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Download Invoice PDF"": {
      ""main"": [
        [
          {
            ""node"": ""Extract Text from Drive PDF"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Send Rejection Alert"": {
      ""main"": [
        [
          {
            ""node"": ""Insert Invoice Data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Invoice Folder Monitor"": {
      ""main"": [
        [
          {
            ""node"": ""Download Invoice PDF"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Check Approval Decision"": {
      ""main"": [
        [
          {
            ""node"": ""Insert Invoice Data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Send Rejection Alert"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Invoice Parser AI Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Send Invoice for Approval"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Structured Output Parser"": {
      ""ai_outputParser"": [
        [
          {
            ""node"": ""Invoice Parser AI Agent"",
            ""type"": ""ai_outputParser"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Monitor Email Attachments"": {
      ""main"": [
        [
          {
            ""node"": ""Extract Text from Email PDF"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Send Invoice for Approval"": {
      ""main"": [
        [
          {
            ""node"": ""Check Approval Decision"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Upload Invoice (PDF) Form"": {
      ""main"": [
        [
          {
            ""node"": ""Extract Text from Form PDF"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract Text from Form PDF"": {
      ""main"": [
        [
          {
            ""node"": ""Invoice Parser AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract Text from Drive PDF"": {
      ""main"": [
        [
          {
            ""node"": ""Invoice Parser AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract Text from Email PDF"": {
      ""main"": [
        [
          {
            ""node"": ""Invoice Parser AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
"TradingView Signal Extractor with Gmail, Google Sheets & Telegram Notifications","{
  ""meta"": {
    ""instanceId"": ""761a3dddae2bb21eb8973ffca0ba97d5b4f499405873760164a536f547546882"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""a5f53559-6b91-45a9-8822-53439b9c306d"",
      ""name"": ""Clean Email"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        -160,
        180
      ],
      ""parameters"": {
        ""jsCode"": ""// Make sure From exists and is a string\nconst rawFrom = $input.first().json.From;\n\nlet cleanEmail = \""\"";\n\n// Proceed only if rawFrom is a valid string\nif (typeof rawFrom === \""string\"" && rawFrom.trim() !== \""\"") {\n  const match = rawFrom.match(/<(.+?)>/);\n  cleanEmail = match ? match[1] : rawFrom.trim();\n} else {\n  cleanEmail = \""[Missing From field]\"";\n}\n\nreturn [\n  {\n    json: {\n      cleanEmail\n    }\n  }\n];\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""e6a332b0-529d-489c-9d67-8d7d06bc8044"",
      ""name"": ""Gmail"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        -160,
        -20
      ],
      ""webhookId"": ""0c25cbb3-b954-4c3a-aabc-9f4473b9f733"",
      ""parameters"": {
        ""messageId"": ""={{ $json.id }}"",
        ""operation"": ""markAsRead""
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""6I8sq2IhPgySI6XX"",
          ""name"": ""Gmail account 2 - infodpatel15""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""032629d7-d41b-4d8f-b545-e98df9cf796c"",
      ""name"": ""Send Message"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        1380,
        180
      ],
      ""webhookId"": ""836270b1-beef-4520-b024-30b72af1582a"",
      ""parameters"": {
        ""text"": ""=KITE 11: {{ $('Get Email').item.json.snippet }}"",
        ""chatId"": ""1520681602"",
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""bAaBU3SFXiLAdyvU"",
          ""name"": ""Telegram account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""f7e47b44-5ea8-43fa-9054-539e710d3a39"",
      ""name"": ""Verify Mail"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        60,
        180
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""7f6c2c11-6204-4f36-8e57-dcc9efc93433"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.cleanEmail }}"",
              ""rightValue"": ""=noreply@tradingview.com""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""66b91b39-49f7-44cc-8d9a-f4392c11ff77"",
      ""name"": ""Extract Company Name"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        500,
        180
      ],
      ""parameters"": {
        ""jsCode"": ""// Get subject from previous node (e.g., IMAP Email node)\nconst subject = $input.first().json.Subject;\n\nconst stockSymbol = subject.split('for ')[1]?.trim() || '';\n\nreturn [\n  {\n    json: {\n      symbol: stockSymbol,\n      originalSubject: subject,\n    }\n  }\n];\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""ffbbff24-1959-4254-b05c-4a6327edec95"",
      ""name"": ""Google Sheets"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        1160,
        180
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Date"": ""={{ $json.formattedDate }}"",
            ""Stock"": ""={{ $('Extract Company Name').item.json.symbol }}""
          },
          ""schema"": [
            {
              ""id"": ""Date"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Date"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Stock"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Stock"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1PBvePZN2yvVg23hDIDB62e91ogTgbuNXVduZTai-bZc/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1PBvePZN2yvVg23hDIDB62e91ogTgbuNXVduZTai-bZc"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1PBvePZN2yvVg23hDIDB62e91ogTgbuNXVduZTai-bZc/edit?usp=drivesdk"",
          ""cachedResultName"": ""KITE FINAL 11""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""9NecV5qrcx7kjh5f"",
          ""name"": ""Google Sheets account 2""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""dde99d76-79fe-4650-b7a2-948047b62a16"",
      ""name"": ""Current Date & Time"",
      ""type"": ""n8n-nodes-base.dateTime"",
      ""position"": [
        720,
        180
      ],
      ""parameters"": {
        ""options"": {
          ""timezone"": ""Asia/kolkata""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""7a60d22e-8027-423c-9927-aa2e0759744d"",
      ""name"": ""Formatted Date & Time"",
      ""type"": ""n8n-nodes-base.dateTime"",
      ""position"": [
        940,
        180
      ],
      ""parameters"": {
        ""date"": ""={{ $json.currentDate }}"",
        ""format"": ""custom"",
        ""options"": {},
        ""operation"": ""formatDate"",
        ""customFormat"": ""DD""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""288dec30-51c9-4206-a0d8-5bca9317ec57"",
      ""name"": ""Get Email"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        300,
        180
      ],
      ""webhookId"": ""1fd0763d-5989-4fc4-aa5f-191eb8ee51bc"",
      ""parameters"": {
        ""messageId"": ""={{ $('Email Received').item.json.id }}"",
        ""operation"": ""get""
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""6I8sq2IhPgySI6XX"",
          ""name"": ""Gmail account 2 - infodpatel15""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""20ac9cda-60e1-4a52-a41d-e83485f2c76f"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -400,
        -80
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 380,
        ""height"": 400,
        ""content"": ""## Read Emails""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9a8cae5e-9601-4500-bde6-8a84837fc378"",
      ""name"": ""Email Received"",
      ""type"": ""n8n-nodes-base.gmailTrigger"",
      ""position"": [
        -380,
        80
      ],
      ""parameters"": {
        ""filters"": {},
        ""pollTimes"": {
          ""item"": [
            {
              ""mode"": ""everyMinute""
            }
          ]
        }
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""6I8sq2IhPgySI6XX"",
          ""name"": ""Gmail account 2 - infodpatel15""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""ff7bbb0d-29a1-458d-8437-089fb0bb4ef4"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        20,
        120
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 180,
        ""height"": 200,
        ""content"": ""## Identify Email""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""70ed236c-3d55-48ec-884c-8bf707139f61"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        240,
        80
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 400,
        ""height"": 260,
        ""content"": ""## Get Email Data - Extract Buy or Sell Signal""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a86e1c5f-9059-4971-835c-3e39dc176a3e"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        660,
        120
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 440,
        ""height"": 220,
        ""content"": ""## Get Current Date & Time""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""84d9bbe3-ebe6-4edb-b02b-f37c3dfdabdf"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1120,
        120
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 420,
        ""height"": 220,
        ""content"": ""## Update Data On Sheet & Notify""
      },
      ""typeVersion"": 1
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""Get Email"": {
      ""main"": [
        [
          {
            ""node"": ""Extract Company Name"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Clean Email"": {
      ""main"": [
        [
          {
            ""node"": ""Verify Mail"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Verify Mail"": {
      ""main"": [
        [
          {
            ""node"": ""Get Email"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Send Message"": {
      ""main"": [
        []
      ]
    },
    ""Google Sheets"": {
      ""main"": [
        [
          {
            ""node"": ""Send Message"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Email Received"": {
      ""main"": [
        [
          {
            ""node"": ""Gmail"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Clean Email"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Current Date & Time"": {
      ""main"": [
        [
          {
            ""node"": ""Formatted Date & Time"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract Company Name"": {
      ""main"": [
        [
          {
            ""node"": ""Current Date & Time"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Formatted Date & Time"": {
      ""main"": [
        [
          {
            ""node"": ""Google Sheets"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
"Generate Invoices, Save to Drive and Send Email to Customer with JS + G Sheets","{
  ""id"": ""K4XpJbwBJYnDiYkF"",
  ""meta"": {
    ""instanceId"": ""b3c467df4053d13fe31cc98f3c66fa1d16300ba750506bfd019a0913cec71ea3"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Generate Invoices"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""e56cbf88-1e0d-4dd7-a269-091ad2ce8420"",
      ""name"": ""Webhook Simulator"",
      ""type"": ""n8n-nodes-base.webhook"",
      ""position"": [
        -240,
        20
      ],
      ""webhookId"": ""7f884a07-861e-49da-bb0e-1ac6ca40ea00"",
      ""parameters"": {
        ""path"": ""7f884a07-861e-49da-bb0e-1ac6ca40ea00"",
        ""options"": {}
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""b01307f7-b5cb-421e-833a-0889925bb09c"",
      ""name"": ""Generate Invoice ID"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        -20,
        20
      ],
      ""parameters"": {
        ""jsCode"": ""function generateOrderID(length = 6) {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  let result = 'INV-';\n  for (let i = 0; i < length; i++) {\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return result;\n}\n\nreturn [\n  {\n    json: {\n      order_id: generateOrderID()\n    }\n  }\n];\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""bf50ca10-4021-4e6f-9c08-56fd84ce13ed"",
      ""name"": ""Check if ID Already Exists"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        200,
        20
      ],
      ""parameters"": {
        ""options"": {},
        ""filtersUI"": {
          ""values"": [
            {
              ""lookupValue"": ""={{ $json.order_id }}"",
              ""lookupColumn"": ""Invoice ID""
            }
          ]
        },
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1QW_Lg1aoEBku8GaxwPbZfBY5ITAuSdvoAXRyNdCEujM/edit#gid=0"",
          ""cachedResultName"": ""Invoices""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1QW_Lg1aoEBku8GaxwPbZfBY5ITAuSdvoAXRyNdCEujM"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1QW_Lg1aoEBku8GaxwPbZfBY5ITAuSdvoAXRyNdCEujM/edit?usp=drivesdk"",
          ""cachedResultName"": ""Uppfy Shop Invoices""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""d0qeLhShx9sGXalR"",
          ""name"": ""Google Sheets""
        }
      },
      ""typeVersion"": 4.5,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""c63871fa-ca0f-4069-ac0d-422d39018a9e"",
      ""name"": ""If Does not Exist"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        420,
        20
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""loose""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""cee7659a-cea3-494a-b4f3-c76d035a3a32"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""empty"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.row_number }}"",
              ""rightValue"": """"
            }
          ]
        },
        ""looseTypeValidation"": true
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""feb9ed84-a62c-4cec-bf36-b53a76711bcd"",
      ""name"": ""Set Fields"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        740,
        -140
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""1bd457b4-2c15-433a-96b3-5fabb8566866"",
              ""name"": ""order_id"",
              ""type"": ""string"",
              ""value"": ""={{ $('Generate Invoice ID').item.json.order_id }}""
            },
            {
              ""id"": ""15c51334-b127-485e-9be4-051b086d74b2"",
              ""name"": ""customer_name"",
              ""type"": ""string"",
              ""value"": ""={{ $('Webhook Simulator').item.json.customer_name }}""
            },
            {
              ""id"": ""8c4f2d5c-09c8-4b8c-a77f-ab3c1d752c13"",
              ""name"": ""customer_email"",
              ""type"": ""string"",
              ""value"": ""={{ $('Webhook Simulator').item.json.customer_email }}""
            },
            {
              ""id"": ""ea1bbfe4-c12d-450f-9bee-fff8710eed42"",
              ""name"": ""products"",
              ""type"": ""array"",
              ""value"": ""={{ $('Webhook Simulator').item.json.products }}""
            },
            {
              ""id"": ""025d0783-7eb0-4ac4-b373-39f744692cfd"",
              ""name"": ""total"",
              ""type"": ""number"",
              ""value"": ""={{ $('Webhook Simulator').item.json.total }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""0532fa4b-cdd9-4857-8701-6a5baf48fd7c"",
      ""name"": ""Create Invoice HTML"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        740,
        100
      ],
      ""parameters"": {
        ""jsCode"": ""const { order_id, customer_name, customer_email, products, total } = $json;\n\n// Format products table rows\nconst productRows = products.map((item, index) => {\n  const subtotal = item.quantity * item.price;\n  return `\n    <tr>\n      <td style=\""padding: 8px; border: 1px solid #ccc;\"">${index + 1}</td>\n      <td style=\""padding: 8px; border: 1px solid #ccc;\"">${item.name}</td>\n      <td style=\""padding: 8px; border: 1px solid #ccc;\"">${item.quantity}</td>\n      <td style=\""padding: 8px; border: 1px solid #ccc;\"">$${item.price.toFixed(2)}</td>\n      <td style=\""padding: 8px; border: 1px solid #ccc;\"">$${subtotal.toFixed(2)}</td>\n    </tr>\n  `;\n}).join('');\n\nconst html = `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\""UTF-8\"">\n  <title>Invoice ${order_id}</title>\n</head>\n<body style=\""font-family: Arial, sans-serif; color: #333; max-width: 700px; margin: auto; padding: 20px; border: 1px solid #ddd;\"">\n  <h2 style=\""text-align: center;\"">Invoice</h2>\n  <p><strong>Order ID:</strong> ${order_id}</p>\n  <p><strong>Customer Name:</strong> ${customer_name}</p>\n  <p><strong>Email:</strong> ${customer_email}</p>\n\n  <table style=\""width: 100%; border-collapse: collapse; margin-top: 20px;\"">\n    <thead>\n      <tr>\n        <th style=\""padding: 8px; border: 1px solid #ccc;\"">#</th>\n        <th style=\""padding: 8px; border: 1px solid #ccc;\"">Product</th>\n        <th style=\""padding: 8px; border: 1px solid #ccc;\"">Qty</th>\n        <th style=\""padding: 8px; border: 1px solid #ccc;\"">Unit Price</th>\n        <th style=\""padding: 8px; border: 1px solid #ccc;\"">Subtotal</th>\n      </tr>\n    </thead>\n    <tbody>\n      ${productRows}\n    </tbody>\n    <tfoot>\n      <tr>\n        <td colspan=\""4\"" style=\""text-align: right; padding: 8px; border: 1px solid #ccc;\""><strong>Total:</strong></td>\n        <td style=\""padding: 8px; border: 1px solid #ccc;\""><strong>$${total.toFixed(2)}</strong></td>\n      </tr>\n    </tfoot>\n  </table>\n\n  <p style=\""margin-top: 40px; text-align: center;\"">Thank you for your order!</p>\n</body>\n</html>\n`;\n\nreturn [\n  {\n    json: {\n      html\n    }\n  }\n];\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""5a3adb6a-9f64-477e-9622-3d2b9ef2e6de"",
      ""name"": ""HTML to PDF"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -20,
        320
      ],
      ""parameters"": {
        ""url"": ""https://html2pdf2.p.rapidapi.com/html2pdf"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""html"",
              ""value"": ""={{ $json.html }}""
            }
          ]
        },
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""x-rapidapi-host"",
              ""value"": ""html2pdf2.p.rapidapi.com""
            },
            {
              ""name"": ""x-rapidapi-key"",
              ""value"": ""\""your_rapid_api_key\""""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""cebf6d0d-d43f-4e50-abc0-79ff8da1817a"",
      ""name"": ""Upload PDF to GDrive"",
      ""type"": ""n8n-nodes-base.googleDrive"",
      ""position"": [
        420,
        320
      ],
      ""parameters"": {
        ""name"": ""={{ $('Set Fields').item.json.order_id }} - {{ $('Set Fields').item.json.customer_name }}"",
        ""driveId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""My Drive""
        },
        ""options"": {},
        ""folderId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""root"",
          ""cachedResultName"": ""/ (Root folder)""
        }
      },
      ""credentials"": {
        ""googleDriveOAuth2Api"": {
          ""id"": ""l8Cc2MEVE7foBfbK"",
          ""name"": ""Google Drive account""
        }
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""b181eddc-e786-4d44-a334-e1b581b3981f"",
      ""name"": ""Email Invoice to Customer"",
      ""type"": ""n8n-nodes-base.emailSend"",
      ""position"": [
        640,
        320
      ],
      ""webhookId"": ""cdc852fc-03b9-4a89-ba56-879064da5cbb"",
      ""parameters"": {
        ""html"": ""=Hello  {{ $('Set Fields').item.json.customer_name }},\n\nPlease pay this invoice\n\n\n{{ $('Create Invoice HTML').item.json.html }}\n\n\n<!DOCTYPE html>\n<html>\n<head>\n    <style>\n        .button {\n            display: inline-block;\n            background-color: #4CAF50;\n            border: none;\n            border-radius: 4px;\n            color: white;\n            padding: 15px 32px;\n            text-align: center;\n            text-decoration: none;\n            font-size: 16px;\n            font-weight: bold;\n            margin: 4px 2px;\n            cursor: pointer;\n            font-family: Arial, sans-serif;\n        }\n    </style>\n</head>\n<body>\n    <div style=\""text-align: center;\"">\n        <a href=\""YOUR_PAYMENT_LINK_HERE\"" class=\""button\"">Pay Now</a>\n    </div>\n</body>\n</html>\n\n"",
        ""options"": {
          ""appendAttribution"": false
        },
        ""subject"": ""={{ $('Set Fields').item.json.order_id }} - New Invoice from Uppfy Shop "",
        ""toEmail"": ""={{ $('Set Fields').item.json.customer_email }}"",
        ""fromEmail"": ""Uppfy Shop <your_from_email>""
      },
      ""credentials"": {
        ""smtp"": {
          ""id"": ""xcnAVXwtuOa1IOqE"",
          ""name"": ""SMTP account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""883e32b6-a812-44c8-b525-97e819af90bd"",
      ""name"": ""Append Details to Invoices Sheet"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        860,
        320
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Status"": ""Unpaid"",
            ""Invoice ID"": ""={{ $('Set Fields').item.json.order_id }}"",
            ""Invoice URL"": ""={{ $('Upload PDF to GDrive').item.json.webViewLink }}"",
            ""Invoice Amt."": ""=${{ $('Set Fields').item.json.total }}"",
            ""Customer Name"": ""={{ $('Set Fields').item.json.customer_name }}"",
            ""Customer Email"": ""={{ $('Set Fields').item.json.customer_email }}""
          },
          ""schema"": [
            {
              ""id"": ""Invoice ID"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Invoice ID"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Customer Name"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Customer Name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Customer Email"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Customer Email"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Invoice Amt."",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Invoice Amt."",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Invoice URL"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Invoice URL"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Status"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Status"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [
            ""Invoice ID""
          ],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""appendOrUpdate"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1QW_Lg1aoEBku8GaxwPbZfBY5ITAuSdvoAXRyNdCEujM/edit#gid=0"",
          ""cachedResultName"": ""Invoices""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1QW_Lg1aoEBku8GaxwPbZfBY5ITAuSdvoAXRyNdCEujM"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1QW_Lg1aoEBku8GaxwPbZfBY5ITAuSdvoAXRyNdCEujM/edit?usp=drivesdk"",
          ""cachedResultName"": ""Uppfy Shop Invoices""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""d0qeLhShx9sGXalR"",
          ""name"": ""Google Sheets""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""cd06d6c9-903d-4af8-8327-eb36ba3bc73a"",
      ""name"": ""Download PDF from API"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        200,
        320
      ],
      ""parameters"": {
        ""url"": "" https://rhodium-tecnologia-html2pdf.s3.amazonaws.com/public/pdfs/1747392997249.pdf"",
        ""options"": {}
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""7d308e22-9b2d-4993-8aad-cc701303d38d"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -280,
        -160
      ],
      ""parameters"": {
        ""width"": 180,
        ""height"": 320,
        ""content"": ""## Pinned Data to Simulate Webhook Query""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {
    ""Webhook Simulator"": [
      {
        ""json"": {
          ""total"": 65,
          ""products"": [
            {
              ""name"": ""T-shirt"",
              ""price"": 25,
              ""quantity"": 2
            },
            {
              ""name"": ""Hat"",
              ""price"": 15,
              ""quantity"": 1
            }
          ],
          ""customer_name"": ""Jane Doe"",
          ""customer_email"": ""jane@example.com""
        }
      }
    ]
  },
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""dec45f2b-cb36-4f86-a8cc-d3c498ae7aa2"",
  ""connections"": {
    ""Set Fields"": {
      ""main"": [
        [
          {
            ""node"": ""Create Invoice HTML"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""HTML to PDF"": {
      ""main"": [
        [
          {
            ""node"": ""Download PDF from API"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""If Does not Exist"": {
      ""main"": [
        [
          {
            ""node"": ""Set Fields"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Generate Invoice ID"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Webhook Simulator"": {
      ""main"": [
        [
          {
            ""node"": ""Generate Invoice ID"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Create Invoice HTML"": {
      ""main"": [
        [
          {
            ""node"": ""HTML to PDF"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Generate Invoice ID"": {
      ""main"": [
        [
          {
            ""node"": ""Check if ID Already Exists"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Upload PDF to GDrive"": {
      ""main"": [
        [
          {
            ""node"": ""Email Invoice to Customer"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Download PDF from API"": {
      ""main"": [
        [
          {
            ""node"": ""Upload PDF to GDrive"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Email Invoice to Customer"": {
      ""main"": [
        [
          {
            ""node"": ""Append Details to Invoices Sheet"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Check if ID Already Exists"": {
      ""main"": [
        [
          {
            ""node"": ""If Does not Exist"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Real-time Crypto News & Sentiment Analysis via Telegram with GPT-4o,"{
  ""id"": ""8v4dynjkHSLVGJSG"",
  ""meta"": {
    ""instanceId"": ""a5283507e1917a33cc3ae615b2e7d5ad2c1e50955e6f831272ddd5ab816f3fb6"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Crypto News & Sentiment"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""e10ed4da-ab3e-4ff0-b489-a3ed9e88e042"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        -1340,
        1520
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""yUizd8t0sD5wMYVG"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""edb76989-766a-43e6-bf49-3896a1d257dd"",
      ""name"": ""Set Query"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -780,
        1340
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""9128e9e7-d1b8-4e89-8422-849b8dd519d8"",
              ""name"": ""query"",
              ""type"": ""string"",
              ""value"": ""={{ $json.output }}""
            },
            {
              ""id"": ""b6adc989-7d3c-4dbb-a659-603591cf1f58"",
              ""name"": ""sessionId"",
              ""type"": ""string"",
              ""value"": ""={{ $('Adds the sessionId').item.json.sessionId }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""0ef0571a-d0c2-4f05-898e-1aed56b02d56"",
      ""name"": ""Crypto News & Sentiment Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        -1280,
        1340
      ],
      ""parameters"": {
        ""text"": ""={{ $('Send Crypto or Company Name for Analysis').item.json.message.text }}"",
        ""options"": {
          ""systemMessage"": ""Your job is to analyze the keyword of the question and output it as a single word.""
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""8f7859fa-e80c-4c0e-b8b5-5593d5108f5f"",
      ""name"": ""RSS Cointelegraph"",
      ""type"": ""n8n-nodes-base.rssFeedRead"",
      ""position"": [
        -160,
        500
      ],
      ""parameters"": {
        ""url"": ""https://cointelegraph.com/rss"",
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""5ce9dc61-de8e-4b3a-a0e2-4c077a28e0d4"",
      ""name"": ""RSS Bitcoinmagazine"",
      ""type"": ""n8n-nodes-base.rssFeedRead"",
      ""position"": [
        -160,
        660
      ],
      ""parameters"": {
        ""url"": ""https://bitcoinmagazine.com/.rss/full/"",
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""d2491728-8a51-4384-adfa-8636f8d8cacd"",
      ""name"": ""RSS Coindesk"",
      ""type"": ""n8n-nodes-base.rssFeedRead"",
      ""position"": [
        -160,
        820
      ],
      ""parameters"": {
        ""url"": ""https://www.coindesk.com/arc/outboundfeeds/rss/"",
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""60b17a68-b7b0-444f-8bbc-4d9ccfba6892"",
      ""name"": ""RSS Bitcoinist"",
      ""type"": ""n8n-nodes-base.rssFeedRead"",
      ""position"": [
        -160,
        980
      ],
      ""parameters"": {
        ""url"": ""https://bitcoinist.com/feed/"",
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""82b50de0-68a7-4660-b6d9-fa01922c2492"",
      ""name"": ""RSS Newsbtc"",
      ""type"": ""n8n-nodes-base.rssFeedRead"",
      ""position"": [
        -160,
        1140
      ],
      ""parameters"": {
        ""url"": ""https://www.newsbtc.com/feed/"",
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""90f9a5be-8eb2-4073-9c18-50478ba4890b"",
      ""name"": ""RSS Cryptopotato"",
      ""type"": ""n8n-nodes-base.rssFeedRead"",
      ""position"": [
        -160,
        1500
      ],
      ""parameters"": {
        ""url"": ""https://cryptopotato.com/feed/"",
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""6428c19d-c66c-4577-b6ca-8c0c82a757fa"",
      ""name"": ""RSS 99bitcoins"",
      ""type"": ""n8n-nodes-base.rssFeedRead"",
      ""position"": [
        -160,
        1680
      ],
      ""parameters"": {
        ""url"": ""https://99bitcoins.com/feed/"",
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""b2fc6584-cd64-4b90-91cf-b9bfdc483203"",
      ""name"": ""RSS Cryptobriefing"",
      ""type"": ""n8n-nodes-base.rssFeedRead"",
      ""position"": [
        -160,
        1860
      ],
      ""parameters"": {
        ""url"": ""https://cryptobriefing.com/feed/"",
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""8be5859b-bb82-4ece-9aa5-5bfbc27e4cca"",
      ""name"": ""RSS Crypto.news"",
      ""type"": ""n8n-nodes-base.rssFeedRead"",
      ""position"": [
        -160,
        2020
      ],
      ""parameters"": {
        ""url"": ""https://crypto.news/feed/"",
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""b5f393de-a3da-47a4-8a19-ebf53c29051d"",
      ""name"": ""Merge All Articles"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        520,
        1180
      ],
      ""parameters"": {
        ""numberInputs"": 10
      },
      ""typeVersion"": 3.1
    },
    {
      ""id"": ""ce4da50f-ecff-4d13-a90d-e62db6bc3ef9"",
      ""name"": ""Filter by Query"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        760,
        1320
      ],
      ""parameters"": {
        ""jsCode"": ""const term = $node[\""Set Query\""].json.query.toLowerCase();\nreturn items.filter(item => {\n  const j            = item.json;\n  const title        = (j.title || \""\"").toLowerCase();\n  const snippet      = (j.contentSnippet || j.description || \""\"").toLowerCase();\n  const fullContent  = (j.content || \""\"").toLowerCase();\n  return title.includes(term)\n      || snippet.includes(term)\n      || fullContent.includes(term);\n});""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""566e842f-8e2c-491c-87b5-5f1d322a9de8"",
      ""name"": ""Build Prompt"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        1080,
        1320
      ],
      ""parameters"": {
        ""jsCode"": ""const q   = $node[\""Set Query\""].json.query;\nconst list = items\n  .map(i => `- ${i.json.title} (${i.json.link})`)\n  .join(\""\\n\"");\nconst prompt = `\nYou are a crypto-industry news analyst.\nSummarize current news and market sentiment for **${q}** based on these articles:\n${list}\n\nAnswer in 3 parts:\n1. Summary of News\n2. Market Sentiment\n3. Links to reference news articles\n`;\nreturn [{ json: { prompt } }];""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""2f5b2eb5-bc2e-432d-b0c8-44c6822b831b"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2080,
        1020
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 300,
        ""height"": 580,
        ""content"": ""## Send Telegram Response\n\nSends the final AI-generated summary to the user.\n⚠️ Replace chatId with a dynamic value like << Telegram ID here >> to ensure it sends to the right user.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d9f178d6-b834-4a18-b8a5-ab1261b99ca6"",
      ""name"": ""Adds the sessionId"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -1740,
        1340
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""87c63e75-94e4-432c-b15f-8762aa340215"",
              ""name"": ""sessionId"",
              ""type"": ""string"",
              ""value"": ""={{ $json.message.chat.id }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""4dd3e531-ab2a-4930-a127-08adb5bde409"",
      ""name"": ""Summarize News & Sentiment (GPT-4o)"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        1360,
        1320
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o"",
          ""cachedResultName"": ""GPT-4O""
        },
        ""options"": {},
        ""messages"": {
          ""values"": [
            {
              ""content"": ""={{ $node[\""Build Prompt\""].json.prompt }}""
            },
            {
              ""role"": ""assistant"",
              ""content"": ""You are a crypto‐industry news analyst. Summarize sentiment clearly and concisely.""
            }
          ]
        }
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""yUizd8t0sD5wMYVG"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""b0da1d25-9c17-49a1-85f4-82425e7c9f91"",
      ""name"": ""Prepare Telegram Message"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1780,
        1320
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""565fb705-ac83-4a96-9343-2e29e348cc4f"",
              ""name"": ""summary"",
              ""type"": ""string"",
              ""value"": ""={{ $json.message.content }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""95cb909b-51f4-4661-9db5-e8181a7efffe"",
      ""name"": ""Sends Response"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        2180,
        1320
      ],
      ""webhookId"": ""8018c16f-426e-4a8b-8fbf-55cc013d1226"",
      ""parameters"": {
        ""text"": ""={{ $json.summary }}"",
        ""chatId"": ""<< Add Telegram ID here >>"",
        ""additionalFields"": {
          ""appendAttribution"": false
        }
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""YDlV4LtcNcmNqk4y"",
          ""name"": ""Crypto_News_and_Sentiment_bot""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""a783bddf-7d70-4345-88f3-c474a50bdea0"",
      ""name"": ""Send Crypto or Company Name for Analysis"",
      ""type"": ""n8n-nodes-base.telegramTrigger"",
      ""position"": [
        -2180,
        1340
      ],
      ""webhookId"": ""37a1f055-1670-472d-9850-d89555b7ed47"",
      ""parameters"": {
        ""updates"": [
          ""message""
        ],
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""YDlV4LtcNcmNqk4y"",
          ""name"": ""Crypto_News_and_Sentiment_bot""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""d847a178-c0f2-482b-8773-ac0362435dfd"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -2320,
        1200
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 380,
        ""height"": 360,
        ""content"": ""## Telegram Setup \nThis bot listens for incoming messages in Telegram. To use it, create a bot with @BotFather and paste your bot token into the credentials.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""75ee14cf-6236-4f45-b864-b422f18c8214"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1860,
        1220
      ],
      ""parameters"": {
        ""width"": 360,
        ""height"": 320,
        ""content"": ""## Initialize Chat Session\nStores the user's chat ID as sessionId, which is used to manage conversation memory across steps.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""674f2555-752d-4ffc-894c-efd705f32887"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1440,
        1200
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 600,
        ""height"": 460,
        ""content"": ""##  Extract Keyword \nThis AI agent parses the user input and returns a single-word keyword to help match relevant news articles.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""bece27b1-bc60-44f7-bdc9-6ec61f7a2e5b"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -320,
        300
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 460,
        ""height"": 1980,
        ""content"": ""## News Aggregators\nPulls articles from major crypto news sources. You can add more RSS feeds here to expand coverage.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""7f7a2949-4147-4ab9-bb52-99c1bb2205ed"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        440,
        980
      ],
      ""parameters"": {
        ""color"": 2,
        ""width"": 480,
        ""height"": 760,
        ""content"": ""## Merge & Filter News\nCombines all RSS articles and filters them using the extracted keyword to match only relevant results.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d19d53c0-7d23-4ccb-9a68-dc2855e5b73d"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1000,
        1140
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 260,
        ""height"": 360,
        ""content"": ""## Prepare AI Prompt\nConstructs the input prompt for GPT-4o with a list of filtered articles. Output includes summary, sentiment, and article links.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""17607891-ed84-4cca-ad3d-c398e5652a8c"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1320,
        1100
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 340,
        ""height"": 440,
        ""content"": ""## Summarize News & Sentiment (GPT-4o)\nUses OpenAI GPT-4o to generate a concise summary of the news, analyze market sentiment, and return formatted results.\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9d47eb56-4469-4f42-84a1-6f76bb7fa598"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1720,
        1060
      ],
      ""parameters"": {
        ""color"": 6,
        ""height"": 460,
        ""content"": ""## Format for Telegram\n\nExtracts the AI summary and prepares it for Telegram delivery. Change the variable if you want to include other data.\n\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""7c02860b-f865-4ff9-baeb-0903a76278d9"",
      ""name"": ""Sticky Note9"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1140,
        320
      ],
      ""parameters"": {
        ""width"": 520,
        ""content"": ""## ✅ How to Use This Template\n \n🛠 1. Connect your Telegram bot\n🤖 2. Add your OpenAI credentials\n📰 3. Customize the RSS feeds (optional)\n✅ 4. Start your bot and send a query like “Bitcoin” or “NFT”""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""ae250264-5df8-4341-b198-5272baeadc38"",
  ""connections"": {
    ""Set Query"": {
      ""main"": [
        [
          {
            ""node"": ""RSS Cointelegraph"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""RSS Bitcoinmagazine"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""RSS Coindesk"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""RSS Bitcoinist"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""RSS Newsbtc"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""RSS Cryptopotato"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""RSS 99bitcoins"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""RSS Cryptobriefing"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""RSS Crypto.news"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""RSS Newsbtc"": {
      ""main"": [
        [
          {
            ""node"": ""Merge All Articles"",
            ""type"": ""main"",
            ""index"": 4
          }
        ]
      ]
    },
    ""Build Prompt"": {
      ""main"": [
        [
          {
            ""node"": ""Summarize News & Sentiment (GPT-4o)"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""RSS Coindesk"": {
      ""main"": [
        [
          {
            ""node"": ""Merge All Articles"",
            ""type"": ""main"",
            ""index"": 2
          }
        ]
      ]
    },
    ""RSS 99bitcoins"": {
      ""main"": [
        [
          {
            ""node"": ""Merge All Articles"",
            ""type"": ""main"",
            ""index"": 7
          }
        ]
      ]
    },
    ""RSS Bitcoinist"": {
      ""main"": [
        [
          {
            ""node"": ""Merge All Articles"",
            ""type"": ""main"",
            ""index"": 3
          }
        ]
      ]
    },
    ""Filter by Query"": {
      ""main"": [
        [
          {
            ""node"": ""Build Prompt"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""RSS Crypto.news"": {
      ""main"": [
        [
          {
            ""node"": ""Merge All Articles"",
            ""type"": ""main"",
            ""index"": 9
          }
        ]
      ]
    },
    ""RSS Cryptopotato"": {
      ""main"": [
        [
          {
            ""node"": ""Merge All Articles"",
            ""type"": ""main"",
            ""index"": 6
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Crypto News & Sentiment Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""RSS Cointelegraph"": {
      ""main"": [
        [
          {
            ""node"": ""Merge All Articles"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Adds the sessionId"": {
      ""main"": [
        [
          {
            ""node"": ""Crypto News & Sentiment Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Merge All Articles"": {
      ""main"": [
        [
          {
            ""node"": ""Filter by Query"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""RSS Cryptobriefing"": {
      ""main"": [
        [
          {
            ""node"": ""Merge All Articles"",
            ""type"": ""main"",
            ""index"": 8
          }
        ]
      ]
    },
    ""RSS Bitcoinmagazine"": {
      ""main"": [
        [
          {
            ""node"": ""Merge All Articles"",
            ""type"": ""main"",
            ""index"": 1
          }
        ]
      ]
    },
    ""Prepare Telegram Message"": {
      ""main"": [
        [
          {
            ""node"": ""Sends Response"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Crypto News & Sentiment Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Set Query"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Summarize News & Sentiment (GPT-4o)"": {
      ""main"": [
        [
          {
            ""node"": ""Prepare Telegram Message"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Send Crypto or Company Name for Analysis"": {
      ""main"": [
        [
          {
            ""node"": ""Adds the sessionId"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
AI-Powered Invoice Data Extraction from Email PDFs to Airtable with GPT-4o,"{
  ""meta"": {
    ""instanceId"": ""c8c9ba5d3eb26ae47a06d24ff164a01c0d73ed4753a74903c2bb609d434a0f6b"",
    ""templateId"": ""2320"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""7076854e-c7e8-45b5-9e5e-16678bffa254"",
      ""name"": ""OpenAI Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmOpenAi"",
      ""position"": [
        1120,
        1460
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o"",
          ""cachedResultName"": ""gpt-4o""
        },
        ""options"": {
          ""temperature"": 0
        }
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""IscXryYQZrfSUSkH"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""00819f1c-2c60-4b7c-b395-445ec05fd898"",
      ""name"": ""Structured Output Parser"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserStructured"",
      ""position"": [
        1300,
        1460
      ],
      ""parameters"": {
        ""jsonSchema"": ""{\n  \""Invoice Date\"":            { \""type\"": \""string\"", \""format\"": \""date\"" },\n\""Due Date\"":            { \""type\"": \""string\"", \""format\"": \""date\"" },\n  \""Invoice Number\"":          { \""type\"": \""string\"" },\n  \""Vendor Name\"":           { \""type\"": \""string\"" },\n  \""Vendor Tax ID\"":         { \""type\"": \""string\"" },\n  \""Product Name\"": { \""type\"": \""string\"" },\n  \""Price without Tax\"":       { \""type\"": \""number\"" },\n  \""Price with Tax\"":          { \""type\"": \""number\"" }\n}""
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""1acf2c60-c2b9-4f78-94a4-0711c8bd71ab"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -200,
        180
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 760,
        ""height"": 533,
        ""content"": ""# Invoice Processing Automation\n\n### This template is the automation behind a simple incoming invoice automation tool (AP automation) tool built in Airtable.\n\n### Follow the instructions below to get all parts working!\n\n## Video walkthrough and demo: https://www.youtube.com/watch?v=rfu4MSvtpAw\n\n## To get a similar business tool tailored to your processes, book a call with us: https://automable.ai/book-a-call/, or write to me at: vasarmilan@gmail.com\n\n# **Step by step setup instructions below: ⬇️⬇️**""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""5f9b507f-4dc1-4853-bf71-a64f2f4b55c1"",
      ""name"": ""Map Output"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1460,
        1300
      ],
      ""parameters"": {
        ""mode"": ""raw"",
        ""options"": {},
        ""jsonOutput"": ""={{ $json.output }}""
      },
      ""typeVersion"": 3.3
    },
    {
      ""id"": ""d22744cd-151d-4b92-b4f2-4a5b9ceb4ee7"",
      ""name"": ""Apply Data Extraction Rules"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        1120,
        1300
      ],
      ""parameters"": {
        ""text"": ""=Given the following invoice in the <invoice> xml tags, extract the following information as listed below.\n\nIf you cannot the information for a specific item, then leave blank and skip to the next. Do **not come up with example or hallucinated information in any case!**\n\nInvoice Date format: YYYY/MM/DD\n\n{\n  \""Invoice Date\"":            { \""type\"": \""string\"", \""format\"": \""date\"" },\n  \""Due Date\"":            { \""type\"": \""string\"", \""format\"": \""date\"" },\n  \""Invoice Number\"":          { \""type\"": \""string\"" },\n  \""Vendor Name\"":           { \""type\"": \""string\"" },\n  \""Vendor Tax ID\"":         { \""type\"": \""string\"" },\n  \""Product Name\"": { \""type\"": \""string\"" },\n  \""Price without Tax\"":       { \""type\"": \""number\"" },\n  \""Price with Tax\"":          { \""type\"": \""number\"" }\n}\n\nIf no tax displayed, price with and without should be the same!\n\n<invoice>{{ $json.choices[0].message.content }}</invoice>"",
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.4
    },
    {
      ""id"": ""31b27190-bf01-4d2a-82ad-621e89bfbf6f"",
      ""name"": ""Gmail1"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        960,
        600
      ],
      ""webhookId"": ""3561fdfa-c7bd-4d8b-a4c8-66da23965cc2"",
      ""parameters"": {
        ""simple"": false,
        ""filters"": {
          ""q"": ""in:inbox has:attachment invoice -label:invoice_checked ""
        },
        ""options"": {
          ""downloadAttachments"": true
        },
        ""operation"": ""getAll""
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""E3alb5H7xlfxfBur"",
          ""name"": ""Automable Demo Gmail""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""955fd212-11f7-4b2d-8e5c-a297509cbf08"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        900,
        440
      ],
      ""parameters"": {
        ""width"": 230,
        ""height"": 280,
        ""content"": ""Gets all messages that:\n1) Have an attachment\n2) Do not have the label invoice_checked\n3) Text matches invoice""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""712495a2-0c3d-452b-bd10-b19f6bea2178"",
      ""name"": ""Get all img_url"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1760,
        600
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""7715e33a-c5cc-4a22-aa28-ac19a24bbd7c"",
              ""name"": ""url"",
              ""type"": ""string"",
              ""value"": ""={{ $json.Url }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""caa879e0-54c5-40c8-83b2-b59b1b74af67"",
      ""name"": ""Analyze image"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        800,
        1300
      ],
      ""parameters"": {
        ""text"": ""You can see the image of an invoice.\n\nExtract the following information as listed below.\n\nIn any way, extract everything from the image.\n\nIf you cannot the information for a specific item, then leave blank and skip to the next. Do **not come up with example or hallucinated information in any case!**\n\nInvoice date\nInvoice Due Date\n-- comment: sometimes instead of an explicit date it would have \""immediate\"" payment, then it's the same as date; or eg. \""30 days from receipt\"" in which case it's date + 30 days etc.)\ninvoice number\nSupplier name\nSupplier Tax ID\nName of Product or Service (if there are multiple, make it a general name, such as \""marketing services\"" or \""computer parts and accessories\"")\nPrice without Tax\nPrice with Tax (total price)\nIf no tax displayed, price with and without should be the same!\n\nRespond in a nice structured, easy to read format.\n"",
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o"",
          ""cachedResultName"": ""GPT-4O""
        },
        ""options"": {},
        ""resource"": ""image"",
        ""simplify"": false,
        ""imageUrls"": ""={{ $('Get image data').item.json.Url }}"",
        ""operation"": ""analyze""
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""IscXryYQZrfSUSkH"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""b0052237-4129-460f-ae38-69680760c78b"",
      ""name"": ""Get image data"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        1500,
        600
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""Files""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""f7752ed2-5497-42a9-ab41-4fcee7faf52a"",
      ""name"": ""PDF -> JPG - ConvertAPI"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1260,
        600
      ],
      ""parameters"": {
        ""url"": ""https://v2.convertapi.com/convert/pdf/to/jpg"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""contentType"": ""multipart-form-data"",
        ""sendHeaders"": true,
        ""authentication"": ""genericCredentialType"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""StoreFile"",
              ""value"": ""true""
            },
            {
              ""name"": ""ImageOutputFormat"",
              ""value"": ""jpg""
            },
            {
              ""name"": ""File"",
              ""parameterType"": ""formBinaryData"",
              ""inputDataFieldName"": ""attachment_0""
            }
          ]
        },
        ""genericAuthType"": ""httpHeaderAuth"",
        ""headerParameters"": {
          ""parameters"": [
            {}
          ]
        }
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""sRBpsZNt4u2787GP"",
          ""name"": ""ConvertAPI Auth""
        }
      },
      ""retryOnFail"": true,
      ""typeVersion"": 4.2,
      ""waitBetweenTries"": 5000
    },
    {
      ""id"": ""0625e6f0-d8ed-469e-a551-e82225a97144"",
      ""name"": ""Get list of vendors"",
      ""type"": ""n8n-nodes-base.airtable"",
      ""position"": [
        1160,
        900
      ],
      ""parameters"": {
        ""base"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""appFMuGzhsUxbFKUh"",
          ""cachedResultUrl"": ""https://airtable.com/appFMuGzhsUxbFKUh"",
          ""cachedResultName"": ""Invoice Processing""
        },
        ""table"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""tblDSjYz7MBFPh0PR"",
          ""cachedResultUrl"": ""https://airtable.com/appFMuGzhsUxbFKUh/tblDSjYz7MBFPh0PR"",
          ""cachedResultName"": ""Vendors""
        },
        ""options"": {},
        ""operation"": ""search""
      },
      ""credentials"": {
        ""airtableTokenApi"": {
          ""id"": ""lkxZWCd27TyEahCT"",
          ""name"": ""Airtable Personal Access Token account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""6d808c56-0449-43c8-afdb-2097a240ef87"",
      ""name"": ""Merge"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        1620,
        880
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""combineBy"": ""combineAll""
      },
      ""typeVersion"": 3.1
    },
    {
      ""id"": ""c7d36fae-d497-4ed2-be0f-2b2a699fb9f6"",
      ""name"": ""Edit Fields"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1360,
        900
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""d8a97fc9-0ca8-4a27-a305-107409755d78"",
              ""name"": ""vendors"",
              ""type"": ""array"",
              ""value"": ""={{ $input.all().map(({ json: { id, Name } }) => ({ id, Name })) }}""
            }
          ]
        }
      },
      ""executeOnce"": true,
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""69fbdb0d-8eff-4de2-bb9c-8261ebe7f67a"",
      ""name"": ""Information Extractor"",
      ""type"": ""@n8n/n8n-nodes-langchain.informationExtractor"",
      ""position"": [
        1840,
        1400
      ],
      ""parameters"": {
        ""text"": ""=List of vendors:\n{{ JSON.stringify($json.vendors) }}\n\nVendor info from the invoice:\nVendor name: {{ $json['Vendor Name'] }}\nVendor Tax ID: {{ $json['Vendor Tax ID'] }}\n\nRespond **only** with the "",
        ""options"": {
          ""systemPromptTemplate"": ""You are an expert extraction algorithm.\nOnly extract relevant information from the text.\nIf you do not know the value of an attribute asked to extract, you may omit the attribute's value.""
        },
        ""attributes"": {
          ""attributes"": [
            {
              ""name"": ""vendor_id"",
              ""required"": true,
              ""description"": ""Vendor ID. Or empty string (\""\"") if there is no match.""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""134cb237-5500-4575-802a-ae8759104f92"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        1860,
        1580
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o"",
          ""cachedResultName"": ""gpt-4o""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""IscXryYQZrfSUSkH"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""4b32647c-1521-4279-8223-dbbc1c1eb714"",
      ""name"": ""Merge1"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        2380,
        780
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""combineBy"": ""combineByPosition"",
        ""numberInputs"": 3
      },
      ""typeVersion"": 3.1
    },
    {
      ""id"": ""6ad25f9f-f1e5-4468-9862-b0c93bc9b19d"",
      ""name"": ""Airtable"",
      ""type"": ""n8n-nodes-base.airtable"",
      ""position"": [
        2620,
        780
      ],
      ""parameters"": {
        ""base"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""appFMuGzhsUxbFKUh"",
          ""cachedResultUrl"": ""https://airtable.com/appFMuGzhsUxbFKUh"",
          ""cachedResultName"": ""Invoice Processing""
        },
        ""table"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""tblc95K9ITUgglNIC"",
          ""cachedResultUrl"": ""https://airtable.com/appFMuGzhsUxbFKUh/tblc95K9ITUgglNIC"",
          ""cachedResultName"": ""Invoices""
        },
        ""columns"": {
          ""value"": {
            ""Vendor"": ""={{[ $json.output.vendor_id  ]}}"",
            ""Invoice"": ""={{ [ { url: $json.url }] }}"",
            ""Due Date"": ""={{ $json['Due Date'] || null }}"",
            ""Invoice Date"": ""={{ $json['Invoice Date'] }}"",
            ""Product Name"": ""={{ $json['Product Name'] }}"",
            ""Invoice Number"": ""=Invoice {{ $json['Invoice Number'] }}"",
            ""Price with Tax"": ""={{ $json['Price with Tax'] }}"",
            ""Price without Tax"": ""={{ $json['Price without Tax'] }}""
          },
          ""schema"": [
            {
              ""id"": ""id"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""readOnly"": true,
              ""required"": false,
              ""displayName"": ""id"",
              ""defaultMatch"": true
            },
            {
              ""id"": ""Invoice Number"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Invoice Number"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Invoice Date"",
              ""type"": ""dateTime"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Invoice Date"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Due Date"",
              ""type"": ""dateTime"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Due Date"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Product Name"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Product Name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Price without Tax"",
              ""type"": ""number"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Price without Tax"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Price with Tax"",
              ""type"": ""number"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Price with Tax"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Vendor"",
              ""type"": ""array"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Vendor"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Vendor Name"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""readOnly"": true,
              ""required"": false,
              ""displayName"": ""Vendor Name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Invoice"",
              ""type"": ""array"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Invoice"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Approve"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""readOnly"": true,
              ""required"": false,
              ""displayName"": ""Approve"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Status"",
              ""type"": ""options"",
              ""display"": true,
              ""options"": [
                {
                  ""name"": ""New"",
                  ""value"": ""New""
                },
                {
                  ""name"": ""Approved"",
                  ""value"": ""Approved""
                }
              ],
              ""removed"": true,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Status"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [
            ""Invoice Number""
          ],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {
          ""typecast"": true
        },
        ""operation"": ""upsert""
      },
      ""credentials"": {
        ""airtableTokenApi"": {
          ""id"": ""lkxZWCd27TyEahCT"",
          ""name"": ""Airtable Personal Access Token account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""9e775f8d-4af5-4212-8c65-36e3e5c161f2"",
      ""name"": ""Gmail Trigger"",
      ""type"": ""n8n-nodes-base.gmailTrigger"",
      ""position"": [
        720,
        600
      ],
      ""parameters"": {
        ""filters"": {},
        ""pollTimes"": {
          ""item"": [
            {
              ""mode"": ""everyHour""
            }
          ]
        }
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""duhSaIumY2CifCex"",
          ""name"": ""Gmail account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""39afb11e-f98a-4d50-b31c-4b1806b6e483"",
      ""name"": ""Gmail"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        2820,
        780
      ],
      ""webhookId"": ""9857fdd5-0c41-4b6f-80c2-2dba8dd3a086"",
      ""parameters"": {
        ""labelIds"": [
          ""Label_292293622344874549""
        ],
        ""messageId"": ""={{ $('Gmail1').item.json.id }}"",
        ""operation"": ""addLabels""
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""E3alb5H7xlfxfBur"",
          ""name"": ""Automable Demo Gmail""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""ce68d5b8-1532-459f-b6fe-33f46e3f9186"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -200,
        740
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 440,
        ""height"": 460,
        ""content"": ""# *1. Set up Airtable*\n\n## 1 - [Register an Airtable account here](https://airtable.partnerlinks.io/xfs4x6q28m4x)\n\n## 2 - Duplicate [this base](https://airtable.com/appFMuGzhsUxbFKUh/shrOP5l52wxZ5IYSI)\n\n## 3 - Follow the [n8n Airtable credential instructions](https://docs.n8n.io/integrations/builtin/credentials/airtable/). PAT is better. Add the credential to the Airtable nodes.\n\n## 4 - Click to both Airtable nodes on the right, and choose the table on the yellow note ➡️➡️""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""89c5f457-fe92-43d2-b4ca-7cd5624f5cb1"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -200,
        1220
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 440,
        ""height"": 420,
        ""content"": ""# 2. Set Up ConvertAPI\n\n## 1 - [Register a ConvertAPI account here](https://convertapi.com?ref=cq5du)\n\n## 2 - Get an API key, and save it somewhere safe\n\n## 3 - Create a Header Auth credential in Credentials, and add it to the \""PDF -> JPG - ConvertAPI\"" Node in the automation.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""896d3cd8-079e-4976-ae6b-61b73cd8c100"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2560,
        680
      ],
      ""parameters"": {
        ""height"": 100,
        ""content"": ""### TODO: Change the Base to the duplicated base, and the table to \""Invoices\""""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""92a526d0-c116-4b1e-9ad2-5c1f45e0a6b8"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1100,
        1040
      ],
      ""parameters"": {
        ""height"": 100,
        ""content"": ""### TODO: Change the Base to the duplicated base, and the table to \""Vendors\""""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""f4635b8b-25d5-4e23-af98-0d2d25040d90"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -200,
        1660
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 440,
        ""height"": 420,
        ""content"": ""# 3. Set up Gmail\n\n## 1 - Create the \""invoice_checked\"" label\n\n## 2 - [Follow the instructions](https://docs.n8n.io/integrations/builtin/credentials/google/oauth-single-service/#finish-your-n8n-credential) by n8n to set this up. Video available at the end of the article\n\n## 3 - Choose your Gmail credentials, and add to all Gmail nodes if needed.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""903f5ee9-fde9-4225-949f-d02b0e820bbd"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -200,
        2100
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 440,
        ""height"": 220,
        ""content"": ""# 4. Set up OpenAI\n\n## Follow the [n8n instructions](https://docs.n8n.io/integrations/builtin/credentials/openai/) to connect your OpenAI platform account.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""58c3cdaf-3912-40d3-9b95-8b610ae95540"",
      ""name"": ""Sticky Note9"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1180,
        520
      ],
      ""parameters"": {
        ""height"": 100,
        ""content"": ""### TODO: Add the ConvertAPI Header Auth""
      },
      ""typeVersion"": 1
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""Merge"": {
      ""main"": [
        [
          {
            ""node"": ""Information Extractor"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Gmail1"": {
      ""main"": [
        [
          {
            ""node"": ""PDF -> JPG - ConvertAPI"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Merge1"": {
      ""main"": [
        [
          {
            ""node"": ""Airtable"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Airtable"": {
      ""main"": [
        [
          {
            ""node"": ""Gmail"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Map Output"": {
      ""main"": [
        [
          {
            ""node"": ""Merge"",
            ""type"": ""main"",
            ""index"": 1
          },
          {
            ""node"": ""Merge1"",
            ""type"": ""main"",
            ""index"": 2
          }
        ]
      ]
    },
    ""Edit Fields"": {
      ""main"": [
        [
          {
            ""node"": ""Merge"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Apply Data Extraction Rules"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Analyze image"": {
      ""main"": [
        [
          {
            ""node"": ""Apply Data Extraction Rules"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Gmail Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""Gmail1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get image data"": {
      ""main"": [
        [
          {
            ""node"": ""Get all img_url"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get all img_url"": {
      ""main"": [
        [
          {
            ""node"": ""Analyze image"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Merge1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Information Extractor"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get list of vendors"": {
      ""main"": [
        [
          {
            ""node"": ""Edit Fields"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Information Extractor"": {
      ""main"": [
        [
          {
            ""node"": ""Merge1"",
            ""type"": ""main"",
            ""index"": 1
          }
        ]
      ]
    },
    ""PDF -> JPG - ConvertAPI"": {
      ""main"": [
        [
          {
            ""node"": ""Get image data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Structured Output Parser"": {
      ""ai_outputParser"": [
        [
          {
            ""node"": ""Apply Data Extraction Rules"",
            ""type"": ""ai_outputParser"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Apply Data Extraction Rules"": {
      ""main"": [
        [
          {
            ""node"": ""Map Output"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Tesla Quant Trading AI Agent using Telegram + GPT-4.1 (Main InterFace),"{
  ""id"": ""YtPhfFCx9D9Eq9zi"",
  ""meta"": {
    ""instanceId"": ""a5283507e1917a33cc3ae615b2e7d5ad2c1e50955e6f831272ddd5ab816f3fb6"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Tesla Quant Trading AI Agent n8n"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""8677aed4-a1bf-4439-8b5e-57c283f81862"",
      ""name"": ""Telegram Trigger"",
      ""type"": ""n8n-nodes-base.telegramTrigger"",
      ""position"": [
        -560,
        -100
      ],
      ""webhookId"": ""721eba88-462f-40ab-8c53-c6c2f3897e11"",
      ""parameters"": {
        ""updates"": [
          ""message""
        ],
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""FH5VC4KOy7sBQBc0"",
          ""name"": ""Dad's Tesla AI Agent""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""fddcfaab-f575-4e72-b3f1-e0965e3c71b5"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        140,
        260
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""yUizd8t0sD5wMYVG"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""f6e5726a-1010-4a55-9d54-f6889eb780e1"",
      ""name"": ""Telegram"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        1380,
        -100
      ],
      ""webhookId"": ""77b6658d-8dfb-415b-9e67-4f34ef086cdb"",
      ""parameters"": {
        ""text"": ""={{ $json.message }}"",
        ""chatId"": ""={{ $('Telegram Trigger').item.json.message.chat.id }}"",
        ""additionalFields"": {
          ""appendAttribution"": false
        }
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""FH5VC4KOy7sBQBc0"",
          ""name"": ""Dad's Tesla AI Agent""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""62f3f30c-47e4-4c86-828b-3ab4de28e6c3"",
      ""name"": ""User Authentication (Replace Telegram ID)"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        -300,
        -100
      ],
      ""parameters"": {
        ""jsCode"": ""if ($input.first().json.message.from.id !== <<replace your ID here>>) { // Replace with your actual ID\n  return {unauthorized: true};\n} else {\n  // Return the original data when authorized\n  return $input.all();\n}""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""5a79ae5f-583d-41a0-9055-914de6eaf341"",
      ""name"": ""Tesla Quant Trading AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        520,
        -100
      ],
      ""parameters"": {
        ""text"": ""={{ $('Telegram Trigger').item.json.message.text }}"",
        ""options"": {
          ""systemMessage"": ""You are the **Tesla Quant Trading AI Agent**, responsible for generating structured, professional swing-trading reports for **TSLA** based on both **real-time technical analysis** and **curated sentiment data**.\n\n---\n\n### 🔗 Connected Tools:\n\n1. **Tesla Financial Market Data Analyst Tool**  \n   - Aggregates multi-timeframe indicators + candlestick signals from:\n     • Tesla 15min Indicators Tool  \n     • Tesla 1h Indicators Tool  \n     • Tesla 1d Indicators Tool  \n     • Tesla Klines Tool (1h & 1d pattern/volume)  \n   - Uses Alpha Vantage indicators: **RSI, BBANDS, SMA, EMA, ADX, MACD**  \n   - Each tool returns the **20 most recent points**, cleaned and trimmed  \n   - Pattern logic: detects **Doji, Engulfing**, and **volume divergence**\n\n2. **Tesla News and Sentiment Analyst Tool**  \n   - Scrapes from trusted RSS sources: **Google News, Yahoo Finance, Electrek, CleanTechnica, TeslaNorth**  \n   - Returns:  \n     • **Sentiment score**: Bullish / Bearish / Neutral  \n     • **Summary**: 2–3 sentence narrative  \n     • **Top 3–5 Headlines** (with sources)\n\n---\n\n### 📊 Responsibilities:\n\n1. **Ingest structured inputs** from the tools listed above:\n   - Indicator values and candlestick/volume behavior  \n   - News sentiment summaries and headlines\n\n2. **Perform technical analysis** across timeframes:\n   - **Short-Term**: 15m + 1h  \n   - **Long-Term**: 1d + 1h  \n   - Assess trend, support/resistance, divergence, and reversal signals  \n   - Confirm with lagging indicators and macro sentiment alignment\n\n3. **Generate two trade strategy sections**:\n\n<b>Spot Recommendations</b>  \n• Action: Buy / Sell / Hold  \n• Entry Price  \n• Stop Loss  \n• Take Profit  \n• Rationale:  \n - <b>Primary Signals</b>: e.g. candle pattern, breakout  \n - <b>Lagging Indicators</b>: RSI, BBANDS, etc.  \n - <b>Sentiment & Macro Analysis</b>: use news summary + headlines\n\n<b>Leveraged Recommendations</b>  \n• Position: Long / Short  \n• Leverage: 2x / 3x / 5x  \n• Entry Price  \n• Stop Loss  \n• Take Profit  \n• Rationale:  \n - <b>Primary Price Action Signals</b>  \n - <b>Lagging Indicator Confirmation</b>  \n - <b>Sentiment & Macro Analysis</b>\n\n4. **Score your signal strength**  \n• Confidence score (0–100)  \n• Strength label: Low / Medium / High / Very High\n\n5. **Include sentiment and headlines** at the bottom of the report:  \n• A short <b>News Sentiment Summary</b>  \n• Top 3 Tesla-related headlines with bullet formatting\n\n---\n\n### 🧾 Output Format (Telegram HTML)\n\nStart your message with:\n<b>TSLA Analysis</b>\n\n\nUse:\n• `<b>` for bold headers  \n• `•` for bullet points  \n• Clean line breaks  \n\n---\n\n⚠️ DO NOT:\n• Fabricate or assume any data  \n• Repeat this prompt or system instructions  \n• Include raw JSON or raw API format in your output\n\nOnly use what is provided via structured input. Write like a seasoned quantitative analyst.\n""
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""966cf9b6-abd4-48a0-bd32-6c83985a33ac"",
      ""name"": ""Tesla Financial Market Data Analyst Tool"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        700,
        260
      ],
      ""parameters"": {
        ""name"": ""Tesla_Financial_Market_Data_Analyst"",
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""WmWhVZ3XkJdjTmME"",
          ""cachedResultName"": ""Work Drive — Tesla Financial Market Data Analyst""
        },
        ""workflowInputs"": {
          ""value"": {
            ""message"": ""={{ $fromAI(\""message\"",\""Populate this with a relevant message to this subagent\"")}}"",
            ""sessionId"": ""={{ $json.sessionId }}""
          },
          ""schema"": [
            {
              ""id"": ""message"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""message"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""sessionId"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""sessionId"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""dbf1bef5-044a-4594-af1b-1468d4cdc06a"",
      ""name"": ""Tesla News and Sentiment Analyst Tool"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        980,
        260
      ],
      ""parameters"": {
        ""name"": ""Tesla_News_and_Sentiment_Analyst"",
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""kOIhNsok4gtt6fD3"",
          ""cachedResultName"": ""Work Drive — Tesla News and Sentiment Analyst""
        },
        ""workflowInputs"": {
          ""value"": {
            ""message"": ""={{ $fromAI(\""message\"",\""Populate this with a relevant message to this subagent\"")}}"",
            ""sessionId"": ""={{ $json.sessionId }}""
          },
          ""schema"": [
            {
              ""id"": ""message"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""message"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""sessionId"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""sessionId"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""2109ef95-4256-4713-aa9d-8a8ecd40eff3"",
      ""name"": ""Add SessionId"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        260,
        -100
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""c9d7a6f2-7e01-46fb-a4ee-f0c3b248bd6b"",
              ""name"": ""sessionId"",
              ""type"": ""string"",
              ""value"": ""={{ $('Telegram Trigger').item.json.message.chat.id }}""
            },
            {
              ""id"": ""d5929b35-1751-4a6a-bbee-d844cbb8e0aa"",
              ""name"": ""DateandTime"",
              ""type"": ""string"",
              ""value"": ""={{ $json.currentDate }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""0f45fae9-fef5-4595-97f0-04f974790cd3"",
      ""name"": ""Splits message is more than 4000 characters"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        1020,
        -100
      ],
      ""parameters"": {
        ""jsCode"": ""// Input: assumes incoming message in `item.json.message`\nconst input = $json.output;\nconst chunkSize = 4000;\n\n// Function to split text\nfunction splitMessage(text, size) {\n  const result = [];\n  for (let i = 0; i < text.length; i += size) {\n    result.push(text.substring(i, i + size));\n  }\n  return result;\n}\n\n// Logic\nif (input.length <= chunkSize) {\n  return [{ json: { message: input } }];\n} else {\n  const chunks = splitMessage(input, chunkSize);\n  return chunks.map(chunk => ({ json: { message: chunk } }));\n}""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""8e7dcfd4-7f2a-47b4-8e5a-1bc4d77fced7"",
      ""name"": ""Date & Time"",
      ""type"": ""n8n-nodes-base.dateTime"",
      ""position"": [
        -20,
        -100
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""f31dbe9c-25a2-4751-ba34-38ed0ae9e18c"",
      ""name"": ""Simple Memory"",
      ""type"": ""@n8n/n8n-nodes-langchain.memoryBufferWindow"",
      ""position"": [
        420,
        260
      ],
      ""parameters"": {},
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""97dfa658-3a67-4ed7-9662-b62573e0958b"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -640,
        -340
      ],
      ""parameters"": {
        ""color"": 4,
        ""height"": 420,
        ""content"": ""## Trigger Incoming Telegram Command\n\nThis node **listens for new Telegram messages** to initiate report generation.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b7d99e5f-0f36-4963-aa2c-33db04689fc5"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -380,
        -340
      ],
      ""parameters"": {
        ""color"": 2,
        ""width"": 260,
        ""height"": 420,
        ""content"": ""## Validate User Access\n\nEnsures only **authorized Telegram user IDs** can trigger the agent.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9a4d6ba0-2d75-4453-8b05-bc4dedf81be5"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -80,
        -340
      ],
      ""parameters"": {
        ""color"": 5,
        ""height"": 420,
        ""content"": ""## Capture Timestamp\n\nCaptures the **current system date and time** for session tracking and report stamping.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""157ba065-d228-41f0-a88f-ea8122fb5fa8"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        200,
        -340
      ],
      ""parameters"": {
        ""height"": 420,
        ""content"": ""## Generate Session Metadata\n\nAssigns **sessionId based on Telegram chat ID** and stores current **date/time** for context continuity.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6fe0bc11-94da-4c82-bf28-5fe6429d6e86"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        480,
        -340
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 340,
        ""height"": 420,
        ""content"": ""## Main AI Agent: Trading Report Generator\n\nUses **GPT model to combine technical and sentiment data** into a structured **TSLA swing-trading report**.\nCalls **Financial Market Analyst + Sentiment Analyst**.\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""7a1e3a33-713a-4a72-81c0-001e74af8f73"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        940,
        -340
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 260,
        ""height"": 420,
        ""content"": ""## Handle Telegram Message Limits\n\nChecks **output message length and splits into 4000-character** chunks if needed.\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b5ac3bcb-baa5-4d39-9e44-6be888317089"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1300,
        -340
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 260,
        ""height"": 420,
        ""content"": ""## Send Final Report to Telegram\n\nSends **formatted HTML report (or split parts)** back to the **original Telegram user**.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""5df88223-3acc-4b27-b592-58d499a638dd"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        60,
        220
      ],
      ""parameters"": {
        ""color"": 2,
        ""height"": 400,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n## GPT Model for Reasoning\nUses **OpenAI GPT (e.g., GPT-4o)** to process signal analysis and produce **final report** text.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c7bcc5bc-48b9-464b-9a6b-062535810543"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        340,
        220
      ],
      ""parameters"": {
        ""color"": 3,
        ""height"": 400,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Short-Term Memory Module\nMaintains **state during session**. Helps agent **track message history and previous context**.\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b17ec86d-5d91-469f-bc9d-fb5e22ecbfaf"",
      ""name"": ""Sticky Note9"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        620,
        220
      ],
      ""parameters"": {
        ""color"": 6,
        ""height"": 400,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Fetch Technical Indicator Insights\nCalls all **15m, 1h, 1d, and Klines sub-agents** via **webhook** to retrieve structured **market analysis**.\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1eda1d9b-2b50-4cd1-8b83-6a7d37517d31"",
      ""name"": ""Sticky Note10"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        900,
        220
      ],
      ""parameters"": {
        ""color"": 6,
        ""height"": 400,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Scrape Tesla News & Generate Sentiment\nPulls latest **Tesla-related headlines from trusted RSS feeds** and **returns structured sentiment** summary.\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""8e2ebe09-5488-4fb9-8175-b88ba68fcb9e"",
      ""name"": ""Sticky Note11"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1900,
        -1680
      ],
      ""parameters"": {
        ""width"": 1280,
        ""height"": 2300,
        ""content"": ""\n# 🧠 Tesla Quant Trading AI Agent – Full System Documentation\n\nA professional-grade AI-driven stock analysis system designed to deliver structured Tesla (TSLA) swing-trading insights based on real-time technical indicators and sentiment signals.\n\n---\n\n## 🧩 Included Workflows\n\n> Download and install **all** of the following workflows for the system to function correctly.\n\n| Workflow Name                               | Function                                                                 |\n| ------------------------------------------- | ------------------------------------------------------------------------ |\n| ✅ Tesla 15min Indicators Tool               | Pulls Alpha Vantage data for short-term signals (15m: RSI, BBANDS, etc.) |\n| ✅ Tesla 1hour Indicators Tool               | Pulls Alpha Vantage data for medium-term signals (1h: RSI, BBANDS, etc.) |\n| ✅ Tesla 1day Indicators Tool                | Pulls Alpha Vantage data for long-term signals (1d: RSI, BBANDS, MACD)   |\n| ✅ Tesla 1hour & 1day Klines Tool            | Analyzes candlestick patterns and volume divergences (OHLCV)             |\n| ✅ Tesla Quant Technical Indicators Webhooks | Webhook handlers that power the above 4 indicator-fetching tools         |\n| ✅ Tesla Financial Market Data Analyst Tool  | Synthesizes multi-timeframe indicator + candle data                      |\n| ✅ Tesla News and Sentiment Analyst Tool     | Scrapes Tesla news RSS + assigns sentiment with headlines                |\n| ✅ Tesla Quant Trading AI Agent              | Final agent that generates Telegram-style trade reports                  |\n\n---\n\n## ⚙️ Installation Instructions\n\n### Step 1: Import Workflows\n\n1. Open your **n8n editor UI**.\n2. Import each workflow JSON file one by one.\n3. Make sure all workflows are **activated** or properly linked via `Execute Workflow` nodes.\n\n### Step 2: Set Up Credentials\n\n1. Go to **Credentials → HTTP Auth → Query Parameter Auth**.\n2. Create a credential named: `Alpha Vantage Premium`\n\n   * Add: `apikey=YOUR_API_KEY`\n3. Add your **OpenAI API** credentials (for GPT-4.1 or equivalent).\n\n### Step 3: Configure Webhooks\n\n1. Deploy the **Tesla Quant Technical Indicators Webhooks Tool**.\n2. Ensure that `/15minData`, `/1hourData`, `/1dayData`, and `/klinesData` routes are properly reachable.\n\n### Step 4: Set Up Execution\n\n1. Trigger the **Tesla Quant Trading AI Agent** manually or via a scheduler.\n2. The agent will:\n\n   * Call all technical + sentiment tools via workflow execution\n   * Format and analyze data\n   * Output full trading report in Telegram-HTML style\n\n---\n\n## 🖥️ System Overview\n\n**Data Flow:**\n\n```\n[Webhook HTTP Trigger] \n→ [Indicator Tool (15m, 1h, 1d)] \n→ [Candlestick Tool (1h, 1d)]\n→ [Financial Market Data Analyst] \n→ [Sentiment Analyst] \n→ [Final Report Generator]\n```\n\n**Output Example:**\n\n* Spot + Leverage trade entries\n* Confidence score (0–100)\n* Reasoning: price action, indicators, and sentiment\n* Summary headlines and sentiment context\n\n---\n\n## 📬 Output Format\n\n* Styled using Telegram HTML (`<b>`, `•`, newlines)\n* Structured trade report with:\n\n  * Action type\n  * Entry/exit prices\n  * Rationale in 3 parts\n  * News sentiment and 3 headlines\n\n---\n\n## 🚀 Support & Licensing\n\n🔗 **Don Jayamaha – LinkedIn**\n[http://linkedin.com/in/donjayamahajr](http://linkedin.com/in/donjayamahajr)\n\n© 2025 Treasurium Capital Limited Company. All rights reserved.\nThis AI workflow architecture, including logic, design, and prompt structures, is the intellectual property of **Treasurium Capital Limited Company**. Unauthorized reproduction, redistribution, or resale is prohibited under **U.S. copyright law**. Licensed use only.\n\n""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""b77078ba-b904-4315-aa13-f80fded7f9a9"",
  ""connections"": {
    ""Telegram"": {
      ""main"": [
        []
      ]
    },
    ""Date & Time"": {
      ""main"": [
        [
          {
            ""node"": ""Add SessionId"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Add SessionId"": {
      ""main"": [
        [
          {
            ""node"": ""Tesla Quant Trading AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Simple Memory"": {
      ""ai_memory"": [
        [
          {
            ""node"": ""Tesla Quant Trading AI Agent"",
            ""type"": ""ai_memory"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Telegram Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""User Authentication (Replace Telegram ID)"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Tesla Quant Trading AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Tesla Quant Trading AI Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Splits message is more than 4000 characters"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Tesla News and Sentiment Analyst Tool"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""Tesla Quant Trading AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Tesla Financial Market Data Analyst Tool"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""Tesla Quant Trading AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""User Authentication (Replace Telegram ID)"": {
      ""main"": [
        [
          {
            ""node"": ""Date & Time"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Splits message is more than 4000 characters"": {
      ""main"": [
        [
          {
            ""node"": ""Telegram"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
"Generate Monthly Financial Reports with Gemini AI, SQL, and Outlook","{
  ""meta"": {
    ""instanceId"": ""32d80f55a35a7b57f8e47a2ac19558d9f5bcec983a5519d9c29ba713ff4f12c7""
  },
  ""nodes"": [
    {
      ""id"": ""fdd55253-5cb6-4b1f-9c93-6915f254f700"",
      ""name"": ""Schedule Trigger"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        -60,
        -240
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {
              ""field"": ""months"",
              ""triggerAtDayOfMonth"": 5
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""c8d6064a-3fd7-478d-891c-6ade336daa1f"",
      ""name"": ""YTD vs Prevoius Month1"",
      ""type"": ""n8n-nodes-base.mySql"",
      ""onError"": ""continueRegularOutput"",
      ""position"": [
        640,
        0
      ],
      ""parameters"": {
        ""query"": ""SELECT\n  --  budget_data.fiscal_year AS `Year`,\n  --  budget_data.cost_center AS `Cost Center`,\n    budget_data.budget_group AS `Budget Group`,\n--    budget_data.sort_order AS `Sort Order`,\n\n    -- YTD Totals up to previous month (up to dynamic month)\n    SUM(budget_data.budget_amount) AS `Budget YTD`,\n    SUM(COALESCE(actual_data.actual_amount, 0)) AS `Actual YTD`,\n    SUM(COALESCE(actual_data.actual_amount, 0)) - SUM(budget_data.budget_amount) AS `Variance YTD`,\n\n    -- Previous Month Totals Only\n    SUM(CASE WHEN budget_data.budget_month = {{ $('PreviousMonth').item.json.previousMonth }} THEN budget_data.budget_amount ELSE 0 END) AS `Budget PM`,\n    SUM(CASE WHEN budget_data.budget_month = {{ $('PreviousMonth').item.json.previousMonth }} THEN COALESCE(actual_data.actual_amount, 0) ELSE 0 END) AS `Actual PM`,\n    SUM(CASE WHEN budget_data.budget_month = {{ $('PreviousMonth').item.json.previousMonth }} THEN COALESCE(actual_data.actual_amount, 0) ELSE 0 END) -\n    SUM(CASE WHEN budget_data.budget_month = {{ $('PreviousMonth').item.json.previousMonth }} THEN budget_data.budget_amount ELSE 0 END) AS `Variance PM`\n\nFROM\n    (\n        SELECT\n            bg.budget_group_name AS budget_group,\n            bg.sort_order,\n            bgd.fiscal_year,\n            bgd.budget_month,\n            bgd.cost_center,\n            CAST(bgd.budget_amount AS DECIMAL(18,6)) AS budget_amount\n        FROM\n            `tabBudget Group Detail` bgd\n        JOIN\n            `tabBudget Group` bg ON bg.name = bgd.parent\n        WHERE\n            bgd.fiscal_year = {{ $('PreviousMonth').item.json.year }}\n            AND bgd.budget_month <= {{ $('PreviousMonth').item.json.previousMonth }}\n            AND bgd.cost_center = '{{ $json.CostCenter }}'\n    ) AS budget_data\n\nLEFT JOIN (\n    SELECT\n        acc.budget_group AS budget_group,\n        YEAR(gl.posting_date) AS fiscal_year,\n        MONTH(gl.posting_date) AS budget_month,\n        gl.cost_center,\n        SUM(\n            CASE \n                WHEN acc.root_type = 'Income' THEN gl.credit - gl.debit\n                WHEN acc.root_type = 'Expense' THEN gl.debit - gl.credit\n                ELSE 0\n            END\n        ) AS actual_amount\n    FROM\n        `tabGL Entry` gl\n    JOIN\n        `tabAccount` acc ON gl.account = acc.name\n    WHERE\n        acc.budget_group IS NOT NULL\n        AND acc.root_type IN ('Income', 'Expense')\n        AND gl.docstatus = 1\n        AND YEAR(gl.posting_date) = {{ $('PreviousMonth').item.json.year }}\n        AND MONTH(gl.posting_date) <= {{ $('PreviousMonth').item.json.previousMonth }}\n        AND gl.cost_center = '{{ $('Filter').item.json['Cost Center'] }}'\n    GROUP BY\n        acc.budget_group,\n        YEAR(gl.posting_date),\n        MONTH(gl.posting_date),\n        gl.cost_center\n) AS actual_data\nON\n    budget_data.budget_group = actual_data.budget_group AND\n    budget_data.fiscal_year = actual_data.fiscal_year AND\n    budget_data.budget_month = actual_data.budget_month AND\n    budget_data.cost_center = actual_data.cost_center\n\nGROUP BY\n    budget_data.fiscal_year,\n    budget_data.cost_center,\n    budget_data.budget_group,\n    budget_data.sort_order\n\nORDER BY\n    budget_data.cost_center,\n    budget_data.sort_order,\n    budget_data.budget_group;\n"",
        ""options"": {},
        ""operation"": ""executeQuery""
      },
      ""retryOnFail"": false,
      ""typeVersion"": 2.4
    },
    {
      ""id"": ""13102b1c-8a06-4a23-8174-75254bf783ac"",
      ""name"": ""Loop Over Items"",
      ""type"": ""n8n-nodes-base.splitInBatches"",
      ""position"": [
        -40,
        200
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""da2a0b30-3df4-430c-8cac-cd9d735ce759"",
      ""name"": ""CostCentrs"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1100,
        -240
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""ac6bcf14-13e3-464d-b9cd-4adee56018d7"",
              ""name"": ""Cost Center"",
              ""type"": ""string"",
              ""value"": ""={{ $json['Cost Center'] }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""7891d71c-18f8-4e07-aa30-f50bec10cef6"",
      ""name"": ""Date & Time"",
      ""type"": ""n8n-nodes-base.dateTime"",
      ""position"": [
        260,
        -240
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""3e69dc27-0850-4978-bf10-e81ff575ec60"",
      ""name"": ""PreviousMonth"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        520,
        -240
      ],
      ""parameters"": {
        ""jsCode"": ""// Get the input date from the previous node\nconst inputDateStr = $input.first().json.currentDate;\nconst inputDate = new Date(inputDateStr);\n\n// Move to the first day of the current month\ninputDate.setDate(1);\n\n// Step back one day to land in the previous month\ninputDate.setDate(0);\n\n// Extract previous month and year\nconst previousMonth = inputDate.getMonth() + 1; // Months are 0-based\nconst year = inputDate.getFullYear(); // This will reflect the correct year, even in January\n\nreturn [\n  {\n    json: {\n      previousMonth: previousMonth.toString().padStart(2, '0'), // e.g., \""01\"", \""12\""\n      year: year.toString()                                     // e.g., \""2024\""\n    }\n  }\n];\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""f6776225-39d2-4746-a90f-b4d1b12a66ee"",
      ""name"": ""Selected Cost Center"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        260,
        220
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""c4a6c71a-0df4-49df-9068-f039ddf7d507"",
              ""name"": ""CostCenter"",
              ""type"": ""string"",
              ""value"": ""={{ $json['Cost Center'] }}""
            },
            {
              ""id"": ""ade95f85-baa2-4f5d-a125-7360b17cf99b"",
              ""name"": ""previousMonth"",
              ""type"": ""string"",
              ""value"": ""={{ $('PreviousMonth').item.json.previousMonth }}""
            },
            {
              ""id"": ""36c1d772-5bb7-47a6-81f9-1b70208e558b"",
              ""name"": ""year"",
              ""type"": ""string"",
              ""value"": ""={{ $('PreviousMonth').item.json.year }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""1e23d876-21be-4d90-b5e4-38f3543a0c3b"",
      ""name"": ""Get Cost Centers with Budgets"",
      ""type"": ""n8n-nodes-base.mySql"",
      ""position"": [
        800,
        -240
      ],
      ""parameters"": {
        ""query"": ""SELECT DISTINCT\n    budget_data.cost_center AS `Cost Center`\nFROM\n(\n    SELECT\n        bgd.cost_center,\n        bgd.fiscal_year,\n        bgd.budget_month\n    FROM\n        `tabBudget Group Detail` bgd\n    JOIN\n        `tabBudget Group` bg ON bg.name = bgd.parent\n    WHERE\n        bgd.fiscal_year = {{ $json.year }}\n        AND bgd.budget_month <= {{ $json.previousMonth }}\n) AS budget_data\n\nINNER JOIN\n(\n    SELECT DISTINCT\n        gl.cost_center,\n        YEAR(gl.posting_date) AS fiscal_year,\n        MONTH(gl.posting_date) AS budget_month\n    FROM\n        `tabGL Entry` gl\n    JOIN\n        `tabAccount` acc ON gl.account = acc.name\n    WHERE\n        acc.budget_group IS NOT NULL\n        AND acc.root_type IN ('Income', 'Expense')\n        AND gl.docstatus = 1\n        AND YEAR(gl.posting_date) = {{ $json.year }}\n        AND MONTH(gl.posting_date) <= {{ $json.previousMonth }}\n        AND gl.cost_center IS NOT NULL\n) AS gl_data\nON\n    budget_data.cost_center = gl_data.cost_center\n    AND budget_data.fiscal_year = gl_data.fiscal_year\n    AND budget_data.budget_month = gl_data.budget_month\n\nORDER BY\n    budget_data.cost_center;\n"",
        ""options"": {},
        ""operation"": ""executeQuery""
      },
      ""typeVersion"": 2.4
    },
    {
      ""id"": ""d4429595-b1b9-4121-a612-24be11e6a36a"",
      ""name"": ""Filter"",
      ""type"": ""n8n-nodes-base.filter"",
      ""position"": [
        1380,
        -240
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""d7a13ce7-24d3-406a-934b-97f9a47b206c"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json['Cost Center'] }}"",
              ""rightValue"": ""AI DEPARTMENT""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""67bbe834-ae40-4aad-b468-6fa73c9dc6c6"",
      ""name"": ""HTML"",
      ""type"": ""n8n-nodes-base.html"",
      ""position"": [
        40,
        920
      ],
      ""parameters"": {
        ""html"": ""{{ $json.html }}""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""58d1dc63-9ba7-41b8-af39-b7c134ab3cea"",
      ""name"": ""verticalPL"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        900,
        220
      ],
      ""parameters"": {
        ""jsCode"": ""const rows = items;\n\n// Get column names from the first row\nconst headers = Object.keys(rows[0].json);\n\n// Build header HTML\nlet headerHtml = headers.map(col => `<th>${col}</th>`).join('');\n\n// Build rows\nlet bodyHtml = rows.map(row => {\n  return `<tr>${headers.map(col => `<td>${row.json[col]}</td>`).join('')}</tr>`;\n}).join('');\n\n// Combine into one table\nconst tableHtml = `\n<table border=\""1\"" cellpadding=\""6\"" cellspacing=\""0\"" style=\""border-collapse: collapse;\"">\n  <thead><tr>${headerHtml}</tr></thead>\n  <tbody>${bodyHtml}</tbody>\n</table>\n`;\n\nreturn [{ json: { table: tableHtml } }];\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""9a8bdb09-f9d4-4c4b-b1d5-dadb3c6ee567"",
      ""name"": ""Merge"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        1380,
        220
      ],
      ""parameters"": {
        ""numberInputs"": 4
      },
      ""typeVersion"": 3.1
    },
    {
      ""id"": ""d310db4d-183d-4f99-9bd0-863320d2db73"",
      ""name"": ""Code"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        1420,
        580
      ],
      ""parameters"": {
        ""jsCode"": ""const table1 = $input.first().json.table; // From the first input node\nconst table2 = $items(\""verticalPL\"")[0].json.table; // From the node named 'verticalPL'\nconst table3 = $items(\""WIP1\"")[0].json.table; // From the node named 'WIP1'\nconst table4 = $items(\""Employees1\"")[0].json.table; // From the node named 'Employees1'\n\nconst htmlOutput = `\n<!DOCTYPE html>\n<html>\n<head>\n  <style>\n    body { font-family: Arial, sans-serif; font-size: 14px; color: #333; }\n    h2 { margin-top: 30px; }\n    table { border-collapse: collapse; width: 100%; margin-top: 10px; }\n    th, td { border: 1px solid #ccc; padding: 8px; text-align: right; }\n    th:first-child, td:first-child { text-align: left; }\n    thead { background-color: #f0f0f0; }\n  </style>\n</head>\n<body>\n  <h2>📊 Financial Overview – YTD & PM Summary</h2>\n  ${table1}\n\n  <h2>📊 Financial Overview – Vertical Profit & Loss</h2>\n  ${table2}\n\n  <h2>📊 Financial Overview – WIP Summary</h2>\n  ${table3}\n\n  <h2>👥 Employees in the Business Unit</h2>\n  ${table4}\n</body>\n</html>\n`;\n\nreturn [{ json: { html: htmlOutput } }];\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""ba5e60fb-d5cc-4a5f-9cb6-07808f7c7021"",
      ""name"": ""Microsoft Outlook2"",
      ""type"": ""n8n-nodes-base.microsoftOutlook"",
      ""position"": [
        1240,
        920
      ],
      ""webhookId"": ""0cdef86a-9910-49aa-bdd3-1beecb260035"",
      ""parameters"": {
        ""subject"": ""=Business Performance Syncbricks"",
        ""bodyContent"": ""={{ $json['Email Output'] }}"",
        ""toRecipients"": ""amjid@amjidali.com"",
        ""additionalFields"": {
          ""bodyContentType"": ""html""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""c3cdf21d-417f-420b-98f9-dfca33119c5a"",
      ""name"": ""CostCenter"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        920,
        0
      ],
      ""parameters"": {
        ""jsCode"": ""const rows = items;\n\n// Get column names from the first row\nconst headers = Object.keys(rows[0].json);\n\n// Build header HTML\nlet headerHtml = headers.map(col => `<th>${col}</th>`).join('');\n\n// Build rows\nlet bodyHtml = rows.map(row => {\n  return `<tr>${headers.map(col => `<td>${row.json[col]}</td>`).join('')}</tr>`;\n}).join('');\n\n// Combine into one table\nconst tableHtml = `\n<table border=\""1\"" cellpadding=\""6\"" cellspacing=\""0\"" style=\""border-collapse: collapse;\"">\n  <thead><tr>${headerHtml}</tr></thead>\n  <tbody>${bodyHtml}</tbody>\n</table>\n`;\n\nreturn [{ json: { table: tableHtml } }];\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""9d9fb099-5fca-4777-a753-f6791f37fd37"",
      ""name"": ""WIP1"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        900,
        400
      ],
      ""parameters"": {
        ""jsCode"": ""const rows = items;\n\n// Get column names from the first row\nconst headers = Object.keys(rows[0].json);\n\n// Build header HTML\nlet headerHtml = headers.map(col => `<th>${col}</th>`).join('');\n\n// Build rows\nlet bodyHtml = rows.map(row => {\n  return `<tr>${headers.map(col => `<td>${row.json[col]}</td>`).join('')}</tr>`;\n}).join('');\n\n// Combine into one table\nconst tableHtml = `\n<table border=\""1\"" cellpadding=\""6\"" cellspacing=\""0\"" style=\""border-collapse: collapse;\"">\n  <thead><tr>${headerHtml}</tr></thead>\n  <tbody>${bodyHtml}</tbody>\n</table>\n`;\n\nreturn [{ json: { table: tableHtml } }];\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""5a6626ed-c841-4fd7-9111-f686fcacaa37"",
      ""name"": ""Employees"",
      ""type"": ""n8n-nodes-base.mySql"",
      ""onError"": ""continueRegularOutput"",
      ""position"": [
        640,
        600
      ],
      ""parameters"": {
        ""query"": ""SELECT\n   -- e.payroll_cost_center AS `Payroll Cost Center`,\n    COUNT(*) AS `Total Employees`,\n    COUNT(CASE WHEN YEAR(e.date_of_joining) = YEAR(CURDATE()) THEN 1 END) AS `Joined This Year`,\n    COUNT(CASE WHEN YEAR(e.date_of_joining) = YEAR(CURDATE()) AND MONTH(e.date_of_joining) = MONTH(CURDATE()) THEN 1 END) AS `Joined This Month`\nFROM\n    `tabEmployee` e\nWHERE\n    e.status = 'Active'\n    AND e.payroll_cost_center = '{{ $json.CostCenter }}'\nGROUP BY\n    e.payroll_cost_center;\n"",
        ""options"": {},
        ""operation"": ""executeQuery""
      },
      ""retryOnFail"": false,
      ""typeVersion"": 2.4
    },
    {
      ""id"": ""bbfd2c19-9538-4106-8931-f65f0261d43c"",
      ""name"": ""Employees1"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        900,
        600
      ],
      ""parameters"": {
        ""jsCode"": ""const rows = items;\n\n// Get column names from the first row\nconst headers = Object.keys(rows[0].json);\n\n// Build header HTML\nlet headerHtml = headers.map(col => `<th>${col}</th>`).join('');\n\n// Build rows\nlet bodyHtml = rows.map(row => {\n  return `<tr>${headers.map(col => `<td>${row.json[col]}</td>`).join('')}</tr>`;\n}).join('');\n\n// Combine into one table\nconst tableHtml = `\n<table border=\""1\"" cellpadding=\""6\"" cellspacing=\""0\"" style=\""border-collapse: collapse;\"">\n  <thead><tr>${headerHtml}</tr></thead>\n  <tbody>${bodyHtml}</tbody>\n</table>\n`;\n\nreturn [{ json: { table: tableHtml } }];\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""b425da91-2faa-4063-93dd-4d997f7cd7eb"",
      ""name"": ""Wait"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        1480,
        1180
      ],
      ""webhookId"": ""83d7ae9a-e309-4bac-a0b4-5ff651e3afe3"",
      ""parameters"": {
        ""unit"": ""minutes""
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""5deead0c-d386-4b51-9b96-bd58e85244c0"",
      ""name"": ""Financial Performance"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        700,
        920
      ],
      ""parameters"": {
        ""jsCode"": ""let html = $input.first().json.output || '';\n\n// Remove ```html at the start and ``` at the end (if present)\nhtml = html.trim().replace(/^```html\\s*/i, '').replace(/```$/i, '');\n\nreturn [{\n  json: {\n    cleaned_html: html\n  }\n}];\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""a472032f-42ba-4cb2-9bf7-55314083833e"",
      ""name"": ""Email Data"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        940,
        920
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""b227e25f-99ce-4147-b22d-c2a6cabfcafa"",
              ""name"": ""CostCenter"",
              ""type"": ""string"",
              ""value"": ""={{ $('Selected Cost Center').first().json.CostCenter }}\n""
            },
            {
              ""id"": ""94e5a360-cbff-4498-bd75-98cafe08557b"",
              ""name"": ""Email Output"",
              ""type"": ""string"",
              ""value"": ""={{ $json.cleaned_html }}""
            },
            {
              ""id"": ""20cd6408-ab44-4632-8f0a-967604f16a1c"",
              ""name"": ""For the Month"",
              ""type"": ""string"",
              ""value"": ""=Month : {{ $('PreviousMonth').first().json.previousMonth }} - {{ $('PreviousMonth').first().json.year }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""b7c1ae4d-cbe3-47fb-84fa-f34295f8dfee"",
      ""name"": ""Calculator"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolCalculator"",
      ""position"": [
        620,
        1220
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""2e59b7b8-d8f6-4433-98c5-f637f6b5eaf4"",
      ""name"": ""Business Performance AI Agent (Analyst)"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""onError"": ""continueRegularOutput"",
      ""position"": [
        300,
        920
      ],
      ""parameters"": {
        ""text"": ""=You are a Business Performance Analyst Expert in Financial Management of Syncbricks LLC,  you willbe given an input to Analyze the Financial Performance of syncbricks which is an AI and Automation Company.\nThe sections Given to you will be below\n\n1. Financial Overview – YTD & PM Summary (whis is income and expense of the Company, this data doesn't include the calculation of Gross Profit and Net Profit that you must do. This should be used together in one section only don't seperate them)\n2. Financial Overview – Vertical Profit & Loss (This containers the Verticials within the Cost Center, these are in fact the Sub Business Unit, you don't need to calculate anything but the information is for analysis to see how the Verticals within the Business Unit Perfored )\n3. Financial Overview – WIP Summary (This is the Projects Summary about how many projects are currently open and work is the WIP - Work in Process of the Project, the WIP figure should be added for Profit and Loss Statement Under Proejct Reveneu as expected WIP)\n4. Employees in the Business Unit (These will be the number of Employees who are directly working in this BU, which means these employees are only serving the Company, other staff which are in back office support are not included in this. )\n*** Your Role ***\n\nYour Role is to Prepare a comprehensive Report : \n1. Executive Summary : Tell how was the overall performance of the Business Unit.\n2. Analayze the Financial Overview - YTD together with PM Summary (Which is Previous Month) which is previous month Income and Expenses you must use Proper Strcuture of Financial Statement with Budget Vs Actuals (follow same input already given). \n\nYou must use the Section that will be shared with you in detail that says \""Financial Overview – YTD & PM Summary \"" and from there you must ensure to create sections based on best Practices of Performance Analysis that should include;\n\nSection: Revenue\n-Projects - Revenue\n-Trading - Revenue\n-Service - Revenue\nNet Sales (Total)\nSection: Project Work in Process\nWIP (Revenue to Book)\nTotal: Gross Sale\nSection: Cost of Sale\nProjects - COGS\nTrading - COGS\nService - COGS\nTotal Cost of Sales\nGross Profit\nOther Income\nGross Income\n\nSection: Indirect Cost (here you must all the detail of expenses from \""Financial Overview – YTD & PM Summary\""\nThen you must calculate\nProfit / (Loss) before tax\nNP % to Revenue\n\nUse the calculator tool to ensure precise calculations.\n\n\n- Don't add decimals give format in currency but don't add symbol.\nUse the standard P&L Format where you should first use Sale, then Cost of Sale and GP, then use Indirect Expenses and then Net Profile. Ensure to calculate the Perentages as well.\n3. Provide the Summary of the Verticials Performance with their Profit and Loss and Percetage and Total of all Verticlals\n4. Current Project Progress.\n5. Employees Summary, Number of Employees, How many joined in this Year and what is per Eployee Revenue and Gross Profit \n\nAnalyze Overall Performance of the Company and provide the Business Managers an Overview of what should be done next. Calculate per employee profit as well and suggest what is the performance overall\n\n**Tools**\nUse calculator tool to do all calculations for accurate calculations\n\n** Formatting and Output **\n\nGive output in html format fully responsive in with beauty added using CSS,  ready to be shared with all possible tables, in hightly attracrtive format, headings, add colors green for good, red for bad, organge for acceptable and so on, also add remarks to show how the performance was, enusre to response as if you were as an Expert in Analyzing the Bususiness Performance. Don't add any other infomration or symbols which are not part of html. Don't give additional message saying ok, I will do and so on.\nAlign Text in table on left and numbers on right\nNumber formatting : ##,###\n\n\nHere is the data\n\nMonth : {{ $('PreviousMonth').first().json.previousMonth }}\nYear  : {{ $('PreviousMonth').first().json.year }}\n\n{{ $json.html }}\n\n"",
        ""options"": {},
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""3ac7b91e-ee61-4b40-9d2d-76d7916479ee"",
      ""name"": ""Think"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolThink"",
      ""position"": [
        460,
        1220
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""97bac1cb-8271-4169-98cf-6ea5b06ef5db"",
      ""name"": ""Google Gemini Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""position"": [
        220,
        1220
      ],
      ""parameters"": {
        ""options"": {},
        ""modelName"": ""models/gemini-2.5-pro-exp-03-25""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""27f40dc7-61b9-4e09-9b6d-6bb9d16c38c3"",
      ""name"": ""Departments "",
      ""type"": ""n8n-nodes-base.mySql"",
      ""onError"": ""continueRegularOutput"",
      ""position"": [
        640,
        200
      ],
      ""parameters"": {
        ""query"": ""SELECT\n   -- gl.vertical AS `Vertical`,\n\n    -- Total Income (based on root_type)\n    ROUND(SUM(CASE WHEN acc.root_type = 'Income' THEN gl.credit - gl.debit ELSE 0 END), 0) AS `Total Income`,\n\n    -- Total Expenses (based on root_type)\n    ROUND(SUM(CASE WHEN acc.root_type = 'Expense' THEN gl.debit - gl.credit ELSE 0 END), 0) AS `Total Expenses`,\n\n    -- Profit or Loss = Income - Expenses\n    ROUND(SUM(\n        CASE \n            WHEN acc.root_type = 'Income' THEN gl.credit - gl.debit\n            WHEN acc.root_type = 'Expense' THEN -1 * (gl.debit - gl.credit)\n            ELSE 0\n        END\n    ), 0) AS `Profit or Loss`\n\nFROM\n    `tabGL Entry` gl\nJOIN\n    `tabAccount` acc ON gl.account = acc.name\n\nWHERE\n    acc.root_type IN ('Income', 'Expense')\n    AND gl.docstatus = 1\n    AND gl.cost_center = '{{ $(\""Selected Cost Center\"").item.json.CostCenter }}'\n    AND MONTH(gl.posting_date) = {{ $(\""Selected Cost Center\"").item.json.previousMonth }}\n    AND YEAR(gl.posting_date) = {{ $(\""Selected Cost Center\"").item.json.year }}\n\nGROUP BY\n    gl.vertical\n"",
        ""options"": {},
        ""operation"": ""executeQuery""
      },
      ""retryOnFail"": false,
      ""typeVersion"": 2.4
    },
    {
      ""id"": ""b2a3ec7d-d400-4d1c-877d-f49f67ad742f"",
      ""name"": ""Projects"",
      ""type"": ""n8n-nodes-base.mySql"",
      ""onError"": ""continueRegularOutput"",
      ""position"": [
        620,
        380
      ],
      ""parameters"": {
        ""query"": ""SELECT\n   -- p.cost_center AS `Cost Center`,\n    COUNT(DISTINCT p.name) AS `Projects`,\n\n    FORMAT(SUM(p.contract_value), 0) AS `Contract Value`,\n    FORMAT(SUM(p.total_opening_revenue), 0) AS `Opening Revenue`,\n    FORMAT(SUM(p.total_opening_cost), 0) AS `Opening Cost`,\n\n    -- New Revenue (GL)\n    IFNULL((\n        SELECT SUM(gl.credit - gl.debit)\n        FROM `tabGL Entry` gl\n        JOIN `tabAccount` acc ON acc.name = gl.account\n        WHERE gl.docstatus = 1 AND acc.root_type = 'Income' AND acc.is_group = 0\n          AND gl.project IN (SELECT name FROM `tabProject` WHERE cost_center = p.cost_center AND status = 'Open')\n          AND gl.posting_date <= LAST_DAY(CURDATE() - INTERVAL 1 MONTH)\n    ), 0) AS `New Revenue`,\n\n    -- New Cost (GL)\n    IFNULL((\n        SELECT SUM(gl.debit - gl.credit)\n        FROM `tabGL Entry` gl\n        JOIN `tabAccount` acc ON acc.name = gl.account\n        WHERE gl.docstatus = 1 AND acc.root_type = 'Expense' AND acc.is_group = 0\n          AND gl.project IN (SELECT name FROM `tabProject` WHERE cost_center = p.cost_center AND status = 'Open')\n          AND gl.posting_date <= LAST_DAY(CURDATE() - INTERVAL 1 MONTH)\n    ), 0) AS `New Cost`,\n\n    -- Actual Revenue\n    FORMAT(\n        SUM(p.total_opening_revenue) +\n        IFNULL((\n            SELECT SUM(gl.credit - gl.debit)\n            FROM `tabGL Entry` gl\n            JOIN `tabAccount` acc ON acc.name = gl.account\n            WHERE gl.docstatus = 1 AND acc.root_type = 'Income' AND acc.is_group = 0\n              AND gl.project IN (SELECT name FROM `tabProject` WHERE cost_center = p.cost_center AND status = 'Open')\n              AND gl.posting_date <= LAST_DAY(CURDATE() - INTERVAL 1 MONTH)\n        ), 0), 0\n    ) AS `Actual Revenue`,\n\n    -- Actual Cost\n    FORMAT(\n        SUM(p.total_opening_cost) +\n        IFNULL((\n            SELECT SUM(gl.debit - gl.credit)\n            FROM `tabGL Entry` gl\n            JOIN `tabAccount` acc ON acc.name = gl.account\n            WHERE gl.docstatus = 1 AND acc.root_type = 'Expense' AND acc.is_group = 0\n              AND gl.project IN (SELECT name FROM `tabProject` WHERE cost_center = p.cost_center AND status = 'Open')\n              AND gl.posting_date <= LAST_DAY(CURDATE() - INTERVAL 1 MONTH)\n        ), 0), 0\n    ) AS `Actual Cost`,\n\n    -- Invoice %\n    CONCAT(ROUND((\n        (\n            SUM(p.total_opening_revenue) +\n            IFNULL((\n                SELECT SUM(gl.credit - gl.debit)\n                FROM `tabGL Entry` gl\n                JOIN `tabAccount` acc ON acc.name = gl.account\n                WHERE gl.docstatus = 1 AND acc.root_type = 'Income' AND acc.is_group = 0\n                  AND gl.project IN (SELECT name FROM `tabProject` WHERE cost_center = p.cost_center AND status = 'Open')\n                  AND gl.posting_date <= LAST_DAY(CURDATE() - INTERVAL 1 MONTH)\n            ), 0)\n        ) / NULLIF(SUM(p.contract_value), 0) * 100\n    ), 0), '%') AS `Invoice %`,\n\n    -- Cost %\n    CONCAT(ROUND((\n        (\n            SUM(p.total_opening_cost) +\n            IFNULL((\n                SELECT SUM(gl.debit - gl.credit)\n                FROM `tabGL Entry` gl\n                JOIN `tabAccount` acc ON acc.name = gl.account\n                WHERE gl.docstatus = 1 AND acc.root_type = 'Expense' AND acc.is_group = 0\n                  AND gl.project IN (SELECT name FROM `tabProject` WHERE cost_center = p.cost_center AND status = 'Open')\n                  AND gl.posting_date <= LAST_DAY(CURDATE() - INTERVAL 1 MONTH)\n            ), 0)\n        ) / NULLIF(SUM(p.budgeted_project_cost), 0) * 100\n    ), 0), '%') AS `Cost %`,\n\n    -- WIP Calculation\n    FORMAT(\n        CASE\n            WHEN SUM(p.budgeted_project_cost) = 0 THEN 0\n            WHEN (\n                SUM(p.total_opening_cost) +\n                IFNULL((\n                    SELECT SUM(gl.debit - gl.credit)\n                    FROM `tabGL Entry` gl\n                    JOIN `tabAccount` acc ON acc.name = gl.account\n                    WHERE gl.docstatus = 1 AND acc.root_type = 'Expense' AND acc.is_group = 0\n                      AND gl.project IN (SELECT name FROM `tabProject` WHERE cost_center = p.cost_center AND status = 'Open')\n                      AND gl.posting_date <= LAST_DAY(CURDATE() - INTERVAL 1 MONTH)\n                ), 0)\n            ) > SUM(p.budgeted_project_cost)\n            THEN\n                SUM(p.contract_value) -\n                (SUM(p.total_opening_revenue) +\n                IFNULL((\n                    SELECT SUM(gl.credit - gl.debit)\n                    FROM `tabGL Entry` gl\n                    JOIN `tabAccount` acc ON acc.name = gl.account\n                    WHERE gl.docstatus = 1 AND acc.root_type = 'Income' AND acc.is_group = 0\n                      AND gl.project IN (SELECT name FROM `tabProject` WHERE cost_center = p.cost_center AND status = 'Open')\n                      AND gl.posting_date <= LAST_DAY(CURDATE() - INTERVAL 1 MONTH)\n                ), 0))\n            ELSE\n                (SUM(p.contract_value) * (\n                    (SUM(p.total_opening_cost) +\n                    IFNULL((\n                        SELECT SUM(gl.debit - gl.credit)\n                        FROM `tabGL Entry` gl\n                        JOIN `tabAccount` acc ON acc.name = gl.account\n                        WHERE gl.docstatus = 1 AND acc.root_type = 'Expense' AND acc.is_group = 0\n                          AND gl.project IN (SELECT name FROM `tabProject` WHERE cost_center = p.cost_center AND status = 'Open')\n                          AND gl.posting_date <= LAST_DAY(CURDATE() - INTERVAL 1 MONTH)\n                    ), 0)) / NULLIF(SUM(p.budgeted_project_cost), 0)\n                )) -\n                (SUM(p.total_opening_revenue) +\n                IFNULL((\n                    SELECT SUM(gl.credit - gl.debit)\n                    FROM `tabGL Entry` gl\n                    JOIN `tabAccount` acc ON acc.name = gl.account\n                    WHERE gl.docstatus = 1 AND acc.root_type = 'Income' AND acc.is_group = 0\n                      AND gl.project IN (SELECT name FROM `tabProject` WHERE cost_center = p.cost_center AND status = 'Open')\n                      AND gl.posting_date <= LAST_DAY(CURDATE() - INTERVAL 1 MONTH)\n                ), 0))\n        END,\n    0) AS `WIP`\n\nFROM\n    `tabProject` p\nWHERE\n    p.cost_center = '{{ $json.CostCenter }}'\n    AND p.status = 'Open'\nGROUP BY\n    p.cost_center;\n"",
        ""options"": {},
        ""operation"": ""executeQuery""
      },
      ""retryOnFail"": false,
      ""typeVersion"": 2.4
    },
    {
      ""id"": ""a1c5f474-dc92-47e7-bf59-9cca756245cf"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1260,
        -20
      ],
      ""parameters"": {
        ""width"": 1120,
        ""height"": 1200,
        ""content"": ""## Key Sections of n8n Workflow\n\n**🟢 Schedule Trigger**\n- Triggers the automation on the 5th of every month.\n- Sets the cadence for monthly reporting.\n\n**📅 Date & Time + 🧮 PreviousMonth**\n- Captures the current date and derives the previous month/year for dynamic filtering.\n- Used throughout ",
Automated Financial Tracker: Telegram Invoices to Notion with Gemini AI Reports,"{
  ""id"": ""3BkxvtCbF6hHGUgM"",
  ""meta"": {
    ""instanceId"": ""d847dccbed2cefba539a228a44c266869b59eafbd4f307c4928a1149fb542a9e"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""N8N Financial Tracker Telegram Invoices to Notion with AI Summaries & Reports"",
  ""tags"": [
    {
      ""id"": ""OXcPKHaINFSvU1ux"",
      ""name"": ""Money"",
      ""createdAt"": ""2025-05-09T11:02:15.929Z"",
      ""updatedAt"": ""2025-05-09T11:02:15.929Z""
    },
    {
      ""id"": ""witgF3iHQ0sAlkjG"",
      ""name"": ""experimental"",
      ""createdAt"": ""2025-05-09T11:02:15.933Z"",
      ""updatedAt"": ""2025-05-09T11:02:15.933Z""
    }
  ],
  ""nodes"": [
    {
      ""id"": ""3792ae58-807f-4e83-a219-25c17c8b4048"",
      ""name"": ""Google Gemini Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""position"": [
        680,
        380
      ],
      ""parameters"": {
        ""options"": {},
        ""modelName"": ""models/gemini-2.5-flash-preview-04-17""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""haEP6ehKtsSUjFmK"",
          ""name"": ""Google Gemini(PaLM) Api account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""943f87e2-a1ac-4f7e-999b-8ea261259e5a"",
      ""name"": ""Basic LLM Chain"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        640,
        220
      ],
      ""parameters"": {
        ""text"": ""=ini ada base64 invoice rangkumkan Pengeluaran dari invoice tersebut Nama Barang jumlah dan Pengeluaran masing masing barang dan total, outputnya jangan panjang panjang saya cukup berikan \n\ndate: DD-MM-YYYY ( Jika dari OCR tidak ada tanggal ambil tanggal hari ini )\nid:\nname:\n qty: \nprice:\n total:\ncategory:\ntax : (jika di total berbeda dengan item brati ada pajak nya hitungkan juga pajaknya masukan kesini)\n\nuntuk pilihan categorynya : Food & Beverage / Transportation / Utilities / Shopping / Healthcare / Entertaiment / Housing / Education\n\ndalam bentuk JSON array object, berikan juga key message summary untuk rangkuman, berikan rangkauman singkat total pengeluaran dan barang apa saja yang dibeli serta jumlah nya berikan juga pajaknya"",
        ""messages"": {
          ""messageValues"": [
            {
              ""type"": ""HumanMessagePromptTemplate"",
              ""messageType"": ""imageBinary""
            }
          ]
        },
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.4
    },
    {
      ""id"": ""247b78cb-c3f6-4f31-8559-0fff70de9ba9"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        0,
        0
      ],
      ""parameters"": {
        ""width"": 1703,
        ""height"": 580,
        ""content"": ""## Automated Financial Tracker: Telegram Invoices to Notion with AI Summaries & Reports\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e20045c2-a8ef-43d6-b619-6825f605e183"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        0,
        620
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 1706,
        ""height"": 527,
        ""content"": ""## Schedule report to send on chanel or private message\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ed8d6544-af9e-416a-b1f3-624ca108427f"",
      ""name"": ""Schedule Trigger | for send chart report"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        80,
        880
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {}
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""22ad7ea1-9404-48bd-9d0f-0c58b8b66e3d"",
      ""name"": ""Get Recent Data from Notions"",
      ""type"": ""n8n-nodes-base.notion"",
      ""position"": [
        400,
        940
      ],
      ""parameters"": {
        ""filters"": {
          ""conditions"": [
            {
              ""key"": ""Created time|created_time"",
              ""condition"": ""past_week""
            }
          ]
        },
        ""options"": {},
        ""resource"": ""databasePage"",
        ""operation"": ""getAll"",
        ""returnAll"": true,
        ""databaseId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1d858554-d218-807c-936c-d06c8a8ec769"",
          ""cachedResultUrl"": ""https://www.notion.so/1d858554d218807c936cd06c8a8ec769"",
          ""cachedResultName"": ""Pengeluaran Rizqi Dini""
        },
        ""filterType"": ""manual""
      },
      ""credentials"": {
        ""notionApi"": {
          ""id"": ""AhjWhO7Jpc5x7xKG"",
          ""name"": ""Notion account""
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""34310645-52da-4f9c-96a2-0a01d0a640f9"",
      ""name"": ""Summarize Transaction Data"",
      ""type"": ""n8n-nodes-base.summarize"",
      ""position"": [
        760,
        920
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldsToSplitBy"": ""property_category"",
        ""fieldsToSummarize"": {
          ""values"": [
            {
              ""field"": ""property_total"",
              ""aggregation"": ""sum""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""80a374cb-00cf-46b1-9505-709be1c550da"",
      ""name"": ""Generate Chart"",
      ""type"": ""n8n-nodes-base.quickChart"",
      ""position"": [
        1200,
        900
      ],
      ""parameters"": {
        ""data"": ""={{ $json.chart.data.datasets[0].data }}"",
        ""labelsMode"": ""array"",
        ""labelsArray"": ""={{ $json.chart.data.labels }}"",
        ""chartOptions"": {},
        ""datasetOptions"": {}
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6b7c67ee-b205-42f5-9441-eb2ecee4a503"",
      ""name"": ""Send Chart Image to Group or Private Chat"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        1460,
        760
      ],
      ""webhookId"": ""66cce6e1-819c-487b-b8ad-3f02aebd40cb"",
      ""parameters"": {
        ""chatId"": ""-1001957001324"",
        ""operation"": ""sendPhoto"",
        ""binaryData"": true,
        ""additionalFields"": {
          ""fileName"": ""chart"",
          ""message_thread_id"": 571
        }
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""J8yRVYmsnH74HuaD"",
          ""name"": ""Telegram account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""06afd5ea-77b2-468d-b12b-1386d37a3ee6"",
      ""name"": ""Convert Data to JSON chart payload"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        1080,
        900
      ],
      ""parameters"": {
        ""jsCode"": ""const labels = [];\nconst values = [];\n\nfor (const item of items) {\n  labels.push(item.json.property_category);\n  values.push(item.json.sum_property_total);\n}\n\nreturn [\n  {\n    json: {\n      chart: {\n        type: 'bar',\n        data: {\n          labels,\n          datasets: [\n            {\n              label: 'Spending by Category',\n              data: values,\n              backgroundColor: 'rgba(54, 162, 235, 0.6)',\n              borderColor: 'rgba(54, 162, 235, 1)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            title: {\n              display: true,\n              text: 'Spending Summary by Category'\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      }\n    }\n  }\n];""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""4ad8c9c9-fbec-46ce-943d-447ca687e031"",
      ""name"": ""Telegram Trigger | When recive photo"",
      ""type"": ""n8n-nodes-base.telegramTrigger"",
      ""position"": [
        160,
        160
      ],
      ""webhookId"": ""cac4ce91-ed1f-42ea-aebe-97ac3612aea6"",
      ""parameters"": {
        ""updates"": [
          ""message""
        ],
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""J8yRVYmsnH74HuaD"",
          ""name"": ""Telegram account""
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""5231929f-2d7d-43ff-b9ae-141374926131"",
      ""name"": ""Get Image Info"",
      ""type"": ""n8n-nodes-base.editImage"",
      ""position"": [
        460,
        160
      ],
      ""parameters"": {
        ""operation"": ""information""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c8dcc6a1-2367-4049-9a8b-d8a04299ee72"",
      ""name"": ""Parse To your object | Table"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserStructured"",
      ""position"": [
        1040,
        460
      ],
      ""parameters"": {
        ""schemaType"": ""manual"",
        ""inputSchema"": ""{\n  \""type\"": \""object\"",\n  \""properties\"": {\n    \""message\"": {\n      \""type\"": \""string\""\n    },\n    \""summary\"": {\n      \""type\"": \""array\"",\n      \""items\"": {\n        \""type\"": \""object\"",\n        \""properties\"": {\""date\"": { \""type\"": \""date\"" },\n          \""id\"": { \""type\"": \""integer\"" },\n          \""name\"": { \""type\"": \""string\"" },\n          \""qty\"": { \""type\"": \""integer\"" },\n          \""price\"": { \""type\"": \""number\"" },\n          \""tax\"": { \""type\"": \""number\"" },\n          \""total\"": { \""type\"": \""number\"" },\""category\"": { \""type\"": \""string\"" }\n        },\n        \""required\"": [\""id\"", \""name\"", \""qty\"", \""price\"", \""total\"",\""category\""]\n      }\n    }\n  },\n  \""required\"": [\""message\"", \""summary\""]\n}\n""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""bc098a26-4e55-4908-880c-e5f27737a941"",
      ""name"": ""Split Out | data transaction"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        1120,
        40
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""output.summary""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""2a42bc4b-a5c7-433e-91e4-aa5531570f73"",
      ""name"": ""Sendback to chat and give summarize text"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        1480,
        400
      ],
      ""webhookId"": ""f90475fa-69cd-4e19-bc93-bffdceae8324"",
      ""parameters"": {
        ""text"": ""={{ $json.output.message }}"",
        ""chatId"": ""={{ $('Telegram Trigger | When recive photo').item.json.message.chat.id }}"",
        ""additionalFields"": {
          ""appendAttribution"": false
        }
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""J8yRVYmsnH74HuaD"",
          ""name"": ""Telegram account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""bfc5c52e-313d-4257-bdfa-c542b687a853"",
      ""name"": ""Record To Notion Database"",
      ""type"": ""n8n-nodes-base.notion"",
      ""position"": [
        1580,
        120
      ],
      ""parameters"": {
        ""options"": {},
        ""resource"": ""databasePage"",
        ""databaseId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1d858554-d218-807c-936c-d06c8a8ec769"",
          ""cachedResultUrl"": ""https://www.notion.so/1d858554d218807c936cd06c8a8ec769"",
          ""cachedResultName"": ""Pengeluaran Rizqi Dini""
        },
        ""propertiesUi"": {
          ""propertyValues"": [
            {
              ""key"": ""Name|title"",
              ""title"": ""={{ $json.name }}""
            },
            {
              ""key"": ""Quantity|number"",
              ""numberValue"": ""={{ $json.qty }}""
            },
            {
              ""key"": ""Price|number"",
              ""numberValue"": ""={{ $json.price }}""
            },
            {
              ""key"": ""Total|number"",
              ""numberValue"": ""={{ $json.total }}""
            },
            {
              ""key"": ""Category|select"",
              ""selectValue"": ""={{ $json.category }}""
            },
            {
              ""key"": ""Date|rich_text"",
              ""textContent"": ""={{ $json.date }}""
            },
            {
              ""key"": ""Tax|number"",
              ""numberValue"": ""={{ $json.tax }}""
            }
          ]
        }
      },
      ""credentials"": {
        ""notionApi"": {
          ""id"": ""AhjWhO7Jpc5x7xKG"",
          ""name"": ""Notion account""
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""f514554b-eb9e-47e2-ad6b-0b13036beaf4"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        40,
        60
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 340,
        ""height"": 280,
        ""content"": ""📸 INVOICE INPUT 📸\nBot listens here for photos of your receipts/invoices.\nEnsure your Telegram Bot API token is set in credentials.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""53fc4c77-3f16-4cb8-82e8-f4810af1f569"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        600,
        60
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 360,
        ""height"": 460,
        ""content"": ""🤖 AI MAGIC HAPPENS HERE 🧠\n- Image is sent to Google Gemini for data extraction.\n- Check 'Basic LLM Chain' to customize the AI prompt (e.g., categories, output format).\n- Requires Google Gemini API credentials.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c6fb1193-7cc9-4f45-8a5f-20af41cdf3c8"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        980,
        340
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 280,
        ""height"": 200,
        ""content"": ""✨ STRUCTURING AI DATA ✨\nConverts the AI's text output into a usable JSON object.\nCheck the schema if you modify the AI prompt significantly.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""79a4e9ba-d1ea-4cfc-870c-145bae80c9b4"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1320,
        0
      ],
      ""parameters"": {
        ""color"": 2,
        ""width"": 380,
        ""height"": 240,
        ""content"": ""📝 SAVING TO NOTION 📝\n- Extracted transaction data is saved here.\n- Configure with your Notion API key & Database ID.\n- Map fields correctly to your database columns!""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9406306b-9f3d-4877-a888-1f5e16a431c1"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        20,
        760
      ],
      ""parameters"": {
        ""height"": 280,
        ""content"": ""REPORTING SCHEDULE 🗓️\nSet how often you want to receive your spending report (e.g., weekly, monthly).""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1b6c8a28-b0f0-44fb-be02-21725d950716"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        320,
        760
      ],
      ""parameters"": {
        ""color"": 2,
        ""width"": 280,
        ""height"": 380,
        ""content"": ""📊 FETCHING DATA FOR REPORT 📊\n- Retrieves transactions from Notion for the report period.\n- Default: \""Past Week\"". Adjust filter as needed.\n- Requires Notion API credentials & Database ID.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4612006e-04a9-4ad5-9f05-d49ec13f31cf"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        660,
        740
      ],
      ""parameters"": {
        ""width"": 320,
        ""height"": 360,
        ""content"": ""➕ SUMMARIZING SPENDING ➕\nAggregates your expenses, usually by category,\nto prepare for the chart.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""103132cf-37a6-455f-b19f-14d3e17af912"",
      ""name"": ""Sticky Note9"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1040,
        740
      ],
      ""parameters"": {
        ""width"": 300,
        ""height"": 340,
        ""content"": ""📈 GENERATING VISUAL REPORT 📈\nCreates the actual chart image based on your spending data.\nYou can customize chart type (bar, pie, etc.) here.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""24324366-33e5-4097-ab36-aac31cef0006"",
      ""name"": ""Sticky Note10"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1380,
        640
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 300,
        ""height"": 300,
        ""content"": ""📤 SENDING REPORT TO TELEGRAM 📤\n- Delivers the generated chart to your chosen Telegram chat/group.\n- Set the correct Chat ID and Bot API token.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e9fc1140-411b-411a-87a6-bbe9718ba3b3"",
      ""name"": ""Sticky Note11"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1320,
        280
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 300,
        ""height"": 280,
        ""content"": ""💬 TRANSACTION SUMMARY 💬\nSends a confirmation message back to the user in Telegram\nwith a summary of the recorded expense.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""013fd587-3504-44b8-97e1-09cad47a0089"",
      ""name"": ""Sticky Note12"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        40,
        360
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 460,
        ""height"": 240,
        ""content"": ""  🔑 CREDENTIALS NEEDED 🔑\n  Remember to set up API keys/tokens for:\n  - Telegram\n  - Google Gemini\n  - Notion\n\n  💡 CUSTOMIZE ME! 💡\n  - Adjust AI prompts for better accuracy.\n  - Change Notion database structure.\n  - Modify report frequency and content.\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""8f6f0fdb-d3be-4464-a7db-ea4d642a4f55"",
      ""name"": ""Telegram"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        320,
        160
      ],
      ""webhookId"": ""6e801e0b-72d1-42a9-ac47-61ac113a01d2"",
      ""parameters"": {
        ""fileId"": ""={{ $json.message.photo[3].file_id }}"",
        ""resource"": ""file""
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""J8yRVYmsnH74HuaD"",
          ""name"": ""Telegram account""
        }
      },
      ""typeVersion"": 1.2
    }
  ],
  ""active"": true,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""a192c50c-4a77-44ee-b98a-f18d4ced2cb1"",
  ""connections"": {
    ""Telegram"": {
      ""main"": [
        [
          {
            ""node"": ""Get Image Info"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Generate Chart"": {
      ""main"": [
        [
          {
            ""node"": ""Send Chart Image to Group or Private Chat"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get Image Info"": {
      ""main"": [
        [
          {
            ""node"": ""Basic LLM Chain"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Basic LLM Chain"": {
      ""main"": [
        [
          {
            ""node"": ""Split Out | data transaction"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Sendback to chat and give summarize text"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Google Gemini Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Basic LLM Chain"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Summarize Transaction Data"": {
      ""main"": [
        [
          {
            ""node"": ""Convert Data to JSON chart payload"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get Recent Data from Notions"": {
      ""main"": [
        [
          {
            ""node"": ""Summarize Transaction Data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Parse To your object | Table"": {
      ""ai_outputParser"": [
        [
          {
            ""node"": ""Basic LLM Chain"",
            ""type"": ""ai_outputParser"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Split Out | data transaction"": {
      ""main"": [
        [
          {
            ""node"": ""Record To Notion Database"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Convert Data to JSON chart payload"": {
      ""main"": [
        [
          {
            ""node"": ""Generate Chart"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Telegram Trigger | When recive photo"": {
      ""main"": [
        [
          {
            ""node"": ""Telegram"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Schedule Trigger | for send chart report"": {
      ""main"": [
        [
          {
            ""node"": ""Get Recent Data from Notions"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Parse Incoming Invoices From Outlook using AI Document Understanding,"{
  ""meta"": {
    ""instanceId"": ""408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""78bb4afe-ccc6-4b5e-90ba-50253f761f14"",
      ""name"": ""Split Attachments"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        -80,
        140
      ],
      ""parameters"": {
        ""jsCode"": ""let results = [];\n\nfor (const item of $input.all()) {\n    for (key of Object.keys(item.binary)) {\n        results.push({\n            json: {\n                fileName: item.binary[key].fileName\n            },\n            binary: {\n                data: item.binary[key],\n            }\n        });\n    }\n}\n\nreturn results;""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""48a79e8c-27c2-4cdb-a6f7-241158c10962"",
      ""name"": ""Download Attachments"",
      ""type"": ""n8n-nodes-base.microsoftOutlook"",
      ""position"": [
        -260,
        140
      ],
      ""webhookId"": ""2eb57df9-1579-4af2-a30e-f412b268aba2"",
      ""parameters"": {
        ""options"": {
          ""downloadAttachments"": true
        },
        ""messageId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $json.id }}""
        },
        ""operation"": ""get""
      },
      ""credentials"": {
        ""microsoftOutlookOAuth2Api"": {
          ""id"": ""EWg6sbhPKcM5y3Mr"",
          ""name"": ""Microsoft Outlook account""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""7dda1618-dfa7-4325-b5ff-7935602a3043"",
      ""name"": ""Parse Output"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        680,
        400
      ],
      ""parameters"": {
        ""mode"": ""raw"",
        ""options"": {},
        ""jsonOutput"": ""={{\n{\n  invoice: $json.candidates[0].content.parts[0].text.parseJson(),\n  email: {\n    ...$('Message Ref').first().json,\n    body: null\n  }\n}\n}}""
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""4d45cf33-5a14-4fe4-9485-38de901113aa"",
      ""name"": ""For Each Message"",
      ""type"": ""n8n-nodes-base.splitInBatches"",
      ""position"": [
        -640,
        140
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""b5c70065-3ed8-4024-9a10-247810c062a4"",
      ""name"": ""Message Ref"",
      ""type"": ""n8n-nodes-base.noOp"",
      ""position"": [
        -440,
        140
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""cafcf919-25c3-46bd-8dd3-8cc0201c93cb"",
      ""name"": ""Message Classifier"",
      ""type"": ""@n8n/n8n-nodes-langchain.textClassifier"",
      ""position"": [
        -1160,
        140
      ],
      ""parameters"": {
        ""options"": {
          ""fallback"": ""other""
        },
        ""inputText"": ""=from: {{ $json.from.emailAddress.address }} <{{ $json.from.emailAddress.address }}>\nsubject: {{ $json.subject }}\n<message>\n{{ $json.markdown.split('\\n**From**')[0].trim() }}\n</message>"",
        ""categories"": {
          ""categories"": [
            {
              ""category"": ""invoice"",
              ""description"": ""Message is an invoice is being issued""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""f97f9b24-828b-4dd8-a0e8-b7ab670403a8"",
      ""name"": ""Extract from File"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        -440,
        340
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""binaryToPropery""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""99d49549-af7c-46aa-b321-2b9955333812"",
      ""name"": ""Markdown"",
      ""type"": ""n8n-nodes-base.markdown"",
      ""position"": [
        -1340,
        140
      ],
      ""parameters"": {
        ""html"": ""={{ $json.body.content }}"",
        ""options"": {},
        ""destinationKey"": ""markdown""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""18455ee7-e87b-433c-baef-28444358e486"",
      ""name"": ""Empty Response"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        680,
        600
      ],
      ""parameters"": {
        ""mode"": ""raw"",
        ""options"": {},
        ""jsonOutput"": ""={{\n{\n  invoice: null,\n  email: {\n    ...$('Message Ref').first().json,\n    body: null\n  }\n}\n}}""
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""d0b4bab2-5955-4d05-8e4f-4a23fac98c45"",
      ""name"": ""Wait"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        880,
        600
      ],
      ""webhookId"": ""6dae0a77-74f4-4d85-a58b-e55c44fbea58"",
      ""parameters"": {
        ""amount"": 1
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""2600020d-9751-44df-abcd-48026c21f592"",
      ""name"": ""Filter Invoices"",
      ""type"": ""n8n-nodes-base.filter"",
      ""position"": [
        -80,
        340
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""5240de52-3b02-4151-8c2b-b0522582700e"",
              ""operator"": {
                ""type"": ""boolean"",
                ""operation"": ""true"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{\n(function(output) {\n  return output.is_invoice && output.is_issued_to_company;\n})(\n  $json.candidates[0].content.parts[0].text.parseJson()\n)\n}}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""b31d359e-d949-4d56-b32e-c49b35124ff7"",
      ""name"": ""Has Invoice?"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        280,
        400
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""57f433cd-5861-434f-80f2-ce28d7c22c26"",
              ""operator"": {
                ""type"": ""object"",
                ""operation"": ""notEmpty"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $input.first().json }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""857e2282-d7f7-438b-be87-a1c36986cfc0"",
      ""name"": ""Schedule Trigger"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        -1820,
        120
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {
              ""field"": ""hours""
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""7292a6cc-3b59-4d9b-b87d-3ba55bbc0c67"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -780,
        -120
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 950,
        ""height"": 680,
        ""content"": ""## 2. Classify If Attachment is Invoice\n[Learn more about the Outlook node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.microsoftoutlook)\n\nFor each qualifying message, we will need to know which of the attachments contained are actual invoice documents. To do this, we can use Google Gemini's docuemnt understanding capabilities to validate this test. We're using Gemini specifically in this case because at time of writing, Gemini is the only one of the few LLM providers that are currently accepting PDF documents. If you're not using Gemini, you may need to convert the PDF document to an image first - [check out an example of this here](https://n8n.io/workflows/2421-transcribing-bank-statements-to-markdown-using-gemini-vision-ai/).""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ed35c1dc-625d-4ffb-b186-fad514f6df81"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        200,
        180
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 850,
        ""height"": 580,
        ""content"": ""## 3. Extract Invoice Details\n[Learn more about the HTTP Request node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/)\n\nWith our invoice PDFs ready to go, we'll again use the Gemini API to extract the required details from them. I'm using the HTTP request node because unfortunately, Gemini works best for data extraction when using the API's \""generationConfig\"" parameter which isn't supported in n8n's native AI nodes. The output is then merged with the original email to keep the reference between them.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""42a9036c-8040-41a7-9366-658ba3e31c70"",
      ""name"": ""Get Recent Messages"",
      ""type"": ""n8n-nodes-base.microsoftOutlook"",
      ""position"": [
        -1540,
        140
      ],
      ""webhookId"": ""e3957f65-145c-4c0d-ac66-31342a1bc888"",
      ""parameters"": {
        ""fields"": [
          ""body"",
          ""categories"",
          ""conversationId"",
          ""from"",
          ""hasAttachments"",
          ""internetMessageId"",
          ""sender"",
          ""subject"",
          ""toRecipients"",
          ""receivedDateTime"",
          ""webLink""
        ],
        ""output"": ""fields"",
        ""options"": {},
        ""filtersUI"": {
          ""values"": {
            ""filters"": {
              ""receivedAfter"": ""={{ $now.minus({ \""hour\"": 1 }).toISO() }}"",
              ""hasAttachments"": true,
              ""foldersToInclude"": [
                ""AAMkAGZkNmEzOTVhLTk3NDQtNGQzNi1hNDY2LTE2MWFlMzUyNTczMgAuAAAAAAA27qsaXv92QoGqcRnqoMpSAQDhSgSaDoa3Sp4gzAabpsdOAAAAAAEMAAA=""
              ]
            }
          }
        },
        ""operation"": ""getAll"",
        ""returnAll"": true
      },
      ""credentials"": {
        ""microsoftOutlookOAuth2Api"": {
          ""id"": ""EWg6sbhPKcM5y3Mr"",
          ""name"": ""Microsoft Outlook account""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""86838ba4-0d57-4571-983f-c17005f39333"",
      ""name"": ""Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""position"": [
        -1080,
        280
      ],
      ""parameters"": {
        ""options"": {},
        ""modelName"": ""models/gemini-2.0-flash""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""dSxo6ns5wn658r8N"",
          ""name"": ""Google Gemini(PaLM) Api account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""8ecb7298-3512-40fe-b2bc-70fb4ed5965d"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1620,
        -120
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 810,
        ""height"": 560,
        ""content"": ""## 1. Check for Invoice Emails\n[Learn more about the text classifier node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.text-classifier/)\n\nThe Outlook node fetches all inbox messages within the last hour and classifies each message prior to downloading the attachments. This is a really good early check to reduce the comsumption of resources. In this use-case, using AI for contextual reasoning regarding the intent of the email can be much more powerful than simple keyword matching. The latter is more prone to matching false positives.\n*Note: we're not using the Outlook Trigger node because it doesn't allow setting for dateTime filters.*""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a3c28ab3-ecab-46fd-86bb-62bf8a222f37"",
      ""name"": ""Microsoft Excel 365"",
      ""type"": ""n8n-nodes-base.microsoftExcel"",
      ""position"": [
        420,
        -40
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldsUi"": {
          ""values"": [
            {}
          ]
        },
        ""resource"": ""worksheet"",
        ""workbook"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""ABCDEFGHIJ""
        },
        ""operation"": ""append"",
        ""worksheet"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""{00000000-0001-0000-0000-000000000000}""
        }
      },
      ""credentials"": {
        ""microsoftExcelOAuth2Api"": {
          ""id"": ""56tIUYYVARBe9gfX"",
          ""name"": ""Microsoft Excel account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""69f2a975-ab91-4cbc-be72-633c4601bf6f"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        200,
        -220
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 530,
        ""height"": 380,
        ""content"": ""## 4. Upload to Excel Workbook\n[Read more about the Excel node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.microsoftexcel/)\n\nFinally to capture the data, we can map these to an Excel workflow which can be reviewed by a human before it enters the accounting system.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""68f7c7f3-5ddd-4291-adb3-78f3a297fd8e"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -2120,
        -660
      ],
      ""parameters"": {
        ""width"": 480,
        ""height"": 960,
        ""content"": ""## Try it out\n### This n8n template monitors an Outlook mailbox for invoices, automatically parses/extracts data from them and then uploads the output to an Excel Workbook.\n\nOne of my top workflow requests, this template can save in order of 100s of hours of manual labour for you or your finance team.\n\n### How it works\n* A scheduled trigger is set to fetch recent Outlook messages to the Accounts receivable mailbox.\n* Each message is analysed to determine whether or not it from a supplier and is issuing/contains an invoice.\n* For each valid message, the attachments are downloaded and non-invoice documents are filtered out via AI Vision classification.\n* Invoices are then processed through a AI vision model again to extract the details.\n* The extracted data can then be used for reconciliation or otherwise. For this demonstration, we'll just append the row to an Excel sheet for now.\n\n### How to use\n* Ensure your Microsoft365 credential points to the correct mailbox. If a shared folder is used, toggle \""shared folder\"" option to \""on\"" and for the principal ID, use the email address.\n* If you receive lots of other types of messages such as replies and forwards, you may want to implement additional checks to prevent processing invoices twice. The \""remove duplicates\"" node can help with this.\n\n### Need Help?\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\n\nHappy Hacking!""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a55323b4-2079-4a7c-8ba2-f20ef0930b55"",
      ""name"": ""Invoice Classifier With Gemini 2.0"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -260,
        340
      ],
      ""parameters"": {
        ""url"": ""https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={{\n{\n  \""contents\"": [\n    {\n      \""parts\"": [\n        {\n          \""inline_data\"": {\n            \""mime_type\"": $('Split Attachments').item.binary.data.mimeType,\n            \""data\"": $json.data\n          }\n        },\n        {\n          \""text\"": `You are an accounts receivable agent who is helping to identify if the document is an invoice, the invoice's supplier is not our company and the invoice is issued to our company.`\n        }\n      ]\n    }\n  ],\n  \""generationConfig\"": {\n    \""response_mime_type\"": \""application/json\"",\n    \""response_schema\"": {\n      \""type\"": \""OBJECT\"",\n      \""required\"": [\n        \""is_invoice\"",\n        \""is_issued_to_company\""\n      ],\n      \""properties\"": {\n        \""is_invoice\"": { \""type\"": \""boolean\"" },\n        \""is_issued_to_company\"": { \""type\"": \""boolean\"" }\n      }\n    }\n  }\n}\n}}"",
        ""sendBody"": true,
        ""specifyBody"": ""json"",
        ""authentication"": ""predefinedCredentialType"",
        ""nodeCredentialType"": ""googlePalmApi""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""dSxo6ns5wn658r8N"",
          ""name"": ""Google Gemini(PaLM) Api account""
        }
      },
      ""executeOnce"": false,
      ""retryOnFail"": false,
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""f696737d-cddf-411b-a427-cc72bd68d248"",
      ""name"": ""File-Based OCR with Gemini 2.0"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""onError"": ""continueErrorOutput"",
      ""position"": [
        480,
        400
      ],
      ""parameters"": {
        ""url"": ""https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={{\n{\n  \""contents\"": [\n    {\n      \""parts\"": [\n        {\n          \""inline_data\"": {\n            \""mime_type\"": $('Split Attachments').item.binary.data.mimeType,\n            \""data\"": $('Extract from File').item.json.data\n          }\n        },\n        {\n          \""text\"": `You are an accounts receivable agent who is helping to extract information from a supplier's invoice issued to our company.`\n        }\n      ]\n    }\n  ],\n  \""generationConfig\"": {\n    \""response_mime_type\"": \""application/json\"",\n    \""response_schema\"": {\n      \""type\"": \""OBJECT\"",\n      \""required\"": [\n        \""invoice_number\"",\n        \""invoice_date\"",\n        \""invoice_amount\"",\n        \""invoice_due_date\"",\n        \""supplier_name\"",\n        \""supplier_address\"",\n        \""supplier_telephone\"",\n        \""supplier_email\"",\n        \""booking_number\"",\n        \""booking_date\"",\n        \""booking_name\"",\n        \""guest_name\"",\n        \""guest_quantity\"",\n        \""services\""\n      ],\n      \""properties\"": {\n        \""invoice_number\"": { \""type\"": \""string\"" },\n        \""invoice_date\"": { \""type\"": \""string\"", \""nullable\"": true },\n        \""invoice_amount\"": { \""type\"": \""number\"", \""nullable\"": true },\n        \""invoice_due_date\"": { \""type\"": \""string\"", \""nullable\"": true },\n        \""recipient_name\"": { \""type\"": \""string\"", \""nullable\"": true },\n        \""recipient_address\"": { \""type\"": \""string\"", \""nullable\"": true },\n        \""recipient_company_number\"": { \""type\"": \""string\"", \""nullable\"": true },\n        \""supplier_name\"": { \""type\"": \""string\"", \""nullable\"": true },\n        \""supplier_address\"": { \""type\"": \""string\"", \""nullable\"": true },\n        \""supplier_telephone\"": { \""type\"": \""string\"", \""nullable\"": true },\n        \""supplier_email\"": { \""type\"": \""string\"", \""nullable\"": true },\n        \""supplier_company_number\"": { \""type\"": \""string\"", \""nullable\"": true },\n        \""booking_number\"": { \""type\"": \""string\"", \""nullable\"": true },\n        \""booking_date\"": { \""type\"": \""string\"", \""nullable\"": true },\n        \""booking_name\"": { \""type\"": \""string\"", \""nullable\"": true },\n        \""guest_name\"": { \""type\"": \""string\"", \""nullable\"": true },\n        \""guest_quantity\"": { \""type\"": \""number\"", \""nullable\"": true },\n        \""services\"": {\n          \""type\"": \""array\"",\n          \""items\"": {\n            \""type\"": \""object\"",\n            \""required\"": [],\n            \""properties\"": {\n              \""name\"": { \""type\"": \""string\"" },\n              \""date\"": { \""type\"": \""string\"", \""nullable\"": true },\n              \""description\"": { \""type\"": \""string\"", \""nullable\"": true },\n              \""quantity\"": { \""type\"": \""number\"", \""nullable\"": true },\n              \""total\"": { \""type\"": \""number\"" }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n}}"",
        ""sendBody"": true,
        ""specifyBody"": ""json"",
        ""authentication"": ""predefinedCredentialType"",
        ""nodeCredentialType"": ""googlePalmApi""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""dSxo6ns5wn658r8N"",
          ""name"": ""Google Gemini(PaLM) Api account""
        }
      },
      ""executeOnce"": false,
      ""retryOnFail"": false,
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""1d76c0c8-a03b-4f0c-b76d-53369ab5d6e8"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        760,
        -220
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 400,
        ""height"": 140,
        ""content"": ""### Where Next? It's Up to You!\nThis template is deliberately cut short to demonstrate the build but should be easily modified to upload directly to an accounting system or even extended for other tasks such as invoice reconciliation and more.""
      },
      ""typeVersion"": 1
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""Wait"": {
      ""main"": [
        [
          {
            ""node"": ""For Each Message"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Message Classifier"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Markdown"": {
      ""main"": [
        [
          {
            ""node"": ""Message Classifier"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Message Ref"": {
      ""main"": [
        [
          {
            ""node"": ""Download Attachments"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Has Invoice?"": {
      ""main"": [
        [
          {
            ""node"": ""File-Based OCR with Gemini 2.0"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Empty Response"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Parse Output"": {
      ""main"": [
        [
          {
            ""node"": ""Wait"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Empty Response"": {
      ""main"": [
        [
          {
            ""node"": ""Wait"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Filter Invoices"": {
      ""main"": [
        [
          {
            ""node"": ""Has Invoice?"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""For Each Message"": {
      ""main"": [
        [
          {
            ""node"": ""Microsoft Excel 365"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Message Ref"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Schedule Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""Get Recent Messages"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract from File"": {
      ""main"": [
        [
          {
            ""node"": ""Invoice Classifier With Gemini 2.0"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Split Attachments"": {
      ""main"": [
        [
          {
            ""node"": ""Extract from File"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Message Classifier"": {
      ""main"": [
        [
          {
            ""node"": ""For Each Message"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        []
      ]
    },
    ""Get Recent Messages"": {
      ""main"": [
        [
          {
            ""node"": ""Markdown"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Download Attachments"": {
      ""main"": [
        [
          {
            ""node"": ""Split Attachments"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""File-Based OCR with Gemini 2.0"": {
      ""main"": [
        [
          {
            ""node"": ""Parse Output"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Empty Response"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Invoice Classifier With Gemini 2.0"": {
      ""main"": [
        [
          {
            ""node"": ""Filter Invoices"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        []
      ]
    }
  }
}",
"Extract & Classify Invoices & Receipts with Gmail, OpenAI and Google Drive","{
  ""meta"": {
    ""instanceId"": ""d1b60f1865ef6504ee3af5be4ef9a7387762b4132615a52de808456d52e8d336"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""c84f3a9a-66b3-4a09-b06a-9b399ea574b8"",
      ""name"": ""OpenAI"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        420,
        -240
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4.1-mini"",
          ""cachedResultName"": ""GPT-4.1-MINI""
        },
        ""options"": {},
        ""messages"": {
          ""values"": [
            {
              ""content"": ""=Does this PDF file look like a {{ $(\""Configure\"").first().json[\""Match on\""] }}? Return \""true\"" if it is a {{ $(\""Configure\"").first().json[\""Match on\""] }} and \""false\"" if not. Only reply with lowercase letters \""true\"" or \""false\"".\n\nThis is the PDF filename:\n```\n{{ $binary.data.fileName }}\n```\n\nThis is the PDF text content:\n```\n{{ $json.text }}\n```""
            }
          ]
        }
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""prYAbsQvWl1pPbdL"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""ea1fbc5b-1859-4d65-8401-30baa95fcc52"",
      ""name"": ""Configure"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -700,
        0
      ],
      ""parameters"": {
        ""values"": {
          ""number"": [
            {
              ""name"": ""maxTokenSize"",
              ""value"": 8000
            },
            {
              ""name"": ""replyTokenSize"",
              ""value"": 50
            }
          ],
          ""string"": [
            {
              ""name"": ""Match on"",
              ""value"": ""receipt or invoice that can be considered a software engineering business cost""
            },
            {
              ""name"": ""Google Drive folder to upload matched PDFs"",
              ""value"": ""https://drive.google.com/drive/folders/[put_folder_id_here]""
            },
            {
              ""name"": ""sendInvoicesTo""
            }
          ],
          ""boolean"": [
            {
              ""name"": ""sendEmail"",
              ""value"": ""={{ $('Webhook').item.json.body.sendEmail === \""true\"" }}""
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3ee63612-c1e7-40e6-a38f-f77f5ee3efa4"",
      ""name"": ""Iterate over email attachments"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        -200,
        0
      ],
      ""parameters"": {
        ""jsCode"": ""// https://community.n8n.io/t/iterating-over-email-attachments/13588/3\nlet results = [];\n\nfor (const item of $input.all()) {\n  console.log(item);\n  for (const key of Object.keys(item.binary)) {\n    results.push({\n        json: {},\n        binary: {\n            data: item.binary[key],\n        }\n    });\n  }\n}\n\nreturn results;""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3e638471-c1c5-4bab-aa2a-12a1777225ec"",
      ""name"": ""Not a PDF"",
      ""type"": ""n8n-nodes-base.noOp"",
      ""position"": [
        120,
        80
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""b5af902b-2d59-49ee-b6d8-e387c59b89fd"",
      ""name"": ""Is text within token limit?"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        300,
        -100
      ],
      ""parameters"": {
        ""conditions"": {
          ""boolean"": [
            {
              ""value1"": ""={{ $json.text.length() / 4 <= $('Configure').first().json.maxTokenSize - $('Configure').first().json.replyTokenSize }}"",
              ""value2"": true
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a0a8895c-ef8b-44e7-9294-1bcf629d0973"",
      ""name"": ""Merge"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        720,
        -120
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {
          ""clashHandling"": {
            ""values"": {
              ""resolveClash"": ""preferInput1""
            }
          }
        },
        ""combinationMode"": ""mergeByPosition""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""7565118a-6d44-4583-a19f-cb4177378d33"",
      ""name"": ""Is matched"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        880,
        -120
      ],
      ""parameters"": {
        ""conditions"": {
          ""string"": [
            {
              ""value1"": ""={{ $json.message.content }}"",
              ""value2"": ""true""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""074ffb7a-f83e-44b8-84fe-7b85f7245bb0"",
      ""name"": ""Upload file to folder"",
      ""type"": ""n8n-nodes-base.googleDrive"",
      ""position"": [
        1100,
        -140
      ],
      ""parameters"": {
        ""name"": ""={{ $binary.data.fileName }}"",
        ""options"": {},
        ""parents"": [
          ""={{ $('Create folder').first().json.id }}""
        ],
        ""binaryData"": true
      },
      ""credentials"": {
        ""googleDriveOAuth2Api"": {
          ""id"": ""xXHySx4T77sDdTqY"",
          ""name"": ""Google Drive account""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""7681eb62-ba86-4c89-9b88-3ce6fc438bd4"",
      ""name"": ""Webhook"",
      ""type"": ""n8n-nodes-base.webhook"",
      ""position"": [
        -1080,
        0
      ],
      ""webhookId"": ""cded3af3-31df-47c2-a826-ff84eb4a41df"",
      ""parameters"": {
        ""path"": ""cded3af3-31df-47c2-a826-ff84eb4a41df"",
        ""options"": {},
        ""httpMethod"": ""POST"",
        ""responseMode"": ""responseNode"",
        ""authentication"": ""headerAuth""
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""90SsOYPPIe3Qv5Rq"",
          ""name"": ""Header Auth account""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""aab3d940-55c2-40d3-917a-83412d4e378d"",
      ""name"": ""Respond to Webhook"",
      ""type"": ""n8n-nodes-base.respondToWebhook"",
      ""position"": [
        -720,
        -240
      ],
      ""parameters"": {
        ""options"": {
          ""responseCode"": 202
        },
        ""respondWith"": ""json"",
        ""responseBody"": ""={\n  \""status\"": \""Accepted\"",\n  \""driveFolderUrl\"": \""{{ \""https://drive.google.com/drive/folders/\"" + $json.id }}\""\n}""
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""29a4122f-0112-4157-a50d-0a6cf83ab7fd"",
      ""name"": ""Create folder"",
      ""type"": ""n8n-nodes-base.googleDrive"",
      ""position"": [
        -920,
        0
      ],
      ""parameters"": {
        ""name"": ""={{ \""invoices_\"" + $json.body.startDate.split('T')[0] }}"",
        ""driveId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""My Drive""
        },
        ""options"": {},
        ""folderId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""root"",
          ""cachedResultName"": ""/ (Root folder)""
        },
        ""resource"": ""folder""
      },
      ""credentials"": {
        ""googleDriveOAuth2Api"": {
          ""id"": ""xXHySx4T77sDdTqY"",
          ""name"": ""Google Drive account""
        }
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""df86428f-7e63-4fd9-944c-f48af72af495"",
      ""name"": ""Aggregate attachments"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        1200,
        -340
      ],
      ""parameters"": {
        ""jsCode"": ""// \""items\"" is the array coming from the previous node (14 items)\nconst merged = { json: {}, binary: {} };\n\nfor (const item of $input.all()) {\n  const data = {\n    [item.binary.data.fileName]: item.binary.data\n  };\n  Object.assign(merged.binary, data); // copy every file property\n}\n\nreturn [merged];     // one single item goes out""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""72a21bfa-6e3b-421a-a4ca-dea9e09a5b0b"",
      ""name"": ""Send email with invoices?"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1000,
        -320
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""63caf3d8-39bd-4300-aa7e-8c0ecfc87576"",
              ""operator"": {
                ""type"": ""boolean"",
                ""operation"": ""true"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $('Configure').first().json.sendEmail }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""bb038635-eb69-447b-a85b-e9c3caebfe3a"",
      ""name"": ""Send to my accountant"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        1360,
        -280
      ],
      ""webhookId"": ""3ea4dac1-58fe-4d0e-811b-065ecaef77df"",
      ""parameters"": {
        ""sendTo"": ""test@example.com"",
        ""message"": ""Hello, here are my invoices and receipts."",
        ""options"": {
          ""attachmentsUi"": {
            ""attachmentsBinary"": [
              {
                ""property"": ""={{ Object.keys($binary).join(',') }}""
              }
            ]
          }
        },
        ""subject"": ""={{ \n  (() => {\n    const startDate = $node['Webhook'].json.body.startDate.split('T')[0];\n    const endDate = $node['Webhook'].json.body.endDate.split('T')[0];\n    return `Dokumenty kosztowe za okres od ${startDate} do ${endDate}`;\n  })() \n}}"",
        ""emailType"": ""text""
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""PPgHF95PrpAMBlbG"",
          ""name"": ""Gmail account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""7b2e5c6c-0a95-4347-97a9-c9ffbc0e3af2"",
      ""name"": ""Get emails with attachments"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        -500,
        0
      ],
      ""webhookId"": ""6e2ca9f7-6d22-4d94-86bc-8a299bc8e752"",
      ""parameters"": {
        ""simple"": false,
        ""filters"": {
          ""q"": ""has:attachment"",
          ""sender"": """",
          ""receivedAfter"": ""={{ $('Webhook').item.json.body.startDate }}"",
          ""receivedBefore"": ""={{ $('Webhook').item.json.body.endDate }}""
        },
        ""options"": {
          ""downloadAttachments"": true,
          ""dataPropertyAttachmentsPrefixName"": ""attachment_""
        },
        ""operation"": ""getAll"",
        ""returnAll"": true
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""PPgHF95PrpAMBlbG"",
          ""name"": ""Gmail account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""6d5b2c1b-657d-44bf-980d-fd428fd8d832"",
      ""name"": ""Read PDF email attachments"",
      ""type"": ""n8n-nodes-base.readPDF"",
      ""onError"": ""continueErrorOutput"",
      ""position"": [
        120,
        -80
      ],
      ""parameters"": {},
      ""notesInFlow"": false,
      ""typeVersion"": 1
    },
    {
      ""id"": ""3166f45c-306f-483a-b2c6-6768abc916a0"",
      ""name"": ""Is attachment a PDF?"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        -40,
        0
      ],
      ""parameters"": {
        ""conditions"": {
          ""string"": [
            {
              ""value1"": ""={{ $binary.data.fileExtension }}"",
              ""value2"": ""pdf""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""866b286a-7b9b-4506-aa6b-d2049b249991"",
      ""name"": ""Optional filter for emails"",
      ""type"": ""n8n-nodes-base.filter"",
      ""position"": [
        -360,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""687c4cd0-ada5-4dc1-8707-1a9c3b551251"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notEquals""
              },
              ""leftValue"": ""={{ $json.to.value[0].address }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""56133dba-bc93-4f65-be42-995164a45c03"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1600,
        -340
      ],
      ""parameters"": {
        ""width"": 440,
        ""height"": 880,
        ""content"": ""## Gmail PDF Invoice/Receipt Classifier & Google Drive Uploader (via n8n & OpenAI)\n\n_**DISCLAIMER**: AI classification isn't perfect. Always double-check that the correct documents were identified and uploaded._\n\nThis n8n workflow, triggered via a webhook, scans your Gmail for emails within a specified date range, extracts PDF attachments, and uses OpenAI to determine if each PDF matches a defined category (defaulting to \""receipt or invoice\""). Matched PDFs are then uploaded to a uniquely named Google Drive folder based on the date range. You can customize the classification term (e.g., change \""receipt or invoice\"" to \""contract\"") and optionally have the workflow email the collected PDFs to a specified address.\n\n### How it works\n1.  Triggers via a `Webhook` receiving a start date, end date, and an optional flag to send an email.\n2.  Creates a dated folder in `Google Drive` (e.g., `invoices_YYYY-MM-DD_YYYY-MM-DD`).\n3.  Fetches emails with attachments from `Gmail` within the specified date range.\n4.  Iterates through each attachment, filtering specifically for `PDF` files.\n5.  Extracts text from each PDF (skipping if the text exceeds token limits set in the `Configure` node).\n6.  Uses the `OpenAI` node to ask if the PDF content and filename look like the item defined in the `Configure` node's \""Match on\"" field (e.g., \""receipt or invoice\"").\n7.  If OpenAI responds with \""true\"", the original `PDF` file is uploaded to the `Google Drive` folder created in step 2.\n8.  If the initial webhook request included the flag to send an email, it aggregates all successfully matched PDFs and sends them via `Gmail` to the address specified in the `Configure` node.\n\nWorkflow written by [Tom](https://browsewiz.com)\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""aa5d8126-e2ec-4476-886d-c46379f1c6e2"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -780,
        -40
      ],
      ""parameters"": {
        ""width"": 260,
        ""height"": 1000,
        ""content"": ""## Parameters\n\n\n\n\n\n\n\n\n\n* **`maxTokenSize`** (Number)\n    *   **Limits PDF text length** (estimated input tokens) sent to OpenAI for classification. Prevents errors/high costs on long documents.\n    *   *Default: 8000*\n\n*   **`replyTokenSize`** (Number)\n    *   **Reserves tokens for OpenAI's reply** ('true'/'false'). Ensures total tokens stay within limits.\n    *   *Default: 50*\n\n*   **`Match on`** (String)\n    *   **The keyword/phrase OpenAI uses** to identify the desired document type (e.g., \""receipt or invoice\"", \""contract\""). Defines what you're searching for.\n    *   *Default: \""receipt or invoice\""*\n\n*   **`sendInvoicesTo`** (String)\n    *   **Recipient email address** for the final collection of matched PDFs. Used only if `sendEmail` is true.\n    *   *Example: \""accounting@example.com\""*\n\n*   **`sendEmail`** (Boolean)\n    *   **Turns the final email step on (`true`) or off (`false`)**. Set via the initial webhook trigger. If false, files are only uploaded to Drive.\n    *   *Example: `true` or `false`*""
      },
      ""typeVersion"": 1
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""Merge"": {
      ""main"": [
        [
          {
            ""node"": ""Is matched"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI"": {
      ""main"": [
        [
          {
            ""node"": ""Merge"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Webhook"": {
      ""main"": [
        [
          {
            ""node"": ""Create folder"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Configure"": {
      ""main"": [
        [
          {
            ""node"": ""Get emails with attachments"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Is matched"": {
      ""main"": [
        [
          {
            ""node"": ""Upload file to folder"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Send email with invoices?"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Create folder"": {
      ""main"": [
        [
          {
            ""node"": ""Configure"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Respond to Webhook"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Is attachment a PDF?"": {
      ""main"": [
        [
          {
            ""node"": ""Read PDF email attachments"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Not a PDF"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Aggregate attachments"": {
      ""main"": [
        [
          {
            ""node"": ""Send to my accountant"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Send to my accountant"": {
      ""main"": [
        []
      ]
    },
    ""Upload file to folder"": {
      ""main"": [
        []
      ]
    },
    ""Send email with invoices?"": {
      ""main"": [
        [
          {
            ""node"": ""Aggregate attachments"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Optional filter for emails"": {
      ""main"": [
        [
          {
            ""node"": ""Iterate over email attachments"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Read PDF email attachments"": {
      ""main"": [
        [
          {
            ""node"": ""Is text within token limit?"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get emails with attachments"": {
      ""main"": [
        [
          {
            ""node"": ""Optional filter for emails"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Is text within token limit?"": {
      ""main"": [
        [
          {
            ""node"": ""OpenAI"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Merge"",
            ""type"": ""main"",
            ""index"": 1
          }
        ],
        []
      ]
    },
    ""Iterate over email attachments"": {
      ""main"": [
        [
          {
            ""node"": ""Is attachment a PDF?"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Extract Details from Receipts via Telegram with Tesseract and Llama,"{
  ""id"": ""V2s5idMq9qNtiMP9"",
  ""meta"": {
    ""instanceId"": ""c2650793f644091dc80fb900fe63448ad1f4b774008de9608064d67294f8307c"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Tesseract - Money MateX"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""42a12e32-36e3-40c1-9f33-9947c0e263a1"",
      ""name"": ""Format Summary Message"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        120,
        200
      ],
      ""parameters"": {
        ""jsCode"": ""// Get input data from Parser node\nconst inputData = $input.all()[0].json.output || {};\n\n// Default values if data is incomplete\nconst store = inputData.store || { store_name: 'not available', store_location: 'not available' };\nconst transaction = inputData.transaction || { date: 'not available', time: 'not available' };\nconst items = inputData.items || [];\nconst summary = inputData.summary || { total: 'not available', payment_method: 'not available', expense_category: 'not available' };\n\n// Create message with available information\nlet message = '';\n\nif (store.store_name !== 'not available') {\n  message += `📋 Store: ${store.store_name}\\n`;\n}\nif (store.store_location !== 'not available') {\n  message += `📍 Location: ${store.store_location}\\n`;\n}\nif (transaction.date !== 'not available' || transaction.time !== 'not available') {\n  message += `📅 Date: ${transaction.date} ${transaction.time}\\n`;\n}\n\nif (items.length > 0) {\n  message += `\\n🛒 Items:\\n`;\n  items.forEach(item => {\n    message += `- ${item.description || 'not available'}: ${item.total_price || 'not available'}\\n`;\n  });\n}\n\nif (summary.total !== 'not available') {\n  if (parseFloat(summary.total) === 0) {\n    message = 'Looks like an input error, total is 0? Did you get this for free? Please check again.';\n  } else {\n    message += `\\n💸 Total: Rp ${summary.total}\\n`;\n  }\n}\n\nif (summary.expense_category !== 'not available' && parseFloat(summary.total) !== 0) {\n  message += `📌 Category: ${summary.expense_category}\\n`;\n}\n\n// Default message if no information is available\nif (!message) {\n  message = 'No information available from the input.';\n}\n\n// Return message as output\nreturn [\n  {\n    json: {\n      message: message\n    }\n  }\n];""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""4078e97c-debf-4216-8c18-c9e1d8b76fd5"",
      ""name"": ""Get Telegram File"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -600,
        -180
      ],
      ""parameters"": {
        ""url"": ""=https://api.telegram.org/bot<your_bot_token_here>/getFile?file_id={{ $json.message.photo[3].file_id }}"",
        ""options"": {}
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""819b724d-7ab5-4a59-b3d0-52a77013c311"",
      ""name"": ""Download Image"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -300,
        -180
      ],
      ""parameters"": {
        ""url"": ""=https://api.telegram.org/file/bot<your_bot_token_here>/{{ $node['Get Telegram File'].json['result']['file_path'] }}"",
        ""options"": {
          ""response"": {
            ""response"": {
              ""responseFormat"": ""file""
            }
          }
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""9e7d33c8-42d1-4870-8626-087aae8375c6"",
      ""name"": ""Telegram Trigger"",
      ""type"": ""n8n-nodes-base.telegramTrigger"",
      ""position"": [
        -1280,
        0
      ],
      ""webhookId"": ""56161a53-5b4d-46fb-9a9b-d65cdd9a7070"",
      ""parameters"": {
        ""updates"": [
          ""message""
        ],
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""UAvyFVvuZ3qtAjBR"",
          ""name"": ""motun8nmoney""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""094293ee-dcdc-4a19-b33a-5361e12177db"",
      ""name"": ""Sticky - Telegram Trigger"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1280,
        -140
      ],
      ""parameters"": {
        ""color"": null,
        ""width"": 260,
        ""height"": 180,
        ""content"": ""## 📲 **Telegram Trigger**\nReceives user messages (text or photo) from Telegram to start the expense tracking flow.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""49a51aa2-0a1c-417e-868e-d6a5f9284846"",
      ""name"": ""AI Categorizer"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        -200,
        200
      ],
      ""parameters"": {
        ""text"": ""={{ $json.text }}"",
        ""messages"": {
          ""messageValues"": [
            {
              ""message"": ""=You are a financial planner expert with a robust parser algorithm. Category options are:\n- Income\n- Expense\n\nExpense options are:\n- Food & Beverages\n- Household\n- Transport\n\nInput may be in English, or Bahasa Indonesia. Always generate output in Input Language.\n\nAnalyze the input. If no expenses or income detected, return 'not found' and 0 for the total. If date is not specified, use {{ $('Telegram Trigger').item.json.message.date}}. For relative dates (e.g., yesterday, tomorrow), use {{ $('Telegram Trigger').item.json.message.date}} as the base. Example: yesterday is {{ $('Telegram Trigger').item.json.message.date}} - 1.""
            }
          ]
        },
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.6
    },
    {
      ""id"": ""15feb90d-e82f-4c45-8785-2fa9a26e98b7"",
      ""name"": ""Check Invalid Input"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        380,
        200
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""b8408eb5-502b-48bf-b85d-3cea897f60b9"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.message }}"",
              ""rightValue"": ""Looks like an input error, total is 0? Did you get this for free? Please check again.""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""cc4cf545-6ef9-455b-a5b6-9876bc2e3866"",
      ""name"": ""Extract Text Input"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -600,
        200
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""aa52b49e-1087-4623-83cb-905500c36d3c"",
              ""name"": ""message"",
              ""type"": ""string"",
              ""value"": ""={{ $json.message.text }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""b6dc7831-994c-4539-a456-cbfde3c009a8"",
      ""name"": ""Check for Image"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        -980,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""loose""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""c5999c0e-853d-45e6-bec6-f446defe909d"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""exists"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.message.photo }}"",
              ""rightValue"": ""=""
            }
          ]
        },
        ""looseTypeValidation"": true
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""ea0c351f-8cae-4252-a3b9-34a1d03d3ef2"",
      ""name"": ""Sticky - Check for Image"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -980,
        -140
      ],
      ""parameters"": {
        ""color"": null,
        ""height"": 180,
        ""content"": ""## 🔍 **Check for Image**\nDetermines whether the input is an image or text to route accordingly.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0e3d255e-69e7-4b78-82c4-1077a3ea91f4"",
      ""name"": ""Receipt Parser"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserStructured"",
      ""position"": [
        -40,
        380
      ],
      ""parameters"": {
        ""jsonSchemaExample"": ""{\n  \""store\"": {\n    \""store_name\"": \""Store A\"",\n    \""store_location\"": \""Store location\""\n  },\n  \""transaction\"": {\n    \""date\"": \""Transaction date\"",\n    \""time\"": \""Transaction time\"",\n    \""receipt_number\"": \""Receipt number\""\n  },\n  \""items\"": [\n    {\n      \""description\"": \""Item name\"",\n      \""quantity\"": \""Quantity\"",\n      \""unit_price\"": \""Unit price\"",\n      \""total_price\"": \""Item total price\""\n    }\n  ],\n  \""summary\"": {\n    \""total\"": \""Total (number)\"",\n    \""payment_method\"": \""Payment method\"",\n    \""expense_category\"": \""Household\""\n  }\n}""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""675093cf-68b1-47b1-a2c5-aeda2e1b5360"",
      ""name"": ""AI Analyzer"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenRouter"",
      ""position"": [
        -200,
        380
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""credentials"": {
        ""openRouterApi"": {
          ""id"": ""DPrHlBN0s5WFDxi9"",
          ""name"": ""OpenRouter account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ffed21ef-2aed-4d63-b17e-df83bd4e6c9d"",
      ""name"": ""Send Error Message"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        700,
        180
      ],
      ""webhookId"": ""6c7df749-2bb0-4dff-95f8-8980325158e1"",
      ""parameters"": {
        ""text"": ""=hello  {{ $('Telegram Trigger').item.json.message.from.first_name }}\n\n{{ $json.message }}"",
        ""chatId"": ""={{ $('Telegram Trigger').item.json.message.chat.id }}"",
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""UAvyFVvuZ3qtAjBR"",
          ""name"": ""motun8nmoney""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""af0f7caa-f746-4eb3-bf57-4c345e448c23"",
      ""name"": ""Send Expense Summary"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        700,
        460
      ],
      ""webhookId"": ""f7a56f02-1aa8-4caa-9ccb-e4006a98db69"",
      ""parameters"": {
        ""text"": ""=hello  {{ $('Telegram Trigger').item.json.message.from.first_name }}\n\nIni Rekap Belanjamu\n{{ $json.message }}"",
        ""chatId"": ""={{ $('Telegram Trigger').item.json.message.chat.id }}"",
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""UAvyFVvuZ3qtAjBR"",
          ""name"": ""motun8nmoney""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""9ebee364-9df5-4e05-acee-dad2e3f02d07"",
      ""name"": ""Sticky - Parse Receipt Data1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        680,
        -300
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 360,
        ""height"": 200,
        ""content"": ""## **MoneyMate is free to use!**\nGot feedback, ideas, or just wanna chat? Find me at [khmuhtadin.com](https://khmuhtadin.com).  \n\nWanna buy me a coffee to fuel more workflows? Head to [buymeacoffee.com/khmuhtadin](https://buymeacoffee.com/khmuhtadin)! ☕""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""13a31b33-3ccc-4680-a2c6-cd8255a827e0"",
      ""name"": ""Extract Value From Image"",
      ""type"": ""n8n-nodes-tesseractjs.tesseractNode"",
      ""position"": [
        20,
        -180
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""297c9837-890b-42a2-9234-3d808ada6850"",
      ""name"": ""Sticky - Send Expense Summary1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        700,
        360
      ],
      ""parameters"": {
        ""color"": null,
        ""width"": 340,
        ""content"": ""## 📬 **Send Expense Summary**\nSends a summary of the recognized receipt or input to the user's Telegram chat.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""32f7368a-cac0-4b4e-b944-9a3453a78118"",
      ""name"": ""Sticky - Extract Text Input1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -600,
        100
      ],
      ""parameters"": {
        ""color"": null,
        ""width"": 260,
        ""content"": ""## 📝 **Extract Text Input**\nHandles plain text inputs when no image is provided by the user.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c7c9d1cd-368b-4374-9533-e3e76fb48c08"",
      ""name"": ""Sticky - Parse Receipt Data2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -60,
        500
      ],
      ""parameters"": {
        ""color"": null,
        ""width"": 300,
        ""content"": ""## 📊 **Parse Receipt Data**\nConverts AI output into structured JSON with store, transaction, items, and totals.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4b3b0887-e3a7-4365-a41b-6773d2009d71"",
      ""name"": ""Sticky - Get Telegram File1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -600,
        -280
      ],
      ""parameters"": {
        ""color"": null,
        ""width"": 260,
        ""content"": ""## 📦 **Get Telegram File**\nFetches the file ID of a receipt image uploaded via Telegram.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b1edb77f-6425-47f3-ba63-ed1b00dd6219"",
      ""name"": ""Sticky - Download Image2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -300,
        -280
      ],
      ""parameters"": {
        ""color"": null,
        ""width"": 260,
        ""content"": ""## ⬇️ **Download Image**\nDownloads the receipt photo and prepares it for text extraction.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d7437f5c-276d-46b5-956b-72d89809ebc9"",
      ""name"": ""Sticky - Download Image3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        0,
        -280
      ],
      ""parameters"": {
        ""color"": null,
        ""width"": 260,
        ""content"": ""## 🖼️ **Text Extractor**\nExtract text from given image ""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a381a022-9675-4e22-8bb5-b27992cfc3b8"",
      ""name"": ""Sticky - Format Summary Message1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        100,
        80
      ],
      ""parameters"": {
        ""color"": null,
        ""width"": 260,
        ""content"": ""## 🧾 **Format Message**\nCreates a clear summary of expenses with store, date, items, total, and category.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""5234e9fe-0202-460a-8a26-4dbf64ef3141"",
      ""name"": ""Sticky - AI Categorizer1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -200,
        80
      ],
      ""parameters"": {
        ""color"": null,
        ""width"": 280,
        ""content"": ""## 🧠 **AI Categorizer**\nUses AI to classify input into categories like income or expenses, handling dates and languages.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1a7c3a49-a08c-4260-a393-04803a96aa02"",
      ""name"": ""Sticky - Send Error Message1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        700,
        80
      ],
      ""parameters"": {
        ""color"": null,
        ""width"": 340,
        ""content"": ""## ❗ **Send Error Message**\nSends a warning to the user if the input is invalid or incomplete.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""912961cb-4ce1-41ea-9007-876ad3478a09"",
      ""name"": ""Sticky - Check Invalid Input1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        380,
        80
      ],
      ""parameters"": {
        ""color"": null,
        ""width"": 280,
        ""content"": ""## 🚫 **Check Invalid Input**\nDetects and flags incorrect or zero-value entries before sending a response.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""56dfbcb7-b04c-41ba-b1e8-c7ad273a8bb4"",
      ""name"": ""Sticky - OpenRouter AI Model1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -400,
        500
      ],
      ""parameters"": {
        ""color"": null,
        ""width"": 300,
        ""content"": ""## 🤖 **OpenRouter AI Model**\nConfigures the language model to extract structured information from natural language input.""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""3c1c7a80-0901-4dcb-a8ce-caa9331ca8c3"",
  ""connections"": {
    ""AI Analyzer"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Categorizer"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""AI Categorizer"": {
      ""main"": [
        [
          {
            ""node"": ""Format Summary Message"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Download Image"": {
      ""main"": [
        [
          {
            ""node"": ""Extract Value From Image"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Receipt Parser"": {
      ""ai_outputParser"": [
        [
          {
            ""node"": ""AI Categorizer"",
            ""type"": ""ai_outputParser"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Check for Image"": {
      ""main"": [
        [
          {
            ""node"": ""Get Telegram File"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Extract Text Input"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Telegram Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""Check for Image"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get Telegram File"": {
      ""main"": [
        [
          {
            ""node"": ""Download Image"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract Text Input"": {
      ""main"": [
        [
          {
            ""node"": ""AI Categorizer"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Check Invalid Input"": {
      ""main"": [
        [
          {
            ""node"": ""Send Error Message"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Send Expense Summary"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Format Summary Message"": {
      ""main"": [
        [
          {
            ""node"": ""Check Invalid Input"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract Value From Image"": {
      ""main"": [
        [
          {
            ""node"": ""AI Categorizer"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Automated Resume Job Matching Engine with Bright Data MCP & OpenAI 4o mini,"{
  ""id"": ""gIdIv8qN7zruqLbG"",
  ""meta"": {
    ""instanceId"": ""885b4fb4a6a9c2cb5621429a7b972df0d05bb724c20ac7dac7171b62f1c7ef40"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Automated Resume Job Matching Engine with Bright Data & OpenAI 4o mini"",
  ""tags"": [
    {
      ""id"": ""Kujft2FOjmOVQAmJ"",
      ""name"": ""Engineering"",
      ""createdAt"": ""2025-04-09T01:31:00.558Z"",
      ""updatedAt"": ""2025-04-09T01:31:00.558Z""
    },
    {
      ""id"": ""ZOwtAMLepQaGW76t"",
      ""name"": ""Building Blocks"",
      ""createdAt"": ""2025-04-13T15:23:40.462Z"",
      ""updatedAt"": ""2025-04-13T15:23:40.462Z""
    },
    {
      ""id"": ""ddPkw7Hg5dZhQu2w"",
      ""name"": ""AI"",
      ""createdAt"": ""2025-04-13T05:38:08.053Z"",
      ""updatedAt"": ""2025-04-13T05:38:08.053Z""
    },
    {
      ""id"": ""rKOa98eAi3IETrLu"",
      ""name"": ""HR"",
      ""createdAt"": ""2025-04-13T04:59:30.580Z"",
      ""updatedAt"": ""2025-04-13T04:59:30.580Z""
    }
  ],
  ""nodes"": [
    {
      ""id"": ""a75e1f8d-9dd4-4c87-b1ab-05c502b8cae7"",
      ""name"": ""Loop Over Items"",
      ""type"": ""n8n-nodes-base.splitInBatches"",
      ""position"": [
        736,
        115
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""92f0272d-dc5d-4424-9d96-cc2521e8a4ae"",
      ""name"": ""When clicking ‘Test workflow’"",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        -740,
        115
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""3820c9d3-be68-4a60-a810-943a9795bdbd"",
      ""name"": ""List all tools for Bright Data"",
      ""type"": ""n8n-nodes-mcp.mcpClient"",
      ""position"": [
        -520,
        115
      ],
      ""parameters"": {},
      ""credentials"": {
        ""mcpClientApi"": {
          ""id"": ""JtatFSfA2kkwctYa"",
          ""name"": ""MCP Client (STDIO) account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""83219c20-7341-4e42-8cae-cc2e1e8e9b8e"",
      ""name"": ""Set the Input fields"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -300,
        115
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""214e61a0-3587-453f-baf5-eac013990857"",
              ""name"": ""resume"",
              ""type"": ""string"",
              ""value"": ""I am Pechi, Senior Python Developer with 9+ years of experience.""
            },
            {
              ""id"": ""98c64f52-1564-4889-811d-39cac3951cc3"",
              ""name"": ""keywords"",
              ""type"": ""string"",
              ""value"": ""Python""
            },
            {
              ""id"": ""34202143-4b07-4301-b5e9-767430952214"",
              ""name"": ""location"",
              ""type"": ""string"",
              ""value"": ""India""
            },
            {
              ""id"": ""47d01515-302b-4a91-b9db-3af0033a56e1"",
              ""name"": ""job_search_base_url"",
              ""type"": ""string"",
              ""value"": ""https://www.linkedin.com/jobs/search/""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""40a70c2b-5dcc-44f7-8fde-9c28748181cd"",
      ""name"": ""Bright Data MCP Client For Jobs Extraction"",
      ""type"": ""n8n-nodes-mcp.mcpClient"",
      ""notes"": ""Scrape a single webpage URL with advanced options for content extraction and get back the results in MarkDown language."",
      ""position"": [
        -80,
        115
      ],
      ""parameters"": {
        ""toolName"": ""scrape_as_html"",
        ""operation"": ""executeTool"",
        ""toolParameters"": ""={\n   \""url\"": \""{{ $json.job_search_base_url }}?keywords={{ $json.keywords }}&location={{ $json.location }}\""\n} ""
      },
      ""credentials"": {
        ""mcpClientApi"": {
          ""id"": ""JtatFSfA2kkwctYa"",
          ""name"": ""MCP Client (STDIO) account""
        }
      },
      ""notesInFlow"": true,
      ""typeVersion"": 1
    },
    {
      ""id"": ""ff3193e5-cd22-40f4-8180-b76ad32055b3"",
      ""name"": ""Split Out"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        516,
        115
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""output""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""cd1fcbd8-acf3-4a91-8158-f664aaa839e7"",
      ""name"": ""Bright Data MCP Client For Jobs Extraction within a Loop"",
      ""type"": ""n8n-nodes-mcp.mcpClient"",
      ""notes"": ""Scrape a single webpage URL with advanced options for content extraction and get back the results in MarkDown language."",
      ""position"": [
        956,
        -10
      ],
      ""parameters"": {
        ""toolName"": ""scrape_as_html"",
        ""operation"": ""executeTool"",
        ""toolParameters"": ""={\n   \""url\"": \""{{ $json.output }}\""\n} ""
      },
      ""credentials"": {
        ""mcpClientApi"": {
          ""id"": ""JtatFSfA2kkwctYa"",
          ""name"": ""MCP Client (STDIO) account""
        }
      },
      ""notesInFlow"": true,
      ""typeVersion"": 1
    },
    {
      ""id"": ""d9f78a12-9eaa-4d9b-9e5c-5150d6e40e95"",
      ""name"": ""Job Desc Information Extractor"",
      ""type"": ""@n8n/n8n-nodes-langchain.informationExtractor"",
      ""position"": [
        1176,
        -10
      ],
      ""parameters"": {
        ""text"": ""=Extract the job description in a textual format\n\nHere's the content: {{ $json.result.content[0].text }}"",
        ""options"": {},
        ""attributes"": {
          ""attributes"": [
            {
              ""name"": ""job_description"",
              ""description"": ""Job Description""
            }
          ]
        }
      },
      ""retryOnFail"": true,
      ""typeVersion"": 1
    },
    {
      ""id"": ""4636d7e9-8d13-4f57-95f9-936f6d8bbf1d"",
      ""name"": ""AI Job Match"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        1552,
        -10
      ],
      ""parameters"": {
        ""text"": ""=Hi, you are a helpful job matcher, you analyze the given resume and job description and providing a job matching skills and score in a JSON format.\n\nHere's the Resume:\n{{ $('Set the Input fields').item.json.resume }}\n\nHere's the Job Desc:\n\n{{ $json.output.job_description }}"",
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""retryOnFail"": true,
      ""typeVersion"": 1.6
    },
    {
      ""id"": ""51b5d9dd-b0c8-4aaf-b789-f96e94519b94"",
      ""name"": ""Structured Output Parser"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserStructured"",
      ""position"": [
        1720,
        200
      ],
      ""parameters"": {
        ""jsonSchemaExample"": ""{\n  \""job_match_analysis\"": {\n    \""resume_summary\"": \""Senior Python Developer with 9+ years of experience.\"",\n    \""job_description_summary\"": \""Seeking a developer with expertise in Sagemaker, Python, and LLM. The role involves client interaction, requirements understanding, design review, architecture validation, and team leadership.\"",\n    \""skill_match\"": [\n      {\n        \""skill\"": \""python\"",\n        \""resume\"": \""Strong match - explicitly mentioned as core skill.\"",\n        \""job_description\"": \""Strong match - listed as a primary skill.\"",\n        \""score\"": 100\n      },\n      {\n        \""skill\"": \""sagemaker\"",\n        \""resume\"": \""No match - not mentioned in the resume.\"",\n        \""job_description\"": \""Strong match - listed as a primary skill.\"",\n        \""score\"": 0\n      },\n      {\n        \""skill\"": \""llm\"",\n        \""resume\"": \""No match - not mentioned in the resume.\"",\n        \""job_description\"": \""Strong match - listed as a primary skill.\"",\n        \""score\"": 0\n      },\n      {\n        \""skill\"": \""leadership\"",\n        \""resume\"": \""Implicit match - Senior role implies leadership experience.\"",\n        \""job_description\"": \""Explicit match - requires leading and guiding teams.\"",\n        \""score\"": 75\n      },\n      {\n        \""skill\"": \""client_interaction\"",\n        \""resume\"": \""No explicit mention, inferred from senior role.\"",\n        \""job_description\"": \""Explicit match - requires interfacing with clients.\"",\n        \""score\"": 50\n      }\n    ],\n    \""overall_match_score\"": 45,\n    \""rationale\"": \""The candidate's core skill (Python) is a strong match. The resume implies leadership skills, aligning with the job's team leadership requirements. However, the absence of Sagemaker and LLM experience significantly lowers the overall score. The candidate needs to demonstrate experience in these areas for a higher match.\"",\n    \""recommendations\"": [\n      \""Highlight any experience (even if limited) with Sagemaker or LLMs in the resume.\"",\n      \""Quantify Python experience with specific projects and technologies used.\"",\n      \""Emphasize any client-facing experience or responsibilities in previous roles.\"",\n      \""Showcase leadership experience with specific examples (e.g., mentoring junior developers, leading project teams).\""\n    ]\n  }\n}\n""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""1dcb1ca7-e4e9-4775-9eb8-94c9e1f89e64"",
      ""name"": ""Create a binary data for AI Job Match"",
      ""type"": ""n8n-nodes-base.function"",
      ""position"": [
        1928,
        -60
      ],
      ""parameters"": {
        ""functionCode"": ""items[0].binary = {\n  data: {\n    data: new Buffer(JSON.stringify(items[0].json, null, 2)).toString('base64')\n  }\n};\nreturn items;""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""da19ddc2-5e0f-4a4a-b524-1086b59c511f"",
      ""name"": ""Webhook Notification for AI Job Match"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1928,
        215
      ],
      ""parameters"": {
        ""url"": ""https://webhook.site/7b5380a0-0544-48dc-be43-0116cb2d52c2"",
        ""options"": {},
        ""sendBody"": true,
        ""contentType"": ""multipart-form-data"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""job_match_response"",
              ""value"": ""={{ $json.output.job_match_analysis.toJsonString() }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""0561839e-9ca9-4c18-9a9e-98b9a1f796fc"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        640,
        -320
      ],
      ""parameters"": {
        ""width"": 440,
        ""height"": 120,
        ""content"": ""## Disclaimer\nThis template is only available on n8n self-hosted as it's making use of the community node for MCP Client.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d68fd51a-d74f-4236-89e1-6144f9e80943"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -300,
        -140
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 440,
        ""height"": 220,
        ""content"": ""## LLM Usages\n\nOpenAI 4o mini LLM is being utilized for the structured data extraction handling.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""29342cc1-10dd-490c-b274-fd5a82dbae1e"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        640,
        -160
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 1660,
        ""height"": 620,
        ""content"": ""## Bright Data MCP Job Extract via Job Listings\nExtract job information via BrightData MCP and then perform the AI Job matching by utilizing the OpenAI GPT 4o mini LLM""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""25d7b451-0f5e-4694-a821-ea7fe93b7d6f"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -740,
        -700
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 400,
        ""height"": 400,
        ""content"": ""## Logo\n\n\n![logo](https://images.seeklogo.com/logo-png/43/1/brightdata-logo-png_seeklogo-439974.png)\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""02e69f64-f7b4-4a0d-828c-3fcea324268e"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -740,
        -240
      ],
      ""parameters"": {
        ""width"": 400,
        ""height"": 320,
        ""content"": ""## Note\n\nDeals with the LinkedIn profile data extraction by utilizing the Bright Data MCP and OpenAI GPT 4o LLM.\n\n**Please make sure to set the input fields node with the LinkedIn profile URL with the resume, location, keywords etc.\n\nPlease make sure to update the Webhook Notification URL of your interest**""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""cb84eebb-4215-4bb3-91f6-bf7897a8ddf6"",
      ""name"": ""OpenAI Chat Model for Job Desc Extract"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        1264,
        210
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""vPKynKbDzJ5ZU4cU"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""4d14c3a1-5402-4f27-beda-dba41c1aa912"",
      ""name"": ""OpenAI Chat Model for AI Job Match"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        1560,
        200
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""vPKynKbDzJ5ZU4cU"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""2aec37e7-a67b-47b1-b3b2-7ea7e114bfff"",
      ""name"": ""Write the AI job matched response to disk"",
      ""type"": ""n8n-nodes-base.readWriteFile"",
      ""position"": [
        2148,
        -60
      ],
      ""parameters"": {
        ""options"": {},
        ""fileName"": ""=d:\\Job-Match-{{$now.toSeconds()}}.json"",
        ""operation"": ""write""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""af980102-85d0-4f90-842f-196605f6bcd6"",
      ""name"": ""Paginated Job Data Extractor"",
      ""type"": ""@n8n/n8n-nodes-langchain.informationExtractor"",
      ""position"": [
        140,
        115
      ],
      ""parameters"": {
        ""text"": ""=Extract all the job links from the provided content. \n\nHere's the content:  {{ $json.result.content[0].text }}"",
        ""options"": {},
        ""schemaType"": ""manual"",
        ""inputSchema"": ""{\n\t\""type\"": \""array\"",\n\t\""properties\"": {\n\t\t\""link\"": {\n\t\t\t\""type\"": \""string\""\n\t\t}\n\t}\n}""
      },
      ""retryOnFail"": true,
      ""typeVersion"": 1
    },
    {
      ""id"": ""cb8e32c9-c1ac-4441-a42a-42e6b0d78970"",
      ""name"": ""OpenAI Chat Model for Paginated Job Extract"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        228,
        335
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""vPKynKbDzJ5ZU4cU"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""b366450e-b10e-412e-b442-a0827ca430bb"",
  ""connections"": {
    ""Split Out"": {
      ""main"": [
        [
          {
            ""node"": ""Loop Over Items"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""AI Job Match"": {
      ""main"": [
        [
          {
            ""node"": ""Create a binary data for AI Job Match"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Webhook Notification for AI Job Match"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Loop Over Items"": {
      ""main"": [
        [],
        [
          {
            ""node"": ""Bright Data MCP Client For Jobs Extraction within a Loop"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Set the Input fields"": {
      ""main"": [
        [
          {
            ""node"": ""Bright Data MCP Client For Jobs Extraction"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Structured Output Parser"": {
      ""ai_outputParser"": [
        [
          {
            ""node"": ""AI Job Match"",
            ""type"": ""ai_outputParser"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Paginated Job Data Extractor"": {
      ""main"": [
        [
          {
            ""node"": ""Split Out"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Job Desc Information Extractor"": {
      ""main"": [
        [
          {
            ""node"": ""AI Job Match"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""List all tools for Bright Data"": {
      ""main"": [
        [
          {
            ""node"": ""Set the Input fields"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When clicking ‘Test workflow’"": {
      ""main"": [
        [
          {
            ""node"": ""List all tools for Bright Data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model for AI Job Match"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Job Match"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Create a binary data for AI Job Match"": {
      ""main"": [
        [
          {
            ""node"": ""Write the AI job matched response to disk"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Webhook Notification for AI Job Match"": {
      ""main"": [
        [
          {
            ""node"": ""Loop Over Items"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model for Job Desc Extract"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Job Desc Information Extractor"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Write the AI job matched response to disk"": {
      ""main"": [
        []
      ]
    },
    ""Bright Data MCP Client For Jobs Extraction"": {
      ""main"": [
        [
          {
            ""node"": ""Paginated Job Data Extractor"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model for Paginated Job Extract"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Paginated Job Data Extractor"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Bright Data MCP Client For Jobs Extraction within a Loop"": {
      ""main"": [
        [
          {
            ""node"": ""Job Desc Information Extractor"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
AI-Powered Candidate Screening and Evaluation Workflow using OpenAI and Airtable,"{
  ""meta"": {
    ""instanceId"": ""d1786ab0d745a7498abf13a9c2cdabb1374c006e889b79eef64ce0386b8f8a41""
  },
  ""nodes"": [
    {
      ""id"": ""4dcbc7a2-8df4-4da0-ade0-0cec3a3e434f"",
      ""name"": ""Search Job Posting"",
      ""type"": ""n8n-nodes-base.airtable"",
      ""position"": [
        240,
        -100
      ],
      ""parameters"": {
        ""base"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""appgVjZcaRP8BsKf0"",
          ""cachedResultUrl"": ""https://airtable.com/appgVjZcaRP8BsKf0"",
          ""cachedResultName"": ""HR Database""
        },
        ""limit"": 1,
        ""table"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""tblla4rBCW3BhPtRO"",
          ""cachedResultUrl"": ""https://airtable.com/appgVjZcaRP8BsKf0/tblla4rBCW3BhPtRO"",
          ""cachedResultName"": ""Job Posting""
        },
        ""options"": {},
        ""operation"": ""search"",
        ""returnAll"": false,
        ""filterByFormula"": ""=FIND(LOWER(\""{{ $('Candidate Application Form').item.json['Position Applied For'] }}\""), LOWER({Job Title})) > 0""
      },
      ""credentials"": {
        ""airtableTokenApi"": {
          ""id"": ""r2IibdsQurA56LDa"",
          ""name"": ""Airtable Personal Access Token account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""20da52d2-e172-4861-9569-b3cdd5f489cc"",
      ""name"": ""Create Candidate"",
      ""type"": ""n8n-nodes-base.airtable"",
      ""position"": [
        1200,
        120
      ],
      ""parameters"": {
        ""base"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""appgVjZcaRP8BsKf0"",
          ""cachedResultUrl"": ""https://airtable.com/appgVjZcaRP8BsKf0"",
          ""cachedResultName"": ""HR Database""
        },
        ""table"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""tblQy83erGR5lQj5c"",
          ""cachedResultUrl"": ""https://airtable.com/appgVjZcaRP8BsKf0/tblQy83erGR5lQj5c"",
          ""cachedResultName"": ""Candidates""
        },
        ""columns"": {
          ""value"": {
            ""Resume"": ""={{ $json.file_array }}"",
            ""Full Name"": ""={{ $('Candidate Application Form').item.json['Full Name '] }}"",
            ""Cover Letter"": ""={{ $('Candidate Application Form').item.json['Cover Letter'] }}"",
            ""Date Applied"": ""={{ $now }}"",
            ""Email Address"": ""={{ $('Candidate Application Form').item.json['Email Address'] }}"",
            ""Relevant Skills"": ""={{ $('Candidate Application Form').item.json['Relevant Skills'] }}"",
            ""Screening Notes"": ""={{ $json.output.screening_notes }}"",
            ""Match Percentage"": ""={{ $json.output.match_percentage }}"",
            ""Position Applied"": ""={{ $('Candidate Application Form').item.json['Position Applied For'] }}"",
            ""Screening Status"": ""={{ $json.output.screening_status }}""
          },
          ""schema"": [
            {
              ""id"": ""Candidate ID"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": true,
              ""readOnly"": true,
              ""required"": false,
              ""displayName"": ""Candidate ID"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Full Name"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Full Name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Email Address"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Email Address"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Position Applied"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Position Applied"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Relevant Skills"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Relevant Skills"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Cover Letter"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Cover Letter"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Resume"",
              ""type"": ""array"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Resume"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Screening Status"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Screening Status"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Match Percentage"",
              ""type"": ""number"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Match Percentage"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Screening Notes"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Screening Notes"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Date Applied"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""Date Applied"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""test"",
              ""type"": ""options"",
              ""display"": true,
              ""options"": [
                {
                  ""name"": ""1"",
                  ""value"": ""1""
                },
                {
                  ""name"": ""2"",
                  ""value"": ""2""
                },
                {
                  ""name"": ""3"",
                  ""value"": ""3""
                }
              ],
              ""removed"": true,
              ""readOnly"": false,
              ""required"": false,
              ""displayName"": ""test"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""create""
      },
      ""credentials"": {
        ""airtableTokenApi"": {
          ""id"": ""r2IibdsQurA56LDa"",
          ""name"": ""Airtable Personal Access Token account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""c9f24379-d359-4dcf-b84a-d60b1d6a7dc3"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        520,
        120
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""MGwGMKEkdcjzlYCw"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""909abe51-f13a-418b-b473-9049b07953fe"",
      ""name"": ""Structured Output Parser"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserStructured"",
      ""position"": [
        700,
        120
      ],
      ""parameters"": {
        ""jsonSchemaExample"": ""{\n  \""screening_status\"": \""Suitable\"",\n  \""match_percentage\"": 88,\n  \""screening_notes\"": \""Detailed explanation of the assessment, including relevant skill matches, experience analysis, and justification for the screening status.\""\n}""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""036f79d9-7d08-4b61-a5bd-b9dea26f929d"",
      ""name"": ""Candidate Screener AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        520,
        -100
      ],
      ""parameters"": {
        ""text"": ""=Candidate Screening Information:\n\n///\nUser Side:\n\nPosition Applied:  \n{{ $('Search Job Posting').item.json['Job Title'] }}\n\nRelevant Skills the Candidate Possesses:\n{{ $('Candidate Application Form').item.json['Relevant Skills'] }}\n\n\nCover Letter:  \n{{ $('Candidate Application Form').item.json['Cover Letter'] }}\n\nResume Content:  \n{{ $('Extract Resume PDF').item.json.text }}\n\n///\n\nEmployer Side:\n\nPosition Description:  \n{{ $('Search Job Posting').item.json['Job Description'] }}\n\nSkills Required:  \n{{ $('Search Job Posting').item.json['Required Skills'] }}\n\n///"",
        ""options"": {
          ""systemMessage"": ""=You are a Candidate Screening AI Agent responsible for assessing candidate suitability for specific job positions based on the provided information. \n\nObjective:\nEvaluate the candidate’s fit for the applied position by analyzing their relevant skills, cover letter, and resume content. Compare this information with the job description and required skills provided by the employer to determine suitability, a match percentage, and screening notes.\n\nInput Fields:\n\nUser Side:\n- Position applied: The job position the candidate applied for.\n- Relevant skills: A list of key skills the candidate possesses.\n- Cover letter: Candidate’s introduction, work experience, and key achievements.\n- Resume: Parsed text content extracted from the resume in plain text format.\n\nEmployer Side:\n- Position description: Detailed job description including responsibilities and expectations.\n- Skills required: A list of required skills for the position.\n\nOutput Fields:\n- Screening Status: One of the following options: \""Suitable\"", \""Not Suitable\"", \""Under Review\"".\n- Match Percentage: A numerical score indicating the percentage of relevant skills matching the job requirements.\n- Screening Notes: A summary of the assessment, including strengths, areas for improvement, and justification for the screening status.\n\nInstructions:\n1. Extract and analyze relevant skills mentioned in the cover letter and resume content.\n2. Compare the extracted skills with the job requirements and skills required by the employer.\n3. Assign a Match Percentage based on the alignment of skills and experience.\n4. Determine the Screening Status based on the skill match and relevance of the candidate’s experience to the position.\n5. Provide comprehensive Screening Notes to justify the assigned status and percentage, highlighting strengths and areas for improvement.""
        },
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.9
    },
    {
      ""id"": ""feb35aa1-cd20-470c-90b3-7267f3c3c7b4"",
      ""name"": ""Set File Array for airtable"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        560,
        560
      ],
      ""parameters"": {
        ""mode"": ""raw"",
        ""options"": {},
        ""jsonOutput"": ""={\""file_array\"":[\n  {\n    \""url\"": \""{{ $('Upload File').item.json.webContentLink }}\"",\n    \""filename\"": \""{{ $('Upload File').item.json.name }}\""\n  }\n]\n}""
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""57c4180d-05e6-4a4b-af86-cc5c2e67b098"",
      ""name"": ""Merge"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        960,
        120
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""combineBy"": ""combineAll""
      },
      ""typeVersion"": 3.1
    },
    {
      ""id"": ""83de9df9-4ff6-4832-bc99-0ebc9c749c3e"",
      ""name"": ""Upload File"",
      ""type"": ""n8n-nodes-base.googleDrive"",
      ""position"": [
        80,
        560
      ],
      ""parameters"": {
        ""name"": ""={{ $json.Resume.filename }}"",
        ""driveId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""My Drive""
        },
        ""options"": {},
        ""folderId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""13BuRkJofybsBlF77oqoS87A2qq4zD2aP"",
          ""cachedResultUrl"": ""https://drive.google.com/drive/folders/13BuRkJofybsBlF77oqoS87A2qq4zD2aP"",
          ""cachedResultName"": ""pdf dev""
        },
        ""inputDataFieldName"": ""Resume""
      },
      ""credentials"": {
        ""googleDriveOAuth2Api"": {
          ""id"": ""SEUhrgz30NMJS3cH"",
          ""name"": ""Google Drive account""
        }
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""19c8ac22-6cd4-4ffb-9193-d9a2e1ce5ffc"",
      ""name"": ""Set File Permission"",
      ""type"": ""n8n-nodes-base.googleDrive"",
      ""position"": [
        320,
        560
      ],
      ""parameters"": {
        ""fileId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $json.id }}""
        },
        ""options"": {},
        ""operation"": ""share"",
        ""permissionsUi"": {
          ""permissionsValues"": {
            ""role"": ""reader"",
            ""type"": ""anyone""
          }
        }
      },
      ""credentials"": {
        ""googleDriveOAuth2Api"": {
          ""id"": ""SEUhrgz30NMJS3cH"",
          ""name"": ""Google Drive account""
        }
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""fe28d107-0b25-4218-af94-f4937aa91035"",
      ""name"": ""Check if candidate is suitable"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1400,
        120
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""ab5102cf-0952-465e-9340-59ced9f39ce1"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $('Merge').item.json.output.screening_status }}"",
              ""rightValue"": ""Suitable""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""379b61c4-89f8-447f-b9ac-b0d3aa56dc38"",
      ""name"": ""Send email to HR"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        1680,
        120
      ],
      ""webhookId"": ""48fa841c-0312-4829-a80c-85cd37deec25"",
      ""parameters"": {
        ""sendTo"": ""hr_team_n8n@yopmail.com"",
        ""message"": ""=We have successfully completed the candidate screening process, and {{ $('Candidate Application Form').item.json['Full Name '] }} has been identified as a suitable candidate for the {{ $('Search Job Posting').item.json['Job Title'] }} position.  \n\nCandidate Details:  \n- Position Applied: {{ $('Search Job Posting').item.json['Job Title'] }}  \n- Match Percentage: {{ $('Candidate Screener AI Agent').item.json.output.match_percentage }}%  \n- Screening Notes: {{ $('Candidate Screener AI Agent').item.json.output.screening_notes }}\n\nPlease proceed with the next steps in the interview scheduling process. If you need any further information or clarification, feel free to reach out.  \n\nThank you,  \nSuper Awesome HR AI Agent"",
        ""options"": {
          ""appendAttribution"": false
        },
        ""subject"": ""=Candidate {{ $('Candidate Application Form').item.json['Full Name '] }} - Suitable for {{ $('Search Job Posting').item.json['Job Title'] }}\n"",
        ""emailType"": ""text""
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""sWl7FFMkEUYBj0zM"",
          ""name"": ""Gmail account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""a7bb9cf2-5df0-4937-b17a-271c60157da0"",
      ""name"": ""Candidate Application Form"",
      ""type"": ""n8n-nodes-base.formTrigger"",
      ""position"": [
        -400,
        -100
      ],
      ""webhookId"": ""2d4004d0-4c93-49d5-9c3a-4e05264fc772"",
      ""parameters"": {
        ""options"": {},
        ""formTitle"": ""Smart Candidate Screening Form"",
        ""formFields"": {
          ""values"": [
            {
              ""fieldLabel"": ""Full Name "",
              ""requiredField"": true
            },
            {
              ""fieldType"": ""email"",
              ""fieldLabel"": ""Email Address"",
              ""requiredField"": true
            },
            {
              ""fieldLabel"": ""Position Applied For"",
              ""requiredField"": true
            },
            {
              ""fieldType"": ""textarea"",
              ""fieldLabel"": ""Relevant Skills"",
              ""requiredField"": true
            },
            {
              ""fieldType"": ""textarea"",
              ""fieldLabel"": ""Cover Letter"",
              ""requiredField"": true
            },
            {
              ""fieldType"": ""file"",
              ""fieldLabel"": ""Resume"",
              ""multipleFiles"": false,
              ""acceptFileTypes"": "".pdf""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""7531bc26-0c23-4a3e-8739-e90379879c08"",
      ""name"": ""Extract Resume PDF"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        -80,
        -100
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""pdf"",
        ""binaryPropertyName"": ""Resume""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a014c89d-db01-435f-957d-830fb4ae94b4"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        480,
        -380
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 360,
        ""height"": 680,
        ""content"": ""🧠 Candidate Screener AI Agent\nUses OpenAI to analyze:\n- Resume content vs job requirements\n- Skills matching\n- Cover letter quality\n\n📊 OUTPUTS:\n- Screening Status (Suitable/Not Suitable/Under Review)\n- Match Percentage (0-100%)\n- Detailed screening notes\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1505d7cf-0a7e-4794-980e-a08be353810f"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        120,
        -240
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 340,
        ""height"": 300,
        ""content"": ""## Search Job Posting (Job Matching)\nFinds the matching job posting for the applied position""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e76d4408-42b4-4757-a26e-59b5844e123b"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        0,
        360
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 760,
        ""height"": 340,
        ""content"": ""## File Preparation for Airtable Upload\n\n- Upload the file to Google Drive  \n- Set the permission to public  \n- Format the data to match the format required by Airtable for file uploads\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6ff2294a-95dd-46ba-a19e-7855ef78c669"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        920,
        -40
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 420,
        ""height"": 380,
        ""content"": ""## Merge & Create Candidate\n\n- Merge data from both flows (Candidate Screener AI Agent and File Flow)  \n- Use the merged data to create a candidate in Airtable\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""13bcc44a-55e6-46ce-8eeb-1e1241e8569f"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1380,
        -80
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 420,
        ""height"": 420,
        ""content"": ""## Check Candidate & Send Email to HR\n\n- Check if the candidate is qualified or not  \n- If the candidate is qualified, the system will send an email to HR\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1fe8867b-b2a9-4ff0-813a-9e147c16cb2b"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -480,
        -400
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 560,
        ""height"": 580,
        ""content"": ""## Candidate Application Form\n\nWeb form for candidates to submit applications\n\nFields:\n- Full Name (required)\n- Email Address (required, email validation)\n- Position Applied For (required)\n- Relevant Skills (textarea, required)\n- Cover Letter (textarea, required)\n- Resume (PDF file upload only)""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9147da55-77dc-4780-83cd-2c6969574fb3"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -800,
        -400
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 280,
        ""height"": 280,
        ""content"": ""## SETUP REQUIRED\n**Author:** [Billy Christi](https://n8n.io/creators/billy/)\n\nAirtable Base Structure:  \n[Copy this Airtable Base](https://airtable.com/appgVjZcaRP8BsKf0/tblla4rBCW3BhPtRO/viw19l5BlEW7NnZJQ)\n\nRequired Credentials:  \n• Airtable API Key  \n• OpenAI API Key (GPT-4)  \n• Google Drive Credential\n• Gmail Credential\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b0c1aba2-4b2a-4ba6-b625-9bb6d2af4356"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1120,
        320
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 460,
        ""height"": 460,
        ""content"": ""## 🤖 AI-Powered Candidate Screening and Evaluation Workflow using OpenAI and Airtable\n\n**What This Template Does:**\n- Creates a web form for candidates to submit applications with resume uploads\n- Automatically extracts and processes text content from PDF resumes\n- Uses GPT-4 AI to intelligently match candidates against job requirements\n- Calculates compatibility scores and generates detailed screening notes\n- Stores candidate data and resumes in Airtable database and Google Drive\n- Automatically emails HR team when suitable candidates are found\n- Fully automates the entire hiring pipeline from application to notification""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""53fbb743-892a-45dc-9dc7-9596fda47686"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -640,
        320
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 500,
        ""height"": 460,
        ""content"": ""## 📋 WORKFLOW PROCESS OVERVIEW\nStep 1: 📝 Candidate Application Form collects candidate details and PDF resume  \nStep 2: 📄 Extract Resume PDF converts uploaded PDF into readable text  \nStep 3: 📁 Upload File stores resume in Google Drive and sets permissions  \nStep 4: 🔍 Search Job Posting finds matching job in Airtable database  \nStep 5: 🤖 AI Agent (OpenAI) evaluates candidate fit and generates screening results  \nStep 6: 💾 Create Candidate stores complete record in Airtable with AI results  \nStep 7: ✅ Check Suitability determines if candidate meets requirements  \nStep 8: 📧 Send Email to HR notifies team when candidate is suitable""
      },
      ""typeVersion"": 1
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""Merge"": {
      ""main"": [
        [
          {
            ""node"": ""Create Candidate"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Upload File"": {
      ""main"": [
        [
          {
            ""node"": ""Set File Permission"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Create Candidate"": {
      ""main"": [
        [
          {
            ""node"": ""Check if candidate is suitable"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Candidate Screener AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract Resume PDF"": {
      ""main"": [
        [
          {
            ""node"": ""Search Job Posting"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Search Job Posting"": {
      ""main"": [
        [
          {
            ""node"": ""Candidate Screener AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Set File Permission"": {
      ""main"": [
        [
          {
            ""node"": ""Set File Array for airtable"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Structured Output Parser"": {
      ""ai_outputParser"": [
        [
          {
            ""node"": ""Candidate Screener AI Agent"",
            ""type"": ""ai_outputParser"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Candidate Application Form"": {
      ""main"": [
        [
          {
            ""node"": ""Extract Resume PDF"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Upload File"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Candidate Screener AI Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Merge"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Set File Array for airtable"": {
      ""main"": [
        [
          {
            ""node"": ""Merge"",
            ""type"": ""main"",
            ""index"": 1
          }
        ]
      ]
    },
    ""Check if candidate is suitable"": {
      ""main"": [
        [
          {
            ""node"": ""Send email to HR"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Summarise Slack Channel Activity for Weekly Reports with AI,"{
  ""meta"": {
    ""instanceId"": ""408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""f4322829-1799-4954-a75a-b40e95f41c10"",
      ""name"": ""Get Last Week's Messages"",
      ""type"": ""n8n-nodes-base.slack"",
      ""position"": [
        -2200,
        -160
      ],
      ""webhookId"": ""8078218a-7edc-4e0b-9b4d-9860bd309877"",
      ""parameters"": {
        ""filters"": {
          ""oldest"": ""={{ $now.minus('1', 'week') }}"",
          ""inclusive"": false
        },
        ""resource"": ""channel"",
        ""channelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""C06RS1WPUQ6"",
          ""cachedResultName"": ""general""
        },
        ""operation"": ""history"",
        ""returnAll"": true
      },
      ""credentials"": {
        ""slackApi"": {
          ""id"": ""VfK3js0YdqBdQLGP"",
          ""name"": ""Slack account""
        }
      },
      ""typeVersion"": 2.3
    },
    {
      ""id"": ""f0e89c19-ee1f-4a4d-8176-c222c18e0514"",
      ""name"": ""Simplify Message"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -1320,
        380
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""547e8934-e6f2-47f0-b8a0-c60bd9d8a0c3"",
              ""name"": ""ts"",
              ""type"": ""string"",
              ""value"": ""={{ $json.ts }}""
            },
            {
              ""id"": ""22473b44-b1d9-4b85-b0d9-1a54c5511ff4"",
              ""name"": ""userId"",
              ""type"": ""string"",
              ""value"": ""={{ $('Get User').first().json.id }}""
            },
            {
              ""id"": ""2059b147-8b12-42c9-bee8-488dc11a0bf7"",
              ""name"": ""userName"",
              ""type"": ""string"",
              ""value"": ""={{ $('Get User').first().json.name }}""
            },
            {
              ""id"": ""34440ea6-ee99-4cd4-9e1c-cf561d335180"",
              ""name"": ""type"",
              ""type"": ""string"",
              ""value"": ""={{ $json.type }}""
            },
            {
              ""id"": ""ff1155c5-43e1-4e0e-82a8-9e013a7f1db1"",
              ""name"": ""text"",
              ""type"": ""string"",
              ""value"": ""={{ $json.text.replace(/(<@[^>]+>)/ig, '').trim() }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""1293a7cf-1467-432f-b7ed-606146618808"",
      ""name"": ""Group By User"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        -2000,
        -160
      ],
      ""parameters"": {
        ""jsCode"": ""const keyByUser = $input.all()\n  .map(item => item.json)\n  .reduce((acc, message) => {\n    return {\n      ...acc,\n      [message.user]: Array.isArray(acc[message.user])\n        ?  acc[message.user].concat(message)\n        : [message]\n    }\n  }, {});\n\nreturn {\n  data: Object\n    .keys(keyByUser)\n    .map(key => keyByUser[key])\n};""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""681a2368-9688-4ebd-bb88-f48c7ccb3e54"",
      ""name"": ""Split Out"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        -1800,
        -160
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""data""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""38a5e6b0-ba4a-4aaa-93f2-ec2a73e5e1af"",
      ""name"": ""Messages to Items"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        -1540,
        380
      ],
      ""parameters"": {
        ""jsCode"": ""return Object.values($('Switch').first().json.data)""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""066e40ef-91d7-4db0-95bb-2027c9251a23"",
      ""name"": ""Get User"",
      ""type"": ""n8n-nodes-base.slack"",
      ""position"": [
        -1760,
        380
      ],
      ""webhookId"": ""042e9c13-5038-433a-98dc-8b6d83c015de"",
      ""parameters"": {
        ""user"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $json.data['0'].user }}""
        },
        ""resource"": ""user""
      },
      ""credentials"": {
        ""slackApi"": {
          ""id"": ""VfK3js0YdqBdQLGP"",
          ""name"": ""Slack account""
        }
      },
      ""typeVersion"": 2.3
    },
    {
      ""id"": ""c5d0b4d1-94eb-4e14-9985-85d384d6d96f"",
      ""name"": ""Aggregate"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        -1100,
        380
      ],
      ""parameters"": {
        ""options"": {},
        ""aggregate"": ""aggregateAllItemData"",
        ""destinationFieldName"": ""messages""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""47537a27-90d9-4edc-b9f4-66205bc4a4c2"",
      ""name"": ""Split Out1"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        -1760,
        780
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""data.messages""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6fdd0fc0-c563-46a3-afb2-48853d3e6cef"",
      ""name"": ""Get Thread"",
      ""type"": ""n8n-nodes-base.slack"",
      ""position"": [
        -1100,
        780
      ],
      ""webhookId"": ""c3ef27dc-2648-4f91-b329-89a7fa833797"",
      ""parameters"": {
        ""ts"": ""={{ $json.ts }}"",
        ""filters"": {},
        ""resource"": ""channel"",
        ""channelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""C06RS1WPUQ6"",
          ""cachedResultName"": ""general""
        },
        ""operation"": ""replies""
      },
      ""credentials"": {
        ""slackApi"": {
          ""id"": ""VfK3js0YdqBdQLGP"",
          ""name"": ""Slack account""
        }
      },
      ""typeVersion"": 2.3
    },
    {
      ""id"": ""0fc6664f-9076-4525-acaa-0f5009de2611"",
      ""name"": ""Aggregate1"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        -440,
        860
      ],
      ""parameters"": {
        ""options"": {},
        ""aggregate"": ""aggregateAllItemData"",
        ""destinationFieldName"": ""replies""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""caf963e5-3d5b-42d8-88ce-1fb5bf03a528"",
      ""name"": ""Simplify Thread Comments"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -660,
        780
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""82bc8cbe-c606-4717-b29d-2d8acc149271"",
              ""name"": ""ts"",
              ""type"": ""string"",
              ""value"": ""={{ $json.ts }}""
            },
            {
              ""id"": ""8fcc957d-aa9f-47df-99e8-560228fde30f"",
              ""name"": ""userId"",
              ""type"": ""string"",
              ""value"": ""={{ $json.user }}""
            },
            {
              ""id"": ""e6c6deb3-c3ba-4452-be7c-1a0c42c5dc2c"",
              ""name"": ""userName"",
              ""type"": ""string"",
              ""value"": """"
            },
            {
              ""id"": ""31d1206d-ecbd-48d3-a00a-845fd53d1cfa"",
              ""name"": ""type"",
              ""type"": ""string"",
              ""value"": ""={{ $json.type }}""
            },
            {
              ""id"": ""da126e6c-8dfc-41aa-991a-231b3cb3004b"",
              ""name"": ""text"",
              ""type"": ""string"",
              ""value"": ""={{ $json.text }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""aab0ae1c-50da-49e5-a373-c32b39108041"",
      ""name"": ""Filter"",
      ""type"": ""n8n-nodes-base.filter"",
      ""position"": [
        -880,
        780
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""a6d43072-380e-40f2-985b-faeffdaffdce"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notEquals""
              },
              ""leftValue"": ""={{ $('Split Out1').item.json.ts }}"",
              ""rightValue"": ""={{ $json.ts }}""
            }
          ]
        }
      },
      ""typeVersion"": 2.2,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""35cdb470-a9eb-4544-999c-5360dda0f1a3"",
      ""name"": ""Message Ref"",
      ""type"": ""n8n-nodes-base.noOp"",
      ""position"": [
        -1320,
        780
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""95500787-7965-4951-a729-615feb636021"",
      ""name"": ""Split Out2"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        -1320,
        1080
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""replyUsers""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""250d61cc-120d-4c0c-8220-f9a68a90b667"",
      ""name"": ""Map Reply UserIds"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -1760,
        1160
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""dda6e3d8-0097-4621-9619-07cf39e93018"",
              ""name"": ""replyUsers"",
              ""type"": ""array"",
              ""value"": ""={{\n$json.data.messages\n  .flatMap(item => item.replies.flatMap(reply => reply.userId))\n  .compact()\n  .unique()\n}}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""3358736b-fc6e-4e18-9a58-4ffc59308055"",
      ""name"": ""Get Reply Users"",
      ""type"": ""n8n-nodes-base.slack"",
      ""position"": [
        -1100,
        1080
      ],
      ""webhookId"": ""c9ad7c7e-2c48-4c24-9255-e04ab26252ab"",
      ""parameters"": {
        ""user"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $json.replyUsers }}""
        },
        ""resource"": ""user""
      },
      ""credentials"": {
        ""slackApi"": {
          ""id"": ""VfK3js0YdqBdQLGP"",
          ""name"": ""Slack account""
        }
      },
      ""typeVersion"": 2.3
    },
    {
      ""id"": ""e98acd0f-f1e3-47f4-ae9c-7259462cf231"",
      ""name"": ""Google Gemini Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""position"": [
        -120,
        1380
      ],
      ""parameters"": {
        ""options"": {},
        ""modelName"": ""models/gemini-2.0-flash""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""dSxo6ns5wn658r8N"",
          ""name"": ""Google Gemini(PaLM) Api account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0ffb9b87-43db-4417-8c37-384a33cbb830"",
      ""name"": ""Summarise Threads"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        -220,
        1160
      ],
      ""parameters"": {
        ""text"": ""=## Message\n{{ $json.userName }} (<@{{ $json.userId }}>) says at {{ new DateTime(parseFloat($json.ts)*1000).format('d MMM HH:mma') }}:\n> {{ $json.text }}\n\n## {{ ($json.replies ?? []).compact().length }} Replies\n{{\n($json.replies ?? [])\n  .compact()\n    .map(reply => ({\n      ...reply,\n      userName: $('Reply Users').item.json.data\n        .find(user => user.id === reply.userId)?.name\n    }))\n    .map(reply =>\n      `* ${new DateTime(parseFloat($json.ts)*1000).format('d MMM HH:mma')}, ${reply.userName} (<@${reply.userId}>) replies: ${reply.text}`\n)\n    .join('\\n')\n  \n}}"",
        ""messages"": {
          ""messageValues"": [
            {
              ""message"": ""=Summarize the topic of the slack message and the resulting conversation from the replies (if any). Highlight any achievements, accomplishments, attempts or challenges mentioned.""
            }
          ]
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.6
    },
    {
      ""id"": ""678a48ec-acb1-4c42-b8c9-d4cd762e4a2a"",
      ""name"": ""Aggregate2"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        160,
        1160
      ],
      ""parameters"": {
        ""options"": {},
        ""aggregate"": ""aggregateAllItemData""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ab39b117-e1bd-495f-a92d-fb79973b3601"",
      ""name"": ""Aggregate Reply Users"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        -880,
        1080
      ],
      ""parameters"": {
        ""options"": {},
        ""aggregate"": ""aggregateAllItemData""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c71b7ca6-8245-4262-b2f1-abea511390d6"",
      ""name"": ""Reply Users"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -660,
        1160
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""9f721cde-2d36-40ee-b7d8-a920695157a9"",
              ""name"": ""data"",
              ""type"": ""array"",
              ""value"": ""={{ $json.data ?? [] }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""4b2c452b-4e68-4536-aa58-a85fd586c606"",
      ""name"": ""Google Gemini Chat Model1"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""position"": [
        -460,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""modelName"": ""models/gemini-2.0-flash""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""dSxo6ns5wn658r8N"",
          ""name"": ""Google Gemini(PaLM) Api account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d65b4f27-52ab-4c29-8692-ee2835fddd17"",
      ""name"": ""Loop Over Items"",
      ""type"": ""n8n-nodes-base.splitInBatches"",
      ""position"": [
        -1540,
        780
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""cfb55c7f-a89d-4ce4-8709-31e5e119c6ee"",
      ""name"": ""Aggregate3"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -1320,
        580
      ],
      ""parameters"": {
        ""mode"": ""raw"",
        ""options"": {},
        ""jsonOutput"": ""={{\n{\n  ...$('Split Out1').item.json,\n  replies: $json.replies.filter(reply => reply.ts)\n}\n}}\n""
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""8b70e30c-99d5-4086-85aa-e6cfcc7f14e7"",
      ""name"": ""Aggregate4"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        -1100,
        580
      ],
      ""parameters"": {
        ""options"": {},
        ""aggregate"": ""aggregateAllItemData""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1cef5853-d301-49cb-9f58-c1a9128b8b33"",
      ""name"": ""When Executed by Another Workflow"",
      ""type"": ""n8n-nodes-base.executeWorkflowTrigger"",
      ""position"": [
        -2200,
        780
      ],
      ""parameters"": {
        ""workflowInputs"": {
          ""values"": [
            {
              ""name"": ""action""
            },
            {
              ""name"": ""data"",
              ""type"": ""object""
            }
          ]
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""b30c2433-3bfe-480f-a4bd-8c41900802a2"",
      ""name"": ""Switch"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        -1980,
        780
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""outputKey"": ""users"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""fa924990-9f6e-40c4-aaec-50d4f5927414"",
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.action }}"",
                    ""rightValue"": ""users""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""message_replies"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""26ce01b2-9e5b-43e8-926d-9d726c9ca74d"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.action }}"",
                    ""rightValue"": ""message_replies""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""message_summarize"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""45fd7264-6ac3-4bbd-8a91-c4cfb33b4545"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.action }}"",
                    ""rightValue"": ""message_summarize""
                  }
                ]
              },
              ""renameOutput"": true
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.2
    },
    {
      ""id"": ""b05735c3-4beb-4a80-8297-85e952e81270"",
      ""name"": ""Map Users to Messages"",
      ""type"": ""n8n-nodes-base.executeWorkflow"",
      ""position"": [
        -1520,
        -160
      ],
      ""parameters"": {
        ""mode"": ""each"",
        ""options"": {},
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $workflow.id }}""
        },
        ""workflowInputs"": {
          ""value"": {
            ""data"": ""={{ $json }}"",
            ""action"": ""users""
          },
          ""schema"": [
            {
              ""id"": ""action"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""action"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""data"",
              ""type"": ""object"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""data"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": true
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""28ed52b2-b0c3-4f19-b394-347c8ff9e323"",
      ""name"": ""Get User Info"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -880,
        380
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""17344879-1e10-4738-8db0-6e0daddea920"",
              ""name"": ""user"",
              ""type"": ""object"",
              ""value"": ""={{\n{\n  id: $('Get User').item.json.id,\n  team_id: $('Get User').item.json.team_id,\n  name: $('Get User').item.json.name,\n  is_bot: $('Get User').item.json.is_bot\n}\n}}""
            }
          ]
        },
        ""includeOtherFields"": true
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""bbd7c77e-2405-4e63-ae38-f064beafab9c"",
      ""name"": ""Fetch Message Replies"",
      ""type"": ""n8n-nodes-base.executeWorkflow"",
      ""position"": [
        -1300,
        -160
      ],
      ""parameters"": {
        ""mode"": ""each"",
        ""options"": {},
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $workflow.id }}""
        },
        ""workflowInputs"": {
          ""value"": {
            ""data"": ""={{ $json }}"",
            ""action"": ""message_replies""
          },
          ""schema"": [
            {
              ""id"": ""action"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""action"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""data"",
              ""type"": ""object"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""data"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": true
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""edf34e72-04b4-4fed-a3af-42dec1c7ed17"",
      ""name"": ""Has ReplyUsers?"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        -1540,
        1160
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""813d9fea-9de0-4151-aa45-d38a42f808b8"",
              ""operator"": {
                ""type"": ""array"",
                ""operation"": ""notEmpty"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.replyUsers }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""dc9c6cf0-c627-4311-9160-62204e9b67e0"",
      ""name"": ""Messages to Items1"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        -440,
        1160
      ],
      ""parameters"": {
        ""jsCode"": ""return $('Switch').first().json.data.messages""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""0b830a49-c77e-41f3-8d70-47a26bfe0a0e"",
      ""name"": ""Aggregate Results"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -760,
        -160
      ],
      ""parameters"": {
        ""mode"": ""raw"",
        ""options"": {},
        ""jsonOutput"": ""={{\n{\n  ...$('Map Users to Messages').item.json,\n  messages: $('Fetch Message Replies').item.json.data\n  .map((message,idx) => ({\n    ...message,\n    summary: $json.data[idx].text,\n  }))\n}\n}}""
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""b0c66c7f-0fed-465c-8933-7b803c9b3b64"",
      ""name"": ""Team Member Weekly Report Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        -560,
        -160
      ],
      ""parameters"": {
        ""text"": ""={{\n$json.messages\n  .map((message,idx) =>\n    `${message.userName} (<@${message.userId}>) posted on ${new Date(parseFloat(message.ts) * 1000).format('d MMM')}:\\n> \\\""${message.text}\\\"".\\nThe summary of this thread is as follows:\\n${message.summary.replaceAll('\\n', ' ')}`\n  )\n  .join('\\n---\\n')\n}}"",
        ""messages"": {
          ""messageValues"": [
            {
              ""message"": ""=Your are energetic assistant who produces weekly mini-reports on team members by analysing their slack messages from last week and posts these reports on the following Monday.\nThere has already been some work done to collect and summarise each thread made by the user within the last week.\nYour task is to summarize all the threads by this user and any interactions with other users involved and produce a mini report to share with other team members.\nFocus on wins and challenges.\nAim to motivate and call out any outstanding concerns where appropriate.\nWelcome any new team members who may have joined and say good bye to those who may have left.""
            }
          ]
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.6
    },
    {
      ""id"": ""e4a487ae-8d71-4fe6-a760-7a0fb95a8fac"",
      ""name"": ""Merge with Results"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -60,
        -160
      ],
      ""parameters"": {
        ""mode"": ""raw"",
        ""options"": {},
        ""jsonOutput"": ""={{\n{\n  ...$('Aggregate Results').item.json,\n  report: $json.text,\n}\n}}""
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""06736a5c-7450-406a-ad3a-08a368d1addf"",
      ""name"": ""Team Weekly Report Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        160,
        -160
      ],
      ""parameters"": {
        ""text"": ""={{\n$input.all()\n  .map(item => item.json)\n  .map(item =>\n`user: ${item.user.name} <@${item.user.id}>\nmessage count: ${item.messages.length}\nreport: ${item.report.replaceAll('\\n', ' ')}`\n  ).join('\\n---\\n')\n}}"",
        ""messages"": {
          ""messageValues"": [
            {
              ""message"": ""=Your are energetic assistant who produces a team-wide weekly report from all activity of all team members in the prior last week and posts this single report on the following Monday.\nThere has already been some work done to collect individual reports from team members.\nYour task is generate a report covering the team to prepare and motivate them for the upcoming week.\nFocus on wins and challenges if available.\nLook out for similar activities between members and make a connection if possible.\nAim to motivate and call out any outstanding concerns where appropriate.\nWelcome any new team members who may have joined and say good bye to those who may have left.""
            }
          ]
        },
        ""promptType"": ""define""
      },
      ""executeOnce"": true,
      ""typeVersion"": 1.6
    },
    {
      ""id"": ""eef36957-9bf0-4be3-95a8-73bbefdc0c85"",
      ""name"": ""Google Gemini Chat Model2"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""position"": [
        240,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""modelName"": ""models/gemini-2.0-flash""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""dSxo6ns5wn658r8N"",
          ""name"": ""Google Gemini(PaLM) Api account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""bfa5c99f-cd8f-4d34-9e6d-9ed476c87d22"",
      ""name"": ""Post Report in Team Channel"",
      ""type"": ""n8n-nodes-base.slack"",
      ""position"": [
        820,
        -160
      ],
      ""webhookId"": ""3613b3ca-fc98-427f-8903-a5996ff7552e"",
      ""parameters"": {
        ""text"": ""={{ $json.text }}"",
        ""select"": ""channel"",
        ""channelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""C06RS1WPUQ6"",
          ""cachedResultName"": ""general""
        },
        ""otherOptions"": {}
      },
      ""credentials"": {
        ""slackApi"": {
          ""id"": ""VfK3js0YdqBdQLGP"",
          ""name"": ""Slack account""
        }
      },
      ""typeVersion"": 2.3
    },
    {
      ""id"": ""b9a11c72-de41-4a45-85a0-672cf54ef152"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -2460,
        -440
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 820,
        ""height"": 520,
        ""content"": ""## 1. Fetch All Activity from Last Week\n[Learn more about the Slack node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.slack)\n\nWe'll start by fetching all activity in our team channel over the last 7 days and group them  by the message author. We can do this using the Slack node with a DateTime filter. This will give us the raw data to pick apart and analyse for reporting purposes.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""8afc048f-ce06-46c3-916f-cbcf14bcfe2b"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1620,
        -440
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 760,
        ""height"": 520,
        ""content"": ""## 2. Summarise Messages Threads & Conversations\n[Learn more about the Execute Workflow node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflow)\n\nWe'll do some more data mining by fetching all replies for each of these top level channel messages. By doing so, we get the full context of the conversation and can hopefully pick up some decisions, discoveries or concerns to add to our report. This data mining does require juggling a lot of \""items\"" which becomes hard to manage so we'll use subworkflows to simplify this work.\n\nOnce the data mining is complete, we can summarize each thread with AI and ensure we're capturing only the significant events which are report-worthy.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c9a7358c-fbe7-435a-b435-d7b07599bdc6"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -840,
        -440
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 660,
        ""height"": 620,
        ""content"": ""## 3. Generate Activity Reports for Each Team Member\n[Learn more about the Basic LLM node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm)\n\nWith our summarized threads which are grouped per user, we can aggregate them and give them to the AI again to generate a weekly report for the team member. This could include their wins, challenges, learnings or decisions - it really is up to you as to what the report looks like.\n\nA fun part of this output is getting to decide the tone of voice and delivery of the report. Don't be a bore and consider adding some personality and flair!""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""add32ef0-b515-44e6-a234-0a0fa77f4e84"",
      ""name"": ""Summarize Message Threads"",
      ""type"": ""n8n-nodes-base.executeWorkflow"",
      ""position"": [
        -1080,
        -160
      ],
      ""parameters"": {
        ""mode"": ""each"",
        ""options"": {},
        ""workflowId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $workflow.id }}""
        },
        ""workflowInputs"": {
          ""value"": {
            ""data"": ""={{\n{\n  ...$('Map Users to Messages').item.json,\n  messages: $json.data\n}\n}}"",
            ""action"": ""message_summarize""
          },
          ""schema"": [
            {
              ""id"": ""action"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""action"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""data"",
              ""type"": ""object"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""data"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": true
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""17f2f45e-2c95-4b3c-b6db-a2881ae88964"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -160,
        -440
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 680,
        ""height"": 620,
        ""content"": ""## 4. Generate Final Report for Whole Team\n[Learn more about the Basic LLM node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm)\n\nIn this step, we go one level higher and aggregate all individual team member reports together into a big team report. In this way, the overview can group similar activities and generalise activities in a broader sense. The message output will also be shorter which some may find easier to digest.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""18cc7fa7-603c-4165-97c6-80d72fd4a9a6"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        540,
        -440
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 680,
        ""height"": 620,
        ""content"": ""## 5. Post Report on Team Channel (on Monday Morning!)\n[Learn more about the Slack node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.slack)\n\nFinally, we can post the weekly report in the team channel. This is a great way to automate quick recaps for the team after the weekend break, get others back on track if they've been away or update ",
Resume Data Extraction and Storage in Supabase from Email Attachments,"{
  ""id"": ""GtN4XdkLIPMBIqSU"",
  ""meta"": {
    ""instanceId"": ""82cad572864ecfae931ea0fa4a2122d5ad401b8f2cb25fb3ff144b553e0d676d""
  },
  ""name"": ""Resume-Information-Extractor"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""76cdbf85-39be-4617-8215-10d728f281eb"",
      ""name"": ""Gmail Trigger"",
      ""type"": ""n8n-nodes-base.gmailTrigger"",
      ""position"": [
        80,
        80
      ],
      ""parameters"": {
        ""simple"": false,
        ""filters"": {},
        ""options"": {
          ""downloadAttachments"": true
        },
        ""pollTimes"": {
          ""item"": [
            {
              ""mode"": ""everyMinute""
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""cd0204d2-07b5-4ca7-821a-4a69289f5af1"",
      ""name"": ""Extract from File"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        560,
        80
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""pdf"",
        ""binaryPropertyName"": ""attachment_0""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4814f698-4598-4f07-8493-3ffa5d256847"",
      ""name"": ""Edit Fields"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        780,
        80
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""b5b82b5d-ae4e-43d9-835b-13c9f86555e7"",
              ""name"": ""text"",
              ""type"": ""string"",
              ""value"": ""={{ $json.text }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""7e5b3608-b081-4c1a-b349-9ab4fc2d0a1c"",
      ""name"": ""Basic LLM Chain"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        1000,
        80
      ],
      ""parameters"": {
        ""text"": ""=You are an HR expert, you are given a detailed CV text \nextract \nName \nEmail \nTelephone \nExperience \nSkills \nEducation \nThis is the CV text: {{ $json.text }}"",
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.6
    },
    {
      ""id"": ""04745a86-bf30-46e1-a8e0-b81bd88cf4fe"",
      ""name"": ""OpenRouter Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenRouter"",
      ""position"": [
        1000,
        300
      ],
      ""parameters"": {
        ""model"": ""meta-llama/llama-4-scout:free"",
        ""options"": {}
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9410f9c8-5df8-4c57-9c50-8f54e14eb14e"",
      ""name"": ""Structured Output Parser"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserStructured"",
      ""position"": [
        1180,
        300
      ],
      ""parameters"": {
        ""jsonSchemaExample"": ""{ \n\""Name\"": \""Firstname Lastname\"", \n\""Telephone\"": \""01788798797\"", \n\""Email\"": \""a@b.com\"", \n\""Education\"": [\""University 1\"", \""University 2\""], \n\""Skill\"": [\""Skill 1\"", \""Skill 2\"", \""Skill 3\""], \n\""Experience\"": [\""Job 1\"", \""job 2\"", \""job 3\""] \n}""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""4aeae52b-8d83-4b01-9731-931d49916afa"",
      ""name"": ""HTTP Request"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1360,
        80
      ],
      ""parameters"": {
        ""url"": ""[supabase URL]"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""name"",
              ""value"": ""={{ $json.output.Name }}""
            },
            {
              ""name"": ""telephone"",
              ""value"": ""={{ $json.output.Telephone }}""
            },
            {
              ""name"": ""email"",
              ""value"": ""={{ $json.output.Email }}""
            }
          ]
        },
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""apikey"",
              ""value"": ""[key]""
            },
            {
              ""name"": ""Authorization"",
              ""value"": ""Bearer [key]""
            },
            {
              ""name"": ""Prefer"",
              ""value"": ""return=representation""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""b0df6998-5b82-44df-8cee-81db46b5cf00"",
      ""name"": ""Supabase"",
      ""type"": ""n8n-nodes-base.supabase"",
      ""position"": [
        2000,
        80
      ],
      ""parameters"": {
        ""tableId"": ""experiences"",
        ""fieldsUi"": {
          ""fieldValues"": [
            {
              ""fieldId"": ""cv_id"",
              ""fieldValue"": ""={{ $('HTTP Request').item.json.id }}""
            },
            {
              ""fieldId"": ""text"",
              ""fieldValue"": ""={{ $json.Expr }}""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""5f08115f-da1c-49e3-b9ee-799a0a051c1d"",
      ""name"": ""Edit Fields1"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1580,
        80
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""2bd4d4e4-2d0c-4310-b9f9-a7236ac58f74"",
              ""name"": ""Expr"",
              ""type"": ""array"",
              ""value"": ""={{ $('Basic LLM Chain').item.json.output.Experience }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""cffc687f-5dbc-45b6-b5b6-328c567eb2d6"",
      ""name"": ""Split Out"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        1800,
        80
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""Expr""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3e676d37-1f0c-4833-8108-62abc882bc1e"",
      ""name"": ""Supabase1"",
      ""type"": ""n8n-nodes-base.supabase"",
      ""position"": [
        2000,
        280
      ],
      ""parameters"": {
        ""tableId"": ""skills"",
        ""fieldsUi"": {
          ""fieldValues"": [
            {
              ""fieldId"": ""cv_id"",
              ""fieldValue"": ""={{ $('HTTP Request').item.json.id }}""
            },
            {
              ""fieldId"": ""text"",
              ""fieldValue"": ""={{ $json.skill }}""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a6d6b1eb-26b5-4e0d-aee3-1f82c4aeb264"",
      ""name"": ""Edit Fields2"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1580,
        280
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""2bd4d4e4-2d0c-4310-b9f9-a7236ac58f74"",
              ""name"": ""skill"",
              ""type"": ""array"",
              ""value"": ""={{ $('Basic LLM Chain').item.json.output.Skill }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""f93e92e1-5c0e-47dd-9b90-9482df23f4b3"",
      ""name"": ""Split Out1"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        1800,
        280
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""skill""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e5f33b95-0b10-4fbf-96c4-9054d9c2f36f"",
      ""name"": ""Supabase2"",
      ""type"": ""n8n-nodes-base.supabase"",
      ""position"": [
        2000,
        500
      ],
      ""parameters"": {
        ""tableId"": ""education"",
        ""fieldsUi"": {
          ""fieldValues"": [
            {
              ""fieldId"": ""cv_id"",
              ""fieldValue"": ""={{ $('HTTP Request').item.json.id }}""
            },
            {
              ""fieldId"": ""text"",
              ""fieldValue"": ""={{ $json.Educ }}""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""fe182a17-f251-419a-a3e7-6601c1bda065"",
      ""name"": ""Edit Fields3"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1580,
        500
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""2bd4d4e4-2d0c-4310-b9f9-a7236ac58f74"",
              ""name"": ""Educ"",
              ""type"": ""array"",
              ""value"": ""={{ $('Basic LLM Chain').item.json.output.Education }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""e947dd88-027c-4bfc-9c8b-289efe514679"",
      ""name"": ""Split Out2"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        1800,
        500
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""Educ""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d90fd5f8-8b29-4c75-874c-cb2c783a924e"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        0,
        0
      ],
      ""parameters"": {
        ""height"": 280,
        ""content"": ""## Email Trigger\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""7465aa08-4604-4d0d-b36c-17aabba2dbe0"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        520,
        0
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 400,
        ""height"": 280,
        ""content"": ""## Prepare Data \n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""2a751d1c-1c1f-40dc-93e4-45195dc397dc"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        960,
        0
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 360,
        ""height"": 440,
        ""content"": ""## Extract Information \n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0ff39e87-a016-4bb9-8c00-53178b2ad4bf"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1340,
        0
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 900,
        ""height"": 680,
        ""content"": ""## Save Information\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6e367ac0-8191-4530-94b7-a6ab7582fbac"",
      ""name"": ""If"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        320,
        80
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""0047fdcf-2c7b-4286-a54e-7018028dea1c"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""exists"",
                ""singleValue"": true
              },
              ""leftValue"": ""attachment_0"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""b7e60ceb-d556-4140-a5fb-6d86a798097f"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        260,
        0
      ],
      ""parameters"": {
        ""color"": 5,
        ""height"": 280,
        ""content"": ""## check if Attachment exists""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""6c3db08e-b96b-4273-8e26-cceec49844a0"",
  ""connections"": {
    ""If"": {
      ""main"": [
        [
          {
            ""node"": ""Extract from File"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Split Out"": {
      ""main"": [
        [
          {
            ""node"": ""Supabase"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Split Out1"": {
      ""main"": [
        [
          {
            ""node"": ""Supabase1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Split Out2"": {
      ""main"": [
        [
          {
            ""node"": ""Supabase2"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Edit Fields"": {
      ""main"": [
        [
          {
            ""node"": ""Basic LLM Chain"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Edit Fields1"": {
      ""main"": [
        [
          {
            ""node"": ""Split Out"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Edit Fields2"": {
      ""main"": [
        [
          {
            ""node"": ""Split Out1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Edit Fields3"": {
      ""main"": [
        [
          {
            ""node"": ""Split Out2"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""HTTP Request"": {
      ""main"": [
        [
          {
            ""node"": ""Edit Fields1"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Edit Fields2"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Edit Fields3"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Gmail Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""If"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Basic LLM Chain"": {
      ""main"": [
        [
          {
            ""node"": ""HTTP Request"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract from File"": {
      ""main"": [
        [
          {
            ""node"": ""Edit Fields"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenRouter Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Basic LLM Chain"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Structured Output Parser"": {
      ""ai_outputParser"": [
        [
          {
            ""node"": ""Basic LLM Chain"",
            ""type"": ""ai_outputParser"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Automated LinkedIn Profile Discovery with Airtop and Google Search,"{
  ""id"": ""lifB7iUXlDzr5dmI"",
  ""meta"": {
    ""instanceId"": ""660cf2c29eb19fa42319afac3bd2a4a74c6354b7c006403f6cba388968b63f5d"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""LinkedIn Profile Discovery"",
  ""tags"": [
    {
      ""id"": ""a8B9vqj0vNLXcKVQ"",
      ""name"": ""template"",
      ""createdAt"": ""2025-04-04T15:38:37.785Z"",
      ""updatedAt"": ""2025-04-04T15:38:37.785Z""
    }
  ],
  ""nodes"": [
    {
      ""id"": ""9ae64a3a-c7e7-45ca-88ee-ebf6144f3197"",
      ""name"": ""When clicking ‘Test workflow’"",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        0,
        0
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""a22416bb-ef9e-422f-b480-cd52d8c93bfa"",
      ""name"": ""Person info"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        220,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1rjlKzphEbknNh_ToS9pR_dP_Tw93FsxDte5AI4LH5_E/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1rjlKzphEbknNh_ToS9pR_dP_Tw93FsxDte5AI4LH5_E"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1rjlKzphEbknNh_ToS9pR_dP_Tw93FsxDte5AI4LH5_E/edit?usp=drivesdk"",
          ""cachedResultName"": ""Linkedin Profile URLs""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""CwpCAR1HwgHZpRtJ"",
          ""name"": ""Google Drive""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""a4699dd8-54ef-478e-9ff8-2c2046ad6ea8"",
      ""name"": ""Search profile"",
      ""type"": ""n8n-nodes-base.airtop"",
      ""notes"": ""This could take a few minutes depending on the number of rows"",
      ""position"": [
        440,
        0
      ],
      ""parameters"": {
        ""url"": ""=https://www.google.com/search?q={{ encodeURI($json['Person Info']) }}"",
        ""prompt"": ""=This is Google Search results. the first results should be the Linkedin Page of {{ $json['Person Info'] }} \nReturn the Linkedin URL and nothing else.\nIf you cannot find the Linkedin URL, return an empty string. \nA valid Linkedin profile URL starts with \""https://www.linkedin.com/in/\"""",
        ""resource"": ""extraction"",
        ""operation"": ""query"",
        ""sessionMode"": ""new"",
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""airtopApi"": {
          ""id"": ""byhouJF8RLH5DkmY"",
          ""name"": ""Airtop""
        }
      },
      ""notesInFlow"": true,
      ""typeVersion"": 1
    },
    {
      ""id"": ""2dd4d350-743e-48a7-ab69-d0996bc46f49"",
      ""name"": ""Parse response"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        660,
        0
      ],
      ""parameters"": {
        ""mode"": ""runOnceForEachItem"",
        ""jsCode"": ""const linkedInProfile = $json.data.modelResponse\nconst rowData = $('Person info').item.json\n\nreturn { json: {\n  ...rowData,\n  'LinkedIn URL': linkedInProfile\n}};""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""3efc182a-8707-4c8d-8263-a2aebe62b0a7"",
      ""name"": ""Update row"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        880,
        0
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {},
          ""schema"": [
            {
              ""id"": ""Person Info"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Person Info"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Linkedin URL"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Linkedin URL"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Validated"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Validated"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""row_number"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""readOnly"": true,
              ""required"": false,
              ""displayName"": ""row_number"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""autoMapInputData"",
          ""matchingColumns"": [
            ""row_number""
          ],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""update"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1rjlKzphEbknNh_ToS9pR_dP_Tw93FsxDte5AI4LH5_E/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1rjlKzphEbknNh_ToS9pR_dP_Tw93FsxDte5AI4LH5_E"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1rjlKzphEbknNh_ToS9pR_dP_Tw93FsxDte5AI4LH5_E/edit?usp=drivesdk"",
          ""cachedResultName"": ""Linkedin Profile URLs""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""CwpCAR1HwgHZpRtJ"",
          ""name"": ""Google Drive""
        }
      },
      ""typeVersion"": 4.5
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""97cd5141-63d5-4ece-83eb-e544455097d3"",
  ""connections"": {
    ""Person info"": {
      ""main"": [
        [
          {
            ""node"": ""Search profile"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Parse response"": {
      ""main"": [
        [
          {
            ""node"": ""Update row"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Search profile"": {
      ""main"": [
        [
          {
            ""node"": ""Parse response"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When clicking ‘Test workflow’"": {
      ""main"": [
        [
          {
            ""node"": ""Person info"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
"Resume Screening & Behavioral Interviews with Gemini, Elevenlabs, & Notion ATS","{
  ""id"": ""EnfvHdczSXHN8vNv"",
  ""meta"": {
    ""instanceId"": ""dede14b31ec7e508c14f42cff0a64c12ba101f85945f0d41134b60824d8105f1"",
    ""templateId"": ""2860"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Resume Screening & Behavioral Interviews with Gemini, Elevenlabs, & Notion ATS copy"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""eb481f48-a0bb-43b6-bb6f-bd6de416ed3c"",
      ""name"": ""Merge"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        1480,
        700
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""combineBy"": ""combineAll""
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""3d98e145-b7c7-482a-8510-3ab6e442f65e"",
      ""name"": ""Structured Output Parser"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserStructured"",
      ""position"": [
        3180,
        880
      ],
      ""parameters"": {
        ""schemaType"": ""manual"",
        ""inputSchema"": ""{\n\t\""type\"": \""object\"",\n\t\""properties\"": {\n\t\t\""resume_score\"": {\n\t\t\t\""type\"": \""string\""\n\t\t},\n\t\t\""resume_evaluation\"": {\n\t\t\t\""type\"": \""string\""\n\t\t}\n\t}\n}""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""ad85623d-7c18-4b80-b5a9-3515096e2917"",
      ""name"": ""HR Expert"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        3000,
        700
      ],
      ""parameters"": {
        ""text"": ""=Profile received:\n{{ $json.job_description }}\n\nCandidate:\n{{ $('Applicant Summary').item.json.response.text }}"",
        ""messages"": {
          ""messageValues"": [
            {
              ""message"": ""You are an HR expert and you need to understand if the candidate aligns with the profile sought by the company. You must give a score from 1 to 10, where 1 means the candidate does not align with what is required, while 10 means they are the ideal candidate because they fully reflect the desired profile. Furthermore, in the 'consideration' field, explain the reasoning behind your score.""
            }
          ]
        },
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.5
    },
    {
      ""id"": ""23cb1def-11e8-4bcf-a667-154a9699c45d"",
      ""name"": ""Upload CV"",
      ""type"": ""n8n-nodes-base.googleDrive"",
      ""position"": [
        660,
        1120
      ],
      ""parameters"": {
        ""driveId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""My Drive""
        },
        ""options"": {},
        ""folderId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""19gFV-OtPby1Q7OCFJYWFgf1HsMhmk7yJ"",
          ""cachedResultUrl"": ""https://drive.google.com/drive/folders/19gFV-OtPby1Q7OCFJYWFgf1HsMhmk7yJ"",
          ""cachedResultName"": ""[CV]""
        },
        ""inputDataFieldName"": ""Resume""
      },
      ""credentials"": {
        ""googleDriveOAuth2Api"": {
          ""id"": ""JjRf0Foc59YXzEmS"",
          ""name"": ""Google Drive account""
        }
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""37ebc9bb-1d72-447c-8ea0-370b67a738e9"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1060,
        520
      ],
      ""parameters"": {
        ""width"": 360,
        ""height"": 480,
        ""content"": ""## Applicant Qualifications\n### Creates individual summary for Education, Job History, and Skills that is sent to LLM for processing; captures total years of experience""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""cfd19f7f-8790-4f2e-9ed2-a84b36b5613f"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1620,
        520
      ],
      ""parameters"": {
        ""width"": 360,
        ""height"": 400,
        ""content"": ""## Applicant Summary \n### Writes a concise summary of applicant’s Education, Job History, and Skills.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""41dc78d2-a937-49b2-8c3a-b73d841f053f"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2940,
        520
      ],
      ""parameters"": {
        ""width"": 360,
        ""height"": 400,
        ""content"": ""## HR Expert Evaluation\n### Compares resume to job description in Notion ATS and assesses candidate, outputting evaluation rationale and score of 1 to 10""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""bbf2ff07-8a53-4ca7-8e21-08f3bffc3ffa"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2040,
        520
      ],
      ""parameters"": {
        ""width"": 300,
        ""height"": 400,
        ""content"": ""## Gets Job Description \n### Searches Notion ATS database and pulls description that matches Job Code in Applicant form trigger""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""fbba47e9-2e7c-42df-9da1-1893b238abc1"",
      ""name"": ""Extract Resume"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        900,
        700
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""pdf"",
        ""binaryPropertyName"": ""=Resume""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b1313d9a-0d52-4387-b6b3-e1f9ed24b7ce"",
      ""name"": ""Applicant Summary"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainSummarization"",
      ""position"": [
        1680,
        700
      ],
      ""parameters"": {
        ""options"": {
          ""summarizationMethodAndPrompts"": {
            ""values"": {
              ""prompt"": ""="",
              ""combineMapPrompt"": ""=Write a concise summary of the following:\n\nEducational qualification: {{ $json.output[\""Educational qualification\""] }}\nJob History: {{ $json.output[\""Job History\""] }}\nSkills: {{ $json.output.Skills }}\n\nUse 300 words or less. Be concise and conversational.""
            }
          }
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""a1d840d2-af90-4411-bfa7-d378ff6b4872"",
      ""name"": ""Job Description Summary"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        2420,
        700
      ],
      ""parameters"": {
        ""text"": ""={{ $json.property_job_description }}"",
        ""messages"": {
          ""messageValues"": [
            {
              ""message"": ""summarize this in less than 250 words""
            }
          ]
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.5
    },
    {
      ""id"": ""627b3ddf-93eb-4206-84cb-6b0c78bb1e8f"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        3720,
        520
      ],
      ""parameters"": {
        ""width"": 280,
        ""height"": 400,
        ""content"": ""## Creates ATS Record\n### Updates Notion ATS database (free template) with applicant information, including AI assessment of qualifications vs job description.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d646da88-23c2-4846-8494-9e84d019b13e"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        3380,
        520
      ],
      ""parameters"": {
        ""width"": 280,
        ""height"": 400,
        ""content"": ""## Creates G-Sheets Record\n### Updates Google Sheet with applicant data as source for compliance reporting""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b3bac51c-b4db-4fe6-8bc2-bd5a3b798b3d"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2380,
        520
      ],
      ""parameters"": {
        ""width"": 360,
        ""height"": 400,
        ""content"": ""## Job Description Summary\n### Summarizes the job description into a string, 250 words or less""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4070358f-e169-40fb-8ba2-857149d8e37b"",
      ""name"": ""Applicant Qualifications"",
      ""type"": ""@n8n/n8n-nodes-langchain.informationExtractor"",
      ""position"": [
        1100,
        840
      ],
      ""parameters"": {
        ""text"": ""={{ $json.text }}"",
        ""options"": {
          ""systemPromptTemplate"": ""You are an expert extraction algorithm.\nOnly extract relevant information from the text.\nIf you do not know the value of an attribute asked to extract, you may omit the attribute's value.""
        },
        ""attributes"": {
          ""attributes"": [
            {
              ""name"": ""Educational qualification"",
              ""required"": true,
              ""description"": ""Summary of academic career, focusing on undergraduate and university studies.  Summarize in 100 words maximum.""
            },
            {
              ""name"": ""Job History"",
              ""required"": true,
              ""description"": ""Work history summary, focusing on most recent work experiences. Summarize in 100 words maximum""
            },
            {
              ""name"": ""Skills"",
              ""required"": true,
              ""description"": ""Extract the candidate’s technical skills. What software, frameworks, functional skills they are proficient in. Make a bulleted list.""
            },
            {
              ""name"": ""Experience"",
              ""required"": true,
              ""description"": ""Extract years of experience and group experience by job function or role type. Format Example: Total Years Exp: 7 - Account Executive: 2 years - Sales Development Representative: 2 years - Account Manager: 3 years""
            },
            {
              ""name"": ""Title & Employer"",
              ""description"": ""Extract most recent Job Title and Employer""
            },
            {
              ""name"": ""Total Years Experience"",
              ""description"": ""Extract total years of experience and format as Total Years Exp:  ""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""28996d39-49af-40fa-adf7-0e431d4d7ffe"",
      ""name"": ""Applicant Personal Data"",
      ""type"": ""@n8n/n8n-nodes-langchain.informationExtractor"",
      ""position"": [
        1100,
        700
      ],
      ""parameters"": {
        ""text"": ""={{ $json.text }}"",
        ""options"": {
          ""systemPromptTemplate"": ""You are an expert extraction algorithm.\nOnly extract relevant information from the text.\nIf you do not know the value of an attribute asked to extract, include the  attribute's value as N/A.""
        },
        ""schemaType"": ""manual"",
        ""inputSchema"": ""{\n\t\""type\"": \""object\"",\n\t\""properties\"": {\n\t\t\""telephone\"": {\n\t\t\t\""type\"": \""string\"",\n\t\t\t\""description\"": \""Phone number of the contact (digits only)\""\n\t\t},\n\t\t\""city\"": {\n\t\t\t\""type\"": \""string\"",\n\t\t\t\""description\"": \""City of the contact\""\n\t\t},\n\t\t\""full_name\"": {\n\t\t\t\""type\"": \""string\"",\n\t\t\t\""description\"": \""Full name of the contact\""\n\t\t},\n\t\t\""email\"": {\n\t\t\t\""type\"": \""string\"",\n\t\t\t\""format\"": \""email\"",\n\t\t\t\""description\"": \""Email address of the contact\""\n\t\t}\n\t},\n\t\""required\"": [\n\t\t\""full_name\"",\n\t\t\""email\"",\n\t\t\""telephone\"",\n\t\t\""city\""\n\t]\n}""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""5c466cca-7be7-4cda-bcba-68acc6d80c15"",
      ""name"": ""Sticky Note9"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        560,
        520
      ],
      ""parameters"": {
        ""width"": 300,
        ""height"": 400,
        ""content"": ""## Application Data\n### Captures data elements from Application Form and provides as input for workflow ""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1316d194-e7be-4b9a-9f96-2c953529a9d2"",
      ""name"": ""Application Data"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        680,
        700
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""240c052e-7799-4cc2-8d6d-ae521a469b0d"",
              ""name"": ""job_code"",
              ""type"": ""string"",
              ""value"": ""={{ $json.undefined }}""
            },
            {
              ""id"": ""612cdd0d-456d-4ebf-b8d8-8638b2b59390"",
              ""name"": ""date_time"",
              ""type"": ""string"",
              ""value"": ""={{ $json.submittedAt }}""
            }
          ]
        },
        ""includeOtherFields"": true
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""3f8c6944-f23c-44c2-afe1-1479fe9f97cc"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        60,
        480
      ],
      ""parameters"": {
        ""width"": 360,
        ""height"": 660,
        ""content"": ""  ""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9de7840a-a713-4f31-b7a2-a0dc80654281"",
      ""name"": ""Sticky Note12"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        4060,
        640
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 500,
        ""height"": 180,
        ""content"": ""## Human in the Loop 1 (Notion)\n### Hiring manager reviews qualified applicants in Notion ATS dashboard (free template) and triggers next steps with drag and drop that invites applicants to AI behavioral-based interview.  ""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ae5f6a5f-40c2-4f25-9df2-fd4565f61e2d"",
      ""name"": ""Sticky Note13"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        40,
        120
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 4500,
        ""content"": ""# Candidate Application > Resume Screen > ATS Record Creation > Invite to Interview\n## Automating the process from application to first round interview invitation.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""46211734-a52a-415e-8986-0da2af2c3a22"",
      ""name"": ""ElevenLabs Web Hook"",
      ""type"": ""n8n-nodes-base.webhook"",
      ""position"": [
        140,
        1880
      ],
      ""webhookId"": ""a3c17b54-7cd0-496a-af8a-74a6298dcfb4"",
      ""parameters"": {
        ""options"": {},
        ""httpMethod"": ""POST""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""1eecec11-38b1-493d-9198-e22ae2836034"",
      ""name"": ""ai_convo_items"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        440,
        1880
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""4d283fef-ea58-4479-9ddb-f4cd6f89020d"",
              ""name"": ""criteria_1_result"",
              ""type"": ""string"",
              ""value"": ""={{ $json.body.data.analysis.evaluation_criteria_results.problem_solving.result }}""
            },
            {
              ""id"": ""0584a114-baa3-4744-bcb0-4c52ba2760c1"",
              ""name"": ""criteria_1_rationale"",
              ""type"": ""string"",
              ""value"": ""={{ $json.body.data.analysis.evaluation_criteria_results.problem_solving.rationale }}""
            },
            {
              ""id"": ""b0aee518-3da0-4d82-b31b-8d5db29fa697"",
              ""name"": ""criteria_2_result"",
              ""type"": ""string"",
              ""value"": ""={{ $json.body.data.analysis.evaluation_criteria_results.handling_escalated_issues.result }}""
            },
            {
              ""id"": ""d9b9a697-e89a-41a4-abf0-bef5e5d5379a"",
              ""name"": ""criteria_2_rationale"",
              ""type"": ""string"",
              ""value"": ""={{ $json.body.data.analysis.evaluation_criteria_results.handling_escalated_issues.rationale }}""
            },
            {
              ""id"": ""cc3576db-804e-4aae-acf4-9ea9f6ef5223"",
              ""name"": ""ai_screen_phone_number_value"",
              ""type"": ""string"",
              ""value"": ""={{ $json.body.data.analysis.data_collection_results.phone_number_AI_screen.value }}""
            },
            {
              ""id"": ""a6a65cb1-f5f2-4d05-900a-9b4d6242a993"",
              ""name"": ""ai_screen_full_name_value"",
              ""type"": ""string"",
              ""value"": ""={{ $json.body.data.analysis.data_collection_results.full_name.value }}""
            },
            {
              ""id"": ""665854b1-d0af-42c3-9e96-465872fd367c"",
              ""name"": ""ai_screen_call_time"",
              ""type"": ""string"",
              ""value"": ""={{ $json.body.data.conversation_initiation_client_data.dynamic_variables.system__time_utc }}""
            },
            {
              ""id"": ""f295a22c-2266-4906-acf1-de60697c7611"",
              ""name"": ""ai_screen_conversation_id"",
              ""type"": ""string"",
              ""value"": ""={{ $json.body.data.conversation_initiation_client_data.dynamic_variables.system__conversation_id }}""
            },
            {
              ""id"": ""39309fb6-223e-487e-ac7e-6b5ce6e9e243"",
              ""name"": ""full_transcript"",
              ""type"": ""string"",
              ""value"": ""={{ $json.body.data }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""e8a451d9-83fa-46f8-9869-8d00a1122656"",
      ""name"": ""Extract_Audio"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        2120,
        1880
      ],
      ""parameters"": {
        ""url"": ""=https://api.elevenlabs.io/v1/convai/conversations/{{ $node[\""ai_convo_items\""].json.ai_screen_conversation_id }}/audio"",
        ""options"": {},
        ""jsonHeaders"": ""{\n  \""xi-api-key\"":\""insert elevenlabs api key\""\n}\n"",
        ""sendHeaders"": true,
        ""specifyHeaders"": ""json""
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""ed52a6c5-ac4e-4d70-9d15-8ca586c536c6"",
      ""name"": ""Filter_Notion_db"",
      ""type"": ""n8n-nodes-base.filter"",
      ""position"": [
        1520,
        1880
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""a4107790-d8d6-4f65-bc0b-f7c33a573769"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.property_phone }}"",
              ""rightValue"": ""={{ $('ai_convo_items').item.json.ai_screen_phone_number_value }}""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""95128237-3759-469c-94cb-87aefd02bd98"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        740,
        1880
      ],
      ""parameters"": {
        ""text"": ""={{ $json.full_transcript }}"",
        ""options"": {
          ""systemMessage"": ""You are an AI agent embodying the role of a skilled and objective Talent Acquisition Specialist. Your primary purpose is to review and critically evaluate answers to behavior-based interview questions. Review the full transcript and provide an expert evaluation of the candidate, based on their answers, using the evaluation criteria in the attached Notion tool to form the basis of your assessment. \n\nFilter Criteria Instructions:\nSearch the Notion database (attached tool) for the evaluation_criteria that matches the Job or Position title in the transcript First Message.  \n\n\nProvide a written assessment of the overall interview in a concise summary less than 300 words. Also provide a score 1 low to 5 high for the overall interview and place this at the start of the assessment. Confirm if you were able to use the evaluation criteria to make your assessment. Format the output as a text string.\n\nExample Output:\n  \""Score: 2 | The candidate's responses...\""""
        },
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""1b38915c-53b2-4526-a8e0-4ad55d43dcc1"",
      ""name"": ""Sticky Note14"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        60,
        1700
      ],
      ""parameters"": {
        ""width"": 280,
        ""height"": 400,
        ""content"": ""## Elevenlabs Trigger\n### AI Conversation agent behavior-based interview data/audio sent at end of conversation.  Includes an AI evaluation of interview questions.   \n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e198e96c-f46c-4043-abc2-be47ed9c799a"",
      ""name"": ""Sticky Note15"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        360,
        1700
      ],
      ""parameters"": {
        ""width"": 260,
        ""height"": 400,
        ""content"": ""## Data Mapping\n### Conversation data elements, including evaluation criteria and transcript summary mapped as output fields\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1505c84b-c06d-4397-adb0-5e0309a01271"",
      ""name"": ""Sticky Note16"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        660,
        1700
      ],
      ""parameters"": {
        ""width"": 440,
        ""height"": 400,
        ""content"": ""## AI Agent Interview Assessment\n### AI agent reviews full conversation transcript and provides overall assessment of behavior based interview, scoring applicants from 1 low to 5 high.\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3f8e282e-e2c3-44a3-bd88-fb5f1eef54ed"",
      ""name"": ""Sticky Note17"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1140,
        1700
      ],
      ""parameters"": {
        ""width"": 260,
        ""height"": 400,
        ""content"": ""## Applicant Tracker\n### Pulls applicant record from Notion db""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0d33e767-e65a-47e7-b33c-3806b00f1c6a"",
      ""name"": ""Sticky Note18"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1440,
        1700
      ],
      ""parameters"": {
        ""width"": 260,
        ""height"": 400,
        ""content"": ""## Applicant ID\n### Using phone number captured during interview, matches interview with candidate record in db""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1ce8d5e4-a576-45d5-9285-58f3cf00796d"",
      ""name"": ""Sticky Note19"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1740,
        1700
      ],
      ""parameters"": {
        ""width"": 260,
        ""height"": 400,
        ""content"": ""## Update Notion DB\n### Matches record and updates applicant record with AI conversation agent criteria evaluation and N8N AI agent overall interview score.\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6d0fd6ad-0ead-4734-8ef4-f0e6effcd67c"",
      ""name"": ""Sticky Note20"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2040,
        1700
      ],
      ""parameters"": {
        ""width"": 260,
        ""height"": 400,
        ""content"": ""## Conversation Audio\n### Downloads conversation audio and saves to Google Drive.  Option to delete audio from Elevenlabs server.\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6fd97a41-5ac4-4f93-85fb-296c450f1312"",
      ""name"": ""Sticky Note21"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2900,
        1820
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 720,
        ""height"": 180,
        ""content"": ""## Human in the Loop 2 - (Notion)\n### Hiring manager reviews Notion ATS dashboard (free template) and views AI Agent’s, overall assessment of conversation, including score, and individual assessment of each question response.  Manager can then automatically schedule the next interview  by dragging the applicant profile to the next process stage in Notion dashboard.\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""38e36f98-0387-4267-b573-ad957338565d"",
      ""name"": ""Sticky Note22"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        60,
        1340
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 4480,
        ""content"": ""# Conversation AI Agent Interview > AI Assessment - Evaluation > Notion ATS Update with Audio transcript\n## Automating behavioral based interview evaluation and scoring; updating manager dashboard in Notion. ""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""88a9d40c-9839-4fbb-9f78-81025cde86e7"",
      ""name"": ""Sticky Note23"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -500,
        320
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 520,
        ""height"": 980,
        ""content"": ""# Application \n## Applicant initiates process from Notion hosted Career Page (free template), submitting application using N8N form embedded into job postings.  Hidden field in form, Job Code, matches applicant to position.  The current configuration enables the employer to run AI recruiting for 3 roles at the same time.  Templates can be expanded to accommodate more than 3 jobs.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""40c48633-6021-4e4d-a3bd-1b81433f9b64"",
      ""name"": ""Sticky Note24"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -520,
        1700
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 520,
        ""height"": 400,
        ""content"": "" # AI Agent Interview\n## Successful candidates are invited to an instant interview with the AI agent""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0447d46c-3863-46a6-ae44-36e812b8f5e5"",
      ""name"": ""Sticky Note10"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        60,
        1160
      ],
      ""parameters"": {
        ""width"": 360,
        ""height"": 140,
        ""content"": ""### Configuration Note: \nUpdate Title and Job code in form to match your job posting hosted in Notion (free template) \n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ee57ca8f-7faf-4eae-a52f-bf25eb5462ca"",
      ""name"": ""Link Audio in Notion"",
      ""type"": ""n8n-nodes-base.notion"",
      ""position"": [
        2640,
        1880
      ],
      ""parameters"": {
        ""pageId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $('Applicant Record').item.json.id }}""
        },
        ""options"": {},
        ""resource"": ""databasePage"",
        ""operation"": ""update"",
        ""propertiesUi"": {
          ""propertyValues"": [
            {
              ""key"": ""Interview Audio|files"",
              ""fileUrls"": {
                ""fileUrl"": [
                  {
                    ""url"": ""=https://drive.google.com/file/d/{{ $json.id }}/preview"",
                    ""name"": ""Interview Audio""
                  }
                ]
              }
            }
          ]
        }
      },
      ""credentials"": {
        ""notionApi"": {
          ""id"": ""noqe7mtKHNObSPoE"",
          ""name"": ""Notion account""
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""2d081496-a85b-4d2f-b5a8-acabd18028d5"",
      ""name"": ""Sticky Note25"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2520,
        1700
      ],
      ""parameters"": {
        ""width"": 340,
        ""height"": 400,
        ""content"": ""## Embed audio transcript in Notion\n### Embeds audio transcript in applicant profile hosted in Notion ATS database, providing hiring manager easy access to validate AI assessment. \n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a319edea-a12d-4d70-85d6-9a03e8fafdaf"",
      ""name"": ""Sticky Note11"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -500,
        120
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 520,
        ""content"": ""# Workflow 1""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""bb415161-dd68-4c7b-baf6-a5190300d609"",
      ""name"": ""Sticky Note26"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -520,
        1360
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 520,
        ""height"": 140,
        ""content"": ""# Workflow 2""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""004dc3fe-2c4c-4a7c-82d7-f6737728a96f"",
      ""name"": ""Resume URL"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        880,
        1120
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""c0230d7a-037b-4d69-a133-28a611fba010"",
              ""name"": ""resume_url"",
              ""type"": ""string"",
              ""value"": ""=https://drive.google.com/file/d/{{ $json.id }}/preview ""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""15aae5ce-7247-44cd-8235-804d992d9a14"",
      ""name"": ""Get Applicant Record"",
      ""type"": ""n8n-nodes-base.notion"",
      ""position"": [
        1280,
        1120
      ],
      ""parameters"": {
        ""filters"": {
          ""conditions"": [
            {
              ""key"": ""Resume |files"",
              ""condition"": ""is_empty""
            }
          ]
        },
        ""options"": {},
        ""resource"": ""databasePage"",
        ""operation"": ""getAll"",
        ""databaseId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1cc7f9c9-6878-80c9-a271-ca0521f11b30"",
          ""_comment"": ""removed notion database above"",
          ""cachedResultUrl"": ""  "",
          ""cachedResultName"": ""Applicant Tracker""
        },
        ""filterType"": ""manual""
      },
      ""credentials"": {
        ""notionApi"": {
          ""id"": ""noqe7mtKHNObSPoE"",
          ""name"": ""Notion account""
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""397c83d8-f3cd-4c06-9ab5-b8ddb55cf7b9"",
      ""name"": ""Embed Resume in Notion"",
      ""type"": ""n8n-nodes-base.notion"",
      ""position"": [
        1500,
        1120
      ],
      ""parameters"": {
        ""pageId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $json.id }}""
        },
        ""options"": {},
        ""resource"": ""databasePage"",
        ""operation"": ""update"",
        ""propertiesUi"": {
          ""propertyValues"": [
            {
              ""key"": ""Resume |files"",
              ""fileUrls"": {
                ""fileUrl"": [
                  {
                    ""url"": ""={{ $('Resume URL').item.json.resume_url }}"",
                    ""name"": ""Resume""
                  }
                ]
              }
            }
          ]
        }
      },
      ""credentials"": {
        ""notionApi"": {
          ""id"": ""noqe7mtKHNObSPoE"",
          ""name"": ""Notion account""
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""998b0d29-22c9-448a-af1a-6bfe5a282cd6"",
      ""name"": ""Wait"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        1080,
        1120
      ],
      ""webhookId"": ""71a63e24-b5a7-475f-b3d4-4f062d1caf41"",
      ""parameters"": {},
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""76b38736-b3ec-4b52-85cf-0d9556c61541"",
      ""name"": ""Application Form 1 of 3"",
      ""type"": ""n8n-nodes-base.formTrigger"",
      ""position"": [
        180,
        520
      ],
      ""webhookId"": ""fbcca45f-efd3-4f31-9b0e-1ddb19705200"",
      ""parameters"": {
        ""options"": {
          ""buttonLabel"": ""Submit"",
          ""respondWithOptions"": {
            ""values"": {
              ""formSubmittedText"": ""Thank you for your interest in joining the [Company Name] team! We’ll review your information, and if your background looks like a match, we’ll reach out to schedule the next steps.  While we review your application, please know that we will not share your application information with anyone outside the [Company Name] team except where necessary to assist us in assessing your candidacy throughout the recruitment process. That means your data may be assessed in the United States by our team in [City/Location]. We may keep the information you submitted for up to four years and use it to keep you informed of other opportunities that might be a good fit for you.  If you would like to know more about how we use your personal data, please review our Privacy Notice, where you can also find information on how to update your contact preferences.  In the meantime, check out our company culture!  Thanks again,  The [Company Name] Talent Acquisition Team""
            }
          }
        },
        ""formTitle"": ""Sr Account Executive"",
        ""formFields"": {
          ""values"": [
            {
              ""fieldName"": ""job_code"",
              ""fieldType"": ""hiddenField"",
              ""fieldValue"": ""300""
            },
            {
              ""fieldLabel"": ""Name"",
              ""requiredField"": true
            },
            {
              ""fieldType"": ""email"",
              ""fieldLabel"": ""Email"",
              ""requiredField"": true
            },
            {
              ""fieldType"": ""file"",
              ""fieldLabel"": ""Resume"",
              ""requiredField"": true,
              ""acceptFileTypes"": "".pdf""
            }
          ]
        },
        ""formDescription"": ""[Company Name]""
",
Summarise MS Teams Channel Activity for Weekly Reports with AI,"{
  ""meta"": {
    ""instanceId"": ""408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""ee39f797-6f6f-4a62-9cf1-0c95b47baf23"",
      ""name"": ""Schedule Trigger"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        -160,
        0
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {}
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""c1b9fadc-586b-4edf-a19a-6995479d4de5"",
      ""name"": ""Fetch Latest Channel Messages"",
      ""type"": ""n8n-nodes-base.microsoftTeams"",
      ""position"": [
        60,
        0
      ],
      ""webhookId"": ""b36a534a-1bca-4c3d-ab25-777ca98fba1a"",
      ""parameters"": {
        ""teamId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""=fc62d6a3-eaba-430f-b451-3c3107751ba0""
        },
        ""resource"": ""channelMessage"",
        ""channelId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""=19:NQuQMYvvtC9DcTEQs1Vul1Nm1xIXnRmznAwov7MuNZ81@thread.tacv2""
        },
        ""operation"": ""getAll""
      },
      ""credentials"": {
        ""microsoftTeamsOAuth2Api"": {
          ""id"": ""AUH9lDgO5KTl2J6q"",
          ""name"": ""Microsoft Teams account""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""1be03962-5028-47a8-8deb-3c59c121df01"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        920,
        140
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4.1-mini"",
          ""cachedResultName"": ""gpt-4.1-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""8gccIjcuf3gvaoEr"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""04a75b1c-685f-4264-ade7-cb2778fc7d4f"",
      ""name"": ""Team Member Weekly Report Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        820,
        0
      ],
      ""parameters"": {
        ""text"": ""=## User\nDisplayName: {{ $json.user.displayName }}\n\n## Messages\n{{\nArray.from($json.messages)\n.map(msg => {\n  return [\n    `Type: Message`,\n    `Posted: ${msg.createdDateTime}`,\n    `Message: ${msg.body.content.replaceAll('\\n', ' ')}`,\n    msg.parent ? `In Reply To: ${msg.parent.from.user.displayName} said \""${msg.parent.body.content.replace('\\n', ' ')}\""` : ''\n  ].join('\\n')\n}).join('---\\n')\n}}"",
        ""messages"": {
          ""messageValues"": [
            {
              ""message"": ""=Your are energetic assistant who produces weekly mini-reports on team members by analysing their slack messages from last week and posts these reports on the following Monday.\nThere has already been some work done to collect and summarise each thread made by the user within the last week.\nYour task is to summarize all the threads by this user and any interactions with other users involved and produce a mini report to share with other team members.\nFocus on wins and challenges.\nAim to motivate and call out any outstanding concerns where appropriate.\nWelcome any new team members who may have joined and say good bye to those who may have left.""
            }
          ]
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.6
    },
    {
      ""id"": ""919347aa-cd48-42ff-9504-dd66c5b18caa"",
      ""name"": ""Merge Report With User Data"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1200,
        0
      ],
      ""parameters"": {
        ""mode"": ""raw"",
        ""options"": {},
        ""jsonOutput"": ""={{\n{\n  ...$('Groups to Items').item.json,\n  report: $json.text\n}\n}}""
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""67c23cf0-9af6-4a89-94c0-7a3e01230b2f"",
      ""name"": ""OpenAI Chat Model1"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        1820,
        140
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4.1-mini"",
          ""cachedResultName"": ""gpt-4.1-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""8gccIjcuf3gvaoEr"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""65111f1b-42c7-4657-9512-e740d75bdbdc"",
      ""name"": ""Reports to Single List"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        1500,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""aggregate"": ""aggregateAllItemData""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""82a90342-cc4d-4d80-9ff6-83cab22861f4"",
      ""name"": ""Team Weekly Report Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        1720,
        0
      ],
      ""parameters"": {
        ""text"": ""={{\n$input.first().json.data\n  .map(item =>\n`user: ${item.user.displayName} <${item.user.id}>\nmessage count: ${item.messages.length}\nreport: ${item.report.replaceAll('\\n', ' ')}`\n  )\n  .join('\\n---\\n')\n}}"",
        ""messages"": {
          ""messageValues"": [
            {
              ""message"": ""=Your are energetic assistant who produces a team-wide weekly report from all activity of all team members in the prior last week and posts this single report on the following Monday.\nThere has already been some work done to collect individual reports from team members.\nYour task is generate a report covering the team to prepare and motivate them for the upcoming week.\nFocus on wins and challenges if available.\nLook out for similar activities between members and make a connection if possible.\nAim to motivate and call out any outstanding concerns where appropriate.\nWelcome any new team members who may have joined and say good bye to those who may have left.\nFormat the report as markdown.\nDo not sign off on the report.""
            }
          ]
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.6
    },
    {
      ""id"": ""464a925f-eb06-4b59-a262-ca336506de15"",
      ""name"": ""Markdown to HTML"",
      ""type"": ""n8n-nodes-base.markdown"",
      ""position"": [
        2300,
        0
      ],
      ""parameters"": {
        ""mode"": ""markdownToHtml"",
        ""options"": {},
        ""markdown"": ""={{ $json.text }}"",
        ""destinationKey"": ""html""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ecb047a7-5d52-4e87-8d0e-c9c17489cddc"",
      ""name"": ""Send Report to Channel"",
      ""type"": ""n8n-nodes-base.microsoftTeams"",
      ""position"": [
        2540,
        0
      ],
      ""webhookId"": ""b36a534a-1bca-4c3d-ab25-777ca98fba1a"",
      ""parameters"": {
        ""teamId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""=fc62d6a3-eaba-430f-b451-3c3107751ba0"",
          ""__regex"": ""^([0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})""
        },
        ""message"": ""={{ $json.html }}"",
        ""options"": {
          ""includeLinkToWorkflow"": false
        },
        ""resource"": ""channelMessage"",
        ""channelId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""=19:NQuQMYvvtC9DcTEQs1Vul1Nm1xIXnRmznAwov7MuNZ81@thread.tacv2""
        },
        ""contentType"": ""html""
      },
      ""credentials"": {
        ""microsoftTeamsOAuth2Api"": {
          ""id"": ""AUH9lDgO5KTl2J6q"",
          ""name"": ""Microsoft Teams account""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""e1d371c8-9069-4a33-a450-78055769931b"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -220,
        -240
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 700,
        ""height"": 540,
        ""content"": ""## 1. Fetch All Channel Messages from Last Week\n[Learn more about the MS Teams node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.microsoftteams)\n\nWe'll start by fetching all activity in our team channel over the last 7 days and group them  by the message author. We can do this using the MS Teams node. This will give us the raw data to pick apart and analyse for reporting purposes.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""77aff845-5226-4023-a2da-afb2021a08ed"",
      ""name"": ""Group Messages By UserId"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        280,
        0
      ],
      ""parameters"": {
        ""jsCode"": ""const messages = $input.all().map(item => item.json);\n\nconst groupByUserId = messages.reduce((acc,msg) => {\n  return {\n    ...acc,\n    [msg.from.user.id]: acc[msg.from.user.id]\n      ? acc[msg.from.user.id].concat(msg)\n      : [msg]\n  }\n}, {});\n\nconst output = Object.keys(groupByUserId).map(userId => {\n  const userMessages = groupByUserId[userId];\n  for (let i=0,j=userMessages.length;i<j;i++) {\n    if (userMessages[i].replyToId) {\n      userMessages[i].parent = messages.find(msg => msg.id === userMessages[i].replyToId);\n    }\n  }\n  return {\n    user: userMessages[0].from.user,\n    messages: userMessages\n  };\n});\n\nreturn { output };""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""ee415463-a7e2-43dd-abfa-4050cc230452"",
      ""name"": ""Groups to Items"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        600,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""output""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""8d4c7621-3c04-4fbe-bbee-b7dade2ab837"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        520,
        -240
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 860,
        ""height"": 540,
        ""content"": ""## 2. Generate Activity Reports for Each Team Member\n[Learn more about the Basic LLM node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm)\n\nWith our summarized threads which are grouped per user, we can aggregate them and give them to the AI again to generate a weekly report for the team member. This could include their wins, challenges, learnings or decisions - it really is up to you as to what the report looks like. A fun part of this output is getting to decide the tone of voice and delivery of the report. Don't be a bore and consider adding some personality and flair!""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""22f3e375-201d-4a66-b1e0-592bbeb12eac"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1420,
        -240
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 680,
        ""height"": 540,
        ""content"": ""## 3. Generate Final Report for Whole Team\n[Learn more about the Basic LLM node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm)\n\nIn this step, we go one level higher and aggregate all individual team member reports together into a big team report. In this way, the overview can group similar activities and generalise activities in a broader sense. The message output will also be shorter which some may find easier to digest.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""873c2510-cf01-464b-b84e-936bd1c4d7a7"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2140,
        -240
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 680,
        ""height"": 540,
        ""content"": ""## 4. Post Report on Team Channel (on Monday Morning!)\n[Learn more about the Markdown node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.markdown)\n\nFinally, we can post the weekly report in the team channel. This is a great way to automate quick recaps for the team after the weekend break, get others back on track if they've been away or update client team who may pop in now and again to collaborate.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4882c210-fec8-4b8e-b114-0b6d889ed917"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -680,
        -960
      ],
      ""parameters"": {
        ""width"": 420,
        ""height"": 1400,
        ""content"": ""## Try It Out!\n### This n8n template lets you summarize individual team member activity on MS Teams for the past week and generates a report.\n\nFor remote teams, chat is a crucial communication tool to ensure work gets done but with so many conversations happening at once and in multiple threads, ideas, information and decisions usually live in the moment and get lost just as quickly - and all together forgotten by the weekend!\n\nUsing this template, this doesn't have to be the case. Have AI crawl through last week's activity, summarize all messages and replies and generate a casual and snappy report to bring the team back into focus for the current week. A project manager's dream!\n\n### How it works\n* A scheduled trigger is set to run every Monday at 6am to gather all team channel messages within the last week.\n* Messages are grouped by user.\n* AI analyses the raw messages and replies to pull out interesting observations and highlights. This is referred to as the individual reports.\n* All individual reports are then combined and summarized together into what becomes the team weekly report. This allows understanding of group and similar activities.\n* Finally, the team weekly report is posted back to the channel. The timing is important as it should be the first message of the week and ready for the team to glance over coffee.\n\n### How to use\n* Ideally works best per project and where most of the comms happens on a single channel. Avoid combining channels and instead duplicate this workflow for more channels.\n* You may need to filter for specific team members if you want specific team updates.\n* Customise the report to suit your organisation, team or the channel. You may prefer to be more formal if clients or external stakeholders are also present.\n\n### Requirements\n* MS Teams for chat platform\n* OpenAI for LLM\n\n### Customising this workflow\n* If the teams channel is busy enough already, consider posting the final report to email.\n* Pull in project metrics to include in your report. As extra context, it may be interesting to tie the messages to production performance.\n* Use an AI Agent to query for knowledgebase or tickets relevant to the messages. This may be useful for attaching links or references to add context.\n\n### Need Help?\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\n\nHappy Hacking!""
      },
      ""typeVersion"": 1
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""Groups to Items"": {
      ""main"": [
        [
          {
            ""node"": ""Team Member Weekly Report Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Markdown to HTML"": {
      ""main"": [
        [
          {
            ""node"": ""Send Report to Channel"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Schedule Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""Fetch Latest Channel Messages"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Team Member Weekly Report Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model1"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Team Weekly Report Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Reports to Single List"": {
      ""main"": [
        [
          {
            ""node"": ""Team Weekly Report Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Group Messages By UserId"": {
      ""main"": [
        [
          {
            ""node"": ""Groups to Items"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Team Weekly Report Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Markdown to HTML"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Merge Report With User Data"": {
      ""main"": [
        [
          {
            ""node"": ""Reports to Single List"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Fetch Latest Channel Messages"": {
      ""main"": [
        [
          {
            ""node"": ""Group Messages By UserId"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Team Member Weekly Report Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Merge Report With User Data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
AI Automated HR Workflow for CV Analysis and Candidate Evaluation,"This workflow automates the process of handling job applications by extracting relevant information from submitted CVs, analyzing the candidate's qualifications against a predefined profile, and storing the results in a Google Sheet. Here’s how it operates:

Data Collection and Extraction:

The workflow begins with a form submission (On form submission node), which triggers the extraction of data from the uploaded CV file using the Extract from File node.
Two informationExtractor nodes (Qualifications and Personal Data) are used to parse specific details such as educational background, work history, skills, city, birthdate, and telephone number from the text content of the CV.
Processing and Evaluation:

A Merge node combines the extracted personal and qualification data into a single output.
This merged data is then passed through a Summarization Chain that generates a concise summary of the candidate’s profile.
An HR Expert chain evaluates the candidate against a desired profile (Profile Wanted), assigning a score and providing considerations for hiring.
Finally, all collected and processed data including the evaluation results are appended to a Google Sheets document via the Google Sheets node for further review or reporting purposes [[9]].
",
Scrape LinkedIn Job Listings for Hiring Signals & Prospecting with Bright Data,"{
  ""meta"": {
    ""instanceId"": ""1eadd5bc7c3d70c587c28f782511fd898c6bf6d97963d92e836019d2039d1c79""
  },
  ""nodes"": [
    {
      ""id"": ""bee233ee-7212-4fbd-b151-0bb49919ca42"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        0,
        280
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 1289,
        ""height"": 4398,
        ""content"": ""LinkedIn Job Data Scraper to Google Sheets\nScrape live job posts from LinkedIn via Bright Data, clean them, and send to Google Sheets. Use for:\n✅ Job Hunting — fresh, filtered roles\n✅ Sales Prospecting — find companies hiring (aka growing)\n⚙️ What's Used\nn8n Nodes: Form → HTTP Request → Wait → If → Code → Google Sheets\nExternal Tools:\n\nBright Data – Dataset API\nGoogle Sheets – Template Copy\n\n🔑 Setup – Credentials Needed\n\nBright Data API Key → Add to HTTP headers as: Authorization: Bearer YOUR_KEY\nGoogle Sheets OAuth2 → Connect account in n8n\n\n📝 Input Form – Fields\nUsed to define what job data to scrape.\nFieldDescriptionExampleLocationCity/regionNew York, BerlinKeywordRole to searchCMO, Data AnalystCountry2-letter ISO codeUS, UK, DETime RangeHow recent the jobs should be\""Past 24 hours\"" or \""Last 7 days\"" (recommended)Job TypeFull-time / Part-time / Contract(Optional)ExperienceEntry, Mid, Senior(Optional)RemoteFilter by remote-friendly roles(Optional)CompanyFilter by specific employer(Optional)\n🚀 Workflow Steps\n\nUser fills input form\nTrigger snapshot via Bright Data Dataset API\nWait node + polling checks when data is ready (~1–3 mins)\nCleanup step:\n\nFlattens nested fields (job_poster, base_salary, etc.)\nRemoves HTML from job descriptions\n\n\nSend to Google Sheet\n\nSheet is pre-linked, 1 job per row\nExample columns: job_title, company_name, location, salary_min, apply_link, job_description_plain\n\n\nYou use the data\n\nJob seekers → Apply fast\nSalespeople → Spot buyers & offer help\n\n\n\n💡 Pro Tips\n\nUse \""Past 24 hours\"" or \""Last 7 days\"" for fresher results\nLeave filters empty if unsure — Bright Data will return broader results\nUse cleaned data for:\n\nCold email personalization\nLinkedIn outreach\nBuilding ICP-based lead lists\n\n\n\n🧪 Example API Body\njson[ \n  { \n    \""location\"": \""New York\"", \n    \""keyword\"": \""Marketing Manager\"", \n    \""country\"": \""US\"", \n    \""time_range\"": \""Past 24 hours\"", \n    \""job_type\"": \""Part-time\"", \n    \""experience_level\"": \""\"", \n    \""remote\"": \""\"", \n    \""company\"": \""\"" \n  } \n]\n📄 Template & Resources\n\n📋 Google Sheet Template (Make a Copy)\n📘 Bright Data API Reference\n\n🛠️ Customize It\n\nAdd filters to HTTP Body (remote, experience_level, etc.)\nChange polling interval if Bright Data is slow\nAdd custom logic to score/prioritize listings\nSend filtered lists to CRM, Slack, etc.\n\nThis gives you a live stream of hiring signals — whether you're finding a job or pitching a service. One form. One click. Fully automated.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0fa9d0fe-b3ba-48be-99b9-2bc3aeb18b43"",
      ""name"": ""Sticky Note9"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        0,
        -60
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 1300,
        ""height"": 320,
        ""content"": ""=======================================\n            WORKFLOW ASSISTANCE\n=======================================\nFor any questions or support, please contact:\n    Yaron@nofluff.online\n\nExplore more tips and tutorials here:\n   - YouTube: https://www.youtube.com/@YaronBeen/videos\n   - LinkedIn: https://www.linkedin.com/in/yaronbeen/\n=======================================\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""33cb416e-a7ff-4b55-9701-9b9e95d76f12"",
      ""name"": ""Snapshot Progress"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        2840,
        360
      ],
      ""parameters"": {
        ""url"": ""=https://api.brightdata.com/datasets/v3/progress/{{ $('HTTP Request- Post API call to Bright Data').item.json.snapshot_id }}"",
        ""options"": {},
        ""sendHeaders"": true,
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""Authorization"",
              ""value"": ""Bearer <YOUR_BRIGHT_DATA_API_KEY>""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""6b8c9405-8f8c-4a24-85ca-343d33e06141"",
      ""name"": ""Sticky Note10"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        3680,
        140
      ],
      ""parameters"": {
        ""width"": 195,
        ""height"": 646,
        ""content"": ""In this workflow, I use Google Sheets to store the results. \n\nYou can use my template to get started faster:\n\n1. [Click on this link to get the template](https://docs.google.com/spreadsheets/d/1_jbr5zBllTy_pGbogfGSvyv1_0a77I8tU-Ai7BjTAw4/edit?usp=sharing)\n2. Make a copy of the Sheets\n3. Add the URL to this node \n\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3d3cd92a-9ea7-4a4f-a9b5-aae689f719e5"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1320,
        -60
      ],
      ""parameters"": {
        ""width"": 480,
        ""height"": 2240,
        ""content"": ""# 🔍 LinkedIn Jobs API – Parameter Guide\n\nUse this object to query LinkedIn job listings.  \nEach field lets you filter results based on different criteria.\n\n```json\n{\n  \""location\"": \""{{ $json.Location }}\"",\n  \""keyword\"": \""{{ $json.Keyword }}\"",\n  \""country\"": \""{{ $json.Country }}\"",\n  \""time_range\"": \""Past 24 hours\"",\n  \""job_type\"": \""Part-time\"",\n  \""experience_level\"": \""\"",\n  \""remote\"": \""\"",\n  \""company\"": \""\""\n}\n```\n\n## 🧾 Field Explanations & Valid Options\n\n### 🗺️ location\nCity or region where the job is located.\nUse a city or region name.\n✅ Example: \""Berlin\"", \""New York\""\n\n### 🧠 keyword\nJob title or search keywords.\nUse terms like role names or skills.\n✅ Example: \""Data Scientist\"", \""Growth Marketing\""\n\n### 🌍 country\nCountry code in ISO 3166-1 alpha-2 format.\n✅ Example: \""US\"", \""DE\"", \""IL\""\n\n### ⏱️ time_range\nPosting date filter.\nLimits results based on how recently jobs were posted.\nAccepted values:\n- Any Time\n- Past 24 hours\n- Past Week\n- Past Month\n✅ Example: \""Past Week\""\n\n### 💼 job_type\nType of employment.\nUse a single value or comma-separated list.\nAccepted values:\n- Full-time\n- Part-time\n- Contract\n- Temporary\n- Internship\n- Volunteer\n- Other\n✅ Example: \""Full-time,Contract\""\n\n### 🎯 experience_level\nSeniority level of the job.\nAccepted values:\n- Internship\n- Entry level\n- Associate\n- Mid-Senior level\n- Director\n- Executive\n✅ Example: \""Mid-Senior level\""\n\n### 🌐 remote\nWorkplace type.\nAccepted values:\n- Remote\n- On-site\n- Hybrid\n- (leave blank for no preference)\n✅ Example: \""Remote\""\n\n### 🏢 company\nFilter by company name.\nOptional. Use plain text.\n✅ Example: \""Google\"", \""Spotify\""\n\n## ✅ Full Example\n\n```json\n{\n  \""location\"": \""New York\"",\n  \""keyword\"": \""UI Designer\"",\n  \""country\"": \""US\"",\n  \""time_range\"": \""Past Week\"",\n  \""job_type\"": \""Full-time,Contract\"",\n  \""experience_level\"": \""Mid-Senior level\"",\n  \""remote\"": \""Hybrid\"",\n  \""company\"": \""Spotify\""\n}\n```\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1d7a7bb0-1531-4516-9373-5e85a090b143"",
      ""name"": ""On form submission - Discover Jobs"",
      ""type"": ""n8n-nodes-base.formTrigger"",
      ""position"": [
        1700,
        580
      ],
      ""webhookId"": ""8d0269c7-d1fc-45a1-a411-19634a1e0b82"",
      ""parameters"": {
        ""options"": {},
        ""formTitle"": ""Linkedin High Intent Prospects And Job Post Hunt"",
        ""formFields"": {
          ""values"": [
            {
              ""fieldLabel"": ""Job Location"",
              ""placeholder"": ""example: new york"",
              ""requiredField"": true
            },
            {
              ""fieldLabel"": ""Keyword"",
              ""placeholder"": ""example: CMO, AI architect"",
              ""requiredField"": true
            },
            {
              ""fieldLabel"": ""Country (2 letters)"",
              ""placeholder"": ""example: US,UK,IL"",
              ""requiredField"": true
            }
          ]
        },
        ""formDescription"": ""This form lets you customize your job search / prospecting by choosing:\n\nLocation (city or region)\n\nJob title or keywords\n\nCountry code\n\nFilters like posting date, job type, experience level, and remote options\n\nYou can also optionally narrow results by company name.\n\n🧠 Tip: Leave fields blank if you want broader results.""
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""aea569df-eedd-441f-aba5-c3c26a50fa87"",
      ""name"": ""HTTP Request- Post API call to Bright Data"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        2260,
        620
      ],
      ""parameters"": {
        ""url"": ""https://api.brightdata.com/datasets/v3/trigger"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""=[\n  {\n    \""location\"": \""{{ $json['Job Location'] }}\"",\n    \""keyword\"": \""{{ $json.Keyword }}\"",\n    \""country\"": \""{{ $json['Country (2 letters)'] }}\"",\n    \""time_range\"": \""Past 24 hours\"",\n    \""job_type\"": \""Part-time\"",\n    \""experience_level\"": \""\"",\n    \""remote\"": \""\"",\n    \""company\"": \""\""\n  }\n] "",
        ""sendBody"": true,
        ""sendQuery"": true,
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""queryParameters"": {
          ""parameters"": [
            {
              ""name"": ""dataset_id"",
              ""value"": ""gd_lpfll7v5hcqtkxl6l""
            },
            {
              ""name"": ""endpoint"",
              ""value"": ""https://yaron-nofluff.app.n8n.cloud/webhook-test/8c42463d-a631-4a17-a084-4bcbbb3bfc68""
            },
            {
              ""name"": ""notify"",
              ""value"": ""https://yaron-nofluff.app.n8n.cloud/webhook-test/8c42463d-a631-4a17-a084-4bcbbb3bfc68""
            },
            {
              ""name"": ""format"",
              ""value"": ""json""
            },
            {
              ""name"": ""uncompressed_webhook"",
              ""value"": ""true""
            },
            {
              ""name"": ""type"",
              ""value"": ""discover_new""
            },
            {
              ""name"": ""discover_by"",
              ""value"": ""=keyword""
            }
          ]
        },
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""Authorization"",
              ""value"": ""Bearer <YOUR_BRIGHT_DATA_API_KEY>""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""8837f055-7243-44b6-87a2-e679d75839d0"",
      ""name"": ""Wait - Polling Bright Data"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        2600,
        360
      ],
      ""webhookId"": ""8005a2b3-2195-479e-badb-d90e4240e699"",
      ""parameters"": {
        ""unit"": ""minutes""
      },
      ""executeOnce"": false,
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""1f0ebefa-42a1-450c-b30a-64edabdaedaf"",
      ""name"": ""If - Checking status of Snapshot - if data is ready or not"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        3040,
        360
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""7932282b-71bb-4bbb-ab73-4978e554de7e"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.status }}"",
              ""rightValue"": ""running""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""e17b4da0-3f9c-45d5-acdf-ab634acfef97"",
      ""name"": ""HTTP Request - Getting data from Bright Data"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        3320,
        380
      ],
      ""parameters"": {
        ""url"": ""=https://api.brightdata.com/datasets/v3/snapshot/{{ $json.snapshot_id }}"",
        ""options"": {},
        ""sendQuery"": true,
        ""sendHeaders"": true,
        ""queryParameters"": {
          ""parameters"": [
            {
              ""name"": ""format"",
              ""value"": ""json""
            }
          ]
        },
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""Authorization"",
              ""value"": ""Bearer <YOUR_BRIGHT_DATA_API_KEY>""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""b5bd6a55-f80d-46f9-a59a-beff28de9da7"",
      ""name"": ""Code - Cleaning Up"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        3600,
        400
      ],
      ""parameters"": {
        ""jsCode"": ""// Helper function to strip HTML tags\nfunction stripHtml(html) {\n  return html\n    .replace(/<[^>]+>/g, '')    // remove all HTML tags\n    .replace(/&nbsp;/g, ' ')     // decode HTML entities\n    .replace(/&[a-z]+;/g, '')    // remove other HTML entities\n    .replace(/\\s+/g, ' ')        // normalize whitespace\n    .trim();\n}\n\nreturn items.map(item => {\n  const data = item.json;\n\n  // Flatten job_poster\n  if (data.job_poster) {\n    data.job_poster_name = data.job_poster.name || '';\n    data.job_poster_title = data.job_poster.title || '';\n    data.job_poster_url = data.job_poster.url || '';\n    delete data.job_poster;\n  }\n\n  // Flatten base_salary\n  if (data.base_salary) {\n    data.salary_min = data.base_salary.min_amount || '';\n    data.salary_max = data.base_salary.max_amount || '';\n    data.salary_currency = data.base_salary.currency || '';\n    data.salary_period = data.base_salary.payment_period || '';\n    delete data.base_salary;\n  }\n\n  // Clean up job description HTML\n  if (data.job_description_formatted) {\n    data.job_description_plain = stripHtml(data.job_description_formatted);\n  }\n\n  return { json: data };\n});\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""70f4a4a0-b9ce-4b7a-b232-86014a7f8a3f"",
      ""name"": ""Google Sheets - Adding All Job Posts"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        3940,
        440
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""country_code"": ""={{ $json.country_code }}""
          },
          ""schema"": [
            {
              ""id"": ""url"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""url"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""job_posting_id"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""job_posting_id"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""job_title"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""job_title"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""company_name"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""company_name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""job_location"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""job_location"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""job_description_plain"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""job_description_plain"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""job_poster_name"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""job_poster_name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""job_poster_title"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""job_poster_title"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""job_poster_url"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""job_poster_url"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""salary_min"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""salary_min"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""salary_max"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""salary_max"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""salary_currency"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""salary_currency"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""salary_period"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""salary_period"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""application_availability"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""application_availability"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""job_posted_date"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""job_posted_date"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""company_logo"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""company_logo"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""country_code"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""country_code"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""timestamp"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""timestamp"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""company_id"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""company_id"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""job_summary"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""job_summary"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""company_url"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""company_url"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""job_posted_time"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""job_posted_time"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""job_num_applicants"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""job_num_applicants"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""discovery_input"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""discovery_input"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""apply_link"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""apply_link"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""title_id"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""title_id"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""job_description_formatted"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""job_description_formatted"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""input"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""input"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""job_seniority_level"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""job_seniority_level"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""job_function"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""job_function"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""job_employment_type"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""job_employment_type"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""job_industries"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""job_industries"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""job_base_pay_range"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""job_base_pay_range"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""autoMapInputData"",
          ""matchingColumns"": [
            ""row_number""
          ],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {
          ""handlingExtraData"": ""insertInNewColumn""
        },
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1_jbr5zBllTy_pGbogfGSvyv1_0a77I8tU-Ai7BjTAw4/edit#gid=0"",
          ""cachedResultName"": ""input""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1_jbr5zBllTy_pGbogfGSvyv1_0a77I8tU-Ai7BjTAw4"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1_jbr5zBllTy_pGbogfGSvyv1_0a77I8tU-Ai7BjTAw4/edit?usp=drivesdk"",
          ""cachedResultName"": ""NoFluff-N8N-Sheet-Template-Job Scraping WIth Bright Data""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""4RJOMlGAcB9ZoYfm"",
          ""name"": ""Google Sheets account 2""
        }
      },
      ""typeVersion"": 4.3,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""297d778f-afa5-4d2d-baea-3b1fb199f77c"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1940,
        -40
      ],
      ""parameters"": {
        ""width"": 300,
        ""height"": 880,
        ""content"": ""🧠 Bright Data Trigger – Customize Your Job Query\n\nThis HTTP Request sends a POST call to Bright Data to start a new dataset snapshot based on your filters.\n\n👋 If you don’t want to use the Form Trigger,\nyou can directly adjust the filters here in this node.\n\nYou can customize:\n\n\""location\"" → city, region, or keyword (e.g. \""New York\"", \""Remote\"")\n\n\""keyword\"" → job title or role (e.g. \""CMO\"", \""AI Engineer\"")\n\n\""country\"" → 2-letter country code (e.g. \""US\"", \""UK\"")\n\n\""time_range\"" → \""Past 24 hours\"", \""Last 7 days\"", etc.\n\n\""job_type\"", \""experience_level\"", \""remote\"", \""company\"" → optional filters\n\n📌 Tip:\nUse \""Past 24 hours\"" or \""Last 7 days\"" for the freshest results.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""54303791-b269-4930-85b5-33e50ae08f33"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2320,
        220
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 940,
        ""height"": 360,
        ""content"": ""Bright Data Getting Jobs\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""cccb03cb-0432-43ff-9c3a-233de510a775"",
      ""name"": ""Edit Fields"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1920,
        580
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""12067869-0249-4cd2-b9e2-8e4055a0d917"",
              ""name"": """",
              ""type"": ""string"",
              ""value"": """"
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""Edit Fields"": {
      ""main"": [
        [
          {
            ""node"": ""HTTP Request- Post API call to Bright Data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Snapshot Progress"": {
      ""main"": [
        [
          {
            ""node"": ""If - Checking status of Snapshot - if data is ready or not"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Code - Cleaning Up"": {
      ""main"": [
        [
          {
            ""node"": ""Google Sheets - Adding All Job Posts"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Wait - Polling Bright Data"": {
      ""main"": [
        [
          {
            ""node"": ""Snapshot Progress"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""On form submission - Discover Jobs"": {
      ""main"": [
        [
          {
            ""node"": ""Edit Fields"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""HTTP Request- Post API call to Bright Data"": {
      ""main"": [
        [
          {
            ""node"": ""Wait - Polling Bright Data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""HTTP Request - Getting data from Bright Data"": {
      ""main"": [
        [
          {
            ""node"": ""Code - Cleaning Up"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""If - Checking status of Snapshot - if data is ready or not"": {
      ""main"": [
        [
          {
            ""node"": ""Wait - Polling Bright Data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""HTTP Request - Getting data from Bright Data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Automated Interview Scheduling with GPT-4o and Google Calendar Chat Bot,"{
  ""id"": ""bh3H2b654RSYgIm9"",
  ""meta"": {
    ""instanceId"": ""efb474b59b0341d7791932605bd9ff04a6c7ed9941fdd53dc4a2e4b99a6f9439"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Inverview Scheduler"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""cd5664f9-0b6b-491a-a0a0-1d8b3b2f2461"",
      ""name"": ""OpenAI Chat Model2"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        320,
        1480
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""ghJTvay8CvwXDsXz"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""e8ca4a14-ee58-4be0-838b-5cbf8a802b6e"",
      ""name"": ""Window Buffer Memory2"",
      ""type"": ""@n8n/n8n-nodes-langchain.memoryBufferWindow"",
      ""position"": [
        520,
        1480
      ],
      ""parameters"": {
        ""sessionKey"": ""={{ $json.sessionId }}"",
        ""sessionIdType"": ""customKey"",
        ""contextWindowLength"": 10
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""d2957530-acd1-4875-a75b-69b890f08065"",
      ""name"": ""OpenAI Chat Model4"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        1220,
        1440
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""ghJTvay8CvwXDsXz"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""897c8189-aaa9-45c7-99c6-95378a7a13f2"",
      ""name"": ""Run Get Availability"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        720,
        1520
      ],
      ""parameters"": {
        ""name"": ""get_availability"",
        ""source"": ""parameter"",
        ""description"": ""Call this tool to get my availability"",
        ""workflowJson"": ""{\n  \""nodes\"": [\n    {\n      \""parameters\"": {\n        \""operation\"": \""getAll\"",\n        \""calendar\"": {\n          \""__rl\"": true,\n          \""value\"": \""rbreen.ynteractive@gmail.com\"",\n          \""mode\"": \""list\"",\n          \""cachedResultName\"": \""rbreen.ynteractive@gmail.com\""\n        },\n        \""returnAll\"": true,\n        \""options\"": {\n          \""fields\"": \""\""\n        }\n      },\n      \""type\"": \""n8n-nodes-base.googleCalendar\"",\n      \""typeVersion\"": 1.3,\n      \""position\"": [\n        -500,\n        220\n      ],\n      \""id\"": \""a1017705-8866-469f-83e0-9f5d5f37af53\"",\n      \""name\"": \""Check My Calendar\"",\n      \""credentials\"": {\n        \""googleCalendarOAuth2Api\"": {\n          \""id\"": \""nc5M45R7LyFadByw\"",\n          \""name\"": \""Google Calendar account\""\n        }\n      }\n    },\n    {\n      \""parameters\"": {\n        \""jsCode\"": \""const events = items.map(item => item.json);\\nconst intervalMinutes = 30;\\nconst timeZone = 'America/New_York';\\n\\nfunction formatToEastern(date) {\\n  const tzDate = new Intl.DateTimeFormat('en-US', {\\n    timeZone,\\n    year: 'numeric',\\n    month: '2-digit',\\n    day: '2-digit',\\n    hour: '2-digit',\\n    minute: '2-digit',\\n    second: '2-digit',\\n    hour12: false\\n  }).formatToParts(date).reduce((acc, part) => {\\n    if (part.type !== 'literal') acc[part.type] = part.value;\\n    return acc;\\n  }, {});\\n\\n  const offset = getEasternOffset(date);\\n  return `${tzDate.year}-${tzDate.month}-${tzDate.day}T${tzDate.hour}:${tzDate.minute}:${tzDate.second}${offset}`;\\n}\\n\\nfunction getEasternOffset(date) {\\n  const options = { timeZone, timeZoneName: 'short' };\\n  const parts = new Intl.DateTimeFormat('en-US', options).formatToParts(date);\\n  const tzName = parts.find(p => p.type === 'timeZoneName').value;\\n  return tzName.includes('EDT') ? '-04:00' : '-05:00';\\n}\\n\\nfunction alignToPreviousSlot(date) {\\n  const aligned = new Date(date);\\n  const minutes = aligned.getMinutes();\\n  aligned.setMinutes(minutes < 30 ? 0 : 30, 0, 0);\\n  return aligned;\\n}\\n\\nfunction alignToNextSlot(date) {\\n  const aligned = new Date(date);\\n  const minutes = aligned.getMinutes();\\n  if (minutes > 0 && minutes <= 30) {\\n    aligned.setMinutes(30, 0, 0);\\n  } else if (minutes > 30) {\\n    aligned.setHours(aligned.getHours() + 1);\\n    aligned.setMinutes(0, 0, 0);\\n  } else {\\n    aligned.setMinutes(0, 0, 0);\\n  }\\n  return aligned;\\n}\\n\\nconst splitEventIntoETBlocks = (event) => {\\n  const blocks = [];\\n\\n  let current = alignToPreviousSlot(new Date(event.start.dateTime));\\n  const eventEnd = alignToNextSlot(new Date(event.end.dateTime));\\n\\n  while (current < eventEnd) {\\n    const blockEnd = new Date(current);\\n    blockEnd.setMinutes(current.getMinutes() + intervalMinutes);\\n\\n    blocks.push({\\n      start: formatToEastern(current),\\n      end: formatToEastern(blockEnd)\\n    });\\n\\n    current = blockEnd;\\n  }\\n\\n  return blocks;\\n};\\n\\nlet allBlocks = [];\\nfor (const event of events) {\\n  if (event.start?.dateTime && event.end?.dateTime) {\\n    const blocks = splitEventIntoETBlocks(event);\\n    allBlocks = allBlocks.concat(blocks);\\n  }\\n}\\n\\nreturn allBlocks.map(block => ({ json: block }));\\n\""\n      },\n      \""type\"": \""n8n-nodes-base.code\"",\n      \""typeVersion\"": 2,\n      \""position\"": [\n        -280,\n        240\n      ],\n      \""id\"": \""fb9063c2-de6b-4513-8901-d12625f5d772\"",\n      \""name\"": \""Split Events into 30 min blocks\""\n    },\n    {\n      \""parameters\"": {\n        \""assignments\"": {\n          \""assignments\"": [\n            {\n              \""id\"": \""f1270be8-1d11-4086-8bc0-ae53c99507c1\"",\n              \""name\"": \""start\"",\n              \""value\"": \""={{ $json.start }}\"",\n              \""type\"": \""string\""\n            },\n            {\n              \""id\"": \""1a5f24ff-7d0c-436d-bb0b-015fc0c85cb7\"",\n              \""name\"": \""end\"",\n              \""value\"": \""={{ $json.end }}\"",\n              \""type\"": \""string\""\n            },\n            {\n              \""id\"": \""befe6645-c0c1-40eb-9ba6-eccf2a762247\"",\n              \""name\"": \""Blocked\"",\n              \""value\"": \""Blocked\"",\n              \""type\"": \""string\""\n            }\n          ]\n        },\n        \""options\"": {}\n      },\n      \""type\"": \""n8n-nodes-base.set\"",\n      \""typeVersion\"": 3.4,\n      \""position\"": [\n        -80,\n        240\n      ],\n      \""id\"": \""23d8ed50-131f-49ea-9ce8-72a0067fe828\"",\n      \""name\"": \""Add Blocked Field\""\n    },\n    {\n      \""parameters\"": {\n        \""jsCode\"": \""const slots = [];\\nconst slotMinutes = 30;\\nconst timeZone = 'America/New_York';\\nconst businessStartHour = 9;\\nconst businessEndHour = 17;\\n\\n// Get offset like -04:00 or -05:00\\nfunction getEasternOffset(date) {\\n  const options = { timeZone, timeZoneName: 'short' };\\n  const parts = new Intl.DateTimeFormat('en-US', options).formatToParts(date);\\n  const tz = parts.find(p => p.type === 'timeZoneName')?.value || 'EST';\\n  return tz.includes('EDT') ? '-04:00' : '-05:00';\\n}\\n\\n// Format Date as ISO with Eastern offset\\nfunction formatToEasternISO(date) {\\n  const formatter = new Intl.DateTimeFormat('en-CA', {\\n    timeZone,\\n    year: 'numeric',\\n    month: '2-digit',\\n    day: '2-digit',\\n    hour: '2-digit',\\n    minute: '2-digit',\\n    second: '2-digit',\\n    hour12: false,\\n  });\\n\\n  const parts = formatter.formatToParts(date).reduce((acc, part) => {\\n    if (part.type !== 'literal') acc[part.type] = part.value;\\n    return acc;\\n  }, {});\\n\\n  const offset = getEasternOffset(date);\\n  return `${parts.year}-${parts.month}-${parts.day}T${parts.hour}:${parts.minute}:${parts.second}${offset}`;\\n}\\n\\n// Convert a Date to the hour/minute of its Eastern time\\nfunction getEasternTimeParts(date) {\\n  const formatter = new Intl.DateTimeFormat('en-US', {\\n    timeZone,\\n    hour: '2-digit',\\n    minute: '2-digit',\\n    hour12: false,\\n  });\\n  const [hourStr, minStr] = formatter.format(date).split(':');\\n  return { hour: parseInt(hourStr), minute: parseInt(minStr) };\\n}\\n\\nconst now = new Date();\\nconst endDate = new Date(now);\\nendDate.setDate(now.getDate() + 7);\\n\\n// Set current time to 24 hours in the future\\nconst current = new Date(now);\\ncurrent.setHours(current.getHours() + 24);\\n\\n// Round to the next 30-minute block in Eastern time\\nconst { minute } = getEasternTimeParts(current);\\nif (minute < 30) {\\n  current.setMinutes(30, 0, 0);\\n} else {\\n  current.setHours(current.getHours() + 1);\\n  current.setMinutes(0, 0, 0);\\n}\\n\\n// Generate 30-minute blocks only during business hours & weekdays\\nwhile (current < endDate) {\\n  const dayOfWeek = current.getDay(); // 0 = Sunday, 6 = Saturday\\n\\n  // Skip weekends\\n  if (dayOfWeek !== 0 && dayOfWeek !== 6) {\\n    const { hour } = getEasternTimeParts(current);\\n\\n    if (hour >= businessStartHour && hour < businessEndHour) {\\n      const start = new Date(current);\\n      const end = new Date(start);\\n      end.setMinutes(start.getMinutes() + slotMinutes);\\n\\n      slots.push({\\n        start: formatToEasternISO(start),\\n        end: formatToEasternISO(end),\\n      });\\n    }\\n  }\\n\\n  current.setMinutes(current.getMinutes() + slotMinutes);\\n}\\n\\nreturn slots.map(slot => ({ json: slot }));\\n\""\n      },\n      \""type\"": \""n8n-nodes-base.code\"",\n      \""typeVersion\"": 2,\n      \""position\"": [\n        -400,\n        460\n      ],\n      \""id\"": \""01597a94-d94b-47e7-9488-adea3abb741c\"",\n      \""name\"": \""Generate 30 Minute Timeslots\""\n    },\n    {\n      \""parameters\"": {\n        \""mode\"": \""combine\"",\n        \""fieldsToMatchString\"": \""start, end\"",\n        \""joinMode\"": \""enrichInput2\"",\n        \""options\"": {}\n      },\n      \""type\"": \""n8n-nodes-base.merge\"",\n      \""typeVersion\"": 3,\n      \""position\"": [\n        180,\n        300\n      ],\n      \""id\"": \""2d9f98a1-02ac-4332-a288-635a48ea3ee8\"",\n      \""name\"": \""Combine My Calendar with All Slots\""\n    },\n    {\n      \""parameters\"": {\n        \""conditions\"": {\n          \""options\"": {\n            \""caseSensitive\"": true,\n            \""leftValue\"": \""\"",\n            \""typeValidation\"": \""strict\"",\n            \""version\"": 2\n          },\n          \""conditions\"": [\n            {\n              \""id\"": \""af65c6c8-31c7-4f27-a073-cf7f72079882\"",\n              \""leftValue\"": \""={{ $json.Blocked }}\"",\n              \""rightValue\"": \""Blocked\"",\n              \""operator\"": {\n                \""type\"": \""string\"",\n                \""operation\"": \""notEquals\""\n              }\n            }\n          ],\n          \""combinator\"": \""and\""\n        },\n        \""options\"": {}\n      },\n      \""type\"": \""n8n-nodes-base.if\"",\n      \""typeVersion\"": 2.2,\n      \""position\"": [\n        420,\n        280\n      ],\n      \""id\"": \""0438b5be-b3c4-4645-9604-303ace7bfead\"",\n      \""name\"": \""Check if Calendar Blocked\""\n    },\n    {\n      \""parameters\"": {\n        \""jsCode\"": \""const formatted = items.map(item => {\\n  const start = item.json.start;\\n  const end = item.json.end;\\n  return `${start} - ${end}`;\\n});\\n\\nconst combined = formatted.join(', ');\\n\\nreturn [\\n  {\\n    json: {\\n      availableSlots: combined\\n    }\\n  }\\n];\\n\""\n      },\n      \""type\"": \""n8n-nodes-base.code\"",\n      \""typeVersion\"": 2,\n      \""position\"": [\n        660,\n        300\n      ],\n      \""id\"": \""4a6bfde4-7d9f-4837-bc6c-66bf968e782a\"",\n      \""name\"": \""Return string of all available times\""\n    },\n    {\n      \""parameters\"": {\n        \""inputSource\"": \""passthrough\""\n      },\n      \""type\"": \""n8n-nodes-base.executeWorkflowTrigger\"",\n      \""typeVersion\"": 1.1,\n      \""position\"": [\n        -760,\n        340\n      ],\n      \""id\"": \""8bde95cb-7239-4b7d-aca1-0adacf2ea257\"",\n      \""name\"": \""Get Availability\""\n    }\n  ],\n  \""connections\"": {\n    \""Check My Calendar\"": {\n      \""main\"": [\n        [\n          {\n            \""node\"": \""Split Events into 30 min blocks\"",\n            \""type\"": \""main\"",\n            \""index\"": 0\n          }\n        ]\n      ]\n    },\n    \""Split Events into 30 min blocks\"": {\n      \""main\"": [\n        [\n          {\n            \""node\"": \""Add Blocked Field\"",\n            \""type\"": \""main\"",\n            \""index\"": 0\n          }\n        ]\n      ]\n    },\n    \""Add Blocked Field\"": {\n      \""main\"": [\n        [\n          {\n            \""node\"": \""Combine My Calendar with All Slots\"",\n            \""type\"": \""main\"",\n            \""index\"": 0\n          }\n        ]\n      ]\n    },\n    \""Generate 30 Minute Timeslots\"": {\n      \""main\"": [\n        [\n          {\n            \""node\"": \""Combine My Calendar with All Slots\"",\n            \""type\"": \""main\"",\n            \""index\"": 1\n          }\n        ]\n      ]\n    },\n    \""Combine My Calendar with All Slots\"": {\n      \""main\"": [\n        [\n          {\n            \""node\"": \""Check if Calendar Blocked\"",\n            \""type\"": \""main\"",\n            \""index\"": 0\n          }\n        ]\n      ]\n    },\n    \""Check if Calendar Blocked\"": {\n      \""main\"": [\n        [\n          {\n            \""node\"": \""Return string of all available times\"",\n            \""type\"": \""main\"",\n            \""index\"": 0\n          }\n        ]\n      ]\n    },\n    \""Get Availability\"": {\n      \""main\"": [\n        [\n          {\n            \""node\"": \""Check My Calendar\"",\n            \""type\"": \""main\"",\n            \""index\"": 0\n          },\n          {\n            \""node\"": \""Generate 30 Minute Timeslots\"",\n            \""type\"": \""main\"",\n            \""index\"": 0\n          }\n        ]\n      ]\n    }\n  },\n  \""pinData\"": {},\n  \""meta\"": {\n    \""instanceId\"": \""efb474b59b0341d7791932605bd9ff04a6c7ed9941fdd53dc4a2e4b99a6f9439\""\n  }\n}""
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""8892f883-aaae-4616-bb50-bbe0f9dacb23"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1440,
        1660
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 520,
        ""height"": 480,
        ""content"": ""Check Day Names Tool\n\n\n1. This part of the flow is just a copy of what is embedded in the \""Check Day Names Tool\"". It does not run. \n\n2. If you update this part of the flow, copy it with ctrl-c and paste it into another workbook. Add a sub-workflow execution. Set the workflow to accept all data. Copy the flow. Paste the Workflow JSON field in the \""Check Day Names Tool\"" tool node\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""234b89da-9003-43d5-842a-4ecf92522b51"",
      ""name"": ""check day names"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolWorkflow"",
      ""position"": [
        880,
        1480
      ],
      ""parameters"": {
        ""name"": ""check_days"",
        ""source"": ""parameter"",
        ""workflowJson"": ""{\n  \""nodes\"": [\n    {\n      \""parameters\"": {\n        \""inputSource\"": \""passthrough\""\n      },\n      \""type\"": \""n8n-nodes-base.executeWorkflowTrigger\"",\n      \""typeVersion\"": 1.1,\n      \""position\"": [\n        -400,\n        -120\n      ],\n      \""id\"": \""dec37e15-3695-4911-91a6-1f97018ab982\"",\n      \""name\"": \""When Executed by Another Workflow\""\n    },\n    {\n      \""parameters\"": {\n        \""jsCode\"": \""function getWeekdaysNextTwoWeeks() {\\n  const items = [];\\n  const longDayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\\n\\n  const today = new Date();\\n  const endDate = new Date();\\n  endDate.setDate(today.getDate() + 14); // 2 weeks ahead\\n\\n  const current = new Date(today);\\n\\n  while (current <= endDate) {\\n    const dayOfWeek = current.getDay(); // 0 = Sunday, 6 = Saturday\\n\\n    // Only weekdays (Mon–Fri)\\n    if (dayOfWeek >= 1 && dayOfWeek <= 5) {\\n      const dateStr = current.toISOString().split('T')[0]; // YYYY-MM-DD\\n      const output = `${longDayNames[dayOfWeek]} - ${dateStr}`;\\n\\n      items.push({\\n        json: {\\n          day: output\\n        }\\n      });\\n    }\\n\\n    current.setDate(current.getDate() + 1); // Go to next day\\n  }\\n\\n  return items;\\n}\\n\\n// Example usage:\\nreturn getWeekdaysNextTwoWeeks();\\n\""\n      },\n      \""type\"": \""n8n-nodes-base.code\"",\n      \""typeVersion\"": 2,\n      \""position\"": [\n        -180,\n        -120\n      ],\n      \""id\"": \""cbbe4248-d1cc-48e3-9ea8-67a844f3de29\"",\n      \""name\"": \""Check Day Names\""\n    }\n  ],\n  \""connections\"": {\n    \""When Executed by Another Workflow\"": {\n      \""main\"": [\n        [\n          {\n            \""node\"": \""Check Day Names\"",\n            \""type\"": \""main\"",\n            \""index\"": 0\n          }\n        ]\n      ]\n    }\n  },\n  \""pinData\"": {},\n  \""meta\"": {\n    \""instanceId\"": \""efb474b59b0341d7791932605bd9ff04a6c7ed9941fdd53dc4a2e4b99a6f9439\""\n  }\n}""
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""c052c7e4-1587-4c7e-9a8e-043c8571338d"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        180,
        1660
      ],
      ""parameters"": {
        ""width"": 1200,
        ""height"": 500,
        ""content"": ""Get Availability Execution. \n\n1. This part of the flow is just a copy of what is embedded in the \""Run Get Availability Tool\"". It does not run. \n\n2. If you update this part of the flow, copy it with ctrl-c and paste it into another workbook. Add a sub-workflow execution. Set the workflow to accept all data. Copy the flow. Paste the Workflow JSON field in the \""Run Get Availability\"" tool node""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b7c71153-fbd1-45ac-8dbf-d4beb241daaf"",
      ""name"": ""Convert Output to JSON"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        1240,
        1260
      ],
      ""parameters"": {
        ""text"": ""={{ $json.output }}"",
        ""options"": {
          ""systemMessage"": ""=take in this message and output json""
        },
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.7
    },
    {
      ""id"": ""1f902158-5885-46d6-8d7e-26ccf116ed0a"",
      ""name"": ""Interview Scheduler"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        520,
        1220
      ],
      ""parameters"": {
        ""text"": ""={{ $json.chatInput }}"",
        ""options"": {
          ""systemMessage"": ""=You are a friendly AI chatbot helping users schedule meetings. Ask for Phone, email, preferred date, and time. Confirm details before booking. Time zone: Eastern.\n\nToday's date is {{ $now }}\n\n1. Use the get_availability tool to find when I am available. it will return comma separated timeslots the interviewer can meet. check the proposed time against the results. Times are in 24 hour clock times in this format.  2025-03-31T09:00:00-04:00\n3. If I am not available, look at get_availability tool again and propose a similar time where I am available\n2. use the check_days tool if the user mentions something like next tuesday so you know what date they are talking about\n3. Once a time is aggreed upon, output json in this format \n2025-03-28T13:00:00-04:00. \n4. once you have the email, phone start and end time, output only the json and nothing else\n\n{\n  \""interview\"": {\n    \""email\"": \""applicant@example.com\"",\n    \""phone\"": \""814-882-1293\"",\n    \""start_datetime\"": \""2025-03-28T10:00:00\"",\n    \""end_datetime\"": \""2025-03-28T11:00:00\""\n  }\n}\n\n## Rules\n- If the calendar is not available at the time requested, do not double book. Send a new time.\n- Interviews are all 30 minutes long\n- Do not book over another meeting\n- do not give details about what is on the interviewers calendar\n- do not converse with the user about anything else"",
          ""returnIntermediateSteps"": true
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.7
    },
    {
      ""id"": ""ba0fb82e-a280-4392-833e-04f00a47170c"",
      ""name"": ""If Final Output"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        960,
        1160
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""e75b6a50-680f-4f5b-8dd3-fc93be1bc7f1"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""contains""
              },
              ""leftValue"": ""={{ $json.output }}"",
              ""rightValue"": ""start_datetime""
            },
            {
              ""id"": ""cadd4bff-8d53-446c-8ad0-14b3fb9ab335"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""contains""
              },
              ""leftValue"": ""={{ $json.output }}"",
              ""rightValue"": ""end_datetime""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""c56bcba9-ac39-474b-a186-ceb67fa4008d"",
      ""name"": ""Respond for More Info"",
      ""type"": ""n8n-nodes-base.noOp"",
      ""position"": [
        1040,
        1400
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""efd03308-0da1-4797-b899-3d4446eba722"",
      ""name"": ""Parse to JSON"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserStructured"",
      ""position"": [
        1400,
        1500
      ],
      ""parameters"": {
        ""jsonSchemaExample"": ""{\n  \""interview\"": {\n    \""email\"": \""applicant@example.com\"",\n    \""phone\"": \""814-882-1293\"",\n    \""start_datetime\"": \""2025-03-28T10:00:00\"",\n    \""end_datetime\"": \""2025-03-28T11:00:00\""\n  }\n}""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""11abd142-d509-4459-bdf5-861dcf4263bf"",
      ""name"": ""Set Meeting with Google"",
      ""type"": ""n8n-nodes-base.googleCalendar"",
      ""position"": [
        1640,
        1280
      ],
      ""parameters"": {
        ""end"": ""={{ $json.output.interview.end_datetime }}"",
        ""start"": ""={{ $json.output.interview.start_datetime }}"",
        ""calendar"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""rbreen.ynteractive@gmail.com"",
          ""cachedResultName"": ""rbreen.ynteractive@gmail.com""
        },
        ""additionalFields"": {
          ""summary"": ""Interview"",
          ""attendees"": [
            ""={{ $json.output.interview.email }}""
          ],
          ""description"": ""=I will call you at  {{ $json.output.interview.phone }}""
        }
      },
      ""credentials"": {
        ""googleCalendarOAuth2Api"": {
          ""id"": ""nc5M45R7LyFadByw"",
          ""name"": ""Google Calendar account""
        }
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""fef5ba53-4386-4e88-9f28-8a9b5d9c928f"",
      ""name"": ""Final Response to User"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        1640,
        1500
      ],
      ""parameters"": {
        ""jsCode"": ""const email = $('Convert Output to JSON').first().json.output.interview.email;\nconst phone = $('Convert Output to JSON').first().json.output.interview.phone;\nconst start_datetime = $('Convert Output to JSON').first().json.output.interview.start_datetime;\nconst end_datetime = $('Convert Output to JSON').first().json.output.interview.end_datetime;\n\nlet text = `✅ Interview Confirmed!\\n\\n📧 Email: ${email}\\n📞 Phone: ${phone}\\n🕒 Start: ${start_datetime}\\n🕕 End: ${end_datetime}`;\n\nreturn { text };\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""a06664e2-d5d2-40a7-98a5-a3de2d775b7c"",
      ""name"": ""Generate Interview Times"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        1620,
        1920
      ],
      ""parameters"": {
        ""jsCode"": ""function getWeekdaysNextTwoWeeks() {\n  const items = [];\n  const longDayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n  const today = new Date();\n  const endDate = new Date();\n  endDate.setDate(today.getDate() + 14); // 2 weeks ahead\n\n  const current = new Date(today);\n\n  while (current <= endDate) {\n    const dayOfWeek = current.getDay(); // 0 = Sunday, 6 = Saturday\n\n    // Only weekdays (Mon–Fri)\n    if (dayOfWeek >= 1 && dayOfWeek <= 5) {\n      const dateStr = current.toISOString().split('T')[0]; // YYYY-MM-DD\n      const output = `${longDayNames[dayOfWeek]} - ${dateStr}`;\n\n      items.push({\n        json: {\n          day: output\n        }\n      });\n    }\n\n    current.setDate(current.getDate() + 1); // Go to next day\n  }\n\n  return items;\n}\n\n// Example usage:\nreturn getWeekdaysNextTwoWeeks();\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""f35d595e-6834-4898-bbcb-b17599d769b4"",
      ""name"": ""Check My Calendar"",
      ""type"": ""n8n-nodes-base.googleCalendar"",
      ""position"": [
        420,
        1820
      ],
      ""parameters"": {
        ""options"": {
          ""fields"": """"
        },
        ""calendar"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""rbreen.ynteractive@gmail.com"",
          ""cachedResultName"": ""rbreen.ynteractive@gmail.com""
        },
        ""operation"": ""getAll"",
        ""returnAll"": true
      },
      ""credentials"": {
        ""googleCalendarOAuth2Api"": {
          ""id"": ""nc5M45R7LyFadByw"",
          ""name"": ""Google Calendar account""
        }
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""29e3a097-b6f1-4a54-b943-d9ad9177b03b"",
      ""name"": ""Split Events into 30 min blocks"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        620,
        1820
      ],
      ""parameters"": {
        ""jsCode"": ""const events = items.map(item => item.json);\nconst intervalMinutes = 30;\nconst timeZone = 'America/New_York';\n\nfunction formatToEastern(date) {\n  const tzDate = new Intl.DateTimeFormat('en-US', {\n    timeZone,\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hour12: false\n  }).formatToParts(date).reduce((acc, part) => {\n    if (part.type !== 'literal') acc[part.type] = part.value;\n    return acc;\n  }, {});\n\n  const offset = getEasternOffset(date);\n  return `${tzDate.year}-${tzDate.month}-${tzDate.day}T${tzDate.hour}:${tzDate.minute}:${tzDate.second}${offset}`;\n}\n\nfunction getEasternOffset(date) {\n  const options = { timeZone, timeZoneName: 'short' };\n  const parts = new Intl.DateTimeFormat('en-US', options).formatToParts(date);\n  const tzName = parts.find(p => p.type === 'timeZoneName').value;\n  return tzName.includes('EDT') ? '-04:00' : '-05:00';\n}\n\nfunction alignToPreviousSlot(date) {\n  const aligned = new Date(date);\n  const minutes = aligned.getMinutes();\n  aligned.setMinutes(minutes < 30 ? 0 : 30, 0, 0);\n  return aligned;\n}\n\nfunction alignToNextSlot(date) {\n  const aligned = new Date(date);\n  const minutes = aligned.getMinutes();\n  if (minutes > 0 && minutes <= 30) {\n    aligned.setMinutes(30, 0, 0);\n  } else if (minutes > 30) {\n    aligned.setHours(aligned.getHours() + 1);\n    aligned.setMinutes(0, 0, 0);\n  } else {\n    aligned.setMinutes(0, 0, 0);\n  }\n  return aligned;\n}\n\nconst splitEventIntoETBlocks = (event) => {\n  const blocks = [];\n\n  let current = alignToPreviousSlot(new Date(event.start.dateTime));\n  const eventEnd = alignToNextSlot(new Date(event.end.dateTime));\n\n  while (current < eventEnd) {\n    const blockEnd = new Date(current);\n    blockEnd.setMinutes(current.getMinutes() + intervalMinutes);\n\n    blocks.push({\n      start: formatToEastern(current),\n      end: formatToEastern(blockEnd)\n    });\n\n    current = blockEnd;\n  }\n\n  return blocks;\n};\n\nlet allBlocks = [];\nfor (const event of events) {\n  if (event.start?.dateTime && event.end?.dateTime) {\n    const blocks = splitEventIntoETBlocks(event);\n    allBlocks = allBlocks.concat(blocks);\n  }\n}\n\nreturn allBlocks.map(block => ({ json: block }));\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""f9297e8a-75dd-4f12-b0e1-d3fa372a7631"",
      ""name"": ""Add Blocked Field"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        800,
        1840
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""f1270be8-1d11-4086-8bc0-ae53c99507c1"",
              ""name"": ""start"",
              ""type"": ""string"",
              ""value"": ""={{ $json.start }}""
            },
            {
              ""id"": ""1a5f24ff-7d0c-436d-bb0b-015fc0c85cb7"",
              ""name"": ""end"",
              ""type"": ""string"",
              ""value"": ""={{ $json.end }}""
            },
            {
              ""id"": ""befe6645-c0c1-40eb-9ba6-eccf2a762247"",
              ""name"": ""Blocked"",
              ""type"": ""string"",
              ""value"": ""Blocked""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""8ba70f94-e9e6-44aa-b0e7-9a5294634e0e"",
      ""name"": ""Generate 30 Minute Timeslots"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        440,
        2020
      ],
      ""parameters"": {
        ""jsCode"": ""const slots = [];\nconst slotMinutes = 30;\nconst timeZone = 'America/New_York';\nconst businessStartHour = 9;\nconst businessEndHour = 17;\n\n// Get offset like -04:00 or -05:00\nfunction getEasternOffset(date) {\n  const options = { timeZone, timeZoneName: 'short' };\n  const parts = new Intl.DateTimeFormat('en-US', options).formatToParts(date);\n  const tz = parts.find(p => p.type === 'timeZoneName')?.value || 'EST';\n  return tz.includes('EDT') ? '-04:00' : '-05:00';\n}\n\n// Format Date as ISO with Eastern offset\nfunction formatToEasternISO(date) {\n  const formatter = new Intl.DateTimeFormat('en-CA', {\n    timeZone,\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hour12: false,\n  });\n\n  const parts = formatter.formatToParts(date).reduce((acc, part) => {\n    if (part.type !== 'literal') acc[part.type] = part.value;\n    return acc;\n  }, {});\n\n  const offset = getEasternOffset(date);\n  return `${parts.year}-${parts.month}-${parts.day}T${parts.hour}:${parts.minute}:${parts.second}${offset}`;\n}\n\n// Convert a Date to the hour/minute of its Eastern time\nfunction getEasternTimeParts(date) {\n  const formatter = new Intl.DateTimeFormat('en-US', {\n    timeZone,\n    hour: '2-digit',\n    minute: '2-digit',\n    hour12: false,\n  });\n  const [hourStr, minStr] = formatter.format(date).split(':');\n  return { hour: parseInt(hourStr), minute: parseInt(minStr) };\n}\n\nconst now = new Date();\nconst endDate = new Date(now);\nendDate.setDate(now.getDate() + 7);\n\n// Set current time to 24 hours in the future\nconst current = new Date(now);\ncurrent.setHours(current.getHours() + 24);\n\n// Round to the next 30-minute block in Eastern time\nconst { minute } = getEasternTimeParts(current);\nif (minute < 30) {\n  current.setMinutes(30, 0, 0);\n} else {\n  current.setHours(current.getHours() + 1);\n  current.setMinutes(0, 0, 0);\n}\n\n// Generate 30-minute blocks only during business hours & weekdays\nwhile (current < endDate) {\n  const dayOfWeek = current.getDay(); // 0 = Sunday, 6 = Saturday\n\n  // Skip weekends\n  if (dayOfWeek !== 0 && dayOfWeek !== 6) {\n    const { hour } = getEasternTimeParts(current);\n\n    if (hour >= businessStartHour && hour < businessEndHour) {\n      const start = new Date(current);\n      const end = new Date(start);\n      end.setMinutes(start.getMinutes() + slotMinutes);\n\n      slots.push({\n        start: formatToEasternISO(start),\n        end: formatToEasternISO(end),\n      });\n    }\n  }\n\n  current.setMinutes(current.getMinutes() + slotMinutes);\n}\n\nreturn slots.map(slot => ({ json: slot }));\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""3ea13a0a-d496-40b8-9321-6bc3df415191"",
      ""name"": ""Combine My Calendar with All Slots"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        780,
        2020
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""joinMode"": ""enrichInput2"",
        ""fieldsToMatchString"": ""start, end""
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""ad57e0b4-43d0-4991-adc3-e325e2405e93"",
      ""name"": ""Check if Calendar Blocked"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1100,
        1820
      ],
      ""parameters"": {
        ""options"": {},
       ",
Automated Resume Review System Using OpenAI + Google Sheets,"{
  ""id"": ""IO0OrQ6ao4vm9urI"",
  ""meta"": {
    ""instanceId"": ""0d6ec6d73242e93a616bed7dc657bb92fd6b05466b19318f83d18293848e971a"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Automated Resume Review System Using OpenAI + Google Sheets"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""8585c01d-f26c-453e-a705-7783b3a28a46"",
      ""name"": ""On form submission"",
      ""type"": ""n8n-nodes-base.formTrigger"",
      ""position"": [
        -780,
        180
      ],
      ""webhookId"": ""6ea62ea0-de12-4134-b646-121474b3b846"",
      ""parameters"": {
        ""options"": {
          ""ignoreBots"": true,
          ""appendAttribution"": false
        },
        ""formTitle"": ""Submit your CV"",
        ""formFields"": {
          ""values"": [
            {
              ""fieldLabel"": ""First name"",
              ""placeholder"": ""First Name"",
              ""requiredField"": true
            },
            {
              ""fieldLabel"": ""Last Name"",
              ""placeholder"": ""Last Name"",
              ""requiredField"": true
            },
            {
              ""fieldType"": ""email"",
              ""fieldLabel"": ""Email"",
              ""placeholder"": ""Email"",
              ""requiredField"": true
            },
            {
              ""fieldType"": ""file"",
              ""fieldLabel"": ""Resume"",
              ""requiredField"": true,
              ""acceptFileTypes"": ""=.pdf""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""d7acbd9b-f24a-4801-9a00-94308df9a55e"",
      ""name"": ""Merge"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        540,
        140
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""combineBy"": ""combineAll""
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""68f1cb96-fca5-473b-b79c-707682206135"",
      ""name"": ""Structured Output Parser"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserStructured"",
      ""position"": [
        1600,
        340
      ],
      ""parameters"": {
        ""schemaType"": ""manual"",
        ""inputSchema"": ""{\n  \""type\"": \""object\"",\n  \""properties\"": {\n    \""vote\"": {\n      \""type\"": \""string\""\n    },\n    \""consideration\"": {\n      \""type\"": \""string\""\n    }\n  }\n}\n""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""04b20070-141a-466c-87d3-7de4323f83df"",
      ""name"": ""Google Sheets"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        1900,
        120
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""DOB"": ""={{ $('Merge').item.json.output.birthdate }}"",
            ""City"": ""={{ $('Merge').item.json.output.city }}"",
            ""Vote"": ""={{ $json.output.vote }}"",
            ""Email"": ""={{ $('Merge').item.json.output.email }}"",
            ""Skills"": ""={{ $('Merge').item.json.output.Skills }}"",
            ""Website"": ""={{ $('Merge').item.json.output.website }}"",
            ""Last Name"": ""={{ $('Merge').item.json.output.last_name }}"",
            ""Experience"": ""={{ $('Merge').item.json.output['Job History'] }}"",
            ""First Name"": ""={{ $('Merge').item.json.output.first_name }}"",
            ""Applied Date"": ""={{ $now.format('MM-dd-yyyy') }}"",
            ""Education Qualification"": ""={{ $('Merge').item.json.output['Educational Qualification'] }}""
          },
          ""schema"": [
            {
              ""id"": ""First Name"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""First Name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Last Name"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Last Name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""City"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""City"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Phone number"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Phone number"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Email"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Email"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""LinkedIn"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""LinkedIn"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Website"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Website"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""DOB"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""DOB"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Education Qualification"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Education Qualification"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Experience"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Experience"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Skills"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Skills"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Vote"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Vote"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Consideration"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Consideration"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Applied Date"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Applied Date"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1tmg5CW1d3ZNVJ98hODs24RLGyKul98cAtVHULLNDAyU/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1tmg5CW1d3ZNVJ98hODs24RLGyKul98cAtVHULLNDAyU"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1tmg5CW1d3ZNVJ98hODs24RLGyKul98cAtVHULLNDAyU/edit?usp=drivesdk"",
          ""cachedResultName"": ""HR New""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""d63Esv5UOI7IgJEf"",
          ""name"": ""Google Sheets account 2""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""dab7587f-890d-4571-b03d-1a2948baa91c"",
      ""name"": ""Personal Info"",
      ""type"": ""@n8n/n8n-nodes-langchain.informationExtractor"",
      ""position"": [
        -140,
        80
      ],
      ""parameters"": {
        ""text"": ""={{ $json.text }}"",
        ""options"": {},
        ""schemaType"": ""manual"",
        ""inputSchema"": ""{\n  \""type\"": \""object\"",\n  \""properties\"": {\n    \""first_name\"": {\n      \""type\"": \""string\""\n    },\n    \""last_name\"": {\n      \""type\"": \""string\""\n    },\n    \""email\"": {\n      \""type\"": \""string\""\n    },\n    \""telephone\"": {\n      \""type\"": \""string\""\n    },\n    \""city\"": {\n      \""type\"": \""string\""\n    },\n    \""birthdate\"": {\n      \""type\"": \""string\""\n    },\n    \""linkedin\"": {\n      \""type\"": \""string\""\n    },\n    \""website\"": {\n      \""type\"": \""string\""\n    },\n    \""summary\"": {\n      \""type\"": \""string\""\n    }\n  }\n}\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""5c815337-80c4-4332-9179-77c0a446c205"",
      ""name"": ""Qualification"",
      ""type"": ""@n8n/n8n-nodes-langchain.informationExtractor"",
      ""position"": [
        -140,
        320
      ],
      ""parameters"": {
        ""text"": ""={{ $json.text }}"",
        ""options"": {
          ""systemPromptTemplate"": ""You are an expert extraction algorithm.\nOnly extract relevant information from the text.\nIf you do not know the value of an attribute asked to extract, you may omit the attribute's value.""
        },
        ""attributes"": {
          ""attributes"": [
            {
              ""name"": ""Educational Qualification"",
              ""required"": true,
              ""description"": ""Summary of your academic career. Focus on your high school and university studies. Summarize in 100 words maximum and also include your grade if applicable.""
            },
            {
              ""name"": ""Job History"",
              ""required"": true,
              ""description"": ""Work history summary. Focus on your most recent work experiences. Summarize in 100 words maximum""
            },
            {
              ""name"": ""Skills"",
              ""required"": true,
              ""description"": ""Extract the candidate’s technical skills. What software and frameworks they are proficient in. Make a bulleted list.""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ad245152-b1cc-4dcd-b9bc-c8ec8a592115"",
      ""name"": ""HR Expert"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        1500,
        120
      ],
      ""parameters"": {
        ""text"": ""=Profile:\n{{ $json['wanted-profile'] }}\n\nCandidate:{{ $('Summarizer').item.json.response.text }}"",
        ""messages"": {
          ""messageValues"": [
            {
              ""message"": ""=You are an HR expert, and your task is to determine whether a candidate aligns with the company's desired profile. You must assign a rating from 1 to 10, where 1 means the candidate does not meet the requirements, while 10 means the candidate is the perfect match for the role. Additionally, in the \""consideration\"" field, explain the reasoning behind the given score.""
            }
          ]
        },
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.5
    },
    {
      ""id"": ""86a37824-a3d0-4199-bb2d-c7608d65f6de"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -820,
        -140
      ],
      ""parameters"": {
        ""width"": 500,
        ""height"": 660,
        ""content"": ""## Submission, Saving to Google Drive & Extraction\n\n**Captures user info from the form.**\n**Uploads resume to Google Drive.**\n**Extracts data from the PDF (resume).**""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6a42aedf-e2a0-44fc-ae02-00d25ab56a91"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -300,
        -140
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 560,
        ""height"": 660,
        ""content"": ""## Extraction (Personal Info & Qualification)\n\n**Extracts personal details (name, city, etc.).**\n**Retrieves educational qualifications and job history.**""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""17134f76-322d-4621-ab85-340d1f9ea115"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        280,
        -140
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 1120,
        ""height"": 660,
        ""content"": ""## Merge & Summarization\n\n**Merges extracted information.**\n**Generates a concise professional summary.**\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""cf09a615-65dc-4c4d-8419-f05cadeb9405"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1420,
        -140
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 640,
        ""height"": 660,
        ""content"": ""## Voting, Consideration & Google Sheets\n\n**HR expert reviews and analyzes the summary.\n\nAssigns a rating (1-10) and provides hiring insights.\n\nAppends all details to Google Sheets for record-keeping.**\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""ee76a66a-ce2a-4a4f-8c57-0cc48b8f7dcb"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1960,
        -140
      ],
      ""parameters"": {
        ""color"": 2,
        ""width"": 1060,
        ""height"": 660,
        ""content"": ""# Automated Resume Processing & Evaluation System\n\n**This workflow streamlines the process of handling resume submissions, extracting key details, summarizing qualifications, and aiding HR in the decision-making process.**\n\n## 1. Submission, Saving to Google Drive & Extraction\n**The user submits a resume via a form.\nThe system saves the uploaded file to Google Drive for record-keeping.\nAI-powered text extraction retrieves personal details, qualifications, and job history from the document.**\n\n## 2. Extraction (Personal Info & Qualification)\n**The workflow identifies and extracts key details such as the candidate’s name, contact information, and location.\nIt scans for educational background, certifications, and past work experiences.**\n\n## 3. Merge & Summarization\n**The extracted data is merged into a structured format.\nA concise summary is generated, highlighting the candidate’s most relevant qualifications and experiences.**\n\n## 4. Voting, Consideration & Google Sheets\n**HR reviews the summarized profile and assigns a rating (1-10).\nHiring insights and comments are recorded for evaluation.\nAll processed data, including extracted details and review scores, are appended to a Google Sheet for tracking and further consideration.**\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""51e5290b-fadd-4f7c-99fc-8bfd54a1ee27"",
      ""name"": ""Upload to google drive"",
      ""type"": ""n8n-nodes-base.googleDrive"",
      ""position"": [
        -440,
        100
      ],
      ""parameters"": {
        ""name"": ""=Resume-{{ $now.format('yyyyLLdd') }}-{{ $json.Resume[0].filename }}"",
        ""driveId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""My Drive""
        },
        ""options"": {},
        ""folderId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""root"",
          ""cachedResultName"": ""/ (Root folder)""
        },
        ""inputDataFieldName"": ""Resume""
      },
      ""credentials"": {
        ""googleDriveOAuth2Api"": {
          ""id"": ""Z5vnQSvmzFvtqQeL"",
          ""name"": ""Google Drive account""
        }
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""b69e22ba-ab56-4199-830a-4d74fd8c8e74"",
      ""name"": ""Resume extraction"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        -440,
        260
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""pdf"",
        ""binaryPropertyName"": ""Resume""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""653d83ad-309f-4e09-acf5-e7d0a1890e1e"",
      ""name"": ""wanted profile"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1240,
        120
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""8b812d8f-87d6-46e2-855a-b465c1248c2d"",
              ""name"": ""wanted-profile"",
              ""type"": ""string"",
              ""value"": ""We are a web agency looking for an Automation Expert skilled in workflow automation, API integrations, and AI-driven process optimization. The ideal candidate should have expertise in n8n, Python, and JavaScript, with a strong understanding of automation tools and webhooks. Experience in building custom automations for businesses is required.  Requirements:  Proficiency in n8n, Python, and JavaScript Experience in workflow automation, API integrations, and AI agents Ability to optimize business processes through automation Prior experience in the automation industry Must be based in Northern Italy If you have a passion for automation and want to work with a forward-thinking agency, we'd love to hear from you!""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""9ed47811-30d8-48e7-a05e-e5213f0e0526"",
      ""name"": ""Summarizer"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainSummarization"",
      ""position"": [
        840,
        120
      ],
      ""parameters"": {
        ""options"": {
          ""summarizationMethodAndPrompts"": {
            ""values"": {
              ""prompt"": ""=Write a concise summary of the following:\nFirst name:{{ $json.output.first_name }}\nLast name:{{ $json.output.last_name }}\nCity: {{ $json.output.city }}\nEducational Qualification:{{ $json.output['Educational Qualification'] }}\nPrevious experience:{{ $json.output['Job History'] }}\nSkills:{{ $json.output.Skills }}\nApplied date:{{$now.format('yyyy-MM-dd')}}\n\nWrite a concise Summary and summary of 100 words or less. Be concise and professional.\n\n"",
              ""combineMapPrompt"": ""=Write a concise summary of the following:\nFirst name:{{ $json.output.first_name }}\nLast name:{{ $json.output.last_name }}\nCity: {{ $json.output.city }}\nEducational Qualification:{{ $json.output['Educational Qualification'] }}\nPrevious experience:{{ $json.output['Job History'] }}\nSkills:{{ $json.output.Skills }}\nApplied date:{{$now.format('yyyy-MM-dd')}}\n\nWrite a concise Summary and summary of 100 words or less. Be concise and professional.\n\n""
            }
          }
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""56329dd0-53e2-4617-ba54-c91e9f96d6ca"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        860,
        400
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""n2UwuicTmLclqMaY"",
          ""name"": ""OpenAi account 2""
        }
      },
      ""typeVersion"": 1.2
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""callerPolicy"": ""workflowsFromSameOwner"",
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""24ebf6c2-c041-4dc0-8fec-5728f86625f1"",
  ""connections"": {
    ""Merge"": {
      ""main"": [
        [
          {
            ""node"": ""Summarizer"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""HR Expert"": {
      ""main"": [
        [
          {
            ""node"": ""Google Sheets"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Summarizer"": {
      ""main"": [
        [
          {
            ""node"": ""wanted profile"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Personal Info"": {
      ""main"": [
        [
          {
            ""node"": ""Merge"",
            ""type"": ""main"",
            ""index"": 1
          }
        ]
      ]
    },
    ""Qualification"": {
      ""main"": [
        [
          {
            ""node"": ""Merge"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""wanted profile"": {
      ""main"": [
        [
          {
            ""node"": ""HR Expert"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Qualification"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          },
          {
            ""node"": ""Personal Info"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          },
          {
            ""node"": ""Summarizer"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          },
          {
            ""node"": ""HR Expert"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Resume extraction"": {
      ""main"": [
        [
          {
            ""node"": ""Personal Info"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Qualification"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""On form submission"": {
      ""main"": [
        [
          {
            ""node"": ""Upload to google drive"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Resume extraction"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Structured Output Parser"": {
      ""ai_outputParser"": [
        [
          {
            ""node"": ""HR Expert"",
            ""type"": ""ai_outputParser"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
HR & IT Helpdesk Chatbot with Audio Transcription,"{
  ""id"": ""zmgSshZ5xESr3ozl"",
  ""meta"": {
    ""instanceId"": ""1fedaf0aa3a5d200ffa1bbc98554b56cac895dd5d001907cb6f1c7a3c0a78215"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""HR & IT Helpdesk Chatbot with Audio Transcription"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""c6cb921e-97ac-48f6-9d79-133993dd6ef7"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -300,
        -280
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 780,
        ""height"": 460,
        ""content"": ""## 1. Download & Extract Internal Policy Documents\n[Read more about the HTTP Request Tool](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest)\n\nBegin by importing the PDF documents that contain your internal policies and FAQs—these will become the knowledge base for your Internal Helpdesk Assistant. For example, you can store a company handbook or IT/HR policy PDFs on a shared drive or cloud storage and reference a direct download link here.\n\nIn this demonstration, we'll use the **HTTP Request node** to fetch the PDF file from a given URL and then parse its text contents using the **Extract from File node**. Once extracted, these text chunks will be used to build the vector store that underpins your helpdesk chatbot’s responses.\n\n[Example Employee Handbook with Policies](https://s3.amazonaws.com/scschoolfiles/656/employee_handbook_print_1.pdf)""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""450a254c-eec3-41ea-a11d-eb87b62ee4f4"",
      ""name"": ""When clicking ‘Test workflow’"",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        -80,
        20
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""0972f31c-1f62-430c-8beb-bef8976cd0eb"",
      ""name"": ""HTTP Request"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        100,
        20
      ],
      ""parameters"": {
        ""url"": ""https://s3.amazonaws.com/scschoolfiles/656/employee_handbook_print_1.pdf"",
        ""options"": {}
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""bf523255-39f5-410a-beb7-6331139c5f9b"",
      ""name"": ""Extract from File"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        280,
        20
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""pdf""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""88901c7c-e747-44c7-87d9-e14ac99a93db"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        540,
        -280
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 780,
        ""height"": 1020,
        ""content"": ""## 2. Create Internal Policy Vector Store\n[Read more about the In-Memory Vector Store](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreinmemory/)\n\nVector stores power the retrieval process by matching a user's natural language questions to relevant chunks of text. We'll transform your extracted internal policy text into vector embeddings and store them in a database-like structure.\n\nWe will be using PostgreSQL which has production ready vector support.\n\n**How it works**  \n1. The text extracted in Step 1 is split into manageable segments (chunks).  \n2. An embedding model transforms these segments into numerical vectors.  \n3. These vectors, along with metadata, are stored in PostgreSQL.  \n4. When users ask a question, their query is embedded and matched to the most relevant vectors, improving the accuracy of the chatbot's response.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""8d6472ab-dcff-4d24-a320-109787bce52a"",
      ""name"": ""Create HR Policies"",
      ""type"": ""@n8n/n8n-nodes-langchain.vectorStorePGVector"",
      ""position"": [
        620,
        100
      ],
      ""parameters"": {
        ""mode"": ""insert"",
        ""options"": {}
      },
      ""credentials"": {
        ""postgres"": {
          ""id"": ""wQK6JXyS5y1icHw3"",
          ""name"": ""Postgres account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e669b3fb-aaf1-4df8-855b-d3142215b308"",
      ""name"": ""Embeddings OpenAI"",
      ""type"": ""@n8n/n8n-nodes-langchain.embeddingsOpenAi"",
      ""position"": [
        600,
        320
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""J2D6m1evHLUJOMhO"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""e25418af-65bb-4628-9b26-ec59cae7b2b4"",
      ""name"": ""Default Data Loader"",
      ""type"": ""@n8n/n8n-nodes-langchain.documentDefaultDataLoader"",
      ""position"": [
        760,
        340
      ],
      ""parameters"": {
        ""options"": {},
        ""jsonData"": ""={{ $('Extract from File').item.json.text }}"",
        ""jsonMode"": ""expressionData""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a4538deb-8406-4a5b-9b1e-4e2f859943c8"",
      ""name"": ""Recursive Character Text Splitter"",
      ""type"": ""@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"",
      ""position"": [
        860,
        560
      ],
      ""parameters"": {
        ""options"": {},
        ""chunkSize"": 2000
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""7ee0e861-1576-4b0c-b2ef-3fc023371907"",
      ""name"": ""Telegram Trigger"",
      ""type"": ""n8n-nodes-base.telegramTrigger"",
      ""position"": [
        1420,
        240
      ],
      ""webhookId"": ""65f501de-3c14-4089-9b9d-8956676bebf3"",
      ""parameters"": {
        ""updates"": [
          ""message""
        ],
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""jSdrxiRKb8yfG6Ty"",
          ""name"": ""Telegram account""
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""bcf1e82e-0e83-4783-a59f-857a6d1528b6"",
      ""name"": ""Verify Message Type"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        1620,
        240
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""outputKey"": ""Text"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""operator"": {
                      ""type"": ""array"",
                      ""operation"": ""contains"",
                      ""rightType"": ""any""
                    },
                    ""leftValue"": ""={{ $json.message.keys()}}"",
                    ""rightValue"": ""text""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""Audio"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""d16eb899-cccb-41b6-921e-172c525ff92c"",
                    ""operator"": {
                      ""type"": ""array"",
                      ""operation"": ""contains"",
                      ""rightType"": ""any""
                    },
                    ""leftValue"": ""={{ $json.message.keys()}}"",
                    ""rightValue"": ""voice""
                  }
                ]
              },
              ""renameOutput"": true
            }
          ]
        },
        ""options"": {
          ""fallbackOutput"": ""extra""
        }
      },
      ""typeVersion"": 3.2,
      ""alwaysOutputData"": false
    },
    {
      ""id"": ""d403f864-c781-48fc-a62b-de0c8bfedf06"",
      ""name"": ""OpenAI"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        2340,
        380
      ],
      ""parameters"": {
        ""options"": {},
        ""resource"": ""audio"",
        ""operation"": ""transcribe"",
        ""binaryPropertyName"": ""=data""
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""J2D6m1evHLUJOMhO"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""5b17c8f1-4bee-4f2a-abcb-74fe72d4cdfd"",
      ""name"": ""Telegram1"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        2120,
        380
      ],
      ""parameters"": {
        ""fileId"": ""={{ $json.message.voice.file_id }}"",
        ""resource"": ""file""
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""jSdrxiRKb8yfG6Ty"",
          ""name"": ""Telegram account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""cc6862cb-acfc-465b-b142-dd5fdc12fb13"",
      ""name"": ""Unsupported Message Type"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        2200,
        560
      ],
      ""parameters"": {
        ""text"": ""I'm not able to process this message type."",
        ""chatId"": ""={{ $json.message.chat.id }}"",
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""jSdrxiRKb8yfG6Ty"",
          ""name"": ""Telegram account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""8b97aaa1-ea0d-4b11-89c9-9ac6376c0760"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        2860,
        400
      ],
      ""parameters"": {
        ""text"": ""={{ $json.text }}"",
        ""options"": {
          ""systemMessage"": ""You are a helpful assistant for HR and employee policies""
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.7
    },
    {
      ""id"": ""e0d5416e-a799-46a2-83e3-fa6919ec0e36"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        2800,
        840
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""J2D6m1evHLUJOMhO"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""9149f41d-692e-49bc-ad70-848492d2c345"",
      ""name"": ""Postgres Chat Memory"",
      ""type"": ""@n8n/n8n-nodes-langchain.memoryPostgresChat"",
      ""position"": [
        3060,
        840
      ],
      ""parameters"": {
        ""sessionKey"": ""={{ $('Telegram Trigger').item.json.message.chat.id }}"",
        ""sessionIdType"": ""customKey""
      },
      ""credentials"": {
        ""postgres"": {
          ""id"": ""wQK6JXyS5y1icHw3"",
          ""name"": ""Postgres account""
        }
      },
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""a1f68887-da44-4bff-86fc-f607a5bd0ab6"",
      ""name"": ""Answer questions with a vector store"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolVectorStore"",
      ""position"": [
        3360,
        580
      ],
      ""parameters"": {
        ""name"": ""hr_employee_policies"",
        ""description"": ""data for HR and employee policies""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""76220fe4-2448-4b32-92d8-68c564cc702d"",
      ""name"": ""Postgres PGVector Store"",
      ""type"": ""@n8n/n8n-nodes-langchain.vectorStorePGVector"",
      ""position"": [
        3220,
        780
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""credentials"": {
        ""postgres"": {
          ""id"": ""wQK6JXyS5y1icHw3"",
          ""name"": ""Postgres account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""055fd294-7483-45ce-b58a-c90075199f5f"",
      ""name"": ""OpenAI Chat Model1"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        3640,
        780
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""J2D6m1evHLUJOMhO"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""cc13eac7-8163-45bf-8d8a-9cf72659e357"",
      ""name"": ""Embeddings OpenAI1"",
      ""type"": ""@n8n/n8n-nodes-langchain.embeddingsOpenAi"",
      ""position"": [
        3300,
        920
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""J2D6m1evHLUJOMhO"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""d46e415e-75ff-46b8-b382-cdcda216b1ed"",
      ""name"": ""Telegram"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        4200,
        420
      ],
      ""parameters"": {
        ""text"": ""={{ $json.output }}"",
        ""chatId"": ""={{ $('Telegram Trigger').first().json.message.chat.id }}"",
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""jSdrxiRKb8yfG6Ty"",
          ""name"": ""Telegram account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""ddf623a1-0a5e-48c9-b897-6a339895a891"",
      ""name"": ""Edit Fields"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        2120,
        200
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""403b336f-87ce-4bef-a5f2-1640425f8198"",
              ""name"": ""text"",
              ""type"": ""string"",
              ""value"": ""={{ $json.message.text }}""
            }
          ]
        },
        ""includeOtherFields"": true
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""4ae84e17-cfc1-425c-930d-949da7308b78"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1340,
        -280
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 1300,
        ""height"": 1020,
        ""content"": ""## 3. Handling Messages with Fallback Support\n\nThis workflow processes Telegram messages to handle **text** and **voice** inputs, with a fallback for unsupported message types. Here’s how it works:\n\n1. **Trigger Node**:\n   - The workflow starts with a Telegram trigger that listens for incoming messages.\n\n2. **Message Type Check**:\n   - The workflow verifies the type of message received:\n     - **Text Message**: If the message contains `$json.message.text`, it is sent directly to the agent.\n     - **Voice Message**: If the message contains `$json.message.voice`, the audio is transcribed into text using a transcription service, and the result is sent to the agent.\n\n3. **Fallback Path**:\n   - If the message is neither text nor voice, a fallback response is returned:\n     `\""Sorry, I couldn’t process your message. Please try again.\""`\n\n4. **Unified Output**:\n   - Both text messages and transcribed voice messages are converted into the same format before sending to the agent, ensuring consistency in handling.\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""86ad4e08-ef2d-405e-8861-bff38e1db651"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        220,
        220
      ],
      ""parameters"": {
        ""width"": 260,
        ""height"": 80,
        ""content"": ""The setup needs to be run at the start or when data is changed""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b05c4437-00fb-40f6-87fa-8dc564b16005"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2680,
        -280
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 1180,
        ""height"": 1420,
        ""content"": ""## 4. HR & IT AI Agent Provides Helpdesk Support  \nn8n's AI agents allow you to create intelligent and interactive workflows that can access and retrieve data from internal knowledgebases. In this workflow, the AI agent is configured to provide answers for HR and IT queries by performing Retrieval-Augmented Generation (RAG) on internal documents.\n\n### How It Works:\n- **Internal Knowledgebase Access**: A **Vector store tool** is used to connect the agent to the HR & IT knowledgebase built earlier in the workflow. This enables the agent to fetch accurate and specific answers for employee queries.\n- **Chat Memory**: A **Chat memory subnode** tracks the conversation, allowing the agent to maintain context across multiple queries from the same user, creating a personalized and cohesive experience.\n- **Dynamic Query Responses**: Whether employees ask about policies, leave balances, or technical troubleshooting, the agent retrieves relevant data from the vector store and crafts a natural language response.\n\nBy integrating the AI agent with a vector store and chat memory, this workflow empowers your HR & IT helpdesk chatbot to provide quick, accurate, and conversational support to employees. \n\nPostgrSQL is used for all steps to simplify development in production.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b266ca42-de62-4341-9aff-33ee0ac68045"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        3900,
        300
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 540,
        ""height"": 280,
        ""content"": ""## 5. Send Message\n\nThe simplest and most important part :)""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""7b1d11ca-9b56-4c5f-9189-26d536c24b76"",
  ""connections"": {
    ""OpenAI"": {
      ""main"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""AI Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Telegram"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Telegram1"": {
      ""main"": [
        [
          {
            ""node"": ""OpenAI"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Edit Fields"": {
      ""main"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""HTTP Request"": {
      ""main"": [
        [
          {
            ""node"": ""Extract from File"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Telegram Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""Verify Message Type"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Embeddings OpenAI"": {
      ""ai_embedding"": [
        [
          {
            ""node"": ""Create HR Policies"",
            ""type"": ""ai_embedding"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract from File"": {
      ""main"": [
        [
          {
            ""node"": ""Create HR Policies"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Embeddings OpenAI1"": {
      ""ai_embedding"": [
        [
          {
            ""node"": ""Postgres PGVector Store"",
            ""type"": ""ai_embedding"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model1"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Answer questions with a vector store"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Default Data Loader"": {
      ""ai_document"": [
        [
          {
            ""node"": ""Create HR Policies"",
            ""type"": ""ai_document"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Verify Message Type"": {
      ""main"": [
        [
          {
            ""node"": ""Edit Fields"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Telegram1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Unsupported Message Type"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Postgres Chat Memory"": {
      ""ai_memory"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_memory"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Postgres PGVector Store"": {
      ""ai_vectorStore"": [
        [
          {
            ""node"": ""Answer questions with a vector store"",
            ""type"": ""ai_vectorStore"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Recursive Character Text Splitter"": {
      ""ai_textSplitter"": [
        [
          {
            ""node"": ""Default Data Loader"",
            ""type"": ""ai_textSplitter"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When clicking ‘Test workflow’"": {
      ""main"": [
        [
          {
            ""node"": ""HTTP Request"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Answer questions with a vector store"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Screen and Score Resumes from Gmail to Sheets with AI,"{
  ""meta"": {
    ""instanceId"": ""ddc2592f2c048b3a9255de9457632cead183ed1f8d682593ea74c5b20f968a76"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""53cc8017-5310-4205-85e0-8cc839693601"",
      ""name"": ""Structured Output Parser"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserStructured"",
      ""position"": [
        720,
        400
      ],
      ""parameters"": {
        ""schemaType"": ""manual"",
        ""inputSchema"": ""{\n\t\""type\"": \""object\"",\n\t\""properties\"": {\n\t\t\""name\"": {\n\t\t\t\""type\"": \""string\""\n\t\t},\n      \""email\"": {\n\t\t\t\""type\"": \""string\""\n\t\t},\n      \""linkedin\"": {\n\t\t\t\""type\"": \""string\""\n\t\t},\n      \""score\"": {\n\t\t\t\""type\"": \""string\""\n\t\t}\n\t\t\n\t}\n}""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""ea0c00d3-25c8-4523-88ff-d61d6665ecf7"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -760,
        160
      ],
      ""parameters"": {
        ""width"": 480,
        ""height"": 260,
        ""content"": ""## Resume Screener from Gmail to Sheets\n\n### 📃Before you get started, you'll need:\n- [n8n installation](https://n8n.partnerlinks.io/n8nTTVideoGenTemplate) \n- [OpenAI API Key](https://platform.openai.com/api-keys)\n- Google Sheets API enabled in [Google Cloud Console](https://console.cloud.google.com/apis/api/sheets.googleapis.com/overview)\n- Google Drive API enabled in [Google Cloud Console](https://console.cloud.google.com/apis/api/drive.googleapis.com/overview)\n- OAuth 2.0 Client ID and Client Secret from your [Google Cloud Console Credentials](https://console.cloud.google.com/apis/credentials)\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e4f3aef9-750a-48bb-899b-bd4a810032f2"",
      ""name"": ""Extract text from PDF File"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        320,
        180
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""pdf"",
        ""binaryPropertyName"": ""attachment_0""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""5418cfae-25da-4f58-99ef-d6957d8819a8"",
      ""name"": ""AI Agent to evaluate Resume"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        540,
        180
      ],
      ""parameters"": {
        ""text"": ""=Here is the resume:\n\n{{ $json.text }}"",
        ""options"": {
          ""systemMessage"": ""You are an invaluable assistant. You were given a resume. You have to help me analyze the resume and give it a score based on the details available in the resume. Also, extract the name, email, and LinkedIn profile from the resume.""
        },
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""dce8e431-9d5c-4aa1-a0eb-c2a27de2d7f9"",
      ""name"": ""OpenAI Chat Model (GPT 4o-mini)"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        520,
        400
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""PMxepoh6OuVxbpg1"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""e7fdaf75-11ad-40c2-84a0-13c52f6f2eb1"",
      ""name"": ""Add Resume Evaluation to Google Sheets"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        920,
        180
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Name"": ""={{ $json.output.name }}"",
            ""Email"": ""={{ $json.output.email }}"",
            ""Score"": ""={{ $json.output.score }}"",
            ""LinkedIn"": ""={{ $json.output.linkedin }}"",
            ""Resume text"": ""={{ $('Extract text from PDF File').item.json.text }}""
          },
          ""schema"": [
            {
              ""id"": ""Name"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Email"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Email"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""LinkedIn"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""LinkedIn"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Score"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Score"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Resume text"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Resume text"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {
          ""useAppend"": true
        },
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": 781640061,
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1SGYsuJI2YJVztZZmSLsFZ0lbUHnxm0V9r3c8S5-2q74/edit#gid=781640061"",
          ""cachedResultName"": ""Resume Score""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1SGYsuJI2YJVztZZmSLsFZ0lbUHnxm0V9r3c8S5-2q74"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1SGYsuJI2YJVztZZmSLsFZ0lbUHnxm0V9r3c8S5-2q74/edit?usp=drivesdk"",
          ""cachedResultName"": ""Lead Generation""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""kzZGQmdAV5cPfymZ"",
          ""name"": ""Google Sheets (server@hic)""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""0ad65e2b-665d-4b77-a941-b15a7ffbfb89"",
      ""name"": ""Trigger on new Email Received"",
      ""type"": ""n8n-nodes-base.gmailTrigger"",
      ""position"": [
        60,
        180
      ],
      ""parameters"": {
        ""simple"": false,
        ""filters"": {
          ""q"": ""has:attachment"",
          ""labelIds"": [
            ""UNREAD""
          ],
          ""readStatus"": ""unread""
        },
        ""options"": {
          ""downloadAttachments"": true
        },
        ""pollTimes"": {
          ""item"": [
            {
              ""mode"": ""everyHour"",
              ""minute"": 1
            }
          ]
        }
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""tPOAqAl9y3adqJD6"",
          ""name"": ""Gmail account (hire@hic)""
        }
      },
      ""typeVersion"": 1.2
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""Structured Output Parser"": {
      ""ai_outputParser"": [
        [
          {
            ""node"": ""AI Agent to evaluate Resume"",
            ""type"": ""ai_outputParser"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract text from PDF File"": {
      ""main"": [
        [
          {
            ""node"": ""AI Agent to evaluate Resume"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""AI Agent to evaluate Resume"": {
      ""main"": [
        [
          {
            ""node"": ""Add Resume Evaluation to Google Sheets"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Trigger on new Email Received"": {
      ""main"": [
        [
          {
            ""node"": ""Extract text from PDF File"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model (GPT 4o-mini)"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Agent to evaluate Resume"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
LinkedIn Profile Finder via Form using Bright Data & GPT-4o-mini,"{
  ""id"": ""nmVATBvrztDxZX6z"",
  ""meta"": {
    ""instanceId"": ""b1f85eae352fde76d801a1a612661df6824cc2e68bfd6741e31305160a737e6e"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""LinkedIn Profile Finder via Form using Bright Data & GPT-4o-mini"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""ff6d4985-8b42-46d8-95c8-e80ff102440c"",
      ""name"": ""Extract Body and Title from Website"",
      ""type"": ""n8n-nodes-base.html"",
      ""position"": [
        1600,
        -1120
      ],
      ""parameters"": {
        ""options"": {
          ""trimValues"": true
        },
        ""operation"": ""extractHtmlContent"",
        ""dataPropertyName"": ""body"",
        ""extractionValues"": {
          ""values"": [
            {
              ""key"": ""title"",
              ""cssSelector"": ""title""
            },
            {
              ""key"": ""body"",
              ""cssSelector"": ""body""
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""4da21d9c-59d2-4151-a1ca-5e7a85cf0316"",
      ""name"": ""When User Completes Form"",
      ""type"": ""n8n-nodes-base.formTrigger"",
      ""position"": [
        580,
        -1120
      ],
      ""webhookId"": ""41d0bffa-f5ca-4df7-b757-ca5a1e472b8a"",
      ""parameters"": {
        ""options"": {
          ""path"": ""search-user"",
          ""ignoreBots"": true,
          ""buttonLabel"": ""Get References""
        },
        ""formTitle"": ""Sales prospecting"",
        ""formFields"": {
          ""values"": [
            {
              ""fieldLabel"": ""Person Fullname"",
              ""placeholder"": ""Complete the fullname"",
              ""requiredField"": true
            },
            {
              ""fieldLabel"": ""Person's company"",
              ""placeholder"": ""Complete the company"",
              ""requiredField"": true
            }
          ]
        },
        ""responseMode"": ""lastNode"",
        ""formDescription"": ""Complete the data of the prospect you want to analyze.\n\nA personalized follow-up email with insights and suggested outreach steps will be sent to you:""
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""644fab8f-66c6-4ae5-984b-7e1e66c265a2"",
      ""name"": ""Get LinkedIn Entry on Google"",
      ""type"": ""n8n-nodes-brightdata.brightData"",
      ""position"": [
        1280,
        -1120
      ],
      ""parameters"": {
        ""url"": ""={{ $json.google_search }}"",
        ""zone"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""web_unlocker1"",
          ""cachedResultName"": ""web_unlocker1""
        },
        ""format"": ""json"",
        ""country"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""us"",
          ""cachedResultName"": ""us""
        },
        ""requestOptions"": {}
      },
      ""credentials"": {
        ""brightdataApi"": {
          ""id"": ""jk945kIuAFAo9bcg"",
          ""name"": ""BrightData account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e226ea33-a643-4396-9cbf-53901eeef89f"",
      ""name"": ""Parse Google Results"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        1920,
        -1120
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini"",
          ""cachedResultName"": ""GPT-4O-MINI""
        },
        ""options"": {},
        ""messages"": {
          ""values"": [
            {
              ""role"": ""system"",
              ""content"": ""=Extract Linkedin profiles from google results (link, fullname, position, company if possible). \n\nReturn a results property with all the parsed results including a property \""match\"" if user matches the data entry values \""{{ $('When User Completes Form').item.json[\""Person Fullname\""].trim() }} {{ $('When User Completes Form').item.json[\""Person Position\""].trim() }} {{ $('When User Completes Form').item.json[\""Person's company\""].trim() }}\""""
            },
            {
              ""content"": ""=The input text is:\n{{ $json.body }}""
            },
            {
              ""content"": ""=Categories to filter: {{ $('When User Completes Form').item.json.Category.join(',') }}""
            }
          ]
        },
        ""jsonOutput"": true
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""oKzfvOwieOm4upQ2"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""8018f6c1-037b-4577-ae4c-d2129fe2ecf4"",
      ""name"": ""Form Not Found"",
      ""type"": ""n8n-nodes-base.form"",
      ""position"": [
        2280,
        -800
      ],
      ""webhookId"": ""a509f577-231f-435f-b3c2-0fed718f0cc8"",
      ""parameters"": {
        ""operation"": ""completion"",
        ""respondWith"": ""showText"",
        ""responseText"": ""=We didn't found a person for \""{{ $('When User Completes Form').item.json[\""Person Fullname\""] }} {{ $('When User Completes Form').item.json[\""Person Fullname\""] }} {{ $('When User Completes Form').item.json[\""Person's company\""] }}\""""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""3de33b35-63b5-419d-9719-b217c92767c6"",
      ""name"": ""Get only Matching Profiles"",
      ""type"": ""n8n-nodes-base.filter"",
      ""position"": [
        1460,
        -820
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""loose""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""51a15ff2-457c-4a96-bfad-fe6d29a8cd9f"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.match }}"",
              ""rightValue"": ""true""
            }
          ]
        },
        ""looseTypeValidation"": true
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""b7e925b1-3b67-4b17-bcc1-10111ed41c32"",
      ""name"": ""Limit to 1 Profile"",
      ""type"": ""n8n-nodes-base.limit"",
      ""position"": [
        1740,
        -820
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""d4a6a867-6e9b-48d3-9ba2-0d9d2e803e67"",
      ""name"": ""Extract Parsed Results"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        2340,
        -1120
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""message.content.results""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""daf17e0e-0fc9-45e4-9393-8ba3a60f868e"",
      ""name"": ""LinkedIn Profile is Found?"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1960,
        -820
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""645d85d3-c5cc-4e51-a989-075c0a851449"",
              ""operator"": {
                ""type"": ""object"",
                ""operation"": ""exists"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json }}"",
              ""rightValue"": 1
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""300da9f8-6c24-4081-af96-ae09a1b513f8"",
      ""name"": ""Edit Url LinkedIn"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        940,
        -1120
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""6b95685b-3286-4643-bfa1-6335d3f8cb39"",
              ""name"": ""google_search"",
              ""type"": ""string"",
              ""value"": ""=https://www.google.com/search?q=site%3Alinkedin.com%2Fin+{{ encodeURIComponent($json[\""Person Fullname\""].trim() + \"" \"" + $json[\""Person's company\""].trim()) }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""3ffaef02-ee98-4663-9a64-37907943427d"",
      ""name"": ""Edit Company Search"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        300,
        -860
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""6b95685b-3286-4643-bfa1-6335d3f8cb39"",
              ""name"": ""google_search"",
              ""type"": ""string"",
              ""value"": ""=https://www.google.com/search?q={{ encodeURIComponent($json[\""Person's company\""].trim()) }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""29294eaa-4692-4c1b-806a-11bd32428fdd"",
      ""name"": ""Extract Body and Title from Website1"",
      ""type"": ""n8n-nodes-base.html"",
      ""position"": [
        860,
        -860
      ],
      ""parameters"": {
        ""options"": {
          ""trimValues"": true
        },
        ""operation"": ""extractHtmlContent"",
        ""dataPropertyName"": ""body"",
        ""extractionValues"": {
          ""values"": [
            {
              ""key"": ""title"",
              ""cssSelector"": ""title""
            },
            {
              ""key"": ""body"",
              ""cssSelector"": ""body""
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""e5232b69-eefe-4875-b339-54f7d2787863"",
      ""name"": ""Get Company on Google"",
      ""type"": ""n8n-nodes-brightdata.brightData"",
      ""position"": [
        540,
        -860
      ],
      ""parameters"": {
        ""url"": ""={{ $json.google_search }}"",
        ""zone"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""web_unlocker1"",
          ""cachedResultName"": ""web_unlocker1""
        },
        ""format"": ""json"",
        ""country"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""us"",
          ""cachedResultName"": ""us""
        },
        ""requestOptions"": {}
      },
      ""credentials"": {
        ""brightdataApi"": {
          ""id"": ""jk945kIuAFAo9bcg"",
          ""name"": ""BrightData account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a8696ab3-76f0-4b58-93d6-1b73f4c1d83a"",
      ""name"": ""Parse Google Results for Company"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        720,
        -420
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini"",
          ""cachedResultName"": ""GPT-4O-MINI""
        },
        ""options"": {},
        ""messages"": {
          ""values"": [
            {
              ""role"": ""system"",
              ""content"": ""=Get first entry matching company {{ $('When User Completes Form').item.json[\""Person's company\""] }}\n\nOutput first entry data in a content property""
            },
            {
              ""content"": ""=The input text is:\n{{ $json.body }}""
            },
            {
              ""content"": ""=Categories to filter: {{ $('When User Completes Form').item.json.Category.join(',') }}""
            }
          ]
        },
        ""jsonOutput"": true
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""oKzfvOwieOm4upQ2"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""4b4a6ef2-92ae-4dee-aac1-081fb1a2dbd9"",
      ""name"": ""Split Out"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        1080,
        -420
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""message.content""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""cbf625d0-097d-47e7-8ab0-fb2da9dc3f7c"",
      ""name"": ""Create a Followup for Company and Person"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        1500,
        -440
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini"",
          ""cachedResultName"": ""GPT-4O-MINI""
        },
        ""options"": {},
        ""messages"": {
          ""values"": [
            {
              ""role"": ""system"",
              ""content"": ""=Use data to analyze as a buyer persona. Find the best approach to connect for future champion in his company. Give recommendations and a concrete outreach steps.\n\nOutput report as raw html in a propety called content. Use tailwind for styles.""
            },
            {
              ""content"": ""=The input text is:\n{{ JSON.stringify($json)}}""
            }
          ]
        },
        ""jsonOutput"": true
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""oKzfvOwieOm4upQ2"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""6347e20c-b3f0-42ff-bc31-ddf4d13a4398"",
      ""name"": ""Merge"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        1320,
        -440
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""combineBy"": ""combineByPosition""
      },
      ""typeVersion"": 3.1
    },
    {
      ""id"": ""4df0fb38-dad4-4eda-876c-591111e98807"",
      ""name"": ""Send Email"",
      ""type"": ""n8n-nodes-base.emailSend"",
      ""position"": [
        1880,
        -440
      ],
      ""webhookId"": ""1e6e9588-2bc6-4f05-8531-2d7ca8348d0c"",
      ""parameters"": {
        ""html"": ""={{ $json.message.content.content }}"",
        ""options"": {},
        ""subject"": ""Next followup"",
        ""toEmail"": ""miquel@n8nhackers.com"",
        ""fromEmail"": ""miquel@n8nhackers.com""
      },
      ""credentials"": {
        ""smtp"": {
          ""id"": ""z3kiLWNZTH4wQaGy"",
          ""name"": ""SMTP account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""5d28cc94-3193-48e6-9bad-f15baf403645"",
      ""name"": ""Form Email Sent"",
      ""type"": ""n8n-nodes-base.form"",
      ""position"": [
        2120,
        -440
      ],
      ""webhookId"": ""a509f577-231f-435f-b3c2-0fed718f0cc8"",
      ""parameters"": {
        ""options"": {},
        ""operation"": ""completion"",
        ""completionTitle"": ""Thank you!"",
        ""completionMessage"": ""We have sent you an email""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""ea9dab20-4b74-45d0-9bf9-b0c1a884fe81"",
  ""connections"": {
    ""Merge"": {
      ""main"": [
        [
          {
            ""node"": ""Create a Followup for Company and Person"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Split Out"": {
      ""main"": [
        [
          {
            ""node"": ""Merge"",
            ""type"": ""main"",
            ""index"": 1
          }
        ]
      ]
    },
    ""Send Email"": {
      ""main"": [
        [
          {
            ""node"": ""Form Email Sent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Edit Url LinkedIn"": {
      ""main"": [
        [
          {
            ""node"": ""Get LinkedIn Entry on Google"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Limit to 1 Profile"": {
      ""main"": [
        [
          {
            ""node"": ""LinkedIn Profile is Found?"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Edit Company Search"": {
      ""main"": [
        [
          {
            ""node"": ""Get Company on Google"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Parse Google Results"": {
      ""main"": [
        [
          {
            ""node"": ""Extract Parsed Results"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get Company on Google"": {
      ""main"": [
        [
          {
            ""node"": ""Extract Body and Title from Website1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract Parsed Results"": {
      ""main"": [
        [
          {
            ""node"": ""Get only Matching Profiles"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When User Completes Form"": {
      ""main"": [
        [
          {
            ""node"": ""Edit Url LinkedIn"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Edit Company Search"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get only Matching Profiles"": {
      ""main"": [
        [
          {
            ""node"": ""Limit to 1 Profile"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""LinkedIn Profile is Found?"": {
      ""main"": [
        [
          {
            ""node"": ""Merge"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Form Not Found"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get LinkedIn Entry on Google"": {
      ""main"": [
        [
          {
            ""node"": ""Extract Body and Title from Website"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Parse Google Results for Company"": {
      ""main"": [
        [
          {
            ""node"": ""Split Out"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract Body and Title from Website"": {
      ""main"": [
        [
          {
            ""node"": ""Parse Google Results"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract Body and Title from Website1"": {
      ""main"": [
        [
          {
            ""node"": ""Parse Google Results for Company"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Create a Followup for Company and Person"": {
      ""main"": [
        [
          {
            ""node"": ""Send Email"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Transform Raw Hiring Transcripts into Briefs & Scorecards with AI and Google Docs,"{
  ""id"": ""t4GwTrKGGPLWVwVQ"",
  ""meta"": {
    ""instanceId"": ""355814e783b7f23fbee7df866cf98dc4217f576f481e3c01da1be1f8a6912be5"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Generate a clean hiring brief and interview scorecards in 1 minute"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""680c3b20-8bfb-403f-893f-0bcb2fa82bcd"",
      ""name"": ""Sending raw hiring brief transcript"",
      ""type"": ""n8n-nodes-base.formTrigger"",
      ""position"": [
        -40,
        -80
      ],
      ""webhookId"": ""d548fe58-b28d-4011-802e-bd6e9654d591"",
      ""parameters"": {
        ""options"": {},
        ""formTitle"": ""Upload your raw Hiring Brief (PDF)"",
        ""formFields"": {
          ""values"": [
            {
              ""fieldType"": ""file"",
              ""fieldLabel"": ""Interview transcript"",
              ""requiredField"": true
            },
            {
              ""fieldLabel"": ""Name your document"",
              ""placeholder"": ""Document name"",
              ""requiredField"": true
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""5c131ad3-5c02-41c8-844e-6733fd75a94c"",
      ""name"": ""Extracting text"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        120,
        -80
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""pdf"",
        ""binaryPropertyName"": ""Interview_transcript""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a3e449a4-dfb3-4521-827e-4c998c1821d5"",
      ""name"": ""Summarizing raw transcript"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        280,
        -80
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""o3-mini"",
          ""cachedResultName"": ""O3-MINI""
        },
        ""options"": {},
        ""messages"": {
          ""values"": [
            {
              ""role"": ""system"",
              ""content"": ""You are a senior tech recruiter who turns messy kickoff-call transcripts into\npolished, recruiter-grade hiring briefs.\n\nNON-NEGOTIABLES\n---------------\n• **Nothing useful may be discarded.** If in doubt, include it.\n• Preserve colourful anecdotes, direct quotes, founder back-stories,\n  culture rituals, hiring wins & fails, and spicy truths.\n  They are critical for candidate sell.\n• Never invent missing information; instead flag gaps under **“❓ Open Questions.”**\n• Write in clear, business-casual English—concise but human.\n  Avoid marketing fluff.\n\nOUTPUT\n------\nDeliver **well-formatted Markdown** with the following headings.\nOmit a section only if the transcript truly contains zero information for it.\n\n📍 **Executive Summary** – 3-4 lines on who’s hiring, why, and what’s at stake.\n\n# Company Snapshot\n## Origin Story & Vision  \n## Differentiation & Market Position  \n## Growth Outlook (headcount, ARR, funding roadmap)\n\n# Team & Culture\n## Current Org & Key Leaders  \n## Culture in Action – rituals, norms, “no brilliant jerks,” etc.  \n🎙️ **Anecdotes & War-Stories** – quirky quotes, past hiring wins & fails.\n\n# Product & Market Context\n(what they build, who buys, traction, tech challenges)\n\n# Role Overview – **Senior Talent Acquisition Partner**\n## Mission & Impact (first 12-18 mo)  \n## Core Responsibilities  \n## Success Metrics / KPIs  \n## Career Growth Path\n\n# Ideal Candidate Profile\n### Must-Have Experience  \n### Mindset & Personal Traits  \n### Nice-to-Haves  \n### Red Flags / Anti-Profiles\n\n# Compensation & Benefits\n(base, bonus, equity, perks, remote stipend, full benefit stack)\n\n# Interview Process\n(stages, owners, assignments, timing)\n\n# Sourcing Targets & Competitor Pools\n(Bain Vector, Hugging Face, etc.)\n\n⚠️ **Challenges, Blockers & Strategic Notes**\n(real risks, founder quirks, prior mis-hires, process pain points)\n\n❓ **Open Questions**\n(Bullets of anything missing, unclear, or contradictory—\ne.g. diversity baseline, exact start date, equity cliff terms)\n\nFORMAT RULES\n------------\n• Use headings, sub-headings, and bullet lists for readability.  \n• Short pull-quotes are fine:  \n  > *“We fired clients who only want decks.” — Nicolas, COO*  \n• Do NOT include Markdown code fences or extra commentary—only the brief itself.\n\nADDENDUM – ensure these are PRESENT verbatim if they exist in the transcript:\n• Benefit amounts (€1 000 WFH kit + €100/month, 30 holiday days, Alan Blue, Moka.care, Gympass).\n• “Focus Blocks” calendar etiquette.\n• Recovery-score Whoop-band pilot.\n• Mini-table: NLG vs. BCG Gamma vs. Artefact (speed, pricing model, equity upside).\n• Heading: # Hiring Logistics & Legal Constraints (UTC-2↔UTC+3, EOR via Remote.com, ≤2-month notice).\nFailing to include any of the above when present triggers an **“Open Question.”**\n""
            },
            {
              ""content"": ""=Here is the raw transcript : {{ $json.text }}""
            }
          ]
        }
      },
      ""credentials"": {},
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""57c1aad9-7c87-4742-8a7a-7be2f6a6e0c3"",
      ""name"": ""Generating scorecards"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        680,
        -140
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""o3-mini"",
          ""cachedResultName"": ""O3-MINI""
        },
        ""options"": {},
        ""messages"": {
          ""values"": [
            {
              ""role"": ""system"",
              ""content"": ""You are a People-Ops expert.  \nYour job: create **compact interview scorecards** for each stage of a hiring process.\n\nOUTPUT REQUIREMENTS\n-------------------\nFor **each** stage listed in the input, return **exactly**:\n\n• **Primary Focus** – one short sentence.  \n• **Hard & Soft Skills to Probe** – 4-8 bullet items. \n    – For **each skill**, give:  \n      • 2-3 sample questions (bullet list)  \n      • 1 short line on what a *great* answer would include.\n\nNO scoring tables, ratings, or long prose.\n\nSTYLE & FORMAT\n--------------\n• Plain text / minimal Markdown that pastes cleanly into Google Docs.  \n• Use the exact stage names provided.  \n• Keep bullets tight (max ~15 words each).  \n• Reference role-specific cues from the brief (KPIs, culture values).  \n• If info is missing, note “[needs clarification]” instead of guessing.""
            },
            {
              ""content"": ""=here is the input : {{ $json.message.content }}""
            }
          ]
        }
      },
      ""credentials"": {},
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""1ab4bc8f-fb00-4e19-9228-5ca0683632f1"",
      ""name"": ""Creating hiring brief file"",
      ""type"": ""n8n-nodes-base.googleDocs"",
      ""position"": [
        680,
        80
      ],
      ""parameters"": {
        ""title"": ""={{ $('Sending raw hiring brief transcript').item.json['Name your document'] }}"",
        ""folderId"": ""1TzPXCntKOEym3GM_s8HVyG9VNIGWe70h""
      },
      ""credentials"": {},
      ""typeVersion"": 2
    },
    {
      ""id"": ""249d8f89-7e97-42d6-87d8-8e1acb02de9d"",
      ""name"": ""Adding brief to file"",
      ""type"": ""n8n-nodes-base.googleDocs"",
      ""position"": [
        880,
        80
      ],
      ""parameters"": {
        ""actionsUi"": {
          ""actionFields"": [
            {
              ""text"": ""={{ $('Summarizing raw transcript').item.json.message.content }}"",
              ""action"": ""insert""
            }
          ]
        },
        ""operation"": ""update"",
        ""documentURL"": ""={{ $json.id }}""
      },
      ""credentials"": {},
      ""typeVersion"": 2
    },
    {
      ""id"": ""7738eab0-0be8-43a8-828d-cbcdc0fce3ef"",
      ""name"": ""Creating Scorecards file"",
      ""type"": ""n8n-nodes-base.googleDocs"",
      ""position"": [
        1040,
        -140
      ],
      ""parameters"": {
        ""title"": ""=Scorecard -  {{ $('Sending raw hiring brief transcript').item.json['Name your document'] }}"",
        ""folderId"": ""1TzPXCntKOEym3GM_s8HVyG9VNIGWe70h""
      },
      ""credentials"": {},
      ""typeVersion"": 2
    },
    {
      ""id"": ""3781bf90-331a-4dff-af85-47f74ffebdfe"",
      ""name"": ""Adding scorecards to File"",
      ""type"": ""n8n-nodes-base.googleDocs"",
      ""position"": [
        1260,
        -140
      ],
      ""parameters"": {
        ""actionsUi"": {
          ""actionFields"": [
            {
              ""text"": ""={{ $('Generating scorecards').item.json.message.content }}"",
              ""action"": ""insert""
            }
          ]
        },
        ""operation"": ""update"",
        ""documentURL"": ""={{ $json.id }}""
      },
      ""credentials"": {},
      ""typeVersion"": 2
    },
    {
      ""id"": ""a9950174-c55f-4c47-b22a-b1bb0f17af2f"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -140,
        -460
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 747,
        ""height"": 332,
        ""content"": ""### 💡 Who is this template for ?\nBasically anyone involved in recurring recruiting processes and looking to save a considerable amount of time and energy (Talent acquisitions Managers, recruiting consultants, hiring managers, founders…etc)\n\n### 📋 What it does :\n- It takes a messy and raw transcript from an “intake meeting” between a recruiter and a hiring manager and turns it into a **clean and exhaustive brief + scorecard templates for each interview rounds**\n- It does it under 1 MINUTE while the usual full “manual” process usually takes several hours\n\n### 👨‍🎤 Setup\n1. Add you **OpenAI API key (or any other LLM)**, and **Google Drive** credentials\n2. Update a raw transcript of one of your Hiring Brief meeting (as PDF)\n3. Let the workflow do the rest""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""5088789a-80bc-490a-b5b5-8bf7f7371257"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        700,
        -260
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 202,
        ""height"": 96,
        ""content"": ""👇 Feel free to adapt the prompt so that the format of the scorecards reflects your existing process. ""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""8b8b1490-6c84-4950-bec1-9831182f8aac"",
  ""connections"": {
    ""Extracting text"": {
      ""main"": [
        [
          {
            ""node"": ""Summarizing raw transcript"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Generating scorecards"": {
      ""main"": [
        [
          {
            ""node"": ""Creating Scorecards file"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Creating Scorecards file"": {
      ""main"": [
        [
          {
            ""node"": ""Adding scorecards to File"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Creating hiring brief file"": {
      ""main"": [
        [
          {
            ""node"": ""Adding brief to file"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Summarizing raw transcript"": {
      ""main"": [
        [
          {
            ""node"": ""Creating hiring brief file"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Generating scorecards"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Sending raw hiring brief transcript"": {
      ""main"": [
        [
          {
            ""node"": ""Extracting text"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Automate LinkedIn Candidates Sourcing with Google X-ray Boolean Search,"{
  ""id"": ""UsBaGY83vnyZjRoB"",
  ""meta"": {
    ""instanceId"": ""d4e74e27d8d0aa53cd4bdff26f47c18bb91437db0b63a6ba8ec9f78df0e0234f"",
    ""templateId"": ""2808"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""TopSourcer - Finds LinkedIn Profiles using natural language"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""16a5f4a2-6e00-40f5-bab7-35526550eacd"",
      ""name"": ""Wait"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        3240,
        -280
      ],
      ""webhookId"": ""88c6a5cc-4b33-438c-ba85-2e075a276a78"",
      ""parameters"": {},
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""f9ff2e4f-176b-453d-8743-cab4d9fd408d"",
      ""name"": ""When chat message received"",
      ""type"": ""@n8n/n8n-nodes-langchain.chatTrigger"",
      ""position"": [
        1040,
        -180
      ],
      ""webhookId"": ""475042df-7c36-4658-ab1c-ff55c237621f"",
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""b988c049-2400-4a3a-b615-f4048832bd8d"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        980,
        -340
      ],
      ""parameters"": {
        ""content"": ""Click \""Open Chat\"" after activating the workflow.\n\nHere, paste in a job description or describe your ideal candidate.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""74cec892-07d6-4e7d-9c6f-becfb51241c8"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1300,
        -300
      ],
      ""parameters"": {
        ""width"": 300,
        ""content"": ""Under \""Credential to connect with\"" add your openAI API key. Find at: https://platform.openai.com/settings/organization/api-keys\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""940373af-ca88-44f1-b3c3-fb125ab6daf9"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        2800,
        -360
      ],
      ""parameters"": {
        ""width"": 300,
        ""content"": ""For the first condition: {{ $json.start }} is less than 50, so change \""50\"" to your desired number of results. \n\nEach loop fetches the next page, returning 10 results per iteration.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c2bc0757-753b-4fee-b42b-65e5a0ff4750"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        3160,
        -440
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 200,
        ""content"": ""Waits 5 seconds to avoid rate limiting by Google. While it's unlikely you'll be rate-limited since you're authenticated with your cookie, this is just a precaution.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9007b42b-1a79-4b98-9d75-71894d660c1d"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        3400,
        -600
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 380,
        ""height"": 280,
        ""content"": ""Get this Cookie-Editor. https://chromewebstore.google.com/detail/cookie-editor/hlkenndednhfkekhgcdicdfddnkalmdm\n\nDo a google search --> click this extension --> Export --> Header string.\n\nThen, open this node --> under Header Auth --> edit --> and under cookie value paste in your header string.  \n\nThis is to perform an authenticated google search.\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b1d2f9dd-227d-4372-89f8-e6d54e94f2fc"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1680,
        -320
      ],
      ""parameters"": {
        ""content"": ""Connect your google sheets account and create a document.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""df0fb397-55d0-41ec-a9df-2c39019ad68e"",
      ""name"": ""Create a new sheet"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        1740,
        -180
      ],
      ""parameters"": {
        ""title"": ""={{ $('Generate a Boolean Search String').item.json.choices[0].message.content.sheet_name + ' ' + $now }}\n"",
        ""options"": {},
        ""operation"": ""create"",
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1M9UUgw1wPZIBSoPiGTvNIgA19ERgOo5KmD9wx__Y8ZY"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1M9UUgw1wPZIBSoPiGTvNIgA19ERgOo5KmD9wx__Y8ZY/edit?usp=drivesdk"",
          ""cachedResultName"": ""Candidates""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""6wBRjmD77d71tAqP"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""678a0b65-de67-41f0-ada6-23cef1226228"",
      ""name"": ""Add columns to new sheet"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        2220,
        -180
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {},
          ""schema"": [
            {
              ""id"": ""linkedin_url"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""linkedin_url"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""autoMapInputData"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $('Create a new sheet').item.json.sheetId }}""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1M9UUgw1wPZIBSoPiGTvNIgA19ERgOo5KmD9wx__Y8ZY"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1M9UUgw1wPZIBSoPiGTvNIgA19ERgOo5KmD9wx__Y8ZY/edit?usp=drivesdk"",
          ""cachedResultName"": ""Candidates""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""6wBRjmD77d71tAqP"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""767491ab-f7dd-4e23-816b-840bc24e5268"",
      ""name"": ""set page number for google search"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        2480,
        -180
      ],
      ""parameters"": {
        ""jsCode"": ""return [{ json: { start: 0 } }];\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""f76f28a5-8444-4ff9-b62c-0d94a07c6447"",
      ""name"": ""Extracts all linkedin urls from the google http response"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        3740,
        -280
      ],
      ""parameters"": {
        ""jsCode"": ""// Extract LinkedIn profile URLs from HTML\nfunction extractLinkedInUrls(html) {\n    // First decode any encoded HTML entities\n    html = html.replace(/&amp;/g, '&')\n               .replace(/\\\\u003d/g, '=')\n               .replace(/\\\\x22/g, '\""')\n               .replace(/\\\\x26/g, '&')\n               .replace(/\\\\x3e/g, '>')\n               .replace(/\\\\x3c/g, '<');\n\n    const patterns = [\n        // Standard LinkedIn URLs in href\n        /(?:https?:)?\\/\\/(?:[a-z]{2,}\\.)?linkedin\\.com\\/in\\/[a-zA-Z0-9._-]+(?:\\/[a-z]{2})?/gi,\n        // URLs in encoded strings\n        /(?:\""url\""|url=)(?:[^\""&]*?)(?:https?:)?\\/\\/(?:[a-z]{2,}\\.)?linkedin\\.com\\/in\\/[a-zA-Z0-9._-]+(?:\\/[a-z]{2})?/gi,\n        // URLs in JSON strings\n        /\""(?:https?:)?\\/\\/(?:[a-z]{2,}\\.)?linkedin\\.com\\/in\\/[a-zA-Z0-9._-]+(?:\\/[a-z]{2})?\""/gi\n    ];\n\n    const urls = new Set();\n    \n    patterns.forEach(pattern => {\n        const matches = html.matchAll(pattern);\n        for (const match of matches) {\n            let url = match[0];\n            \n            // Clean up the URL\n            url = url.replace(/^\""url\""|^url=|\""$/g, '') // Remove url= prefix and quotes\n                    .replace(/^[\""']|[\""']$/g, '')      // Remove surrounding quotes\n                    .replace(/\\\\+/g, '')              // Remove backslashes\n                    .trim();\n            \n            // Ensure URL has protocol\n            if (!url.startsWith('http')) {\n                url = 'https://' + url.replace(/^\\/\\//, '');\n            }\n            \n            // Only include if it's a LinkedIn profile URL\n            if (url.includes('linkedin.com/in/')) {\n                // Clean the URL: remove tracking parameters and fragments\n                url = url.split(/[?#&]/)[0];\n                \n                // Remove any trailing slashes\n                url = url.replace(/\\/$/, '');\n                \n                // Add to Set to remove duplicates\n                urls.add(url);\n            }\n        }\n    });\n\n    return Array.from(urls);\n}\n\n// Get the HTML from input\nconst html = $input.first().json.data;\n\n// Extract URLs and create array of objects\nconst linkedInProfiles = extractLinkedInUrls(html)\n    .filter(url => !url.includes('google.com')) // Extra safety check to remove any Google URLs\n    .map(url => ({\n        linkedin_url: url\n    }));\n\n// Return the array of objects directly\nreturn linkedInProfiles;""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""5a93c8f2-f55b-4d0e-92f8-0d86147f8d13"",
      ""name"": ""Google Boolean Search"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        3500,
        -300
      ],
      ""parameters"": {
        ""url"": ""https://www.google.com/search"",
        ""options"": {},
        ""sendQuery"": true,
        ""sendHeaders"": true,
        ""authentication"": ""genericCredentialType"",
        ""genericAuthType"": ""httpHeaderAuth"",
        ""queryParameters"": {
          ""parameters"": [
            {
              ""name"": ""q"",
              ""value"": ""={{ $('Generate a Boolean Search String').first().json.choices[0].message.content.search_string }}\n""
            },
            {
              ""name"": ""start"",
              ""value"": ""={{ $json.start }}""
            }
          ]
        },
        ""headerParameters"": {
          ""parameters"": [
            {
              ""name"": ""User-Agent"",
              ""value"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36""
            }
          ]
        }
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""5T6POWjsPfV558Ta"",
          ""name"": ""Header Auth account""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""37b4f264-34f0-47bb-9b1b-fa53beafb2a9"",
      ""name"": ""Generate a Boolean Search String"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        1320,
        -180
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini"",
          ""cachedResultName"": ""GPT-4O-MINI""
        },
        ""options"": {},
        ""messages"": {
          ""values"": [
            {
              ""role"": ""system"",
              ""content"": ""You are an expert in Boolean search techniques for Google. When the user send a job description, generate a search string specifically for finding LinkedIn profiles. Your response must always follow this exact format:\nsite:linkedin.com/in [Boolean search string]\nCreate the Boolean search string using precise operators (AND, OR, \""\"", *, -) to match the job requirements. Focus only on generating the search string - provide no additional commentary or explanations unless specifically requested.\n\nAlso return sheet_name (less than 100 char)""
            },
            {
              ""content"": ""={{ $json.chatInput }}""
            }
          ]
        },
        ""simplify"": false,
        ""jsonOutput"": true
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""EX7mky4RGLDD6udW"",
          ""name"": ""OpenAi account""
        }
      },
      ""retryOnFail"": false,
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""99041eff-f094-4c2a-a75a-4b01faf33d1b"",
      ""name"": ""If desired results not reached"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        2920,
        -200
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""da9f8de0-1e75-4ff3-9f81-8e911251416b"",
              ""operator"": {
                ""type"": ""number"",
                ""operation"": ""lt""
              },
              ""leftValue"": ""={{ $json.start }}"",
              ""rightValue"": 50
            },
            {
              ""id"": ""a891c085-7f49-4523-8610-40577b3ffd3b"",
              ""operator"": {
                ""name"": ""filter.operator.equals"",
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": """",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""d218a1e8-2959-4b7c-a84d-f8e0df82c5e7"",
      ""name"": ""Appends the results to the sheet"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        4040,
        -280
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""linkedin_url"": ""={{ $json.linkedin_url }}""
          },
          ""schema"": [
            {
              ""id"": ""linkedin_url"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""linkedin_url"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Full Name"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Full Name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""First Name"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""First Name"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Headline"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Headline"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Candidate Summary"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Candidate Summary"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Experiences Summary"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Experiences Summary"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Education Summary"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Education Summary"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Skills"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Skills"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""City"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""City"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Country"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Country"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Criteria_Assessment"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Criteria_Assessment"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""overall_fit_score"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""overall_fit_score"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""score_justification"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""score_justification"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Company"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Company"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Company Industry"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Company Industry"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Company Size"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Company Size"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Company LinkedIn URL"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Company LinkedIn URL"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Company Website"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Company Website"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Current Company Join Date"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Current Company Join Date"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Certifications"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Certifications"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Courses Taken"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Courses Taken"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Email"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Email"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Phone"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Phone"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Connections Count"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Connections Count"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Followers Count"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Followers Count"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Languages Spoken"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Languages Spoken"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Projects"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Projects"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Date Created"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Date Created"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $('Create a new sheet').first().json.sheetId }}""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1M9UUgw1wPZIBSoPiGTvNIgA19ERgOo5KmD9wx__Y8ZY"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1M9UUgw1wPZIBSoPiGTvNIgA19ERgOo5KmD9wx__Y8ZY/edit?usp=drivesdk"",
          ""cachedResultName"": ""Candidates""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""6wBRjmD77d71tAqP"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""7a56e7d7-31f8-4115-b993-227bd7221c07"",
      ""name"": ""Adds 10 to start - Go to next page"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        4340,
        -220
      ],
      ""parameters"": {
        ""jsCode"": ""// Get the start value from 'Edit Fields2' node\nconst startValue =$('If desired results not reached').first().json.start;\n\n// Add 10 to the start value\nconst start = startValue + 10;\n\n// Return the new value\nreturn [{ json: { start } }];\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""afe22fc0-c9c1-4aab-a11d-d91740f812bb"",
      ""name"": ""Columns to add"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        1980,
        -180
      ],
      ""parameters"": {
        ""jsCode"": ""return [{\n  json: {\n    \""linkedin_url\"": \""\""\n  }\n}];\n""
      },
      ""typeVersion"": 2
    }
  ],
  ""active"": true,
  ""pinData"": {},
  ""settings"": {},
  ""versionId"": ""ce389fd9-7697-4e36-8346-6be9414aecf2"",
  ""connections"": {
    ""Wait"": {
      ""main"": [
        [
          {
            ""node"": ""Google Boolean Search"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Columns to add"": {
      ""main"": [
        [
          {
            ""node"": ""Add columns to new sheet"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Create a new sheet"": {
      ""main"": [
        [
          {
            ""node"": ""Columns to add"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Google Boolean Search"": {
      ""main"": [
        [
          {
            ""node"": ""Extracts all linkedin urls from the google http response"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Add columns to new sheet"": {
      ""main"": [
        [
          {
            ""node"": ""set page number for google search"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When chat message received"": {
      ""main"": [
        [
          {
            ""node"": ""Generate a Boolean Search String"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""If desired results not reached"": {
      ""main"": [
        [
          {
            ""node"": ""Wait"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        []
      ]
    },
    ""Appends the results to the sheet"": {
      ""main"": [
        [
          {
            ""node"": ""Adds 10 to start - Go to next page"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Generate a Boolean Search String"": {
      ""main"": [
        [
          {
            ""node"": ""Create a new sheet"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""set page number for google search"": {
      ""main"": [
        [
          {
            ""node"": ""If desired results not reached"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Adds 10 to start - Go to next page"": {
      ""main"": [
        [
          {
            ""node"": ""If desired results not reached"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extracts all linkedin urls from the google http response"": {
      ""main"": [
        [
          {
            ""node"": ""Appends the results to the sheet"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Serve Inspirational Quotes On-Demand via Webhook using ZenQuotes API,"{
  ""id"": ""VQKwOBOL659w93wt"",
  ""meta"": {
    ""instanceId"": ""3fed23de697c60307f3b4f5caeafbeffabaf7bbd62c1b20ae70d5faf5a9806b4""
  },
  ""name"": ""Serve Inspirational Quotes On-Demand via Webhook using ZenQuotes API"",
  ""tags"": [
    {
      ""id"": ""F1KjxL3SjfvVqZqo"",
      ""name"": ""training-n8n"",
      ""createdAt"": ""2025-04-29T10:40:13.332Z"",
      ""updatedAt"": ""2025-04-29T10:40:13.332Z""
    }
  ],
  ""nodes"": [
    {
      ""id"": ""88e43bad-07dc-4742-b3c6-fe70059d209f"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -280,
        -240
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 280,
        ""height"": 200,
        ""content"": ""## Beginner friendly workflow on how to work with API and format the data into your desire output""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""65d7b23d-b919-4dc3-b16e-d60565d5cda5"",
      ""name"": ""Get Random Quote from ZenQuotes"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        320,
        80
      ],
      ""parameters"": {
        ""url"": ""https://zenquotes.io/api/random"",
        ""options"": {},
        ""sendQuery"": true,
        ""queryParameters"": {
          ""parameters"": [
            {
              ""name"": ""count"",
              ""value"": ""5""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""c5ad35dc-62b6-488f-a501-d834e538dbf9"",
      ""name"": ""Webhook"",
      ""type"": ""n8n-nodes-base.webhook"",
      ""position"": [
        0,
        80
      ],
      ""webhookId"": ""c376e35b-80f3-4086-abec-d2c5a4501fb3"",
      ""parameters"": {
        ""path"": ""c376e35b-80f3-4086-abec-d2c5a4501fb3"",
        ""options"": {}
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""3a5da469-919c-411e-a5e9-a95a2178b01a"",
      ""name"": ""Send response"",
      ""type"": ""n8n-nodes-base.respondToWebhook"",
      ""position"": [
        940,
        80
      ],
      ""parameters"": {
        ""options"": {},
        ""respondWith"": ""json"",
        ""responseBody"": ""{\n  \""quote\"": \""{{ $json.quotes }}\""\n}""
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""cc390845-9e73-4761-92aa-5bbbff906e77"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -80,
        40
      ],
      ""parameters"": {
        ""width"": 260,
        ""height"": 180,
        ""content"": ""### Receives incoming requests""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4996be52-267c-4900-87c1-3d6654ef0938"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        220,
        40
      ],
      ""parameters"": {
        ""color"": 2,
        ""width"": 300,
        ""height"": 220,
        ""content"": ""### Fetches random quotes""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""94532c78-d55e-4672-b984-385cd2e04b5c"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        560,
        40
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 260,
        ""height"": 200,
        ""content"": ""### Formats into ‘quote – author’ strings""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""83a09872-7da8-47ed-8b3d-e81b52d75050"",
      ""name"": ""Format data"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        640,
        80
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""6b646b1c-914b-437e-ba5e-5a1fbfebbde9"",
              ""name"": ""quotes"",
              ""type"": ""string"",
              ""value"": ""=\""{{ $json.q }}\"" - {{ $json.a }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""978227eb-2963-4dda-8341-fe75c2376506"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        860,
        40
      ],
      ""parameters"": {
        ""width"": 260,
        ""height"": 200,
        ""content"": ""### Sends back JSON array""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""79051d11-19e3-4326-bf6e-0ac0f81ffc43"",
  ""connections"": {
    ""Webhook"": {
      ""main"": [
        [
          {
            ""node"": ""Get Random Quote from ZenQuotes"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Format data"": {
      ""main"": [
        [
          {
            ""node"": ""Send response"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get Random Quote from ZenQuotes"": {
      ""main"": [
        [
          {
            ""node"": ""Format data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
"Indeed Data Scraper & Summarization with Airtable, Bright Data & Google Gemini","{
  ""id"": ""TTj6BiN7bQKTa6FM"",
  ""meta"": {
    ""instanceId"": ""885b4fb4a6a9c2cb5621429a7b972df0d05bb724c20ac7dac7171b62f1c7ef40"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Indeed Company Data Scraper & Summarization with Airtable, Bright Data and Google Gemini"",
  ""tags"": [
    {
      ""id"": ""Kujft2FOjmOVQAmJ"",
      ""name"": ""Engineering"",
      ""createdAt"": ""2025-04-09T01:31:00.558Z"",
      ""updatedAt"": ""2025-04-09T01:31:00.558Z""
    },
    {
      ""id"": ""ddPkw7Hg5dZhQu2w"",
      ""name"": ""AI"",
      ""createdAt"": ""2025-04-13T05:38:08.053Z"",
      ""updatedAt"": ""2025-04-13T05:38:08.053Z""
    },
    {
      ""id"": ""rKOa98eAi3IETrLu"",
      ""name"": ""HR"",
      ""createdAt"": ""2025-04-13T04:59:30.580Z"",
      ""updatedAt"": ""2025-04-13T04:59:30.580Z""
    }
  ],
  ""nodes"": [
    {
      ""id"": ""390ebd32-6ce4-4894-9b4f-7b376db5b724"",
      ""name"": ""When clicking ‘Test workflow’"",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        -220,
        -545
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""8ba6b208-b4ad-443c-8b24-c51b3b5ad880"",
      ""name"": ""Google Gemini Chat Model For Summarization"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""position"": [
        1784,
        -300
      ],
      ""parameters"": {
        ""options"": {},
        ""modelName"": ""models/gemini-2.0-flash-exp""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""YeO7dHZnuGBVQKVZ"",
          ""name"": ""Google Gemini(PaLM) Api account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""394a7291-618a-42f0-8e1b-18ed7c8496c3"",
      ""name"": ""Webhook HTTP Request"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolHttpRequest"",
      ""position"": [
        2280,
        -160
      ],
      ""parameters"": {
        ""url"": ""https://webhook.site/daf9d591-a130-4010-b1d3-0c66f8fcf467"",
        ""method"": ""POST"",
        ""sendBody"": true,
        ""parametersBody"": {
          ""values"": [
            {
              ""name"": ""search_summary"",
              ""value"": ""={{ $json.response.text }}"",
              ""valueProvider"": ""fieldValue""
            },
            {
              ""name"": ""search_result""
            }
          ]
        },
        ""toolDescription"": ""Extract the response and format a structured JSON response""
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""4e1352a5-0fa6-4fee-a93d-cc0a0a4fdd6f"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -240,
        -1080
      ],
      ""parameters"": {
        ""width"": 400,
        ""height"": 320,
        ""content"": ""## Note\n\nDeals with the Company web scraping by utilizing Bright Data Web Unlocker Product.\n\nThe Basic LLM Chain, Summarization and AI Agent are being used to demonstrate the usage of the n8n AI capabilities.\n\n**Please make sure to connect to Airtable with the Base Table as \""Indeed\"" and the default Table1 filled with the indeed links to scrape. \n\nAlso make sure to update the Webhook Notification URL**""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""bf184d27-ed62-44fa-bed2-65a1f703179e"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        720,
        -1080
      ],
      ""parameters"": {
        ""width"": 480,
        ""height"": 320,
        ""content"": ""## LLM Usages\n\nGoogle Gemini Flash Exp model is being used.\n\nBasic LLM Chain Data Extractor.\n\nSummarization Chain is being used for the summarization of search results.\n\nThe AI Agent formats the search result and pushes it to the Webhook via HTTP Request""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""78f32ce2-1e79-4f3e-8561-4a5e07d88696"",
      ""name"": ""Perform Indeed Web Request"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1100,
        -670
      ],
      ""parameters"": {
        ""url"": ""https://api.brightdata.com/request"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""sendHeaders"": true,
        ""authentication"": ""genericCredentialType"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""zone"",
              ""value"": ""={{ $('Set Bright Data Zone').item.json.zone }}""
            },
            {
              ""name"": ""url"",
              ""value"": ""=https://www.indeed.com/cmp/{{ encodeURI($('Airtable').item.json.Link) }}?product=unlocker&method=api""
            },
            {
              ""name"": ""format"",
              ""value"": ""raw""
            },
            {
              ""name"": ""data_format"",
              ""value"": ""markdown""
            }
          ]
        },
        ""genericAuthType"": ""httpHeaderAuth"",
        ""headerParameters"": {
          ""parameters"": [
            {}
          ]
        }
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""kdbqXuxIR8qIxF7y"",
          ""name"": ""Header Auth account""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""3738e714-59aa-4b0b-876c-c2f15a1d7479"",
      ""name"": ""Indeed Expert AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        2072,
        -395
      ],
      ""parameters"": {
        ""text"": ""=You are an Indeed Expert. You need to format the search result  and push it to the Webhook via HTTP Request. Here is the search result - {{ $('Markdown to Textual Data Extractor').item.json.text }}"",
        ""options"": {},
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""47e96e87-8ac7-43d7-af6f-b52404be4eec"",
      ""name"": ""Google Gemini Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""position"": [
        1408,
        -300
      ],
      ""parameters"": {
        ""options"": {},
        ""modelName"": ""models/gemini-2.0-flash-exp""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""YeO7dHZnuGBVQKVZ"",
          ""name"": ""Google Gemini(PaLM) Api account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b2b8f3f6-ef13-47ff-8e6e-4c262b352b2e"",
      ""name"": ""Markdown to Textual Data Extractor"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        1320,
        -520
      ],
      ""parameters"": {
        ""text"": ""=You need to analyze the below markdown and convert to textual data.\n\n{{ $json.data }}"",
        ""messages"": {
          ""messageValues"": [
            {
              ""message"": ""You are a markdown expert""
            }
          ]
        },
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.6
    },
    {
      ""id"": ""791d5991-0baa-4aff-8dbe-465c1335889f"",
      ""name"": ""Convert Markdown to HTML"",
      ""type"": ""n8n-nodes-base.markdown"",
      ""position"": [
        1398,
        -820
      ],
      ""parameters"": {
        ""mode"": ""markdownToHtml"",
        ""options"": {},
        ""markdown"": ""={{ $json.data }}""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""844c49a6-edd0-4a63-944e-44310e39ab09"",
      ""name"": ""Initiate a Webhook Notification for Markdown to HTML Response"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1774,
        -820
      ],
      ""parameters"": {
        ""url"": ""https://webhook.site/daf9d591-a130-4010-b1d3-0c66f8fcf467"",
        ""options"": {},
        ""sendBody"": true,
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""html_response"",
              ""value"": ""={{ $json.data }}""
            }
          ]
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""cb7b971d-17a9-4b49-8807-7a9d4f7550d2"",
      ""name"": ""Set Bright Data Zone"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        0,
        -545
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""4e7ee31d-da89-422f-8079-2ff2d357a0ba"",
              ""name"": ""zone"",
              ""type"": ""string"",
              ""value"": ""web_unlocker1""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""47702b8b-5722-4fe0-93fc-950470b043c8"",
      ""name"": ""Loop Over Items"",
      ""type"": ""n8n-nodes-base.splitInBatches"",
      ""position"": [
        440,
        -545
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""cb42b109-0950-45cb-ae74-3a87b724f6fc"",
      ""name"": ""Airtable"",
      ""type"": ""n8n-nodes-base.airtable"",
      ""position"": [
        220,
        -545
      ],
      ""parameters"": {
        ""base"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""appHnxLQRVHbCzDyj"",
          ""cachedResultUrl"": ""https://airtable.com/appHnxLQRVHbCzDyj"",
          ""cachedResultName"": ""Indeed""
        },
        ""table"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""tblS1f5XWVMfdyjOz"",
          ""cachedResultUrl"": ""https://airtable.com/appHnxLQRVHbCzDyj/tblS1f5XWVMfdyjOz"",
          ""cachedResultName"": ""Table 1""
        },
        ""options"": {},
        ""operation"": ""search""
      },
      ""credentials"": {
        ""airtableTokenApi"": {
          ""id"": ""yXTVs1Lgka4VUTCB"",
          ""name"": ""Airtable Personal Access Token account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""faf3d158-e625-4829-8e90-2549d747e674"",
      ""name"": ""If Link field is not empty"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        880,
        -670
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""42eae1de-1d71-4418-862d-9cb9f8fb44e6"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notEmpty"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.Link }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""d81941a5-b267-4cac-9134-42caac9948ef"",
      ""name"": ""Wait"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        660,
        -670
      ],
      ""webhookId"": ""f348d66e-ee91-40d4-8e52-83d8d3ca32f2"",
      ""parameters"": {
        ""amount"": 10
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""6903a767-ab81-4a01-8b98-914afab45c63"",
      ""name"": ""Indeed Summarizer"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainSummarization"",
      ""position"": [
        1696,
        -520
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""1cd297e9-30b9-4cb3-b2b4-96bc1e3e9d95"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        200,
        -1080
      ],
      ""parameters"": {
        ""width"": 480,
        ""height"": 320,
        ""content"": ""## Airtable Table Data Sample \n[\n  {\n    \""id\"": \""recCDNhVfdlc97cgf\"",\n    \""createdTime\"": \""2025-04-14T02:55:31.000Z\"",\n    \""Tab\"": \""Starbucks\"",\n    \""Link\"": \""https://www.indeed.com/cmp/Starbucks\""\n  },\n  {\n    \""id\"": \""recR7VEJrwXX7XjVl\"",\n    \""createdTime\"": \""2025-04-14T02:55:31.000Z\"",\n    \""Tab\"": \""BrightData\"",\n    \""Link\"": \""https://www.indeed.com/cmp/bright-data\""\n  }\n]""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d125e31f-845b-498e-9b3c-e5e8c14ed166"",
      ""name"": ""Google Gemini Chat Model for AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""position"": [
        2080,
        -160
      ],
      ""parameters"": {
        ""options"": {},
        ""modelName"": ""models/gemini-2.0-flash-exp""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""YeO7dHZnuGBVQKVZ"",
          ""name"": ""Google Gemini(PaLM) Api account""
        }
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""98d3cc1a-123e-468e-814f-7a96d38b8e36"",
  ""connections"": {
    ""Wait"": {
      ""main"": [
        [
          {
            ""node"": ""If Link field is not empty"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Airtable"": {
      ""main"": [
        [
          {
            ""node"": ""Loop Over Items"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Loop Over Items"": {
      ""main"": [
        [],
        [
          {
            ""node"": ""Wait"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Indeed Summarizer"": {
      ""main"": [
        [
          {
            ""node"": ""Indeed Expert AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Set Bright Data Zone"": {
      ""main"": [
        [
          {
            ""node"": ""Airtable"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Webhook HTTP Request"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""Indeed Expert AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Indeed Expert AI Agent"": {
      ""main"": [
        [
          {
            ""node"": ""Loop Over Items"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Convert Markdown to HTML"": {
      ""main"": [
        [
          {
            ""node"": ""Initiate a Webhook Notification for Markdown to HTML Response"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Google Gemini Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Markdown to Textual Data Extractor"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""If Link field is not empty"": {
      ""main"": [
        [
          {
            ""node"": ""Perform Indeed Web Request"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Perform Indeed Web Request"": {
      ""main"": [
        [
          {
            ""node"": ""Markdown to Textual Data Extractor"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Convert Markdown to HTML"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When clicking ‘Test workflow’"": {
      ""main"": [
        [
          {
            ""node"": ""Set Bright Data Zone"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Markdown to Textual Data Extractor"": {
      ""main"": [
        [
          {
            ""node"": ""Indeed Summarizer"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Google Gemini Chat Model for AI Agent"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Indeed Expert AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Google Gemini Chat Model For Summarization"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Indeed Summarizer"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
WebSecScan: AI-Powered Website Security Auditor,"{
  ""meta"": {
    ""instanceId"": ""c2589fa234defe76e8a1321c3a7d0a73579d0120d64d927e88f5e3be584ae8d4""
  },
  ""nodes"": [
    {
      ""id"": ""634f2fc5-0ba7-42ad-bdf5-ade3415dd288"",
      ""name"": ""Landing Page Url"",
      ""type"": ""n8n-nodes-base.formTrigger"",
      ""position"": [
        -200,
        580
      ],
      ""webhookId"": ""afe067a5-4878-4c9d-b746-691f77190f54"",
      ""parameters"": {
        ""options"": {},
        ""formTitle"": ""Website Security Scanner"",
        ""formFields"": {
          ""values"": [
            {
              ""fieldLabel"": ""Landing Page Url"",
              ""placeholder"": ""https://example.com"",
              ""requiredField"": true
            }
          ]
        },
        ""formDescription"": ""Check your website for security vulnerabilities and get a detailed report""
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""6cee63ca-d0f6-444a-b882-22da1a9fd70c"",
      ""name"": ""Scrape Website"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        0,
        580
      ],
      ""parameters"": {
        ""url"": ""={{ $json['Landing Page Url'] }}"",
        ""options"": {
          ""redirect"": {
            ""redirect"": {
              ""maxRedirects"": 5
            }
          },
          ""response"": {
            ""response"": {
              ""fullResponse"": true,
              ""responseFormat"": ""text""
            }
          }
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""0d5d1e76-e627-4565-a1ee-6a610f4b2028"",
      ""name"": ""OpenAI Headers Analysis"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        340,
        600
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini"",
          ""cachedResultName"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""yZ0AIg9abV8HJadB"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""04427ef7-515d-4a1a-88d2-ade10aeefc87"",
      ""name"": ""OpenAI Content Analysis"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        340,
        980
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini"",
          ""cachedResultName"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""yZ0AIg9abV8HJadB"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""d4ee4db8-aa04-4068-9b97-d16acf98c027"",
      ""name"": ""Security Vulnerabilities Audit"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        360,
        780
      ],
      ""parameters"": {
        ""text"": ""=You are an elite cybersecurity expert specializing in web application security.\n\nIn this task, you will analyze the HTML and visible content of the webpage to identify potential security vulnerabilities.\n\nAudit Structure\nYou will review all client-side security aspects of the page and present your findings in three sections:\n- Critical Vulnerabilities – Issues that could lead to immediate compromise\n- Information Leakage – Sensitive data exposed in page source\n- Client-Side Weaknesses – JavaScript vulnerabilities, XSS opportunities, etc.\n\nFor each issue found, provide:\n1. A clear description of the vulnerability\n2. The potential impact\n3. A specific recommendation to fix it\n\nIf you find no issues in a particular section, explicitly state that no issues were found in that category.\n\nEnsure the output is properly formatted, clean, and highly readable. Focus only on issues that can be detected from the client-side code.\n\nHere is the content of the webpage: {{ $json.data }}"",
        ""options"": {},
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.7
    },
    {
      ""id"": ""c9702f2b-845b-464d-9c32-3d5be308ef77"",
      ""name"": ""Security Configuration Audit"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        360,
        380
      ],
      ""parameters"": {
        ""text"": ""=You are an elite web security expert specializing in secure configurations.\n\nIn this task, you will analyze the HTTP headers, cookies, and overall configuration of a webpage to identify security misconfigurations.\n\nAudit Structure\nYou will begin by listing ALL security headers that ARE present and properly configured.\n\nBe very clear and explicit about which headers are present and which are missing. For each header, clearly state whether it is present or missing, and if present, what its value is.\n\nThen, present your findings in three sections:\n- Header Security – Missing or misconfigured security headers\n- Cookie Security – Insecure cookie configurations\n- Content Security – CSP issues, mixed content, etc.\n\nFor each finding, provide:\n1. A clear description of the misconfiguration\n2. The security implications\n3. The recommended secure configuration with example code\n\nIf you find no issues in a particular section, explicitly state that no issues were found.\n\nUse proper formatting with code blocks for configuration examples. Only include issues that can be detected from client-side inspection.\nHere are the response headers: {{ $json.formattedHeaders }}\n\nPlease Respond like this\n\n### [any section heading that includes \""Headers]\n\n1. **[Header Title]**\n   - **Present?** Yes/No\n   - **Value:** `actual-header-value`\n"",
        ""options"": {},
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.7
    },
    {
      ""id"": ""3b43be75-c35c-44e4-8ecc-a29c48e3625c"",
      ""name"": ""Merge Security Results"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        860,
        580
      ],
      ""parameters"": {},
      ""typeVersion"": 3,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""da134256-d7fa-4a3f-ba24-acc320a944a2"",
      ""name"": ""Aggregate Audit Results"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        1060,
        580
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldsToAggregate"": {
          ""fieldToAggregate"": [
            {
              ""fieldToAggregate"": ""output""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""aef1da93-0b01-4a7f-9439-1f74c2af12d6"",
      ""name"": ""Process Audit Results"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        1240,
        580
      ],
      ""parameters"": {
        ""jsCode"": ""// ✅ Updated extractSecurityHeaders and related logic remains unchanged\n\nfunction extractSecurityHeaders(rawHeaders = {}, configOutput = '') {\n  const securityHeaders = [\n    'Content-Security-Policy',\n    'Strict-Transport-Security',\n    'X-Content-Type-Options',\n    'X-Frame-Options',\n    'Referrer-Policy',\n    'Permissions-Policy',\n    'X-XSS-Protection',\n    'Cross-Origin-Embedder-Policy',\n    'Cross-Origin-Opener-Policy',\n    'X-Permitted-Cross-Domain-Policies'\n  ];\n\n  const headerStatus = {};\n  for (const header of securityHeaders) {\n    headerStatus[header] = { present: false, value: '' };\n  }\n\n  for (const header in rawHeaders) {\n    const norm = header.trim().toLowerCase();\n    for (const standard of securityHeaders) {\n      if (norm === standard.toLowerCase()) {\n        headerStatus[standard].present = true;\n        headerStatus[standard].value = rawHeaders[header];\n      }\n    }\n  }\n\n  const presentSection = configOutput.match(/(?:###|##|\\*\\*)[^\\n]*?\\bheaders?\\b[\\s\\S]*?(?=###|##|\\*\\*|$)/i);\n  if (presentSection) {\n    const section = presentSection[0];\n    for (const header of securityHeaders) {\n      const title = header.replace(/-/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase());\n      const regex = new RegExp(`\\\\*\\\\*${title}\\\\*\\\\*[^\\\\n]*?\\\\*\\\\*Present\\\\?\\\\*\\\\*\\\\s*Yes[^\\\\n]*?\\\\*\\\\*Value:\\\\*\\\\*\\\\s*\\`([^\\\\\\`]+)\\``, 'is');\n      const match = section.match(regex);\n      if (match && match[1]) {\n        headerStatus[header].present = true;\n        headerStatus[header].value = match[1].trim();\n      }\n    }\n  }\n\n  return headerStatus;\n}\n\nfunction hasUnsafeInline(value) {\n  return value && value.includes('unsafe-inline');\n}\n\nfunction determineGrade(headerStatus) {\n  const critical = [\n    'Content-Security-Policy',\n    'Strict-Transport-Security',\n    'X-Content-Type-Options',\n    'X-Frame-Options'\n  ];\n  const important = ['Referrer-Policy', 'Permissions-Policy'];\n  const additional = [\n    'X-XSS-Protection',\n    'Cross-Origin-Embedder-Policy',\n    'Cross-Origin-Opener-Policy',\n    'X-Permitted-Cross-Domain-Policies'\n  ];\n\n  let criticalCount = 0;\n  let importantCount = 0;\n  let hasCSPIssue = false;\n\n  for (const h of critical) {\n    if (headerStatus[h]?.present) {\n      criticalCount++;\n      if (h === 'Content-Security-Policy' && hasUnsafeInline(headerStatus[h].value)) {\n        hasCSPIssue = true;\n      }\n    }\n  }\n\n  for (const h of important) {\n    if (headerStatus[h]?.present) importantCount++;\n  }\n\n  if (criticalCount === critical.length) {\n    if (importantCount === important.length) return hasCSPIssue ? 'A-' : 'A+';\n    if (importantCount >= 1) return hasCSPIssue ? 'B+' : 'A-';\n    return hasCSPIssue ? 'B' : 'B+';\n  } else if (criticalCount >= critical.length - 1) {\n    return importantCount >= 1 ? 'B' : 'C+';\n  } else if (criticalCount >= 2) {\n    return 'C';\n  } else if (criticalCount >= 1) {\n    return 'D';\n  } else {\n    return 'F';\n  }\n}\n\nfunction formatHeadersForDisplay(headerStatus) {\n  const present = Object.keys(headerStatus).filter(h => headerStatus[h].present);\n  return present.length > 0 ? present.join(', ') : 'No security headers detected';\n}\n\nfunction processSecurityHeaders(items) {\n  try {\n    const json = items[0].json || items[0];\n\n    // ⛏️ Try to grab from originalHeaders if available\n    const rawHeaders =\n      json?.originalHeaders ||\n      $('Extract Headers for Debug')?.first()?.json?.originalHeaders ||\n      json?.headers ||\n      {};\n\n    const configOutput = json.configOutput || json.output?.[0] || '';\n    const vulnOutput = json.vulnOutput || json.output?.[1] || '';\n\n    const headerStatus = extractSecurityHeaders(rawHeaders, configOutput);\n    const presentHeaders = formatHeadersForDisplay(headerStatus);\n    const grade = determineGrade(headerStatus);\n\n    const timestamp = new Date().toLocaleString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n\n    const url =\n      json?.formValues?.url ||\n      json?.['Landing Page Url'] ||\n      $('Landing Page Url')?.first()?.json?.['Landing Page Url'] ||\n      json?.Landing_Page_Url ||\n      json?.landingPageUrl ||\n      json?.url ||\n      'https://example.com';\n\n    return [\n      {\n        json: {\n          ...json,\n          auditData: {\n            url,\n            timestamp,\n            grade,\n            criticalCount:\n              headerStatus['Content-Security-Policy'].present &&\n              hasUnsafeInline(headerStatus['Content-Security-Policy'].value)\n                ? 1\n                : 0,\n            warningCount: Object.keys(headerStatus).filter(\n              h =>\n                !headerStatus[h].present &&\n                !['Strict-Transport-Security', 'Content-Security-Policy'].includes(h)\n            ).length,\n            presentHeaders,\n            configOutput,\n            vulnOutput,\n            headerStatus,\n            originalHeaders: rawHeaders\n          }\n        }\n      }\n    ];\n  } catch (err) {\n    return [{ json: { ...items[0].json, error: err.message } }];\n  }\n}\n\nreturn processSecurityHeaders(items);\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""ced29b26-474c-4d62-808a-3284103c9d60"",
      ""name"": ""Send Security Report"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        1580,
        580
      ],
      ""webhookId"": ""2979e4dc-1689-447e-8cd4-eb907b4eedf4"",
      ""parameters"": {
        ""sendTo"": ""=example@here.com"",
        ""message"": ""={{ $json.emailHtml }}"",
        ""options"": {},
        ""subject"": ""=Website Security Audit - {{ $json.auditData.url }}""
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""9CEpbF4jIWb2OETv"",
          ""name"": ""Gmail account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""918c0fc4-2f02-4594-bfc9-e36035f2d802"",
      ""name"": ""Sticky Note - Setup Instructions"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -820,
        400
      ],
      ""parameters"": {
        ""width"": 500,
        ""height"": 440,
        ""content"": ""## Quick Setup Guide\n\n1. **Add OpenAI API Credentials**\n   - Go to Settings → Credentials → New → OpenAI API\n   - Enter your API key from platform.openai.com\n\n2. **Add Gmail Credentials**\n   - Go to Settings → Credentials → New → Gmail OAuth2 API\n   - Complete the OAuth setup process\n\n3. **Update Email Configuration**\n   - Open the 'Send Security Report' node\n   - Change the recipient email address from the default\n\n4. **Activate and Deploy Workflow**\n   - Click 'Active' toggle in the top right\n   - Copy the form URL to share with others or use yourself""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6e31b9b8-ae02-4da4-a75e-5d784b210c64"",
      ""name"": ""Sticky Note - OpenAI Analysis"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        300,
        120
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 420,
        ""height"": 240,
        ""content"": ""## OpenAI Security Analysis\n\n- Add your OpenAI credentials (required)\n- Using GPT-4o models provides more detailed security analysis\n- Analyzes for XSS, information disclosure, CSRF, and more\n- Each agent scans different aspects of website security\n- Consider upgrading to GPT-4o (not mini) for production use""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""590b1f1c-024d-4002-a8eb-d9dc81528f89"",
      ""name"": ""Sticky Note - Email Configuration"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1480,
        220
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 360,
        ""height"": 200,
        ""content"": ""## Send Security Report\n\n- Connects securely to Gmail for sending detailed reports\n- Report is sent as HTML formatted email\n- Subject line includes the scanned URL\n- Requires Gmail OAuth credentials to be set up""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""dc6223f8-a98c-497a-97c9-af39e80e6d66"",
      ""name"": ""Sticky Note - Audit Process"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -200,
        780
      ],
      ""parameters"": {
        ""color"": 2,
        ""width"": 420,
        ""height"": 300,
        ""content"": ""## Security Audit Process\n\n- This workflow performs two parallel security analyses\n- Top path: Checks headers, cookies, and security configurations\n- Bottom path: Analyzes HTML/JavaScript for client-side vulnerabilities\n- Results are merged and formatted into a comprehensive report\n- Analysis is non-invasive and only examines client-side content""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""cbda16d4-f1f4-491c-b38c-43d7544e129b"",
      ""name"": ""Sticky Note - How To Use"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -240,
        240
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 400,
        ""height"": 280,
        ""content"": ""## How To Use This Workflow\n\n1. **Deploy the workflow** and activate it\n2. **Access the form** via the provided URL\n3. **Enter any website URL** to scan (must include http:// or https://)\n4. **Submit the form** to trigger the analysis\n5. **Check your email** for the detailed security report\n6. **Share the results** with your development team to implement fixes""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4859416f-4de3-43ea-9461-3ead8a38db6e"",
      ""name"": ""Sticky Note - Report Formatting"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1160,
        220
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 300,
        ""height"": 280,
        ""content"": ""## Report Formatting\n\n- Creates beautiful, professional HTML email report\n- Visual grade indicator (A-F) based on findings\n- Includes count of critical issues and warnings\n- Color-coded sections for easy readability\n- Mobile-friendly responsive design""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a02db4c7-2cad-41ff-b5ad-e1b19604a699"",
      ""name"": ""Sticky Note - Results Processing"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        840,
        240
      ],
      ""parameters"": {
        ""width"": 300,
        ""height"": 240,
        ""content"": ""## Results Processing\n\n- Analyzes AI output to determine security grade\n- Counts critical issues and warnings\n- Extracts present security headers\n- Prepares data for the email report template\n- Generates timestamp for the report""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""41b834c8-62f7-47e7-9d9d-e0e1244faecb"",
      ""name"": ""Extract Headers for Debug"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        200,
        460
      ],
      ""parameters"": {
        ""jsCode"": ""// Format headers into a readable string\nlet formattedHeaders = '';\nif (items[0].json.headers) {\n  for (const key in items[0].json.headers) {\n    formattedHeaders += `${key}: ${items[0].json.headers[key]}\\n`;\n  }\n}\n\n// Return both the original data and the formatted headers\nreturn [{\n  json: {\n    ...items[0].json,\n    formattedHeaders: formattedHeaders,\n    originalHeaders: items[0].json.headers // Keep the original headers too\n  }\n}];""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""0b76b396-fc96-41fc-a095-30971dd88271"",
      ""name"": ""convert to HTML"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        1400,
        580
      ],
      ""parameters"": {
        ""jsCode"": ""// Create a direct HTML template with improved styling\nconst auditData = items[0].json.auditData;\n\nfunction formatConfigurationIssues() {\n  if (!auditData.configOutput || auditData.configOutput.trim() === '') {\n    return '<p>No specific configuration issues detected.</p>';\n  }\n\n  try {\n    const config = auditData.configOutput.trim();\n    let html = '';\n    const renderedKeys = new Set();\n\n    const renderBlock = (title, description, impact, recommendation) => `\n      <div style=\""border-left: 4px solid #3498DB; padding: 10px; margin-bottom: 15px;\"">\n        <div style=\""font-weight: bold; color: #3498DB;\"">${title}</div>\n        ${description ? `<div style=\""margin-top: 5px;\"">${description}</div>` : ''}\n        ${impact ? `<div style=\""margin-top: 5px; font-style: italic; color: #7F8C8D;\"">Impact: ${impact}</div>` : ''}\n        ${recommendation ? `<div style=\""margin-top: 5px;\""><strong>Recommendation:</strong></div>\n          <pre style=\""background-color: #f8f9fa; padding: 10px; border-radius: 5px; overflow-x: auto; font-family: monospace;\"">${recommendation}</pre>` : ''}\n      </div>`;\n\n    const sections = config.split(/(?=^###\\s+)/gm).filter(Boolean);\n\n    for (const section of sections) {\n      const sectionTitleMatch = section.match(/^###\\s+(.*)/);\n      const sectionTitle = sectionTitleMatch?.[1]?.trim() || 'Unnamed Section';\n      const sectionKey = sectionTitle.toLowerCase();\n\n      // Skip \""no issues found\"" sections\n      if (/no issues? (found|were found)/i.test(section)) continue;\n\n      const lines = section.split(/\\n+/).filter(line => line.trim() !== '');\n\n      let currentTitle = '';\n      let description = '';\n      let impact = '';\n      let recommendation = '';\n\n      for (let i = 0; i < lines.length; i++) {\n        const line = lines[i].trim();\n\n        // Start of a new numbered or bolded issue\n        const numberedTitle = line.match(/^\\d+\\.\\s+\\*\\*(.*?)\\*\\*/);\n        const bulletTitle = line.match(/^\\*\\*(.*?)\\*\\*/);\n\n        if (numberedTitle || (!currentTitle && bulletTitle)) {\n          // Flush last block\n          if (currentTitle && !renderedKeys.has(`${sectionKey}::${currentTitle.toLowerCase()}`)) {\n            html += renderBlock(currentTitle, description, impact, recommendation);\n            renderedKeys.add(`${sectionKey}::${currentTitle.toLowerCase()}`);\n          }\n\n          currentTitle = (numberedTitle || bulletTitle)[1].trim();\n          description = '';\n          impact = '';\n          recommendation = '';\n          continue;\n        }\n\n        const valueMatch = line.match(/- \\*\\*Value:\\*\\*\\s*`?(.*?)`?$/i);\n        const presentMatch = line.match(/- \\*\\*Present\\?\\*\\*.*?(Yes|No)/i);\n        const descMatch = line.match(/- \\*\\*Description:\\*\\*\\s*(.*)/i);\n        const impactMatch = line.match(/- \\*\\*(?:Impact|Security Implication|Potential Impact):\\*\\*\\s*(.*)/i);\n        const recMatch = line.match(/```(?:\\w*)?\\n([\\s\\S]*?)```/i);\n\n        if (descMatch) {\n          description = descMatch[1].trim();\n        } else if (valueMatch || presentMatch) {\n          const present = presentMatch?.[1]?.trim() || 'Unknown';\n          const value = valueMatch?.[1]?.trim() || '[Not provided]';\n          description = `This header is ${present.toLowerCase()}. Value: ${value}.`;\n        }\n\n        if (impactMatch) {\n          impact = impactMatch[1].trim();\n        }\n\n        if (recMatch) {\n          recommendation = recMatch[1].trim();\n        }\n      }\n\n      // Final block in section\n      if (currentTitle && !renderedKeys.has(`${sectionKey}::${currentTitle.toLowerCase()}`)) {\n        html += renderBlock(currentTitle, description, impact, recommendation);\n        renderedKeys.add(`${sectionKey}::${currentTitle.toLowerCase()}`);\n      }\n    }\n\n    return html || '<p>No configuration issues detected.</p>';\n  } catch (e) {\n    console.error('Error in formatConfigurationIssues:', e);\n    return `<p>Error processing configuration issues: ${e.message}</p>`;\n  }\n}\n\n\n\n// Create header badge HTML\nfunction createHeaderBadge(headerName, isWarning = false) {\n  const isPresent = auditData.headerStatus && \n                   auditData.headerStatus[headerName] && \n                   auditData.headerStatus[headerName].present;\n  \n  const color = isWarning && isPresent ? \""#F39C12\"" : (isPresent ? \""#27AE60\"" : \""#E74C3C\"");\n  const icon = isPresent ? \""✓\"" : \""✗\"";\n  \n  return `<span style=\""display: inline-block; margin: 2px; padding: 4px 8px; background-color: ${color}; color: white; border-radius: 4px; font-size: 12px;\"">${icon} ${headerName}</span>`;\n}\n\n// Format warnings section\nfunction formatWarningsSection() {\n  if (!auditData.warningCount || auditData.warningCount === 0 || !auditData.headerStatus) {\n    return '<p>No warnings detected.</p>';\n  }\n\n  const csp = Object.entries(auditData.headerStatus).find(([k]) => k.toLowerCase() === 'content-security-policy');\n  const hsts = Object.entries(auditData.headerStatus).find(([k]) => k.toLowerCase() === 'strict-transport-security');\n  const xss = Object.entries(auditData.headerStatus).find(([k]) => k.toLowerCase() === 'x-xss-protection');\n\n  let warnings = '';\n\n  if (csp && csp[1].value && csp[1].value.includes('unsafe-inline')) {\n    warnings += `\n      <div style=\""margin-top: 15px;\"">\n        <div style=\""border-left: 4px solid #F39C12; padding: 10px;\"">\n          <strong style=\""color: #F39C12;\"">Content-Security-Policy: unsafe-inline</strong>\n          <p>The use of 'unsafe-inline' allows potentially malicious scripts to execute.</p>\n        </div>\n      </div>`;\n  }\n\n  if (hsts && hsts[1].value) {\n    const match = hsts[1].value.match(/max-age=(\\d+)/);\n    const age = match ? parseInt(match[1]) : 0;\n    if (age < 2592000) {\n      warnings += `\n        <div style=\""margin-top: 15px;\"">\n          <div style=\""border-left: 4px solid #F39C12; padding: 10px;\"">\n            <strong style=\""color: #F39C12;\"">Strict-Transport-Security</strong>\n            <p>max-age is too low (${age}). Should be at least 2592000 (30 days).</p>\n          </div>\n        </div>`;\n    }\n  }\n\n  if (xss && !xss[1].present) {\n    warnings += `\n      <div style=\""margin-top: 15px;\"">\n        <div style=\""border-left: 4px solid #F39C12; padding: 10px;\"">\n          <strong style=\""color: #F39C12;\"">Missing X-XSS-Protection</strong>\n          <p>This header enables the browser's XSS filter. Lack of it increases XSS risks.</p>\n        </div>\n      </div>`;\n  }\n\n  if (!warnings) {\n    warnings = `\n      <div style=\""margin-top: 15px;\"">\n        <div style=\""border-left: 4px solid #F39C12; padding: 10px;\"">\n          <strong style=\""color: #F39C12;\"">${auditData.warningCount} warnings detected</strong>\n          <p>See the Configuration Issues section below for more info.</p>\n        </div>\n      </div>`;\n  }\n\n  return warnings;\n}\n\nfunction formatLongValue(value) {\n  if (!value || typeof value !== 'string') return '[empty]';\n\n  // Convert URLs into clickable links\n  value = value.replace(/(https?:\\/\\/[^\\s]+)/g, '<a href=\""$1\"" style=\""color: #3498DB; text-decoration: none;\"" target=\""_blank\"">$1</a>');\n\n  // Add line breaks after commas or semicolons for readability\n  if (value.length > 100) {\n    value = value.replace(/([,;])\\s*/g, '$1<br>');\n  }\n\n  return value;\n}\n\nfunction formatDetailedRawHeaders() {\n  const allHeaders = [];\n  const seen = new Set();\n\n  const addHeader = (name, value) => {\n    const key = name.toLowerCase();\n    if (seen.has(key)) return;\n    seen.add(key);\n\n    const status = Object.entries(auditData.headerStatus || {}).find(\n      ([k]) => k.toLowerCase() === name.toLowerCase()\n    );\n    const present = status ? status[1].present : !!value;\n\n    allHeaders.push({\n      name: name.trim(),\n      present,\n      value: value || '[empty]'\n    });\n  };\n\n  Object.entries(auditData.originalHeaders || {}).forEach(([key, value]) => {\n    if (key) addHeader(key, value);\n  });\n\n  const securityHeaders = [\n    'content-security-policy',\n    'strict-transport-security',\n    'x-content-type-options',\n    'x-frame-options',\n    'referrer-policy',\n    'permissions-policy',\n    'x-xss-protection'\n  ];\n\n  const isWarningHeader = (name, value) => {\n    const lower = name.toLowerCase();\n    if (lower === 'strict-transport-security') {\n      const match = value.match(/max-age=(\\d+)/);\n      return match && parseInt(match[1]) < 2592000;\n    }\n    if (lower === 'content-security-policy') return value.includes(\""'unsafe-inline'\"");\n    return false;\n  };\n\n  const tableRows = allHeaders.map(header => {\n    const isSecurity = securityHeaders.includes(header.name.toLowerCase());\n    const warning = isSecurity && isWarningHeader(header.name, header.value);\n    const missing = isSecurity && !header.present;\n\n    let bgColor = '#F8F9FA';\n    let textColor = '#333';\n\n    if (isSecurity) {\n      if (missing) {\n        bgColor = '#FFEBEE';\n        textColor = '#C62828';\n      } else if (warning) {\n        bgColor = '#FFF9C4';\n        textColor = '#F57F17';\n      } else {\n        bgColor = '#E8F5E9';\n        textColor = '#2E7D32';\n      }\n    }\n\n    return `\n      <tr style=\""background-color: ${bgColor}; color: ${textColor};\"">\n        <td title=\""${isSecurity ? (missing ? 'Missing' : (warning ? 'Needs review' : 'Secure')) : 'Informational'}\"" style=\""padding: 8px; font-weight: bold;\"">${header.name}</td>\n        <td style=\""padding: 8px; text-align: center;\"">${header.present ? 'present' : 'absent'}</td>\n        <td style=\""padding: 8px; word-break: break-word; font-family: monospace;\"">${formatLongValue(header.value)}</td>\n      </tr>`;\n  }).join('');\n\n  return `\n    <table style=\""width: 100%; border-collapse: collapse; margin-top: 10px;\"">\n      <thead>\n        <tr style=\""background-color: #E0E0E0;\"">\n          <th style=\""padding: 10px;\"">Header</th>\n          <th style=\""padding: 10px;\"">Status</th>\n          <th style=\""padding: 10px;\"">Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${tableRows}\n      </tbody>\n    </table>`;\n}\n\n// Format additional information section\nfunction formatAdditionalInfo() {\n  const headers = [\n    {\n      name: 'access-control-allow-origin',\n      description: 'This is a very lax CORS policy. Such a policy should only be used on a public CDN.'\n    },\n    {\n      name: 'strict-transport-security',\n      description: 'HTTP Strict Transport Security is an excellent feature to support on your site and strengthens your implementation of TLS by getting the User Agent to enforce the use of HTTPS.'\n    },\n    {\n      name: 'content-security-policy',\n      description: 'Content Security Policy is an effective measure to protect your site from XSS attacks. By whitelisting sources of approved content, you can prevent the browser from loading malicious assets. Analyse this policy in more detail. You can sign up for a free account on Report URI to collect reports about problems on your site.'\n    },\n    {\n      name: 'permissions-policy',\n      description: 'Permissions Policy is a new header that allows a site to control which features and APIs can be used in the browser.'\n    },\n    {\n      name: 'referrer-policy',\n      description: 'Referrer Policy is a new header that allows a site to control how much information the browser includes with navigations away from a document and should be set by all sites.'\n    },\n    {\n      name: 'x-content-type-options',\n      description: 'X-Content-Type-Options stops a browser from trying to MIME-sniff the content type and forces it to stick with the declared content-type. The only valid value for this header is \""X-Content-Type-Options: nosniff\"".'\n    },\n    {\n      name: 'x-frame-options',\n      description: 'X-Frame-Options tells the browser whether you want to allow your site to be framed or not. By preventing a browser from framing your site you can defend against attacks like clickjacking.'\n    },\n    {\n      name: 'report-to',\n      description: 'Report-To enables the Reporting API. This allows a website to collect reports from the browser about various errors that may occur. You can sign up for a free account on Report URI to collect these reports.'\n    },\n    {\n      name: 'nel',\n      description: 'Network Error Logging is a new header that instructs the browser to send reports during various network or application errors. You can sign up for a free account on Report URI to collect these reports.'\n    },\n    {\n      name: 'server',\n      description: 'Server value has been changed. Typically you will see values like \""Microsoft-IIS/8.0\"" or \""nginx 1.7.2\"".'\n    }\n  ];\n  \n  let rows = '';\n  \n  for (const header of headers) {\n    const isSecurityHeader = ['content-security-policy', 'strict-transport-security', 'x-content-type-options', 'x-frame-options', 'referrer-policy', 'permissions-policy'].includes(header.name);\n    const headerColor = isSecurityHeader ? '#27AE60' : '#3498DB';\n    \n    rows += `\n      <tr>\n        <td style=\""padding: 8px; border-bottom: 1px solid #eee; color: ${headerColor}; font-weight: bold;\"">${header.name}</td>\n        <td style=\""padding: 8px; border-bottom: 1px solid #eee;\"">${header.description}</td>\n      </tr>\n    `;\n  }\n  \n  return `\n    <table style=\""width: 100%; border-collapse: collapse; margin-top: 10px;\"">\n      <tbody>\n        ${rows}\n      </tbody>\n    </table>\n  `;\n}\n\nfunction formatSecurityGrade() {\n  const gradeColors = {\n    'A+': '#27AE60',\n    'A': '#27AE60',\n    'A-': '#27AE60',\n    'B+': '#3498DB',\n    'B': '#3498DB',\n    'B-': '#3498DB',\n    'C+': '#F39C12',\n    'C': '#F39C12',\n    'C-': '#F39C12',\n    'D+': '#E74C3C',\n    'D': '#E74C3C',\n    'D-': '#E74C3C',\n    'F': '#E74C3C'\n  };\n  \n  return `<div class=\""grade\"" style=\""font-size: 64px; font-weight: bold; width: 100px; height: 100px; line-height: 100px; text-align: center; background-color: ${gradeColors[auditData.grade] || '#E74C3C'}; color: white; border-radius: 5px; margin: 0 auto;\"">${auditData.grade}</div>`;\n}\n\nfunction formatCriticalVulnerabilities() {\n  if (!auditData.vulnOutput || auditData.vulnOutput.trim() === '') {\n    return '<p>No vulnerabilities detected.</p>';\n  }\n\n  try {\n",
Monitor Data Breaches in Real-time with Have I Been Pwned,"{
  ""meta"": {
    ""instanceId"": ""568298fde06d3db80a2eea77fe5bf45f0c7bb898dea20b769944e9ac7c6c5a80"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""eb8bbb43-d6ca-48f9-9522-12ac7100961d"",
      ""name"": ""When clicking ‘Test workflow’"",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        -1360,
        380
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""77bf0c40-b045-40f9-9401-d1b206938180"",
      ""name"": ""Convert to File"",
      ""type"": ""n8n-nodes-base.convertToFile"",
      ""position"": [
        -360,
        -420
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""toJson"",
        ""binaryPropertyName"": ""=data""
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""c2e870c2-52e8-4808-9091-e3dcf286eaa5"",
      ""name"": ""Split Out"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        -660,
        20
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""data""
      },
      ""typeVersion"": 1,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""2bcafdc1-94e0-4a3d-9ad5-a189973be980"",
      ""name"": ""Schedule Trigger"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        -1500,
        -340
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {
              ""field"": ""minutes"",
              ""minutesInterval"": 15
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""a602fdf3-82d8-4bc1-806b-576b6fc904b7"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1520,
        -520
      ],
      ""parameters"": {
        ""width"": 760,
        ""content"": ""### Receive an alert when new breaches are added to haveibeenpwned.com\nThis workflow demonstrates how we can receive alerts when new breaches are added to haveibeenpwned.com.\nIt also demonstrates a simple method for caching data between executions.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a53e7c76-0823-415f-91fd-920b354568d3"",
      ""name"": ""Request breaches"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -1240,
        -340
      ],
      ""parameters"": {
        ""url"": ""https://haveibeenpwned.com/api/v3/latestbreach"",
        ""options"": {}
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""777c65aa-1bce-40eb-9de1-dd8fef4afd05"",
      ""name"": ""Read last breach"",
      ""type"": ""n8n-nodes-base.readWriteFile"",
      ""notes"": ""we alerted about."",
      ""position"": [
        -1020,
        -160
      ],
      ""parameters"": {
        ""options"": {},
        ""fileSelector"": ""./cache.json""
      },
      ""notesInFlow"": true,
      ""typeVersion"": 1,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""d6638b7b-6209-497a-a176-91751a10bab1"",
      ""name"": ""Get JSON from file"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        -840,
        -80
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""fromJson""
      },
      ""typeVersion"": 1,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""42103453-54db-4d18-8d2b-9b56f5d3a3dd"",
      ""name"": ""Check for content"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        -480,
        20
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""6bf6a0bd-e9b3-4fde-a9cc-08f4d0e94fd6"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""exists"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.lastItem }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""2dfa332e-9892-4385-a693-2ff2fc51f067"",
      ""name"": ""Set to none"",
      ""type"": ""n8n-nodes-base.set"",
      ""notes"": ""File was empty."",
      ""position"": [
        -300,
        80
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""47736e3f-0961-4b73-b4d5-207792640e87"",
              ""name"": ""lastItem"",
              ""type"": ""string"",
              ""value"": ""none""
            }
          ]
        }
      },
      ""notesInFlow"": true,
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""6653599a-db6a-4a01-af5c-d79a2d58202f"",
      ""name"": ""If - check for new"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        -840,
        -340
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""badd0a56-081f-49e2-92f4-7711f1cd9289"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notEquals""
              },
              ""leftValue"": ""={{ $json.lastItem }}"",
              ""rightValue"": ""={{ $json.Name }}""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""1f2cbeda-0c84-4b54-84ec-03a7b22f4471"",
      ""name"": ""Set breach name"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -560,
        -420
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""d0714936-9956-4af8-93f9-3c44ef7beb09"",
              ""name"": ""lastItem"",
              ""type"": ""string"",
              ""value"": ""={{ $json.Name }}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""85314f2d-98d7-461a-a565-5202006ddd39"",
      ""name"": ""Write breach name to file"",
      ""type"": ""n8n-nodes-base.readWriteFile"",
      ""position"": [
        -180,
        -420
      ],
      ""parameters"": {
        ""options"": {},
        ""fileName"": ""./cache.json"",
        ""operation"": ""write""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e4cc122c-172f-4154-b534-c2c9268cf10d"",
      ""name"": ""New breach"",
      ""type"": ""n8n-nodes-base.noOp"",
      ""notes"": ""Send alert"",
      ""position"": [
        -560,
        -680
      ],
      ""parameters"": {},
      ""notesInFlow"": true,
      ""typeVersion"": 1
    },
    {
      ""id"": ""80b7507f-d5f2-4a3d-9090-784f80770478"",
      ""name"": ""Old breach"",
      ""type"": ""n8n-nodes-base.noOp"",
      ""notes"": ""already alerted."",
      ""position"": [
        -560,
        -160
      ],
      ""parameters"": {},
      ""notesInFlow"": true,
      ""typeVersion"": 1
    },
    {
      ""id"": ""63f65fa4-fba1-4ab4-93ff-cd4df9068b19"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -600,
        -500
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 640,
        ""height"": 240,
        ""content"": ""### Save the name of the breach\nWe will check it the next time the workflow runs to see if we have a new breach.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""5a8dd017-e3e4-445e-be0f-24a8033d7dac"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -600,
        -240
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 640,
        ""height"": 240,
        ""content"": ""### This breach has been seen before\nIf we end up here it means that the latest breach has been seen before.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""eb563c4a-54f5-4583-8fb1-e5ee5a14ca43"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -600,
        -760
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 640,
        ""height"": 240,
        ""content"": ""### This is a new breach - send alert\nIf we end up here it means that the latest breach is new. Time to send some alerts to Slack, or Discord or something.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""45b58d9b-7172-447d-91ab-e91e3516c8d9"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1220,
        300
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 600,
        ""height"": 260,
        ""content"": ""### Clean up the cache\nDelete the `./cache.json` file. This will make sure the alert is triggered on the next run.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""bb2401d2-716c-47eb-9797-5b69583058ee"",
      ""name"": ""Set empty json"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        -1180,
        380
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""69f35659-fd32-4fa7-969e-6cf266519f5b"",
              ""name"": ""data"",
              ""type"": ""string"",
              ""value"": ""{}""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""c3abbf86-50f2-4772-bc7c-9a57ac39d4a3"",
      ""name"": ""Write cache.json"",
      ""type"": ""n8n-nodes-base.readWriteFile"",
      ""position"": [
        -840,
        380
      ],
      ""parameters"": {
        ""options"": {},
        ""fileName"": ""./cache.json"",
        ""operation"": ""write""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""69f03dd6-11f0-41e6-8871-9b17c44ef2fe"",
      ""name"": ""Convert json to file"",
      ""type"": ""n8n-nodes-base.convertToFile"",
      ""position"": [
        -1000,
        380
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""toJson""
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""2cf6adf9-59e4-4450-b7f8-96907155da84"",
      ""name"": ""Add information about the last breach we alerted"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        -1020,
        -340
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""combineBy"": ""combineAll""
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""80e38061-140a-4c78-b49c-dcf796da1427"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1480,
        -100
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 380,
        ""height"": 240,
        ""content"": ""## Support My Work! ❤️\n\n**👋 Hello! I'm Audun / xqus** \n🔗 My work: [xqus.com](https://xqus.com)\n💸 n8n shop: [xqus.gumroad.com](https://xqus.gumroad.com)\n\n**If you find this workflow helpful**, consider downloading or purchasing it on [Gumroad](https://xqus.gumroad.com/l/hasgi).\n\nYour support helps me create more useful n8n workflows and resources for the community. \n-Thanks a lot! 🙌""
      },
      ""typeVersion"": 1
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""Split Out"": {
      ""main"": [
        [
          {
            ""node"": ""Check for content"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Set to none"": {
      ""main"": [
        [
          {
            ""node"": ""Add information about the last breach we alerted"",
            ""type"": ""main"",
            ""index"": 1
          }
        ]
      ]
    },
    ""Set empty json"": {
      ""main"": [
        [
          {
            ""node"": ""Convert json to file"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Convert to File"": {
      ""main"": [
        [
          {
            ""node"": ""Write breach name to file"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Set breach name"": {
      ""main"": [
        [
          {
            ""node"": ""Convert to File"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Read last breach"": {
      ""main"": [
        [
          {
            ""node"": ""Get JSON from file"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Request breaches"": {
      ""main"": [
        [
          {
            ""node"": ""Read last breach"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Add information about the last breach we alerted"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Schedule Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""Request breaches"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Check for content"": {
      ""main"": [
        [
          {
            ""node"": ""Add information about the last breach we alerted"",
            ""type"": ""main"",
            ""index"": 1
          }
        ],
        [
          {
            ""node"": ""Set to none"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get JSON from file"": {
      ""main"": [
        [
          {
            ""node"": ""Split Out"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""If - check for new"": {
      ""main"": [
        [
          {
            ""node"": ""Set breach name"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""New breach"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Old breach"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Convert json to file"": {
      ""main"": [
        [
          {
            ""node"": ""Write cache.json"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Write breach name to file"": {
      ""main"": [
        []
      ]
    },
    ""When clicking ‘Test workflow’"": {
      ""main"": [
        [
          {
            ""node"": ""Set empty json"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Add information about the last breach we alerted"": {
      ""main"": [
        [
          {
            ""node"": ""If - check for new"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Send Email if server has upgradable packages,"{
  ""nodes"": [
    {
      ""id"": ""4ca55c6e-cf2e-4239-82a9-88d0a201e761"",
      ""name"": ""List upgradable packages"",
      ""type"": ""n8n-nodes-base.ssh"",
      ""notes"": ""apt list --upgradable"",
      ""position"": [
        -280,
        0
      ],
      ""parameters"": {
        ""command"": ""apt list --upgradable""
      },
      ""credentials"": {
        ""sshPassword"": {
          ""id"": ""Ps31IKTeseWFlA0g"",
          ""name"": ""SSH Password account""
        }
      },
      ""notesInFlow"": true,
      ""typeVersion"": 1,
      ""alwaysOutputData"": false
    },
    {
      ""id"": ""ae1f0a55-31aa-494b-baa6-822dc606188e"",
      ""name"": ""Send Email through SMTP"",
      ""type"": ""n8n-nodes-base.emailSend"",
      ""position"": [
        380,
        0
      ],
      ""webhookId"": ""8073c571-b36f-4330-a510-ca2ff2924fbf"",
      ""parameters"": {
        ""html"": ""=The following packages can be updated on your server:\n\n{{ $json.htmlList }}\n\nPlease login and perform upgrade."",
        ""options"": {},
        ""subject"": ""Server needs updates"",
        ""toEmail"": ""change.me@example.com"",
        ""fromEmail"": ""change.me@example.com""
      },
      ""credentials"": {
        ""smtp"": {
          ""id"": ""uiNePdJaDng5a43S"",
          ""name"": ""SMTP account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""e1d76671-d94c-40d5-9364-623db9319f11"",
      ""name"": ""Run workflow every day"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        -540,
        0
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {}
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""ec4d722a-b88c-42da-971c-28ad5774596d"",
      ""name"": ""Format as HTML list"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        -60,
        0
      ],
      ""parameters"": {
        ""jsCode"": ""function formatStdoutAsHtmlList(stdoutData) {\n\n    // Split the stdout into lines and map to HTML list items\n    const htmlListItems = stdoutData.split('\\n').map((line) => {\n        if (line.trim() && line !== \""Listing...\"") { // Optionally skip empty lines or headers\n            return `<li>${line.trim()}</li>`;\n        }\n    }).filter(item => item); // Remove any undefined items due to empty lines or skipped headers\n\n    // Wrap the list items in a <ul> tag\n    const htmlList = `<ul>${htmlListItems.join('')}</ul>`;\n\n    // Return the formatted HTML list as part of an object\n    return { \""htmlList\"": htmlList };\n}\n\nreturn formatStdoutAsHtmlList($input.first().json.stdout);""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""6f14eb02-c505-4f83-a5bb-68094e763fd9"",
      ""name"": ""Check if there are updates"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        140,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""db66d892-26fb-406c-a0ac-2e4b8a60310a"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notEquals""
              },
              ""leftValue"": ""={{ $json.htmlList }}"",
              ""rightValue"": ""<ul></ul>""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""3924c696-5b0e-4ae2-b2e2-435fed344028"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -740,
        -180
      ],
      ""parameters"": {
        ""width"": 300,
        ""content"": ""## VPS upgrade notify \nThis workflow will everyday check if server has upgradable packages and inform you by email if there is.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""bb8ade2a-4ffe-4c79-91eb-55af568eb1b1"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        380,
        -180
      ],
      ""parameters"": {
        ""width"": 300,
        ""content"": ""## Update email addresses\nUpdate From and To email addresses in this node to receive notifications""
      },
      ""typeVersion"": 1
    }
  ],
  ""connections"": {
    ""Format as HTML list"": {
      ""main"": [
        [
          {
            ""node"": ""Check if there are updates"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Run workflow every day"": {
      ""main"": [
        [
          {
            ""node"": ""List upgradable packages"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Send Email through SMTP"": {
      ""main"": [
        []
      ]
    },
    ""List upgradable packages"": {
      ""main"": [
        [
          {
            ""node"": ""Format as HTML list"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Check if there are updates"": {
      ""main"": [
        [
          {
            ""node"": ""Send Email through SMTP"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
"Automate SIEM Alert Enrichment with MITRE ATT&CK, Qdrant & Zendesk in n8n","{
  ""meta"": {
    ""instanceId"": ""cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""86ddd018-3d6b-46b9-aa93-dedd6c6b5076"",
      ""name"": ""When chat message received"",
      ""type"": ""@n8n/n8n-nodes-langchain.chatTrigger"",
      ""position"": [
        -880,
        360
      ],
      ""webhookId"": ""a9668bb8-bbe8-418a-b5c9-ff7dd431244f"",
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""a5ba5090-8e3b-4408-82df-92d2c524039e"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        -680,
        360
      ],
      ""parameters"": {
        ""options"": {
          ""systemMessage"": ""You are a cybersecurity expert trained on MITRE ATT&CK and enterprise incident response. Your job is to:\n1. Extract TTP information from SIEM data.\n2. Provide actionable remediation steps tailored to the alert.\n3. Cross-reference historical patterns and related alerts.\n4. Recommend external resources for deeper understanding.\n\nEnsure that:\n- TTPs are tagged with the tactic, technique name, and technique ID.\n- Remediation steps are specific and actionable.\n- Historical data includes related alerts and notable trends.\n- External links are relevant to the observed behavior.\n""
        }
      },
      ""typeVersion"": 1.7
    },
    {
      ""id"": ""67c52944-b616-4ea6-9507-e9fb6fcdbe2b"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        -740,
        580
      ],
      ""parameters"": {
        ""model"": ""gpt-4o"",
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""QpFZ2EiM3WGl6Zr3"",
          ""name"": ""Marketing OpenAI""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""55f6c16a-51ed-45e4-a1ab-aaaf1d7b5733"",
      ""name"": ""Split Out"",
      ""type"": ""n8n-nodes-base.splitOut"",
      ""position"": [
        -720,
        1220
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldToSplitOut"": ""data""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""46a5b8c6-3d34-4e9b-b812-23135f28c278"",
      ""name"": ""Embeddings OpenAI1"",
      ""type"": ""@n8n/n8n-nodes-langchain.embeddingsOpenAi"",
      ""position"": [
        -580,
        1420
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""QpFZ2EiM3WGl6Zr3"",
          ""name"": ""Marketing OpenAI""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""561b0737-26d5-450d-bd9e-08e0a608d6f9"",
      ""name"": ""Default Data Loader"",
      ""type"": ""@n8n/n8n-nodes-langchain.documentDefaultDataLoader"",
      ""position"": [
        -460,
        1440
      ],
      ""parameters"": {
        ""options"": {
          ""metadata"": {
            ""metadataValues"": [
              {
                ""name"": ""id"",
                ""value"": ""={{ $json.id }}""
              },
              {
                ""name"": ""name"",
                ""value"": ""={{ $json.name }}""
              },
              {
                ""name"": ""killchain"",
                ""value"": ""={{ $json.kill_chain_phases }}""
              },
              {
                ""name"": ""external"",
                ""value"": ""={{ $json.external_references }}""
              }
            ]
          }
        },
        ""jsonData"": ""={{ $json.description }}"",
        ""jsonMode"": ""expressionData""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6e8a4aed-7e8c-492a-b816-6ab1a98c312a"",
      ""name"": ""Token Splitter1"",
      ""type"": ""@n8n/n8n-nodes-langchain.textSplitterTokenSplitter"",
      ""position"": [
        -460,
        1620
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""0c54049e-b5e8-448f-b864-39aeb274de3e"",
      ""name"": ""Window Buffer Memory"",
      ""type"": ""@n8n/n8n-nodes-langchain.memoryBufferWindow"",
      ""position"": [
        -580,
        580
      ],
      ""parameters"": {},
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""96b776a0-10da-4f70-99d0-ad6b6ee8fcca"",
      ""name"": ""Embeddings OpenAI2"",
      ""type"": ""@n8n/n8n-nodes-langchain.embeddingsOpenAi"",
      ""position"": [
        -460,
        720
      ],
      ""parameters"": {
        ""model"": ""text-embedding-3-large"",
        ""options"": {
          ""dimensions"": 1536
        }
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""QpFZ2EiM3WGl6Zr3"",
          ""name"": ""Marketing OpenAI""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""695fba89-8f42-47c3-9d86-73f4ea0e72df"",
      ""name"": ""Extract from File"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        -920,
        1220
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""fromJson""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0b9897b0-149b-43ce-b66c-e78552729aa5"",
      ""name"": ""When clicking ‘Test workflow’"",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        -1360,
        1220
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""d8c29a14-0389-4748-a9de-686bf9a682c5"",
      ""name"": ""AI Agent1"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        -540,
        -440
      ],
      ""parameters"": {
        ""text"": ""=Siem Alert Data:\nAlert: {{ $json.raw_subject }}\nDescription: {{ $json.description }}"",
        ""options"": {
          ""systemMessage"": ""You are a cybersecurity expert trained on MITRE ATT&CK and enterprise incident response. Your job is to:\n1. Extract TTP information from SIEM data.\n2. Provide actionable remediation steps tailored to the alert.\n3. Cross-reference historical patterns and related alerts.\n4. Recommend external resources for deeper understanding.\n\nEnsure that:\n- TTPs are tagged with the tactic, technique name, and technique ID.\n- Remediation steps are specific and actionable.\n- Historical data includes related alerts and notable trends.\n- External links are relevant to the observed behavior.\n\nPlease output your response in html format, but do not include ```html at the beginning \n""
        },
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.7
    },
    {
      ""id"": ""55d0b00a-5046-45fa-87cb-cb0257caae87"",
      ""name"": ""OpenAI Chat Model1"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        -600,
        -220
      ],
      ""parameters"": {
        ""model"": ""gpt-4o"",
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""QpFZ2EiM3WGl6Zr3"",
          ""name"": ""Marketing OpenAI""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9b53566b-e021-403d-9d78-28504c5c1dfa"",
      ""name"": ""Embeddings OpenAI"",
      ""type"": ""@n8n/n8n-nodes-langchain.embeddingsOpenAi"",
      ""position"": [
        -320,
        -40
      ],
      ""parameters"": {
        ""model"": ""text-embedding-3-large"",
        ""options"": {
          ""dimensions"": 1536
        }
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""QpFZ2EiM3WGl6Zr3"",
          ""name"": ""Marketing OpenAI""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""f3b44ef5-e928-4662-81ef-4dd044829607"",
      ""name"": ""Loop Over Items"",
      ""type"": ""n8n-nodes-base.splitInBatches"",
      ""position"": [
        -940,
        -440
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""cc572b71-65c9-460c-bdcd-1d20feb15b32"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1460,
        940
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 1380,
        ""height"": 820,
        ""content"": ""![n8n](https://uploads.n8n.io/templates/qdrantlogo.png)\n## Embed your Vector Store\nTo provide data for your Vector store, you need to pass it in as JSON, and ensure it's setup correctly. This flow pulls the JSON file from Google Drive and extracts the JSON data and then passes it into the qdrant collection. ""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d5052d52-bec2-4b70-b460-6d5789c28d2c"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1460,
        220
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 1380,
        ""height"": 680,
        ""content"": ""![n8n](https://uploads.n8n.io/templates/n8n.png)\n## Talk to your Vector Store\nNow that your vector store has been updated with the embedded data, \nyou can use the n8n chat interface to talk to your data using OpenAI, \nOllama, or any of our supported LLMs.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""5cb478f6-17f3-4d7a-9b66-9e0654bd1dc9"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1460,
        -700
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 2140,
        ""height"": 900,
        ""content"": ""![Servicenow](https://uploads.n8n.io/templates/zendesk.png)\n## Deploy your Vector Store\nThis flow adds contextual information to your tickets using the Mitre Attack framework to help contextualize the ticket data.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""71ee28f5-84a2-4c6c-855a-6c7c09b2d62a"",
      ""name"": ""Structured Output Parser"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserStructured"",
      ""position"": [
        0,
        -160
      ],
      ""parameters"": {
        ""jsonSchemaExample"": ""{\n  \""ttp_identification\"": {\n    \""alert_summary\"": \""The alert indicates a check-in from the NetSupport RAT, a known Remote Access Trojan, suggesting command and control (C2) communication.\"",\n    \""mitre_attack_ttps\"": [\n      {\n        \""tactic\"": \""Command and Control\"",\n        \""technique\"": \""Protocol or Service Impersonation\"",\n        \""technique_id\"": \""T1001.003\"",\n        \""description\"": \""The RAT's check-in over port 443 implies potential masquerading of its traffic as legitimate SSL/TLS traffic, a tactic often used to blend C2 communications with normal web traffic.\"",\n        \""reference\"": \""https://attack.mitre.org/techniques/T1001/003/\""\n      }\n    ]\n  },\n  \""remediation_steps\"": {\n    \""network_segmentation\"": {\n      \""action\"": \""Isolate the affected host\"",\n      \""target\"": \""10.11.26.183\"",\n      \""reason\"": \""Prevents further C2 communication or lateral movement.\""\n    },\n    \""endpoint_inspection\"": {\n      \""action\"": \""Perform a thorough inspection\"",\n      \""target\"": \""Impacted endpoint\"",\n      \""method\"": \""Use endpoint detection and response (EDR) tools to check for additional persistence mechanisms.\""\n    },\n    \""network_traffic_analysis\"": {\n      \""action\"": \""Investigate and block unusual traffic\"",\n      \""target\"": \""IP 194.180.191.64\"",\n      \""method\"": \""Implement blocks for the IP across the firewall or IDS/IPS systems.\""\n    },\n    \""system_patching\"": {\n      \""action\"": \""Ensure all systems are updated\"",\n      \""method\"": \""Apply the latest security patches to mitigate vulnerabilities exploited by RAT malware.\""\n    },\n    \""ioc_hunting\"": {\n      \""action\"": \""Search for Indicators of Compromise (IoCs)\"",\n      \""method\"": \""Check for NetSupport RAT IoCs across other endpoints within the network.\""\n    }\n  },\n  \""historical_patterns\"": {\n    \""network_anomalies\"": \""Past alerts involving similar attempts to use standard web ports (e.g., 80, 443) for non-standard applications could suggest a broader attempt to blend malicious traffic into legitimate streams.\"",\n    \""persistence_tactics\"": \""Any detection of anomalies in task scheduling or shortcut modifications may indicate persistence methods similar to those used by RATs.\""\n  },\n  \""external_resources\"": [\n    {\n      \""title\"": \""ESET Report on Okrum and Ketrican\"",\n      \""description\"": \""Discusses similar tactics involving protocol impersonation and C2.\"",\n      \""url\"": \""https://www.eset.com/int/about/newsroom/research/okrum-ketrican/\""\n    },\n    {\n      \""title\"": \""Malleable C2 Profiles\"",\n      \""description\"": \""Document on crafting custom C2 traffic profiles similar to the targeting methods used by NetSupport RAT.\"",\n      \""url\"": \""https://www.cobaltstrike.com/help-malleable-c2\""\n    },\n    {\n      \""title\"": \""MITRE ATT&CK Technique Overview\"",\n      \""description\"": \""Overview of Protocol or Service Impersonation tactics.\"",\n      \""url\"": \""https://attack.mitre.org/techniques/T1001/003/\""\n    }\n  ]\n}\n""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""3aeb973d-22e5-4eaf-8fe8-fae3447909e1"",
      ""name"": ""Pull Mitre Data From Gdrive"",
      ""type"": ""n8n-nodes-base.googleDrive"",
      ""position"": [
        -1140,
        1220
      ],
      ""parameters"": {
        ""fileId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1oWBLO5AlIqbgo9mKD1hNtx92HdC6O28d"",
          ""cachedResultUrl"": ""https://drive.google.com/file/d/1oWBLO5AlIqbgo9mKD1hNtx92HdC6O28d/view?usp=drivesdk"",
          ""cachedResultName"": ""cleaned_mitre_attack_data.json""
        },
        ""options"": {},
        ""operation"": ""download""
      },
      ""credentials"": {
        ""googleDriveOAuth2Api"": {
          ""id"": ""AVa7MXBLiB9NYjuO"",
          ""name"": ""Angel Gdrive""
        }
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""3b35633c-de80-4062-8497-cb65092d5708"",
      ""name"": ""Embed JSON in Qdrant Collection"",
      ""type"": ""@n8n/n8n-nodes-langchain.vectorStoreQdrant"",
      ""position"": [
        -520,
        1220
      ],
      ""parameters"": {
        ""mode"": ""insert"",
        ""options"": {},
        ""qdrantCollection"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""mitre""
        }
      },
      ""credentials"": {
        ""qdrantApi"": {
          ""id"": ""u0qre50aar6iqyxu"",
          ""name"": ""Angel MitreAttack Demo Cluster""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""5f7f2fd8-276f-4b3a-ae88-1f1765967883"",
      ""name"": ""Query Qdrant Vector Store"",
      ""type"": ""@n8n/n8n-nodes-langchain.vectorStoreQdrant"",
      ""position"": [
        -480,
        580
      ],
      ""parameters"": {
        ""mode"": ""retrieve-as-tool"",
        ""options"": {},
        ""toolName"": ""mitre_attack_vector_store"",
        ""toolDescription"": ""The mitre_attack_vector_store is a knowledge base trained on the MITRE ATT&CK framework. It is designed to help identify, correlate, and provide context for cybersecurity incidents based on textual descriptions of alerts, events, or behaviors. This tool leverages precomputed embeddings of attack techniques, tactics, and procedures (TTPs) to map user queries (such as SIEM-generated alerts or JIRA ticket titles) to relevant MITRE ATT&CK techniques.\n\nBy analyzing input text, the vector store can:\n\nRetrieve the most relevant MITRE ATT&CK entries (e.g., techniques, tactics, descriptions, external references).\nProvide structured context about potential adversary behaviors.\nSuggest remediation actions or detection methods based on the input."",
        ""qdrantCollection"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""mitre"",
          ""cachedResultName"": ""mitre""
        }
      },
      ""credentials"": {
        ""qdrantApi"": {
          ""id"": ""u0qre50aar6iqyxu"",
          ""name"": ""Angel MitreAttack Demo Cluster""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""298ffc29-1d60-4c05-92c6-a61071629a3f"",
      ""name"": ""Qdrant Vector Store query"",
      ""type"": ""@n8n/n8n-nodes-langchain.vectorStoreQdrant"",
      ""position"": [
        -320,
        -200
      ],
      ""parameters"": {
        ""mode"": ""retrieve-as-tool"",
        ""options"": {},
        ""toolName"": ""mitre_attack_vector_store"",
        ""toolDescription"": ""The mitre_attack_vector_store is a knowledge base trained on the MITRE ATT&CK framework. It is designed to help identify, correlate, and provide context for cybersecurity incidents based on textual descriptions of alerts, events, or behaviors. This tool leverages precomputed embeddings of attack techniques, tactics, and procedures (TTPs) to map user queries (such as SIEM-generated alerts or JIRA ticket titles) to relevant MITRE ATT&CK techniques.\n\nBy analyzing input text, the vector store can:\n\nRetrieve the most relevant MITRE ATT&CK entries (e.g., techniques, tactics, descriptions, external references).\nProvide structured context about potential adversary behaviors.\nSuggest remediation actions or detection methods based on the input."",
        ""qdrantCollection"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""mitre"",
          ""cachedResultName"": ""mitre""
        }
      },
      ""credentials"": {
        ""qdrantApi"": {
          ""id"": ""u0qre50aar6iqyxu"",
          ""name"": ""Angel MitreAttack Demo Cluster""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c47f0ae6-106d-46da-afc3-f7afb86923ff"",
      ""name"": ""Get all Zendesk Tickets"",
      ""type"": ""n8n-nodes-base.zendesk"",
      ""position"": [
        -1180,
        -440
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""getAll""
      },
      ""credentials"": {
        ""zendeskApi"": {
          ""id"": ""ROx0ipJapRomRxEX"",
          ""name"": ""Zendesk Demo Access""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0ec2c505-5721-41af-91c8-1b0b55826d9e"",
      ""name"": ""Update Zendesk with Mitre Data"",
      ""type"": ""n8n-nodes-base.zendesk"",
      ""position"": [
        0,
        -360
      ],
      ""parameters"": {
        ""id"": ""={{ $('Loop Over Items').item.json.id }}"",
        ""operation"": ""update"",
        ""updateFields"": {
          ""internalNote"": ""=Summary: {{ $json.output.ttp_identification.alert_summary }}\n\n"",
          ""customFieldsUi"": {
            ""customFieldsValues"": [
              {
                ""id"": 34479547176212,
                ""value"": ""={{ $json.output.ttp_identification.mitre_attack_ttps[0].technique_id }}""
              },
              {
                ""id"": 34479570659732,
                ""value"": ""={{ $json.output.ttp_identification.mitre_attack_ttps[0].tactic }}""
              }
            ]
          }
        }
      },
      ""credentials"": {
        ""zendeskApi"": {
          ""id"": ""ROx0ipJapRomRxEX"",
          ""name"": ""Zendesk Demo Access""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6a74a6d4-610a-4a13-afe4-7bb03d83d4c8"",
      ""name"": ""Move on to next ticket"",
      ""type"": ""n8n-nodes-base.noOp"",
      ""position"": [
        360,
        -80
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""AI Agent"": {
      ""main"": [
        []
      ]
    },
    ""AI Agent1"": {
      ""main"": [
        [
          {
            ""node"": ""Update Zendesk with Mitre Data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Split Out"": {
      ""main"": [
        [
          {
            ""node"": ""Embed JSON in Qdrant Collection"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Loop Over Items"": {
      ""main"": [
        [],
        [
          {
            ""node"": ""AI Agent1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Token Splitter1"": {
      ""ai_textSplitter"": [
        [
          {
            ""node"": ""Default Data Loader"",
            ""type"": ""ai_textSplitter"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Embeddings OpenAI"": {
      ""ai_embedding"": [
        [
          {
            ""node"": ""Qdrant Vector Store query"",
            ""type"": ""ai_embedding"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract from File"": {
      ""main"": [
        [
          {
            ""node"": ""Split Out"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Embeddings OpenAI1"": {
      ""ai_embedding"": [
        [
          {
            ""node"": ""Embed JSON in Qdrant Collection"",
            ""type"": ""ai_embedding"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Embeddings OpenAI2"": {
      ""ai_embedding"": [
        [
          {
            ""node"": ""Query Qdrant Vector Store"",
            ""type"": ""ai_embedding"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model1"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Agent1"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Default Data Loader"": {
      ""ai_document"": [
        [
          {
            ""node"": ""Embed JSON in Qdrant Collection"",
            ""type"": ""ai_document"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Window Buffer Memory"": {
      ""ai_memory"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_memory"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Move on to next ticket"": {
      ""main"": [
        [
          {
            ""node"": ""Loop Over Items"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get all Zendesk Tickets"": {
      ""main"": [
        [
          {
            ""node"": ""Loop Over Items"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Structured Output Parser"": {
      ""ai_outputParser"": [
        [
          {
            ""node"": ""AI Agent1"",
            ""type"": ""ai_outputParser"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Qdrant Vector Store query"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent1"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Query Qdrant Vector Store"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When chat message received"": {
      ""main"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Pull Mitre Data From Gdrive"": {
      ""main"": [
        [
          {
            ""node"": ""Extract from File"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Update Zendesk with Mitre Data"": {
      ""main"": [
        [
          {
            ""node"": ""Move on to next ticket"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When clicking ‘Test workflow’"": {
      ""main"": [
        [
          {
            ""node"": ""Pull Mitre Data From Gdrive"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
"n8n Workflow Error Alerts with Google Sheets, Telegram, and Gmail","{
  ""id"": ""Yb92Z9P4HSj7JLuW"",
  ""meta"": {
    ""instanceId"": ""9219ebc7795bea866f70aa3d977d54417fdf06c41944be95e20cfb60f992db19"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Error handling alerts with Google Sheets, Telegram and Gmail"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""ad41781c-30ed-4408-b3a4-7bfa592c3dd0"",
      ""name"": ""Error Trigger"",
      ""type"": ""n8n-nodes-base.errorTrigger"",
      ""position"": [
        -80,
        -100
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""98d27f8f-baec-404f-a960-9068e66a9586"",
      ""name"": ""Log error"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        140,
        -200
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""URL"": ""={{ $json.execution.url }}"",
            ""Node"": ""={{ $json.execution.error.node.name }}"",
            ""STATUS"": ""NEW"",
            ""Workflow"": ""={{ $json.workflow.name }}"",
            ""Timestamp"": ""={{ $now.format('D hh:mm a') }}"",
            ""Error Message"": ""={{ $json.execution.error.message }}""
          },
          ""schema"": [
            {
              ""id"": ""Timestamp"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Timestamp"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Workflow"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Workflow"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""URL"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""URL"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Node"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Node"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Error Message"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Error Message"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""STATUS"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""STATUS"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Notes"",
              ""type"": ""string"",
              ""display"": true,
              ""removed"": false,
              ""required"": false,
              ""displayName"": ""Notes"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1KKolzBcFWGI_RtFUvT1bdufFpMdA0WfM9quvgg_cKlU/edit#gid=0"",
          ""cachedResultName"": ""Sheet1""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1KKolzBcFWGI_RtFUvT1bdufFpMdA0WfM9quvgg_cKlU"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1KKolzBcFWGI_RtFUvT1bdufFpMdA0WfM9quvgg_cKlU/edit?usp=drivesdk"",
          ""cachedResultName"": ""Error Logs""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""twZdLFsI3kTnqtpG"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""c62ec787-76eb-400d-852f-6df07eba72b9"",
      ""name"": ""Edit Fields"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        140,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""0e3ef75e-b4d9-489a-b45b-ca0b994756a7"",
              ""name"": ""telegramChatID"",
              ""type"": ""string"",
              ""value"": ""chatID""
            },
            {
              ""id"": ""6e354af6-dd5e-4200-99ef-7856129d782e"",
              ""name"": ""toEmail"",
              ""type"": ""string"",
              ""value"": ""toEmail""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""12396bb3-7143-466c-a9e0-b7a567425706"",
      ""name"": ""Notify in channel"",
      ""type"": ""n8n-nodes-base.telegram"",
      ""position"": [
        360,
        0
      ],
      ""webhookId"": ""41264c12-622c-45c1-badd-1e0834773b7f"",
      ""parameters"": {
        ""text"": ""=⚠️🐛 New bug in n8n\n\nWorkflow: {{ $('Error Trigger').item.json.workflow.name }}\nExecution URL: {{ $('Error Trigger').item.json.execution.url }}\nNode name: {{ $('Error Trigger').item.json.execution.error.node.name }}\nError message: {{ $('Error Trigger').item.json.execution.error.message }}"",
        ""chatId"": ""={{ $json.telegramChatID }}"",
        ""additionalFields"": {
          ""appendAttribution"": false
        }
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""IgrntTxsoDphh19z"",
          ""name"": ""Telegram account""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""cf154995-a319-4c24-8244-3a1a6d75cc81"",
      ""name"": ""Send email"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        580,
        0
      ],
      ""webhookId"": ""38f55ad5-84b6-4232-927f-fa0c24e23bd7"",
      ""parameters"": {
        ""sendTo"": ""={{ $('Edit Fields').item.json.toEmail }}"",
        ""message"": ""={{ $json.result.text }}"",
        ""options"": {
          ""senderName"": ""n8n Error Tracker"",
          ""appendAttribution"": false
        },
        ""subject"": ""=🐛New n8n bug in \""{{ $('Error Trigger').item.json.workflow.name }}\""""
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""q3P6IybvNdDiPZ52"",
          ""name"": ""Gmail account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""25a14f2b-710d-4a07-a484-bea302232fe8"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        80,
        -20
      ],
      ""parameters"": {
        ""height"": 320,
        ""content"": ""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Update fields \n- Set your Telegram chat id to get notified in a channel \n- Insert the recipient's email""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""timezone"": ""Europe/Madrid"",
    ""callerPolicy"": ""workflowsFromSameOwner"",
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""5cb21186-8ab7-4dcc-9489-1ba8e7e36f61"",
  ""connections"": {
    ""Edit Fields"": {
      ""main"": [
        [
          {
            ""node"": ""Notify in channel"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Error Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""Log error"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Edit Fields"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Notify in channel"": {
      ""main"": [
        [
          {
            ""node"": ""Send email"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Automatically update n8n version,"{
  ""id"": ""6XYqPkPDbHsRoX62"",
  ""meta"": {
    ""instanceId"": ""5c3b5db3715a57f4ed79fed05ac755845d719ba3ec8ccb7d9438a3d85e556c1f"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""update n8n version"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""47829c66-4f79-43f1-a89f-a2137c86bb30"",
      ""name"": ""Get Local n8n version"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -180,
        -260
      ],
      ""parameters"": {
        ""url"": ""http://192.168.100.18:5678/rest/settings"",
        ""options"": {},
        ""authentication"": ""genericCredentialType"",
        ""genericAuthType"": ""httpBearerAuth""
      },
      ""credentials"": {
        ""httpBearerAuth"": {
          ""id"": ""zKdAGEO6406TJEtE"",
          ""name"": ""Bearer Auth account""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""ee7a6dea-7b56-432c-9b8f-6ebd806e1359"",
      ""name"": ""Schedule Trigger"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        -620,
        -260
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {
              ""triggerAtHour"": 5
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""5e64e00f-0403-4669-b9a1-c1fc93a28d47"",
      ""name"": ""SSH1"",
      ""type"": ""n8n-nodes-base.ssh"",
      ""position"": [
        340,
        -260
      ],
      ""parameters"": {
        ""cwd"": ""n8n/"",
        ""command"": ""=echo \""{{ $prevNode.outputIndex ? false : true }}\"" > check_update.txt""
      },
      ""credentials"": {
        ""sshPassword"": {
          ""id"": ""m5UXwMUbELaUlNwF"",
          ""name"": ""SSH Password account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a40311c9-17b1-41e8-87d5-d86cce2439d7"",
      ""name"": ""Get the latest n8n version"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        -400,
        -260
      ],
      ""parameters"": {
        ""url"": ""https://registry.npmjs.org/n8n/latest"",
        ""options"": {
          ""fullResponse"": false
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""50d7a87c-4e1c-469b-b5ae-2d7347f7ca58"",
      ""name"": ""If"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        40,
        -260
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""a2d169a3-7aa2-46f5-bdb2-f0d53a011b5c"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notEquals""
              },
              ""leftValue"": ""={{ $('Get the latest n8n version').item.json.version }}"",
              ""rightValue"": ""={{ $json.data.versionCli }}""
            }
          ]
        }
      },
      ""typeVersion"": 2.2,
      ""alwaysOutputData"": false
    }
  ],
  ""active"": true,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""0b55007a-a4cc-45ca-90a1-8cc4e17b0f1e"",
  ""connections"": {
    ""If"": {
      ""main"": [
        [
          {
            ""node"": ""SSH1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""SSH1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Schedule Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""Get the latest n8n version"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get Local n8n version"": {
      ""main"": [
        [
          {
            ""node"": ""If"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get the latest n8n version"": {
      ""main"": [
        [
          {
            ""node"": ""Get Local n8n version"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Automated Workflow Backups to GitHub with PR Creation & Slack Notifications,"{
  ""id"": ""GZqZRs30KLvYLk4T"",
  ""meta"": {
    ""instanceId"": ""e76981884963d13b9deb7bc5a6b15daf6838937e1dd529f22f2c146d8b79cae4"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Backup workflows to GitHub"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""3abc6972-965d-4333-b1d2-d7097ea077da"",
      ""name"": ""n8n"",
      ""type"": ""n8n-nodes-base.n8n"",
      ""position"": [
        660,
        -300
      ],
      ""parameters"": {
        ""filters"": {},
        ""requestOptions"": {}
      },
      ""credentials"": {
        ""n8nApi"": {
          ""id"": ""f2iSnAHCaePA8jyU"",
          ""name"": ""n8n account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9c386d7c-dc48-4f92-bc2f-5c5772e931f8"",
      ""name"": ""Find new workflows"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        880,
        -250
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""joinMode"": ""keepNonMatches"",
        ""outputDataFrom"": ""input1"",
        ""fieldsToMatchString"": ""id""
      },
      ""typeVersion"": 3.1,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""a82b074d-b12f-49f9-a69b-492847bb3dfd"",
      ""name"": ""Find updated workflows"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        880,
        0
      ],
      ""parameters"": {
        ""mode"": ""combine"",
        ""options"": {},
        ""joinMode"": ""keepNonMatches"",
        ""outputDataFrom"": ""input1"",
        ""fieldsToMatchString"": ""id, updatedAt""
      },
      ""typeVersion"": 3.1,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""8d6181f4-873b-46ad-aa88-a6005f78e618"",
      ""name"": ""Wait for GitHub create/edit file finished"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        2680,
        -140
      ],
      ""parameters"": {},
      ""typeVersion"": 3.1
    },
    {
      ""id"": ""aefdbaf3-bbb9-426b-bc01-1dfd1f094a87"",
      ""name"": ""Create new PR via GitHub API"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        2900,
        -140
      ],
      ""parameters"": {
        ""url"": ""=https://api.github.com/repos/{{ $('Define Local Variables').item.json.github_owner }}/{{ $('Define Local Variables').item.json.repo_name }}/pulls"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n\""title\"": \""Automated PR for {{ $('Define Local Variables').item.json.branch_name }}\"",\n\""body\"": \""\"",\n\""head\"": \""{{ $('Define Local Variables').item.json.branch_name }}\"",\n\""base\"": \""main\""\n}"",
        ""sendBody"": true,
        ""specifyBody"": ""json"",
        ""authentication"": ""predefinedCredentialType"",
        ""nodeCredentialType"": ""githubApi""
      },
      ""credentials"": {
        ""githubApi"": {
          ""id"": ""R8n2QZnsA7dlSq4d"",
          ""name"": ""GitHub account""
        }
      },
      ""executeOnce"": true,
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""bdcd0ef4-ebcd-43fc-b320-ee62bb3b9c71"",
      ""name"": ""Define Local Variables"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        40,
        -160
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""575b2ca9-528f-421f-8352-073c916fcd63"",
              ""name"": ""branch_name"",
              ""type"": ""string"",
              ""value"": ""=workflows_{{ $now.format('yyyy-MM-dd-hh-mm-ss')}}""
            },
            {
              ""id"": ""6f7a1168-1c55-4e50-b7d2-0868104ee1db"",
              ""name"": ""github_owner"",
              ""type"": ""string"",
              ""value"": ""duynb92""
            },
            {
              ""id"": ""9c8cf8ba-9e64-4fb5-ba38-8429264c84dd"",
              ""name"": ""repo_name"",
              ""type"": ""string"",
              ""value"": ""n8n-workflows""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""b74a8a0c-5205-47fd-a9c9-60d8299a4254"",
      ""name"": ""Get all workflows on GitHub"",
      ""type"": ""n8n-nodes-base.github"",
      ""position"": [
        220,
        50
      ],
      ""webhookId"": ""481a47c9-57bf-4c5f-a9c8-7246190c4b3c"",
      ""parameters"": {
        ""owner"": {
          ""__rl"": true,
          ""mode"": ""name"",
          ""value"": ""={{ $('Define Local Variables').item.json.github_owner }}""
        },
        ""filePath"": ""workflows"",
        ""resource"": ""file"",
        ""operation"": ""list"",
        ""repository"": {
          ""__rl"": true,
          ""mode"": ""name"",
          ""value"": ""={{ $('Define Local Variables').item.json.repo_name }}""
        }
      },
      ""credentials"": {
        ""githubApi"": {
          ""id"": ""R8n2QZnsA7dlSq4d"",
          ""name"": ""GitHub account""
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""fd86d8e4-948e-4679-a995-87fcad2ceaaf"",
      ""name"": ""Get content for each workflow"",
      ""type"": ""n8n-nodes-base.github"",
      ""position"": [
        440,
        50
      ],
      ""webhookId"": ""bfb94e71-96eb-4fc3-9fe0-1b5255d48b53"",
      ""parameters"": {
        ""owner"": {
          ""__rl"": true,
          ""mode"": ""name"",
          ""value"": ""={{ $('Define Local Variables').item.json.github_owner }}""
        },
        ""filePath"": ""={{ $json.path }}"",
        ""resource"": ""file"",
        ""operation"": ""get"",
        ""repository"": {
          ""__rl"": true,
          ""mode"": ""name"",
          ""value"": ""={{ $('Define Local Variables').item.json.repo_name }}""
        },
        ""asBinaryProperty"": false,
        ""additionalParameters"": {}
      },
      ""credentials"": {
        ""githubApi"": {
          ""id"": ""R8n2QZnsA7dlSq4d"",
          ""name"": ""GitHub account""
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""60b86288-22cd-460e-9da2-67de123b1cb1"",
      ""name"": ""Base64decode workflow content"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        660,
        50
      ],
      ""parameters"": {
        ""mode"": ""raw"",
        ""options"": {},
        ""jsonOutput"": ""={{ $json.content.base64Decode() }}""
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""fc4d4f78-e6b3-418f-8c4f-8ad70eb5a32b"",
      ""name"": ""Wait for finished"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        1100,
        -125
      ],
      ""parameters"": {
        ""mode"": ""chooseBranch"",
        ""output"": ""empty""
      },
      ""typeVersion"": 3.1
    },
    {
      ""id"": ""08db5cda-4059-4e96-9732-63bc824daa5d"",
      ""name"": ""If there are any changes in workflows"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1320,
        -125
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""or"",
          ""conditions"": [
            {
              ""id"": ""cec5563a-01dd-4372-882a-2114c8e476a7"",
              ""operator"": {
                ""type"": ""array"",
                ""operation"": ""notEmpty"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $('Find updated workflows').all() }}"",
              ""rightValue"": """"
            },
            {
              ""id"": ""fb800963-acc7-495f-8bf2-c29c3b3d0450"",
              ""operator"": {
                ""type"": ""array"",
                ""operation"": ""notEmpty"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $('Find new workflows').all() }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""45369a54-bc73-4287-9037-1286d8a9690d"",
      ""name"": ""No Operation, do nothing"",
      ""type"": ""n8n-nodes-base.noOp"",
      ""position"": [
        1560,
        160
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""d8b8a670-3ea1-4d5f-86e9-537f72d964fc"",
      ""name"": ""Create new branch via GitHub API"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1760,
        -125
      ],
      ""parameters"": {
        ""url"": ""=https://api.github.com/repos/{{ $('Define Local Variables').item.json.github_owner }}/{{ $('Define Local Variables').item.json.repo_name }}/git/refs"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""ref\"": \""refs/heads/{{ $('Define Local Variables').item.json.branch_name }}\"",\n  \""sha\"": \""{{ $json.object.sha }}\""\n}"",
        ""sendBody"": true,
        ""specifyBody"": ""json"",
        ""authentication"": ""predefinedCredentialType"",
        ""nodeCredentialType"": ""githubApi""
      },
      ""credentials"": {
        ""githubApi"": {
          ""id"": ""R8n2QZnsA7dlSq4d"",
          ""name"": ""GitHub account""
        }
      },
      ""executeOnce"": true,
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""4292f0e4-3012-4165-bcda-e4a1519ca80c"",
      ""name"": ""Get latest commit SHA on main  via GitHub API"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1540,
        -125
      ],
      ""parameters"": {
        ""url"": ""=https://api.github.com/repos/{{ $('Define Local Variables').item.json.github_owner }}/{{ $('Define Local Variables').item.json.repo_name }}/git/ref/heads/main"",
        ""options"": {},
        ""authentication"": ""predefinedCredentialType"",
        ""nodeCredentialType"": ""githubApi""
      },
      ""credentials"": {
        ""githubApi"": {
          ""id"": ""R8n2QZnsA7dlSq4d"",
          ""name"": ""GitHub account""
        }
      },
      ""executeOnce"": true,
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""d0d727d9-f547-440b-8213-9ec5ce23c1fa"",
      ""name"": ""Wait until branch created"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        1980,
        0
      ],
      ""parameters"": {
        ""mode"": ""chooseBranch"",
        ""useDataOfInput"": 2
      },
      ""typeVersion"": 3.1,
      ""alwaysOutputData"": false
    },
    {
      ""id"": ""89f36b7c-6de1-4069-83bd-8b6aeed4a069"",
      ""name"": ""Wait until branch created1"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        1980,
        -250
      ],
      ""parameters"": {
        ""mode"": ""chooseBranch"",
        ""useDataOfInput"": 2
      },
      ""typeVersion"": 3.1,
      ""alwaysOutputData"": false
    },
    {
      ""id"": ""f8088f5b-cb9a-40eb-ab8f-de6aeddfdaa6"",
      ""name"": ""Filter empty data"",
      ""type"": ""n8n-nodes-base.filter"",
      ""notes"": ""Empty data can happen because 'Find new workflows' always output data"",
      ""position"": [
        2200,
        -250
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""835f2dab-de42-4c97-a747-47b23d55c990"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notEmpty"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.id }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""notesInFlow"": true,
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""157955f3-88bf-448d-b424-c71ba32d4fb5"",
      ""name"": ""Filter empty data1"",
      ""type"": ""n8n-nodes-base.filter"",
      ""notes"": ""Empty data can happen because 'Find updated workflows' always output data"",
      ""position"": [
        2200,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""1d8312fd-5157-4058-823c-35f7574541fa"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notEmpty"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.id }}"",
              ""rightValue"": """"
            }
          ]
        }
      },
      ""notesInFlow"": true,
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""0c3e9957-d4e8-4b30-b368-7698087b37e7"",
      ""name"": ""Create new commit to add new workflow"",
      ""type"": ""n8n-nodes-base.github"",
      ""position"": [
        2420,
        -250
      ],
      ""webhookId"": ""843c09e3-953a-40c4-a208-38acdd2ea466"",
      ""parameters"": {
        ""owner"": {
          ""__rl"": true,
          ""mode"": ""name"",
          ""value"": ""={{ $('Define Local Variables').item.json.github_owner }}""
        },
        ""filePath"": ""=workflows/{{ $json.id }}.json"",
        ""resource"": ""file"",
        ""repository"": {
          ""__rl"": true,
          ""mode"": ""name"",
          ""value"": ""={{ $('Define Local Variables').item.json.repo_name }}""
        },
        ""fileContent"": ""={{ $json.toJsonString() }}"",
        ""commitMessage"": ""=Add new workflow {{ $json.id }}"",
        ""additionalParameters"": {
          ""branch"": {
            ""branch"": ""={{ $('Define Local Variables').item.json.branch_name }}""
          }
        }
      },
      ""credentials"": {
        ""githubApi"": {
          ""id"": ""R8n2QZnsA7dlSq4d"",
          ""name"": ""GitHub account""
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""fd5091b9-7c6e-4408-8656-4dac64f10088"",
      ""name"": ""Create new commit to update changed workflow"",
      ""type"": ""n8n-nodes-base.github"",
      ""position"": [
        2420,
        0
      ],
      ""webhookId"": ""843c09e3-953a-40c4-a208-38acdd2ea466"",
      ""parameters"": {
        ""owner"": {
          ""__rl"": true,
          ""mode"": ""name"",
          ""value"": ""={{ $('Define Local Variables').item.json.github_owner }}""
        },
        ""filePath"": ""=workflows/{{ $json.id }}.json"",
        ""resource"": ""file"",
        ""operation"": ""edit"",
        ""repository"": {
          ""__rl"": true,
          ""mode"": ""name"",
          ""value"": ""={{ $('Define Local Variables').item.json.repo_name }}""
        },
        ""fileContent"": ""={{ $json.toJsonString() }}"",
        ""commitMessage"": ""=Update workflow {{ $json.id }}"",
        ""additionalParameters"": {
          ""branch"": {
            ""branch"": ""={{ $('Define Local Variables').item.json.branch_name }}""
          }
        }
      },
      ""credentials"": {
        ""githubApi"": {
          ""id"": ""R8n2QZnsA7dlSq4d"",
          ""name"": ""GitHub account""
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""63a97673-c96e-43ca-b3b2-cf264b2b1381"",
      ""name"": ""Slack"",
      ""type"": ""n8n-nodes-base.slack"",
      ""position"": [
        3120,
        -140
      ],
      ""webhookId"": ""799530a9-9c2f-482e-9265-a2d58663223e"",
      ""parameters"": {
        ""text"": ""=:firework: {{ $workflow.name }} executed succesfully. \nIt created a new <{{ $json.html_url }}|GitHub PR>."",
        ""select"": ""channel"",
        ""channelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""C08NZ6D9CRF"",
          ""cachedResultName"": ""n8n-notifications""
        },
        ""otherOptions"": {}
      },
      ""credentials"": {
        ""slackApi"": {
          ""id"": ""gz8u4Mu9o2dA9gbl"",
          ""name"": ""Slack Bot Access Token""
        }
      },
      ""typeVersion"": 2.3
    },
    {
      ""id"": ""1ea514d9-bf41-4de4-938a-68bde8be660b"",
      ""name"": ""Click me to trigger"",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        -200,
        -160
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""aa9c2d16-d87b-42a6-b8af-6785fe212eee"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -280,
        -500
      ],
      ""parameters"": {
        ""width"": 280,
        ""height"": 260,
        ""content"": ""## Setup\n1. GitHub credentials: Add your GitHub API credentials in n8n.\n2. Slack integration: Connect your Slack Bot token if you want PR notifications.\n3. Repository details: Update github_owner, repo_name, and workflow directory path in the “Define Local Variables” node.\n4. n8n API key - [Check this doc](https://docs.n8n.io/api/authentication/)""
      },
      ""typeVersion"": 1
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""c2e49f18-b2a4-4ced-a1a7-67dc69926a78"",
  ""connections"": {
    ""n8n"": {
      ""main"": [
        [
          {
            ""node"": ""Find new workflows"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Find updated workflows"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Filter empty data"": {
      ""main"": [
        [
          {
            ""node"": ""Create new commit to add new workflow"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Wait for finished"": {
      ""main"": [
        [
          {
            ""node"": ""If there are any changes in workflows"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Filter empty data1"": {
      ""main"": [
        [
          {
            ""node"": ""Create new commit to update changed workflow"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Find new workflows"": {
      ""main"": [
        [
          {
            ""node"": ""Wait until branch created1"",
            ""type"": ""main"",
            ""index"": 1
          },
          {
            ""node"": ""Wait for finished"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Click me to trigger"": {
      ""main"": [
        [
          {
            ""node"": ""Define Local Variables"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Define Local Variables"": {
      ""main"": [
        [
          {
            ""node"": ""n8n"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Get all workflows on GitHub"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Find updated workflows"": {
      ""main"": [
        [
          {
            ""node"": ""Wait for finished"",
            ""type"": ""main"",
            ""index"": 1
          },
          {
            ""node"": ""Wait until branch created"",
            ""type"": ""main"",
            ""index"": 1
          }
        ]
      ]
    },
    ""Wait until branch created"": {
      ""main"": [
        [
          {
            ""node"": ""Filter empty data1"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Wait until branch created1"": {
      ""main"": [
        [
          {
            ""node"": ""Filter empty data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get all workflows on GitHub"": {
      ""main"": [
        [
          {
            ""node"": ""Get content for each workflow"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Create new PR via GitHub API"": {
      ""main"": [
        [
          {
            ""node"": ""Slack"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Base64decode workflow content"": {
      ""main"": [
        [
          {
            ""node"": ""Find updated workflows"",
            ""type"": ""main"",
            ""index"": 1
          },
          {
            ""node"": ""Find new workflows"",
            ""type"": ""main"",
            ""index"": 1
          }
        ]
      ]
    },
    ""Get content for each workflow"": {
      ""main"": [
        [
          {
            ""node"": ""Base64decode workflow content"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Create new branch via GitHub API"": {
      ""main"": [
        [
          {
            ""node"": ""Wait until branch created1"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Wait until branch created"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Create new commit to add new workflow"": {
      ""main"": [
        [
          {
            ""node"": ""Wait for GitHub create/edit file finished"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""If there are any changes in workflows"": {
      ""main"": [
        [
          {
            ""node"": ""Get latest commit SHA on main  via GitHub API"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""No Operation, do nothing"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Wait for GitHub create/edit file finished"": {
      ""main"": [
        [
          {
            ""node"": ""Create new PR via GitHub API"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Create new commit to update changed workflow"": {
      ""main"": [
        [
          {
            ""node"": ""Wait for GitHub create/edit file finished"",
            ""type"": ""main"",
            ""index"": 1
          }
        ]
      ]
    },
    ""Get latest commit SHA on main  via GitHub API"": {
      ""main"": [
        [
          {
            ""node"": ""Create new branch via GitHub API"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Automated daily workflow backup to GitHub,"{
  ""nodes"": [
    {
      ""id"": ""2aafc10f-0bb7-419f-a6b3-fa90f5f68653"",
      ""name"": ""Schedule Trigger"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        100,
        -20
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {}
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""da87b4f8-4507-456b-bfc3-3ae7d9400449"",
      ""name"": ""Retrieve workflows"",
      ""type"": ""n8n-nodes-base.n8n"",
      ""position"": [
        580,
        -20
      ],
      ""parameters"": {
        ""filters"": {},
        ""requestOptions"": {}
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""6cd7d968-6fa0-4ab0-ac58-ceb15c8b7b4a"",
      ""name"": ""Aggregate"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        420,
        -20
      ],
      ""parameters"": {
        ""options"": {},
        ""fieldsToAggregate"": {
          ""fieldToAggregate"": [
            {
              ""fieldToAggregate"": ""name""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""854f6e82-babb-474e-a138-2a6c398fd60e"",
      ""name"": ""List files from repo"",
      ""type"": ""n8n-nodes-base.github"",
      ""position"": [
        260,
        -20
      ],
      ""webhookId"": ""354d699e-44b0-4444-9d31-af7fd4ff5561"",
      ""parameters"": {
        ""owner"": {
          ""__rl"": true,
          ""mode"": ""name"",
          ""value"": """"
        },
        ""filePath"": ""="",
        ""resource"": ""file"",
        ""operation"": ""list"",
        ""repository"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": """"
        },
        ""authentication"": ""oAuth2""
      },
      ""typeVersion"": 1,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""8abba016-1f34-420a-b10b-3c8e44297725"",
      ""name"": ""Update file"",
      ""type"": ""n8n-nodes-base.github"",
      ""position"": [
        1380,
        -100
      ],
      ""webhookId"": ""27218087-8df7-474d-a39f-70cfa9c34ec8"",
      ""parameters"": {
        ""owner"": {
          ""__rl"": true,
          ""mode"": ""name"",
          ""value"": """"
        },
        ""filePath"": ""={{ $('Retrieve workflows').item.json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json"",
        ""resource"": ""file"",
        ""operation"": ""edit"",
        ""repository"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": """"
        },
        ""fileContent"": ""={{ $('To base64').item.json.data }}"",
        ""commitMessage"": ""=backup-{{ $('Commit date & file name').item.json.commitDate }}"",
        ""authentication"": ""oAuth2""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d55efcc7-5873-4c9a-b374-b7b31814905b"",
      ""name"": ""Upload file"",
      ""type"": ""n8n-nodes-base.github"",
      ""position"": [
        1380,
        60
      ],
      ""webhookId"": ""ce4b561b-acb9-4cd8-b76f-4928dada9674"",
      ""parameters"": {
        ""owner"": {
          ""__rl"": true,
          ""mode"": ""name"",
          ""value"": """"
        },
        ""filePath"": ""={{ $('Retrieve workflows').item.json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json"",
        ""resource"": ""file"",
        ""repository"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": """"
        },
        ""fileContent"": ""={{ $('To base64').item.json.data }}"",
        ""commitMessage"": ""=backup-{{ $node['Commit date & file name'].json.commitDate }}"",
        ""authentication"": ""oAuth2""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""09909c9f-8a68-4670-8396-65fae9be51ff"",
      ""name"": ""Check if file exists"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1220,
        -20
      ],
      ""parameters"": {
        ""conditions"": {
          ""string"": [
            {
              ""value1"": ""={{ $('Aggregate').item.json.name }}"",
              ""value2"": ""={{ $('Retrieve workflows').item.json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json"",
              ""operation"": ""contains""
            }
          ]
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""43990124-eac4-4c57-9da3-39053d9e5850"",
      ""name"": ""Json file"",
      ""type"": ""n8n-nodes-base.convertToFile"",
      ""position"": [
        740,
        -20
      ],
      ""parameters"": {
        ""mode"": ""each"",
        ""options"": {
          ""format"": true
        },
        ""operation"": ""toJson""
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""956de457-4d05-4ea8-be7b-390861a739d4"",
      ""name"": ""To base64"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        900,
        -20
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""binaryToPropery""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""fc258985-2621-42a3-9bc6-01048a92b702"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        240,
        -160
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 300,
        ""height"": 380,
        ""content"": ""### Retrieve previous file names from Github""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1bfedd8f-1921-4f33-aa45-7ab612f26059"",
      ""name"": ""Commit date & file name"",
      ""type"": ""n8n-nodes-base.set"",
      ""position"": [
        1060,
        -20
      ],
      ""parameters"": {
        ""options"": {},
        ""assignments"": {
          ""assignments"": [
            {
              ""id"": ""fe4a36ef-9f04-40e3-99bd-cc517a49b440"",
              ""name"": ""commitDate"",
              ""type"": ""string"",
              ""value"": ""={{ $now.format('dd-MM-yyyy/H:mm') }}""
            },
            {
              ""id"": ""b0fe1bcc-e79c-4a6b-b8b4-44222c8bf4e8"",
              ""name"": ""fileName"",
              ""type"": ""string"",
              ""value"": ""={{ $('Retrieve workflows').item.json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json""
            }
          ]
        }
      },
      ""typeVersion"": 3.4
    },
    {
      ""id"": ""2f36af66-12ca-451a-a1ca-c5a71b94b644"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        560,
        -160
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 460,
        ""height"": 380,
        ""content"": ""### Retrieve and process workflows from n8n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""dc914f31-e6b5-43b0-8a4e-f9f46118fa30"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1040,
        -160
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 460,
        ""height"": 380,
        ""content"": ""### Commit + edit/create files if needed""
      },
      ""typeVersion"": 1
    }
  ],
  ""connections"": {
    ""Aggregate"": {
      ""main"": [
        [
          {
            ""node"": ""Retrieve workflows"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Json file"": {
      ""main"": [
        [
          {
            ""node"": ""To base64"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""To base64"": {
      ""main"": [
        [
          {
            ""node"": ""Commit date & file name"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Schedule Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""List files from repo"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Retrieve workflows"": {
      ""main"": [
        [
          {
            ""node"": ""Json file"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Check if file exists"": {
      ""main"": [
        [
          {
            ""node"": ""Update file"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Upload file"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""List files from repo"": {
      ""main"": [
        [
          {
            ""node"": ""Aggregate"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Commit date & file name"": {
      ""main"": [
        [
          {
            ""node"": ""Check if file exists"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
AI Agent To Chat With Files In Supabase Storage and Google Drive,"{
  ""meta"": {
    ""instanceId"": ""6a2a7715680b8313f7cb4676321c5baa46680adfb913072f089f2766f42e43bd""
  },
  ""nodes"": [
    {
      ""id"": ""f577f6bd-b1a4-48ec-9329-7bccc3fc1463"",
      ""name"": ""Get All files"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        400,
        -100
      ],
      ""parameters"": {
        ""url"": ""=https://yqtvdcvjboenlblgcivl.supabase.co/storage/v1/object/list/private"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""prefix\"": \""\"",\n  \""limit\"": 100,\n  \""offset\"": 0,\n  \""sortBy\"": {\n    \""column\"": \""name\"",\n    \""order\"": \""asc\""\n  }\n}"",
        ""sendBody"": true,
        ""specifyBody"": ""json"",
        ""authentication"": ""predefinedCredentialType"",
        ""nodeCredentialType"": ""supabaseApi""
      },
      ""credentials"": {
        ""supabaseApi"": {
          ""id"": ""t8AQJzvZvrOMDLec"",
          ""name"": ""Supabase account My Airtable Gen""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""10693bc8-560d-4cf6-8bd0-2fe3f4d863d1"",
      ""name"": ""Default Data Loader"",
      ""type"": ""@n8n/n8n-nodes-langchain.documentDefaultDataLoader"",
      ""position"": [
        1780,
        100
      ],
      ""parameters"": {
        ""options"": {
          ""metadata"": {
            ""metadataValues"": [
              {
                ""name"": ""=file_id"",
                ""value"": ""={{ $json.id }}""
              }
            ]
          }
        },
        ""jsonData"": ""={{ $('Merge').item.json.data ?? $('Merge').item.json.text }}"",
        ""jsonMode"": ""expressionData""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""49428060-e707-4269-8344-77b301f56f7c"",
      ""name"": ""Recursive Character Text Splitter"",
      ""type"": ""@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter"",
      ""position"": [
        1780,
        280
      ],
      ""parameters"": {
        ""options"": {},
        ""chunkSize"": 500,
        ""chunkOverlap"": 200
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""08742063-e235-4874-a128-b352786b19ce"",
      ""name"": ""Extract Document PDF"",
      ""type"": ""n8n-nodes-base.extractFromFile"",
      ""position"": [
        1240,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""operation"": ""pdf""
      },
      ""typeVersion"": 1,
      ""alwaysOutputData"": false
    },
    {
      ""id"": ""21f19360-d7ce-4106-ae5a-aa0f15b7c4aa"",
      ""name"": ""Embeddings OpenAI"",
      ""type"": ""@n8n/n8n-nodes-langchain.embeddingsOpenAi"",
      ""position"": [
        1600,
        80
      ],
      ""parameters"": {
        ""model"": ""text-embedding-3-small"",
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""fLfRtaXbR0EVD0pl"",
          ""name"": ""OpenAi account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4147409f-8686-418f-b979-04f8c8e7fe42"",
      ""name"": ""Create File record2"",
      ""type"": ""n8n-nodes-base.supabase"",
      ""position"": [
        1540,
        -100
      ],
      ""parameters"": {
        ""tableId"": ""files"",
        ""fieldsUi"": {
          ""fieldValues"": [
            {
              ""fieldId"": ""name"",
              ""fieldValue"": ""={{ $('Loop Over Items').item.json.name }}""
            },
            {
              ""fieldId"": ""storage_id"",
              ""fieldValue"": ""={{ $('Loop Over Items').item.json.id }}""
            }
          ]
        }
      },
      ""credentials"": {
        ""supabaseApi"": {
          ""id"": ""t8AQJzvZvrOMDLec"",
          ""name"": ""Supabase account My Airtable Gen""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""016f1afe-172b-4609-b451-8d67609214d3"",
      ""name"": ""If"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        720,
        -100
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""9b14e306-a04d-40f7-bc5b-b8eda8d8f7f2"",
              ""operator"": {
                ""type"": ""boolean"",
                ""operation"": ""true"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ \n    !$('Aggregate').item.json.data || \n    !Array.isArray($('Aggregate').item.json.data) || \n    !$('Aggregate').item.json.data.some(item => \n        item.storage_id === $('Loop Over Items').item.json.id \n    ) \n}}"",
              ""rightValue"": """"
            },
            {
              ""id"": ""c3c0af88-9aea-4539-8948-1b69e601c27c"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notEquals""
              },
              ""leftValue"": ""={{ $json.name }}"",
              ""rightValue"": "".emptyFolderPlaceholder""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""75e8a7db-8c4a-4ad8-b902-062cbc93e1eb"",
      ""name"": ""Get All Files"",
      ""type"": ""n8n-nodes-base.supabase"",
      ""position"": [
        20,
        -100
      ],
      ""parameters"": {
        ""tableId"": ""files"",
        ""operation"": ""getAll""
      },
      ""credentials"": {
        ""supabaseApi"": {
          ""id"": ""t8AQJzvZvrOMDLec"",
          ""name"": ""Supabase account My Airtable Gen""
        }
      },
      ""typeVersion"": 1,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""b22a3bab-f615-4d8a-8832-ce25b1a385fe"",
      ""name"": ""Download"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        900,
        -100
      ],
      ""parameters"": {
        ""url"": ""=https://yqtvdcvjboenlblgcivl.supabase.co/storage/v1/object/private/{{ $json.name }}"",
        ""options"": {},
        ""authentication"": ""predefinedCredentialType"",
        ""nodeCredentialType"": ""supabaseApi""
      },
      ""credentials"": {
        ""supabaseApi"": {
          ""id"": ""t8AQJzvZvrOMDLec"",
          ""name"": ""Supabase account My Airtable Gen""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""50d1fede-4bd0-4cd4-b74a-7d689fe211cc"",
      ""name"": ""Loop Over Items"",
      ""type"": ""n8n-nodes-base.splitInBatches"",
      ""position"": [
        560,
        -100
      ],
      ""parameters"": {
        ""options"": {},
        ""batchSize"": ""=1""
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""f9c23b5e-0b40-4886-b54f-59fb46132d3f"",
      ""name"": ""When clicking ‘Test workflow’"",
      ""type"": ""n8n-nodes-base.manualTrigger"",
      ""position"": [
        -160,
        -100
      ],
      ""parameters"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""0a0ec290-2c3d-40ba-8d03-6abf75202e73"",
      ""name"": ""Aggregate"",
      ""type"": ""n8n-nodes-base.aggregate"",
      ""position"": [
        220,
        -100
      ],
      ""parameters"": {
        ""options"": {},
        ""aggregate"": ""aggregateAllItemData""
      },
      ""typeVersion"": 1,
      ""alwaysOutputData"": true
    },
    {
      ""id"": ""32b3e2e1-2d25-4dd1-93e8-3f693beb7b6f"",
      ""name"": ""When chat message received"",
      ""type"": ""@n8n/n8n-nodes-langchain.chatTrigger"",
      ""position"": [
        800,
        -1020
      ],
      ""webhookId"": ""3c40d311-7996-4ed4-b2fa-c73bea5f4cf5"",
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""79073b5c-a4ad-45a6-bbfa-e900a05bfde3"",
      ""name"": ""OpenAI Chat Model1"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        940,
        -820
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""zJhr5piyEwVnWtaI"",
          ""name"": ""OpenAi club""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""f8663483-76d5-4fc8-ad07-7eec815ff7a6"",
      ""name"": ""Embeddings OpenAI2"",
      ""type"": ""@n8n/n8n-nodes-langchain.embeddingsOpenAi"",
      ""position"": [
        1020,
        -540
      ],
      ""parameters"": {
        ""model"": ""text-embedding-3-small"",
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""SphXAX7rlwRLkiox"",
          ""name"": ""Test club key""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a1458799-d379-46de-93e6-a5ba0c665163"",
      ""name"": ""OpenAI Chat Model2"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        1300,
        -680
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""SphXAX7rlwRLkiox"",
          ""name"": ""Test club key""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d6eeda2f-c984-406d-a625-726840308413"",
      ""name"": ""Vector Store Tool1"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolVectorStore"",
      ""position"": [
        1100,
        -820
      ],
      ""parameters"": {
        ""name"": ""knowledge_base"",
        ""topK"": 8,
        ""description"": ""Retrieve data about user request""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e1d9a348-7d44-4ad1-adbd-2c9a31e06876"",
      ""name"": ""Switch"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        1060,
        -100
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""outputKey"": ""txt"",
              ""conditions"": {
                ""options"": {
                  ""version"": 1,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""operator"": {
                      ""type"": ""boolean"",
                      ""operation"": ""true"",
                      ""singleValue"": true
                    },
                    ""leftValue"": ""={{$binary.data?.fileExtension == undefined }}"",
                    ""rightValue"": ""txt""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""pdf"",
              ""conditions"": {
                ""options"": {
                  ""version"": 1,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""bf04cbec-dd86-4607-988f-4c96b6fd4b58"",
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{$binary.data.fileExtension  }}"",
                    ""rightValue"": ""pdf""
                  }
                ]
              },
              ""renameOutput"": true
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.1
    },
    {
      ""id"": ""d38afb92-87ae-4e2a-a712-ec24b1efd105"",
      ""name"": ""Insert into Supabase Vectorstore"",
      ""type"": ""@n8n/n8n-nodes-langchain.vectorStoreSupabase"",
      ""position"": [
        1700,
        -100
      ],
      ""parameters"": {
        ""mode"": ""insert"",
        ""options"": {
          ""queryName"": ""match_documents""
        },
        ""tableName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""documents"",
          ""cachedResultName"": ""documents""
        }
      },
      ""credentials"": {
        ""supabaseApi"": {
          ""id"": ""t8AQJzvZvrOMDLec"",
          ""name"": ""Supabase account My Airtable Gen""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1a903b2e-cab0-4798-b820-ec08d6a71ddd"",
      ""name"": ""Merge"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        1380,
        -100
      ],
      ""parameters"": {},
      ""typeVersion"": 3
    },
    {
      ""id"": ""3afd552e-4995-493e-9cd5-ef496dfe359f"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        1020,
        -1020
      ],
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 1.7
    },
    {
      ""id"": ""d9688acc-311b-42fd-afa8-2c0e493be34b"",
      ""name"": ""Supabase Vector Store"",
      ""type"": ""@n8n/n8n-nodes-langchain.vectorStoreSupabase"",
      ""position"": [
        1020,
        -660
      ],
      ""parameters"": {
        ""options"": {
          ""metadata"": {
            ""metadataValues"": [
              {
                ""name"": ""file_id"",
                ""value"": ""300b0128-0955-4058-b0d3-a9aefe728432""
              }
            ]
          }
        },
        ""tableName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""documents"",
          ""cachedResultName"": ""documents""
        }
      },
      ""credentials"": {
        ""supabaseApi"": {
          ""id"": ""t8AQJzvZvrOMDLec"",
          ""name"": ""Supabase account My Airtable Gen""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""66df007c-0418-4551-950e-32e7d79840bd"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        340,
        -220
      ],
      ""parameters"": {
        ""height"": 89.3775420487804,
        ""content"": ""### Replace Storage name, database ID and credentials.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b164b520-20dd-44a4-aa3b-647391786b20"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -20,
        -220
      ],
      ""parameters"": {
        ""height"": 80,
        ""content"": ""### Replace credentials.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""8688c219-5af4-4e54-9fd1-91851829445b"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1540,
        -220
      ],
      ""parameters"": {
        ""height"": 80,
        ""content"": ""### Replace credentials.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""45c6ece4-f849-4496-8149-31385f5e36a4"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        840,
        -220
      ],
      ""parameters"": {
        ""height"": 89.3775420487804,
        ""content"": ""### Replace Storage name, database ID and credentials.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""2ca07cb0-b5f4-4761-b954-faf2131872d9"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1500,
        220
      ],
      ""parameters"": {
        ""height"": 80,
        ""content"": ""### Replace credentials.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""8d682dae-6f88-42f0-a717-affffd37d882"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1140,
        -520
      ],
      ""parameters"": {
        ""height"": 80,
        ""content"": ""### Replace credentials.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""796b5dca-d60e-43a9-afe8-194244643557"",
      ""name"": ""Sticky Note9"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -520,
        -940
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 330.5152611046425,
        ""height"": 239.5888196628349,
        ""content"": ""### ... or watch set up video [10 min]\n[![Youtube Thumbnail](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773273/Youtube%20Thumbs/Chat%20With%20FIles.png)](https://www.youtube.com/watch?v=glWUkdZe_3w)\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""eba121de-a3f7-4ba5-8396-f7d64e648322"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -820,
        -1460
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 636.2128494576581,
        ""height"": 497.1532689930921,
        ""content"": ""![5min Logo](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773200/Skool%20Assets/ejm3hqnvhgwpnu2fv92s.png)\n## AI Agent To Chat With Files In Supabase Storage\n**Made by [Mark Shcherbakov](https://www.linkedin.com/in/marklowcoding/) from community [5minAI](https://www.skool.com/5minai-2861)**\n\nManually retrieving and analyzing specific information from large document repositories is time-consuming and inefficient. This workflow automates the process by vectorizing documents and enabling AI-powered interactions, making it easy to query and retrieve context-based information from uploaded files.\n\nThe workflow integrates Supabase with an AI-powered chatbot to process, store, and query text and PDF files. The steps include:\n- Fetching and comparing files to avoid duplicate processing.\n- Handling file downloads and extracting content based on the file type.\n- Converting documents into vectorized data for contextual information retrieval.\n- Storing and querying vectorized data from a Supabase vector store.\n\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""df054036-d6b9-4f53-86cb-85ad96f07d0e"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -820,
        -940
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 280.2462120317618,
        ""height"": 545.9087885077763,
        ""content"": ""### Set up steps\n\n1. **Fetch File List from Supabase**:\n   - Use Supabase to retrieve the stored file list from a specified bucket.\n   - Add logic to manage empty folder placeholders returned by Supabase, avoiding incorrect processing.\n\n2. **Compare and Filter Files**:\n   - Aggregate the files retrieved from storage and compare them to the existing list in the Supabase `files` table.\n   - Exclude duplicates and skip placeholder files to ensure only unprocessed files are handled.\n\n3. **Handle File Downloads**:\n   - Download new files using detailed storage configurations for public/private access.\n   - Adjust the storage settings and GET requests to match your Supabase setup.\n\n4. **File Type Processing**:\n   - Use a Switch node to target specific file types (e.g., PDFs or text files).\n   - Employ relevant tools to process the content:\n     - For PDFs, extract embedded content.\n     - For text files, directly process the text data.\n\n5. **Content Chunking**:\n   - Break large text data into smaller chunks using the Text Splitter node.\n   - Define chunk size (default: 500 tokens) and overlap to retain necessary context across chunks.\n\n6. **Vector Embedding Creation**:\n   - Generate vectorized embeddings for the processed content using OpenAI's embedding tools.\n   - Ensure metadata, such as file ID, is included for easy data retrieval.\n\n7. **Store Vectorized Data**:\n   - Save the vectorized information into a dedicated Supabase vector store.\n   - Use the default schema and table provided by Supabase for seamless setup.\n\n8. **AI Chatbot Integration**:\n   - Add a chatbot node to handle user input and retrieve relevant document chunks.\n   - Use metadata like file ID for targeted queries, especially when multiple documents are involved.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""450a1e49-4be9-451a-9d05-2860e29c3695"",
      ""name"": ""Sticky Note8"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        540,
        -1160
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 951.7421645394404,
        ""height"": 809.7437181509877,
        ""content"": ""## Scenario 2 - AI agent""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c3814c5d-8881-4598-897e-268019bee1bc"",
      ""name"": ""Sticky Note10"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -260,
        -280
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 2304.723519246249,
        ""height"": 739.2522526116408,
        ""content"": ""## Scenario 1 - Flow for adding new files from Supabase storage""
      },
      ""typeVersion"": 1
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""If"": {
      ""main"": [
        [
          {
            ""node"": ""Download"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Loop Over Items"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Merge"": {
      ""main"": [
        [
          {
            ""node"": ""Create File record2"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Switch"": {
      ""main"": [
        [
          {
            ""node"": ""Merge"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Extract Document PDF"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Download"": {
      ""main"": [
        [
          {
            ""node"": ""Switch"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Aggregate"": {
      ""main"": [
        [
          {
            ""node"": ""Get All files"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get All Files"": {
      ""main"": [
        [
          {
            ""node"": ""Aggregate"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get All files"": {
      ""main"": [
        [
          {
            ""node"": ""Loop Over Items"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Loop Over Items"": {
      ""main"": [
        null,
        [
          {
            ""node"": ""If"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Embeddings OpenAI"": {
      ""ai_embedding"": [
        [
          {
            ""node"": ""Insert into Supabase Vectorstore"",
            ""type"": ""ai_embedding"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Embeddings OpenAI2"": {
      ""ai_embedding"": [
        [
          {
            ""node"": ""Supabase Vector Store"",
            ""type"": ""ai_embedding"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model1"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model2"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""Vector Store Tool1"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Vector Store Tool1"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Create File record2"": {
      ""main"": [
        [
          {
            ""node"": ""Insert into Supabase Vectorstore"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Default Data Loader"": {
      ""ai_document"": [
        [
          {
            ""node"": ""Insert into Supabase Vectorstore"",
            ""type"": ""ai_document"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract Document PDF"": {
      ""main"": [
        [
          {
            ""node"": ""Merge"",
            ""type"": ""main"",
            ""index"": 1
          }
        ]
      ]
    },
    ""Supabase Vector Store"": {
      ""ai_vectorStore"": [
        [
          {
            ""node"": ""Vector Store Tool1"",
            ""type"": ""ai_vectorStore"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When chat message received"": {
      ""main"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Insert into Supabase Vectorstore"": {
      ""main"": [
        [
          {
            ""node"": ""Loop Over Items"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Recursive Character Text Splitter"": {
      ""ai_textSplitter"": [
        [
          {
            ""node"": ""Default Data Loader"",
            ""type"": ""ai_textSplitter"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When clicking ‘Test workflow’"": {
      ""main"": [
        [
          {
            ""node"": ""Get All Files"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Monitor Server Uptime & Get Email Alerts with Google Sheets,"{
  ""id"": ""pcLi17oUJK9pSaee"",
  ""meta"": {
    ""instanceId"": ""10ac0d272b984a3e01d44645b4be41105d42352c9db9f4c0c7f5be7946b87d41"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""Web Server Monitor."",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""014e1202-3822-4d3f-817e-31f64c8bd5f5"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -680,
        -440
      ],
      ""parameters"": {
        ""width"": 560,
        ""height"": 540,
        ""content"": ""📘 Node Descriptions for Your Web Server Monitor Workflow\n\n⏰ 1. Schedule Trigger  \nTriggers the workflow every minute to initiate regular checks on server availability.\n\n📄 2. Web Servers List (Google Sheets)  \nFetches a list of server hostnames or IP addresses from a Google Sheet.  \nEach row is treated as one server. This makes server management easy — no need to edit the workflow to add/remove servers.\n\n🌐 3. Server Alive Check (HTTP) \nSends an HTTP GET request to each server (e.g., http://your-server.com).  \nIf the request fails, the error path is triggered.  \n\n📝 4. Web Server Alive Log (Google Sheets)  \nLogs successful server checks into a separate Sheet with a timestamp.\nThis log helps track uptime history, verify server health, and generate availability reports.\n\n🚨📧 5. Server Down Notification (Gmail)  \nSends an alert email if a server does not respond or returns an error.  \nIncludes the server address and the timestamp of failure.\n\n📝 6. Web Server Down Log (Google Sheets)\nLogs the failed server checks into another Sheet with a timestamp.  \nUseful for uptime reporting, debugging, and audit tracking.\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""94a3454c-69bd-4a5d-b169-8f3772a41321"",
      ""name"": ""Schedule Trigger"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        0,
        0
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {
              ""field"": ""minutes"",
              ""minutesInterval"": 1
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""f92fcadf-0b13-42ac-abed-aaf169d0ed76"",
      ""name"": ""Server-Monitor"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        220,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": 524060827,
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1OiwBkf3bs3tcfi5cAIrOl_GrXw2EfQLdcPbh6SaBFKQ/edit#gid=524060827"",
          ""cachedResultName"": ""Server_List""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1OiwBkf3bs3tcfi5cAIrOl_GrXw2EfQLdcPbh6SaBFKQ"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1OiwBkf3bs3tcfi5cAIrOl_GrXw2EfQLdcPbh6SaBFKQ/edit?usp=drivesdk"",
          ""cachedResultName"": ""Server-Monitor""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""8cXGgTelVK5DewVr"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""c168a1f9-1f3f-40b8-95d0-51f6259d8096"",
      ""name"": ""HTTP Request"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""onError"": ""continueErrorOutput"",
      ""position"": [
        440,
        0
      ],
      ""parameters"": {
        ""url"": ""=http://{{ $json.Server }}"",
        ""options"": {}
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""0ac82373-6958-4de9-8cf7-94b0005197ff"",
      ""name"": ""Server_Status_Alive"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        660,
        -180
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Status"": ""Alive"",
            ""TimeStamp"": ""={{ $now.format('yyyy-MM-dd') }}"",
            ""Server IP Address"": ""={{ $('Server-Monitor').item.json.Server }}""
          },
          ""schema"": [
            {
              ""id"": ""TimeStamp"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""TimeStamp"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Server IP Address"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Server IP Address"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Status"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Status"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": 303958634,
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1OiwBkf3bs3tcfi5cAIrOl_GrXw2EfQLdcPbh6SaBFKQ/edit#gid=303958634"",
          ""cachedResultName"": ""Server_Status_Alive""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1OiwBkf3bs3tcfi5cAIrOl_GrXw2EfQLdcPbh6SaBFKQ"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1OiwBkf3bs3tcfi5cAIrOl_GrXw2EfQLdcPbh6SaBFKQ/edit?usp=drivesdk"",
          ""cachedResultName"": ""Server-Monitor""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""8cXGgTelVK5DewVr"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5
    },
    {
      ""id"": ""6dc31115-4ab6-44cf-ac4f-e2af82a5355e"",
      ""name"": ""Gmail"",
      ""type"": ""n8n-nodes-base.gmail"",
      ""position"": [
        660,
        100
      ],
      ""webhookId"": ""dec1def3-c858-4a43-b96e-2655d3fa3b77"",
      ""parameters"": {
        ""message"": ""=Hi Team,\n\nAt {{$now.format('yyyy-MM-dd HH:mm:ss')}}, the following server failed to respond to ping:\n\n🔻 Server Down: {{ $json[\""Server\""] }}  \n\nPlease investigate immediately to prevent service disruption. \n\nAutomated Monitoring System\n"",
        ""options"": {},
        ""subject"": ""=🔻 Server Down: {{ $json[\""Server\""] }}: {{ $today.format('yyyy-MM-dd') }}""
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""C1RVeb9JgdvkMkP4"",
          ""name"": ""Gmail account 2""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""10262115-57a2-4c4d-9a10-89f4f6ee4ed7"",
      ""name"": ""Server_Status_Down"",
      ""type"": ""n8n-nodes-base.googleSheets"",
      ""position"": [
        880,
        100
      ],
      ""parameters"": {
        ""columns"": {
          ""value"": {
            ""Status"": ""Down"",
            ""TimeStamp"": ""={{$now.format('yyyy-MM-dd HH:mm:ss')}}"",
            ""Server IP Address"": ""={{ $('Server-Monitor').item.json.Server }}""
          },
          ""schema"": [
            {
              ""id"": ""TimeStamp"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""TimeStamp"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Server IP Address"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Server IP Address"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            },
            {
              ""id"": ""Status"",
              ""type"": ""string"",
              ""display"": true,
              ""required"": false,
              ""displayName"": ""Status"",
              ""defaultMatch"": false,
              ""canBeUsedToMatch"": true
            }
          ],
          ""mappingMode"": ""defineBelow"",
          ""matchingColumns"": [],
          ""attemptToConvertTypes"": false,
          ""convertFieldsToString"": false
        },
        ""options"": {},
        ""operation"": ""append"",
        ""sheetName"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gid=0"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1OiwBkf3bs3tcfi5cAIrOl_GrXw2EfQLdcPbh6SaBFKQ/edit#gid=0"",
          ""cachedResultName"": ""Server_Status_Down""
        },
        ""documentId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1OiwBkf3bs3tcfi5cAIrOl_GrXw2EfQLdcPbh6SaBFKQ"",
          ""cachedResultUrl"": ""https://docs.google.com/spreadsheets/d/1OiwBkf3bs3tcfi5cAIrOl_GrXw2EfQLdcPbh6SaBFKQ/edit?usp=drivesdk"",
          ""cachedResultName"": ""Server-Monitor""
        }
      },
      ""credentials"": {
        ""googleSheetsOAuth2Api"": {
          ""id"": ""8cXGgTelVK5DewVr"",
          ""name"": ""Google Sheets account""
        }
      },
      ""typeVersion"": 4.5
    }
  ],
  ""active"": false,
  ""pinData"": {},
  ""settings"": {
    ""executionOrder"": ""v1""
  },
  ""versionId"": ""21468219-4434-4a0c-a3c4-9068baccc3cc"",
  ""connections"": {
    ""Gmail"": {
      ""main"": [
        [
          {
            ""node"": ""Server_Status_Down"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""HTTP Request"": {
      ""main"": [
        [
          {
            ""node"": ""Server_Status_Alive"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Gmail"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Server-Monitor"": {
      ""main"": [
        [
          {
            ""node"": ""HTTP Request"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Schedule Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""Server-Monitor"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Conversational Kubernetes Management with GPT-4o and MCP Integration,"{
  ""meta"": {
    ""instanceId"": ""66f06061721f1f7966ba3bdd29bb7db37d84222e0e73cbdc5057760193ad29bf"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""41c2617e-b606-473d-ac07-ac0c5901935a"",
      ""name"": ""When chat message received"",
      ""type"": ""@n8n/n8n-nodes-langchain.chatTrigger"",
      ""position"": [
        400,
        -80
      ],
      ""webhookId"": ""2eb47787-160f-49ad-b98d-1d8ee757765c"",
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""be64c331-8fb2-4efd-a10e-beb1938cdb71"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        800,
        -80
      ],
      ""parameters"": {
        ""options"": {
          ""systemMessage"": ""=You are a Kubernetes assistant connected to an MCP (Model Context Protocol) Server. Your role is to help users monitor, inspect, and troubleshoot Kubernetes resources using the following tools.\ncurrent time is {{ $now.setZone('Asia/Tehran') }}\n\nAvailable Tools:\n1. getEvents(namespace) – Fetch events in the given namespace.\n2. getPodsLogs(namespace, podName) – Retrieve logs for a specific pod.\n3. getResource(namespace, resourceKind, resourceName) – Get details of a specific resource.\n4. createOrUpdateResource(namespace, resourceYaml) – Create or update a resource using full YAML.\n5. getNodeMetrics(nodeName) – Retrieve CPU and memory usage of a node.\n6. getPodMetrics(namespace, podName) – Retrieve CPU and memory usage of a pod.\n7. describeResource(namespace, resourceKind, resourceName) – Detailed description of a resource.\n8. listResources(namespace, resourceKind) – List all resources of a given kind in a namespace. for example{\""Kind\"": \""Pod\"",\""namespace\"": \""x\""}\n9. getAPIResources() – List all supported resource kinds in the cluster.\n\nUsage Rules:\n***keep your answers short and meaningful***\n- Always validate input arguments before calling any tool.\n- Ask the user for any missing information (e.g., namespace, podName, resourceKind).\n- Do not assume defaults; always confirm with the user.\n- Avoid destructive operations unless explicitly instructed (only createOrUpdateResource modifies the cluster).\n- Use getAPIResources() to help the user explore available resource kinds.\n- Respond with concise, plain-language explanations of the results when helpful.\n""
        }
      },
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""61247bd0-5e76-4165-af70-26c0d605d12f"",
      ""name"": ""Simple Memory"",
      ""type"": ""@n8n/n8n-nodes-langchain.memoryBufferWindow"",
      ""position"": [
        340,
        140
      ],
      ""parameters"": {},
      ""typeVersion"": 1.3
    },
    {
      ""id"": ""f8136d5d-c5db-4c4f-a080-ad65d5ef9aac"",
      ""name"": ""MCP Client"",
      ""type"": ""n8n-nodes-mcp.mcpClientTool"",
      ""position"": [
        460,
        260
      ],
      ""parameters"": {
        ""connectionType"": ""sse""
      },
      ""credentials"": {
        ""mcpClientSseApi"": {
          ""id"": ""eyJUyjbc2529AKLS"",
          ""name"": ""k8s""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""47eae87b-f2fa-46d5-9f77-d168e47e9bfe"",
      ""name"": ""getAPIResources"",
      ""type"": ""n8n-nodes-mcp.mcpClientTool"",
      ""position"": [
        580,
        260
      ],
      ""parameters"": {
        ""toolName"": ""getAPIResources"",
        ""operation"": ""executeTool"",
        ""connectionType"": ""sse"",
        ""toolParameters"": ""{\n  \""jsonrpc\"": \""2.0\"",\n  \""id\"": 1,\n  \""method\"": \""getAPIResources\"",\n  \""params\"": {\n    \""arguments\"": {\n      \""includeNamespaceScoped\"": true,\n      \""includeClusterScoped\"": true\n    }\n  }\n}""
      },
      ""credentials"": {
        ""mcpClientSseApi"": {
          ""id"": ""eyJUyjbc2529AKLS"",
          ""name"": ""k8s""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""648eacf9-436d-44d6-9389-a0a5212071fa"",
      ""name"": ""listResources"",
      ""type"": ""n8n-nodes-mcp.mcpClientTool"",
      ""position"": [
        740,
        260
      ],
      ""parameters"": {
        ""toolName"": ""listResources"",
        ""operation"": ""executeTool"",
        ""connectionType"": ""sse"",
        ""toolParameters"": ""={\""Kind\"": \""{{ $fromAI('Kind', 'Select the kind given by ai agent', 'string') }}\"",\n\""namespace\"" : \""{{ $fromAI('namespace', 'Select the namespace given by ai agent', 'string') }}\""}""
      },
      ""credentials"": {
        ""mcpClientSseApi"": {
          ""id"": ""eyJUyjbc2529AKLS"",
          ""name"": ""k8s""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a62f3378-65fe-4178-9fba-b52ba437ca38"",
      ""name"": ""describeResource"",
      ""type"": ""n8n-nodes-mcp.mcpClientTool"",
      ""position"": [
        900,
        260
      ],
      ""parameters"": {
        ""toolName"": ""describeResource"",
        ""operation"": ""executeTool"",
        ""connectionType"": ""sse"",
        ""toolParameters"": ""={\""Kind\"": \""{{ $fromAI('Kind', 'Select the kind given by ai agent', 'string') }}\"",\n\""name\"" : \""{{ $fromAI('name', 'Select the name given by ai agent', 'string') }}\"",\n\""namespace\"" : \""{{ $fromAI('namespace', 'Select the namespace given by ai agent', 'string') }}\""}""
      },
      ""credentials"": {
        ""mcpClientSseApi"": {
          ""id"": ""eyJUyjbc2529AKLS"",
          ""name"": ""k8s""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""c159ae52-4963-4103-93ad-083230b46da3"",
      ""name"": ""getPodMetrics"",
      ""type"": ""n8n-nodes-mcp.mcpClientTool"",
      ""position"": [
        1040,
        260
      ],
      ""parameters"": {
        ""toolName"": ""getPodMetrics"",
        ""operation"": ""executeTool"",
        ""connectionType"": ""sse"",
        ""toolParameters"": ""={\""podName\"" : \""{{ $fromAI('podName', 'Select the pod name given by ai agent', 'string') }}\"",\n\""namespace\"" : \""{{ $fromAI('namespace', 'Select the namespace given by ai agent', 'string') }}\""}""
      },
      ""credentials"": {
        ""mcpClientSseApi"": {
          ""id"": ""eyJUyjbc2529AKLS"",
          ""name"": ""k8s""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""f49b0804-b15a-4a7d-ac9f-44f51795abdf"",
      ""name"": ""getNodeMetrics"",
      ""type"": ""n8n-nodes-mcp.mcpClientTool"",
      ""position"": [
        1180,
        260
      ],
      ""parameters"": {
        ""toolName"": ""getNodeMetrics"",
        ""operation"": ""executeTool"",
        ""connectionType"": ""sse"",
        ""toolParameters"": ""={\""Name\"" : \""{{ $fromAI('Name', 'Select the name given by ai agent', 'string') }}\""}""
      },
      ""credentials"": {
        ""mcpClientSseApi"": {
          ""id"": ""eyJUyjbc2529AKLS"",
          ""name"": ""k8s""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""decd4807-5dbe-4f65-8bd5-8401ee2b0154"",
      ""name"": ""createorUpdateResource"",
      ""type"": ""n8n-nodes-mcp.mcpClientTool"",
      ""position"": [
        1340,
        240
      ],
      ""parameters"": {
        ""toolName"": ""createResource"",
        ""operation"": ""executeTool"",
        ""connectionType"": ""sse"",
        ""toolParameters"": ""={\""manifest\"" : \""{{ $fromAI('manifest', 'Select the manifest given by ai agent', 'string').trim() }}\"",\n\""namespace\"" : \""{{ $fromAI('namespace', 'Select the namespace given by ai agent', 'string') }}\""}""
      },
      ""credentials"": {
        ""mcpClientSseApi"": {
          ""id"": ""eyJUyjbc2529AKLS"",
          ""name"": ""k8s""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""1b1bc11c-565e-46f7-8b38-e74489ea2372"",
      ""name"": ""getResource"",
      ""type"": ""n8n-nodes-mcp.mcpClientTool"",
      ""position"": [
        1440,
        140
      ],
      ""parameters"": {
        ""toolName"": ""getResource"",
        ""operation"": ""executeTool"",
        ""connectionType"": ""sse"",
        ""toolParameters"": ""={\""kind\"": \""{{ $fromAI('kind', 'Select the kind given by ai agent', 'string') }}\"",\n\""name\"" : \""{{ $fromAI('name', 'Select the name given by ai agent', 'string') }}\"",\n\""namespace\"" : \""{{ $fromAI('namespace', 'Select the namespace given by ai agent', 'string') }}\""}""
      },
      ""credentials"": {
        ""mcpClientSseApi"": {
          ""id"": ""eyJUyjbc2529AKLS"",
          ""name"": ""k8s""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""f34b5527-c048-4e6e-b86a-585a586ef8ff"",
      ""name"": ""getPodsLogs"",
      ""type"": ""n8n-nodes-mcp.mcpClientTool"",
      ""position"": [
        1420,
        -20
      ],
      ""parameters"": {
        ""toolName"": ""getPodsLogs"",
        ""operation"": ""executeTool"",
        ""connectionType"": ""sse"",
        ""toolParameters"": ""={\""Name\"" : \""{{ $fromAI('Name', 'Select the name given by ai agent', 'string') }}\"",\n\""namespace\"" : \""{{ $fromAI('namespace', 'Select the namespace given by ai agent', 'string') }}\""}""
      },
      ""credentials"": {
        ""mcpClientSseApi"": {
          ""id"": ""eyJUyjbc2529AKLS"",
          ""name"": ""k8s""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""68234560-f7f9-4a6a-9579-497ff458fedc"",
      ""name"": ""getEvents"",
      ""type"": ""n8n-nodes-mcp.mcpClientTool"",
      ""position"": [
        1340,
        -160
      ],
      ""parameters"": {
        ""toolName"": ""getEvents"",
        ""operation"": ""executeTool"",
        ""connectionType"": ""sse"",
        ""toolParameters"": ""={\n\""namespace\"" : \""{{ $fromAI('namespace', 'Select the namespace given by ai agent', 'string') }}\""}""
      },
      ""credentials"": {
        ""mcpClientSseApi"": {
          ""id"": ""eyJUyjbc2529AKLS"",
          ""name"": ""k8s""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""9a20f489-799e-44aa-a6cd-2f68814113a6"",
      ""name"": ""OpenAI Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        220,
        140
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {
          ""maxTokens"": -1
        }
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""CvwUuKPhahoMTR21"",
          ""name"": ""OpenAi play ground""
        }
      },
      ""typeVersion"": 1.2
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""getEvents"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""MCP Client"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""getPodsLogs"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""getResource"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Simple Memory"": {
      ""ai_memory"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_memory"",
            ""index"": 0
          }
        ]
      ]
    },
    ""getPodMetrics"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""listResources"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""getNodeMetrics"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""getAPIResources"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""describeResource"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""OpenAI Chat Model"": {
      ""ai_languageModel"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_languageModel"",
            ""index"": 0
          }
        ]
      ]
    },
    ""createorUpdateResource"": {
      ""ai_tool"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""ai_tool"",
            ""index"": 0
          }
        ]
      ]
    },
    ""When chat message received"": {
      ""main"": [
        [
          {
            ""node"": ""AI Agent"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Website Downtime Alert via LINE + Supabase Log,"{
  ""nodes"": [
    {
      ""id"": ""6637ff1d-43ca-4545-b427-44568da387f9"",
      ""name"": ""Schedule Trigger"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        200,
        1100
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {
              ""field"": ""minutes""
            }
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""f56c8d70-222d-436b-94c3-90f0018a3742"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -180,
        700
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 2500,
        ""height"": 820,
        ""content"": ""## Monitor Website Check when Down ##""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""675c17f6-f832-4a43-ac66-a5dea421bad8"",
      ""name"": ""Get Monitors"",
      ""type"": ""n8n-nodes-base.uptimeRobot"",
      ""position"": [
        420,
        1100
      ],
      ""parameters"": {
        ""filters"": {},
        ""resource"": ""monitor""
      },
      ""credentials"": {
        ""uptimeRobotApi"": {
          ""id"": ""km4n54HVtydW8mDc"",
          ""name"": ""Uptime Robot account - Synlora""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""2a73c7ca-0db5-4e1f-85f6-e9e18b7bde1b"",
      ""name"": ""LLM Message Format"",
      ""type"": ""@n8n/n8n-nodes-langchain.chainLlm"",
      ""position"": [
        1080,
        1100
      ],
      ""parameters"": {
        ""text"": ""={{ $json.text }} List all affected sites and add a short funny wish for the IT team."",
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.6
    },
    {
      ""id"": ""332f202e-c87d-49d1-aa7a-942631547058"",
      ""name"": ""OpenAI GPT-4o Mini"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatOpenAi"",
      ""position"": [
        1180,
        1320
      ],
      ""parameters"": {
        ""model"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini""
        },
        ""options"": {}
      },
      ""credentials"": {
        ""openAiApi"": {
          ""id"": ""aYpST6RW43n0s7kw"",
          ""name"": ""OpenAi account - websayamol""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""64a391a8-4bdf-43ce-887f-af7a17e93904"",
      ""name"": ""Escape Newlines"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        1460,
        1200
      ],
      ""parameters"": {
        ""jsCode"": ""const rawText = $input.first().json.text || '';\nconst cleanedText = rawText.replace(/\\n/g, '\\\\n');\nreturn [{ json: { text: cleanedText } }];""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""171b91d8-b502-4a08-9056-ac075f215983"",
      ""name"": ""Send to LINE"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1680,
        1200
      ],
      ""parameters"": {
        ""url"": ""https://api.line.me/v2/bot/message/push"",
        ""method"": ""POST"",
        ""options"": {},
        ""jsonBody"": ""={\n  \""to\"": \""<YOUR_LINE_GROUP_ID>\"",\n  \""messages\"": [\n    {\n      \""type\"": \""text\"",\n      \""text\"": \""{{ $json.text }}\""\n    }\n  ]\n} "",
        ""sendBody"": true,
        ""jsonHeaders"": ""{\n  \""Authorization\"": \""Bearer <YOUR_LINE_CHANNEL_TOKEN>\"",\n  \""Content-Type\"": \""application/json\""\n}"",
        ""sendHeaders"": true,
        ""specifyBody"": ""json"",
        ""specifyHeaders"": ""json""
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""b8b4beb8-e2a9-45d7-88b1-9409519d070f"",
      ""name"": ""Filter Down Monitors"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        640,
        1200
      ],
      ""parameters"": {
        ""jsCode"": ""const statusMap = { 0: \""⏸️ Paused\"", 1: \""🕐 Not Checked Yet\"", 2: \""✅ Up\"", 8: \""⚠️ May Be Down\"", 9: \""🔴 Down\"" };\nconst now = new Date();\nconst options = { timeZone: 'Asia/Bangkok' };\nconst dateStr = now.toLocaleDateString('en-GB', options);\nconst timeStr = now.toLocaleTimeString('en-GB', { hour: '2-digit', minute: '2-digit', hour12: false, timeZone: 'Asia/Bangkok' });\nlet message = `Some websites seem to be 🔴 down or ⚠️ unstable.\\n📅 Date: ${dateStr} Time: ${timeStr} hrs\\n\\n`;\nlet server_down = 0;\nfor (const item of items) {\n  const id = item.json.id;\n  const name = item.json.friendly_name || item.json.name;\n  const statusCode = item.json.status;\n  const statusText = statusMap[statusCode] || statusCode;\n  if ((statusCode === 8 || statusCode === 9) && id !== 798534759) {\n    message += `• ${name} ➤ ${statusText}\\n`;\n    server_down = 1;\n  }\n}\nreturn [{ json: { server_down, text: message } }];""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""2f2d9c4c-5d4e-483f-b800-f9cfe7c2e67c"",
      ""name"": ""If Down"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        860,
        1200
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.server_down.toString() }}"",
              ""rightValue"": ""1""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""4498a432-f4b6-4beb-978a-58cc9fdbbd64"",
      ""name"": ""Wait 30 Min"",
      ""type"": ""n8n-nodes-base.wait"",
      ""position"": [
        1900,
        1200
      ],
      ""parameters"": {
        ""unit"": ""minutes"",
        ""amount"": 30
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""c0b608e5-0da6-4e13-9334-35b0b6e9ab1a"",
      ""name"": ""Loop Over Monitors"",
      ""type"": ""n8n-nodes-base.splitInBatches"",
      ""position"": [
        640,
        960
      ],
      ""parameters"": {
        ""options"": {},
        ""batchSize"": ""={{ $json.id }}""
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""002eaa11-a871-4387-9cee-77c389ca43b4"",
      ""name"": ""Filter Status 9"",
      ""type"": ""n8n-nodes-base.filter"",
      ""position"": [
        860,
        1000
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""loose""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""equals""
              },
              ""leftValue"": ""={{ $json.status }}"",
              ""rightValue"": ""9""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""a6b467c6-6f0e-41ac-8d15-7d70863f6499"",
      ""name"": ""Save to Supabase"",
      ""type"": ""n8n-nodes-base.supabase"",
      ""position"": [
        860,
        800
      ],
      ""parameters"": {
        ""tableId"": ""synlora_uptime_down"",
        ""fieldsUi"": {
          ""fieldValues"": [
            {
              ""fieldId"": ""website"",
              ""fieldValue"": ""={{ $json.friendly_name }}""
            },
            {
              ""fieldId"": ""statue"",
              ""fieldValue"": ""={{ $json.status }}""
            },
            {
              ""fieldId"": ""uptime_id"",
              ""fieldValue"": ""={{ $json.id }}""
            }
          ]
        }
      },
      ""credentials"": {
        ""supabaseApi"": {
          ""id"": ""SeVvA2bO6waWD6kW"",
          ""name"": ""Supabase account_DB-Synlora_n8n""
        }
      },
      ""typeVersion"": 1
    }
  ],
  ""connections"": {
    ""If Down"": {
      ""main"": [
        [
          {
            ""node"": ""LLM Message Format"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Get Monitors"": {
      ""main"": [
        [
          {
            ""node"": ""Filter Down Monitors"",
            ""type"": ""main"",
            ""index"": 0
          },
          {
            ""node"": ""Loop Over Monitors"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Send to LINE"": {
      ""main"": [
        [
          {
            ""node"": ""Wait 30 Min"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Escape Newlines"": {
      ""main"": [
        [
          {
            ""node"": ""Send to LINE"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Filter Status 9"": {
      ""main"": [
        [
          {
            ""node"": ""Loop Over Monitors"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Schedule Trigger"": {
      ""main"": [
        [
          {
            ""node"": ""Get Monitors"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""LLM Message Format"": {
      ""main"": [
        [
          {
            ""node"": ""Escape Newlines"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Loop Over Monitors"": {
      ""main"": [
        [
          {
            ""node"": ""Save to Supabase"",
            ""type"": ""main"",
            ""index"": 0
          }
        ],
        [
          {
            ""node"": ""Filter Status 9"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Filter Down Monitors"": {
      ""main"": [
        [
          {
            ""node"": ""If Down"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Summarize Microsoft 365 Outage Alerts with ChatGPT and Send to Slack,"{
  ""id"": ""30gz7QjTektkBI2I"",
  ""meta"": {
    ""instanceId"": ""b70db38ce0f0d2b80e12348ac7eb47bc8c0a4592685b356a48495248d533047c"",
    ""templateCredsSetupCompleted"": true
  },
  ""name"": ""365 Service Alerts: Summarize and push alert to Slack"",
  ""tags"": [],
  ""nodes"": [
    {
      ""id"": ""48e59db6-a492-45bf-8865-0ec258cdd638"",
      ""name"": ""Check for 365 Service Alert"",
      ""type"": ""n8n-nodes-base.microsoftOutlookTrigger"",
      ""position"": [
        720,
        0
      ],
      ""parameters"": {
        ""output"": ""raw"",
        ""filters"": {
          ""sender"": ""o365mc@microsoft.com""
        },
        ""options"": {},
        ""pollTimes"": {
          ""item"": [
            {
              ""mode"": ""everyMinute""
            }
          ]
        }
      },
      ""credentials"": {},
      ""typeVersion"": 1
    },
    {
      ""id"": ""6c392e16-8bae-4336-a7ba-1c2bc39a48ec"",
      ""name"": ""Post outage to Slack"",
      ""type"": ""n8n-nodes-base.slack"",
      ""position"": [
        1740,
        0
      ],
      ""webhookId"": """",
      ""parameters"": {
        ""text"": ""={{ $json.blocks[0].text.text }}"",
        ""select"": ""channel"",
        ""blocksUi"": ""={{ $json }}"",
        ""channelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": """",
          ""cachedResultName"": """"
        },
        ""messageType"": ""block"",
        ""otherOptions"": {
          ""mrkdwn"": true,
          ""includeLinkToWorkflow"": false
        }
      },
      ""credentials"": {
        ""slackApi"": {
          ""id"": """",
          ""name"": ""Slack - Bot""
        }
      },
      ""typeVersion"": 2.3
    },
    {
      ""id"": ""45e2f8bc-48e8-489a-9a5e-bdbbbb399bf7"",
      ""name"": ""Clear email alert from mailbox"",
      ""type"": ""n8n-nodes-base.microsoftOutlook"",
      ""position"": [
        1940,
        0
      ],
      ""webhookId"": """",
      ""parameters"": {
        ""messageId"": {
          ""__rl"": true,
          ""mode"": ""id"",
          ""value"": ""={{ $('Check for 365 Service Alert').item.json.id }}""
        },
        ""operation"": ""delete""
      },
      ""credentials"": {},
      ""typeVersion"": 2
    },
    {
      ""id"": ""9a9c12d7-e43d-4db8-b764-16112d7ec61e"",
      ""name"": ""Summarize service alert"",
      ""type"": ""@n8n/n8n-nodes-langchain.openAi"",
      ""position"": [
        1180,
        0
      ],
      ""parameters"": {
        ""modelId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""gpt-4o-mini"",
          ""cachedResultName"": ""GPT-4O-MINI""
        },
        ""options"": {},
        ""messages"": {
          ""values"": [
            {
              ""role"": ""system"",
              ""content"": ""You are a summarization assistant that rewrites Microsoft 365 Service Health alerts into Slack Block Kit-compatible messages for business and IT stakeholders.\n\nYour output must follow these rules:\n- Provide the alert summary as a **single string**, written in Slack mrkdwn format.\n- Begin with an appropriate emoji to reflect status:\n  - 🟡 for *Investigating*\n  - 🛠️ for *Fix in Progress*\n  - ✅ for *Service Restored*\n  - ❌ for *Outage*\n- Include the **service name**, a **short issue summary**, and whether **users may have been affected**.\n- Assume the organization has users primarily in the U.S. and Australia. If those regions are affected, state: \""_Your users may have been affected._\"" Otherwise, add: \""_No impact expected for your user base._\"". Dont specify the impact to users if this a Resolved or Service Restored alert.\n- The summary must be concise (2–3 short lines), clear, and neutral in tone.\n\nAdditionally, return the incident ID (e.g., `EX394347`) and the full incident link separately. These are used to create a button.\n\nYour final output must be a JSON object with these three fields:\n- `summaryText`: the markdown summary text for Slack\n- `incidentId`: the incident ID (e.g., EX394347)\n- `incidentLink`: the incident URL""
            },
            {
              ""content"": ""=Summarize the following Microsoft 365 alert for Slack.\n<alert>{{ $json.extractedText }}</alert>\n<hyperlink>{{ $json.incidentLink }}</hyperlink>""
            }
          ]
        },
        ""jsonOutput"": true
      },
      ""credentials"": {},
      ""typeVersion"": 1.8
    },
    {
      ""id"": ""de4751e5-e6c2-44a8-aee5-4d6fb8f09fab"",
      ""name"": ""Generate Slack Block"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        1540,
        0
      ],
      ""parameters"": {
        ""jsCode"": ""return [{\n  json: {\n    blocks: [\n      {\n        type: \""section\"",\n        text: {\n          type: \""mrkdwn\"",\n          text: $json.message.content.summaryText\n        },\n        accessory: {\n          type: \""button\"",\n          text: {\n            type: \""plain_text\"",\n            text: `View ${$input.first().json.message.content.incidentId}`,\n            emoji: true\n          },\n          value: $json.message.content.incidentId,\n          url: $json.message.content.incidentLink,\n          action_id: \""button-action\""\n        }\n      }\n    ]\n  }\n}];\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""9dd39e09-c467-4eba-ad65-43328cd69aab"",
      ""name"": ""Extract M365 Incident text & link"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        940,
        0
      ],
      ""parameters"": {
        ""jsCode"": ""// This function runs in N8N's Code node\nconst cheerio = require(\""cheerio\"");\n\n// Get the HTML content from the previous node\nconst htmlContent = items[0].json.body.content;\n\nif (!htmlContent) {\n  throw new Error(\""No HTML content found in the input\"");\n}\n\n// Load HTML into cheerio (similar to jQuery for Node.js)\nconst $ = cheerio.load(htmlContent);\n\n// Extract the incident link from the anchor tag containing the incident ID\nconst incidentAnchor = $('a[href*=\""servicehealth?message=\""]').first();\nconst incidentLink = incidentAnchor.attr('href') || null;\n\n// Remove unnecessary elements if needed\n$('script, style, head, nav, footer, iframe, img').remove();\n\n// Extract the text content, preserving basic structure\nlet plainText = '';\n\n// Get the main content (customize selectors based on MS365 alert structure)\nconst mainContent = $('body') || $('main') || $('div.main-content');\n\n// Process text with basic formatting\nmainContent.find('h1, h2, h3, h4, h5, p, li, table, div').each((i, el) => {\n  const tag = $(el).prop('tagName').toLowerCase();\n  const text = $(el).text().trim();\n  \n  if (!text) return;\n  \n  // Add appropriate spacing and formatting\n  if (tag.startsWith('h')) {\n    plainText += `\\n\\n${text}\\n\\n`;\n  } else if (tag === 'p') {\n    plainText += `\\n${text}\\n`;\n  } else if (tag === 'li') {\n    plainText += `\\n- ${text}`;\n  } else {\n    plainText += `\\n${text}`;\n  }\n});\n\n// Clean up extra whitespace and normalize line breaks\nplainText = plainText.replace(/\\s+\\n/g, '\\n').replace(/\\n{3,}/g, '\\n\\n').trim();\n\n// Set the output\nreturn [{\n  json: {\n    extractedText: plainText,\n    incidentLink: incidentLink\n  }\n}];""
      },
      ""typeVersion"": 2
    }
  ],
  ""active"": true,
  ""pinData"": {},
  ""settings"": {
    ""callerPolicy"": ""workflowsFromSameOwner"",
    ""executionOrder"": ""v1"",
    ""saveExecutionProgress"": true
  },
  ""versionId"": ""d773a7c3-e50b-45a4-8db0-0186847510f1"",
  ""connections"": {
    ""Slack"": {
      ""main"": [
        [
          {
            ""node"": ""Microsoft Outlook"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Generate Slack Block"": {
      ""main"": [
        [
          {
            ""node"": ""Slack"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Summarize service alert"": {
      ""main"": [
        [
          {
            ""node"": ""Generate Slack Block"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Check for 365 Service Alert"": {
      ""main"": [
        [
          {
            ""node"": ""Extract M365 Incident text & link"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Extract M365 Incident text & link"": {
      ""main"": [
        [
          {
            ""node"": ""Summarize service alert"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Proxmox AI Agent with n8n and Generative AI Integration,"{
  ""meta"": {
    ""instanceId"": ""n8n.syncbricks.com""
  },
  ""nodes"": [
    {
      ""id"": ""e6d85380-7cfa-4c6e-9b0f-d390ad0cbc67"",
      ""name"": ""HTTP Request1"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1400,
        -180
      ],
      ""parameters"": {
        ""url"": ""=https://proxmox.syncbricks.com/api2/json{{ $json.output.url }}"",
        ""method"": ""=POST"",
        ""options"": {
          ""allowUnauthorizedCerts"": true
        },
        ""jsonBody"": ""={{ $json.output.details }}"",
        ""sendBody"": true,
        ""specifyBody"": ""json"",
        ""authentication"": ""genericCredentialType"",
        ""genericAuthType"": ""httpHeaderAuth""
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""pJcVQegRQ5mpraoQ"",
          ""name"": ""Proxmox""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""9b497de8-0f01-40b1-8f8e-28fad1f758c4"",
      ""name"": ""Proxmox API Documentation"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolHttpRequest"",
      ""position"": [
        -300,
        40
      ],
      ""parameters"": {
        ""url"": ""https://pve.proxmox.com/pve-docs/api-viewer/index.html"",
        ""toolDescription"": ""This is Proxmox API Documentation ensure to read the details from here""
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""e7ac54a9-37be-44b5-b58e-8b631892367e"",
      ""name"": ""Auto-fixing Output Parser"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserAutofixing"",
      ""position"": [
        40,
        60
      ],
      ""parameters"": {
        ""options"": {
          ""prompt"": ""Instructions:\n--------------\n{instructions}\n--------------\nCompletion:\n--------------\n{completion}\n--------------\n\nAbove, the Completion did not satisfy the constraints given in the Instructions.\nError:\n--------------\n{error}\n--------------\n\nPlease try again. Please only respond with an answer that satisfies the constraints laid out in the Instructions:""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""5d8c8c6d-d5de-4c87-9950-46f1f5757314"",
      ""name"": ""Google Gemini Chat Model1"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""position"": [
        -40,
        360
      ],
      ""parameters"": {
        ""options"": {},
        ""modelName"": ""models/gemini-2.0-flash-exp""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""pKFvSpPWSRFpnBoB"",
          ""name"": ""Google Gemini(PaLM) Api account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""8565ac2f-0cdd-4e7f-a1e9-6f273869e068"",
      ""name"": ""Structured Output Parser"",
      ""type"": ""@n8n/n8n-nodes-langchain.outputParserStructured"",
      ""position"": [
        180,
        360
      ],
      ""parameters"": {
        ""jsonSchemaExample"": ""{\n  \""response_type\"": \""POST\"",\n  \""url\"": \""/nodes/psb1/qemu\"",\n  \""details\"": {\n    \""vmid\"": 105,\n    \""cores\"": 4,\n    \""memory\"": 8192,\n    \""net0\"": \""virtio,bridge=vmbr0\"",\n    \""disk0\"": \""local:10,format=qcow2\"",\n    \""sockets\"": 1,\n    \""ostype\"": \""l26\""\n  },\n  \""message\"": \""The VM with ID 105 has been successfully configured to be created on node psb1.\""\n}""
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""80b1ef4d-b4c7-40b4-969f-f53d0068cac7"",
      ""name"": ""Proxmox"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolHttpRequest"",
      ""position"": [
        -80,
        40
      ],
      ""parameters"": {
        ""url"": ""https://10.11.12.101:8006/api2/json/cluster/status"",
        ""authentication"": ""genericCredentialType"",
        ""genericAuthType"": ""httpHeaderAuth"",
        ""toolDescription"": ""=This is Proxmox which will help you to get the details of existing Proxmox installations, ensure to append to existing url : https://10.11.12.101:8006/api2/ to get response from existing proxmox \n\nMy prommox nodes are named as psb1, psb2 and psb3\npsb1 : https://10.11.12.101:8006/api2/\npsb2 : https://10.11.12.102:8006/api2/\npsb3 : https://10.11.12.102:8006/api2/""
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""pJcVQegRQ5mpraoQ"",
          ""name"": ""Proxmox""
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""09444fa1-3b5e-4411-b70c-cf777db971bb"",
      ""name"": ""HTTP Request"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1080,
        -320
      ],
      ""parameters"": {
        ""url"": ""=https://10.11.12.101:8006/api2/json{{ $json.output.properties.url.pattern }}"",
        ""method"": ""=GET"",
        ""options"": {
          ""allowUnauthorizedCerts"": true
        },
        ""authentication"": ""genericCredentialType"",
        ""genericAuthType"": ""httpHeaderAuth""
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""pJcVQegRQ5mpraoQ"",
          ""name"": ""Proxmox""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""d148b395-01e9-48a6-b98c-cb515fa3446d"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        900,
        -660
      ],
      ""parameters"": {
        ""width"": 736.2768017274677,
        ""height"": 1221.0199187779397,
        ""content"": ""## API Key for Proxmox\n** Create Credentails *** ensure to create credentials in Proxmox Data Center as API Key and then create credentails. \n** Add Credentials to n8n ** Click on Credentails, add new Credentails and Chose Header Auth\n** In Header Auth Below will be used \nName : Authorization\nValue : PVEAPIToken=<user>@<realm>!<token-id>=<token-value>\n\nSuppose my token id is n8n and key is 1234 so value will be as below\n\nValue : PVEAPIToken=root@pam!n8n=1234\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d356bb83-c567-44b6-ba23-3e330abf835e"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1240,
        -120
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 492.990678850593,
        ""height"": 702.0895748933872,
        ""content"": ""## Trigger\nYou can use any trigger as input, a chat, telegram, email etc""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""d2829180-9c14-4437-9ae1-1bb822d8d925"",
      ""name"": ""Google Gemini Chat Model2"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""position"": [
        1880,
        -320
      ],
      ""parameters"": {
        ""options"": {},
        ""modelName"": ""models/gemini-2.0-flash-exp""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""pKFvSpPWSRFpnBoB"",
          ""name"": ""Google Gemini(PaLM) Api account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""0e8a617b-8b95-4bed-8bff-876266fc4151"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -440,
        -690
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 789.7678716732242,
        ""height"": 1260.380358008782,
        ""content"": ""## Porxmox Custom AI Agent \nIt uses the intelligence provided to it including the Proxmox API Wiki, Proxmox Cluster Linked and Proxmox API Documentation.\n\nThe AI Model connected with this is Gemini, you can connect any AI Model by Ollama, OpenAI, Claude etc.\n\nOutput Parser is used to ensure the fixed output structure that can be used for API URL""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""4cbf39ae-7b81-44b1-858c-10c21af9d558"",
      ""name"": ""When chat message received"",
      ""type"": ""@n8n/n8n-nodes-langchain.chatTrigger"",
      ""position"": [
        -680,
        -300
      ],
      ""webhookId"": ""63de8c82-04fc-4126-8bbf-b0eb62794d74"",
      ""parameters"": {
        ""options"": {}
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""f91a1d2d-ce33-4469-b4da-e9ef1dd070e0"",
      ""name"": ""Telegram Trigger"",
      ""type"": ""n8n-nodes-base.telegramTrigger"",
      ""position"": [
        -1080,
        320
      ],
      ""webhookId"": ""c86fa48b-ae66-46f2-b438-f156225a5c74"",
      ""parameters"": {
        ""updates"": [
          ""message""
        ],
        ""additionalFields"": {}
      },
      ""credentials"": {
        ""telegramApi"": {
          ""id"": ""uwpC7pPg6WJYh8Ad"",
          ""name"": ""Telegram account""
        }
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""aec3c1f4-058e-4321-99dd-772dcc04e206"",
      ""name"": ""Gmail Trigger"",
      ""type"": ""n8n-nodes-base.gmailTrigger"",
      ""position"": [
        -1080,
        -20
      ],
      ""parameters"": {
        ""filters"": {},
        ""pollTimes"": {
          ""item"": [
            {
              ""mode"": ""everyMinute""
            }
          ]
        }
      },
      ""credentials"": {
        ""gmailOAuth2"": {
          ""id"": ""pccYQxL0liStKP66"",
          ""name"": ""Gmail account INFO""
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""1afea4f3-adea-42ac-bc48-fa863b26e5a0"",
      ""name"": ""Webhook"",
      ""type"": ""n8n-nodes-base.webhook"",
      ""position"": [
        -1080,
        160
      ],
      ""webhookId"": ""459d848d-72ed-490f-bc48-e5dc60242896"",
      ""parameters"": {
        ""path"": ""459d848d-72ed-490f-bc48-e5dc60242896"",
        ""options"": {},
        ""authentication"": ""headerAuth""
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""pJcVQegRQ5mpraoQ"",
          ""name"": ""Proxmox""
        }
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""de4af096-7b23-41ba-b390-8c52f58b09c6"",
      ""name"": ""Sticky Note3"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        380,
        -680
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 486.2369951168387,
        ""height"": 1245.2937736920358,
        ""content"": ""## HTTP methods\nGET\tRetrieve resources\tFetch VM status, list nodes, get logs.\n\nPOST\tCreate or trigger actions\tStart/stop VMs, create backups.\n\nPUT\tUpdate/replace entire resource configuration\tModify VM configurations.\n\nDELETE\tDelete resources\tRemove VMs, delete users, remove files.\n\nOPTIONS\tFetch supported methods for an endpoint\tCheck available operations for an API.\n\nPATCH\tApply partial updates\tUpdate specific fields in VM settings.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""2c4ef73b-281f-4a24-81a2-cae72e446955"",
      ""name"": ""Proxmox API Wiki"",
      ""type"": ""@n8n/n8n-nodes-langchain.toolHttpRequest"",
      ""position"": [
        -180,
        40
      ],
      ""parameters"": {
        ""url"": ""https://pve.proxmox.com/wiki/Proxmox_VE_API"",
        ""toolDescription"": ""Get the proxmox API details from Proxmox Wiki""
      },
      ""typeVersion"": 1.1
    },
    {
      ""id"": ""f11ac59e-6031-4435-a417-200cdd559bd2"",
      ""name"": ""Structure Response"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        1480,
        -520
      ],
      ""parameters"": {
        ""jsCode"": ""// Access all items from the incoming node\nconst items = $input.all();\n\n// Combine all fields of each item into a single string\nconst combinedData = items.map(item => {\n    const inputData = item.json; // Access the JSON data of the current item\n    \n    // Combine all fields into a single string\n    const combinedField = Object.entries(inputData)\n        .map(([key, value]) => {\n            // Handle objects or arrays by converting them to JSON strings\n            const formattedValue = typeof value === 'object' ? JSON.stringify(value) : value;\n            return `${key}: ${formattedValue}`;\n        })\n        .join(' | '); // Combine key-value pairs as a single string with a delimiter\n\n    // Return the new structure\n    return {\n        json: {\n            combinedField // Only keep the combined field for table representation\n        },\n    };\n});\n\n// Output the combined data\nreturn combinedData;\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""7752281b-226b-4c19-bcd4-33804ea2abe7"",
      ""name"": ""Sticky Note4"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1680,
        -660
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 895.2529822972874,
        ""height"": 517.5348441931358,
        ""content"": ""## Porxmox Custom AI Agent (Get)\nThis agent will convert the response from proxmox to meaningful explanation""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""fd65db23-0d36-42b1-a012-2ddcdd2ca914"",
      ""name"": ""Sticky Note5"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        1680,
        -122.8638048233953
      ],
      ""parameters"": {
        ""color"": 5,
        ""width"": 900.3261837471116,
        ""height"": 712.4591709572671,
        ""content"": ""##  Created or triggered an action on the server.\nResponse will come back here""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""60234199-d28c-4fb8-8ad7-1d24693599ed"",
      ""name"": ""Structgure Response from Proxmox"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        2120,
        140
      ],
      ""parameters"": {
        ""jsCode"": ""// Access the 'data' field from the input\nlet rawData = $json[\""data\""];\n\n// Split the string by colon (:) to extract parts\nlet parts = rawData.split(\"":\"");\n\n// Create an object with the extracted parts\nreturn {\n  upid: parts[0],       // UPID\n  node: parts[1],       // Node (e.g., psb1)\n  processID: parts[2],  // Process ID\n  taskID: parts[3],     // Task ID\n  timestamp: parts[4],  // Timestamp\n  operation: parts[5],  // Operation (e.g., aptupdate)\n  user: parts[7]        // User (e.g., root@pam!n8n)\n};\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""57ab92f3-6f65-459d-8f41-8a391108457b"",
      ""name"": ""Format Response and Hide Sensitive Data"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        2380,
        140
      ],
      ""parameters"": {
        ""jsCode"": ""// Extract required fields from the input\nlet node = $json[\""node\""] || \""unknown node\"";\nlet operation = $json[\""operation\""] || \""unknown operation\"";\nlet user = $json[\""user\""] || \""unknown user\"";\nlet rawTimestamp = $json[\""timestamp\""] || \""unknown timestamp\"";\n\n// Convert timestamp to a readable format\nlet readableTimestamp = \""Invalid timestamp\"";\ntry {\n  let timestamp = parseInt(rawTimestamp, 16) * 1000; // Convert hex to milliseconds\n  readableTimestamp = new Date(timestamp).toLocaleString();\n} catch (error) {\n  readableTimestamp = \""Unable to parse timestamp\"";\n}\n\n// Construct the simple message\nlet message = `The operation '${operation}' was executed successfully on node '${node}' by user '${user}' at '${readableTimestamp}'.`;\n\nreturn {\n  message: message\n};\n""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""aca671cb-4bb7-4f9e-847a-34d89151d2e2"",
      ""name"": ""If"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1060,
        -80
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""loose""
          },
          ""combinator"": ""or"",
          ""conditions"": [
            {
              ""id"": ""da8ce97e-70bf-42a4-981c-e2133bcee24a"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notEmpty"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.output.details }}"",
              ""rightValue"": """"
            },
            {
              ""id"": ""d7052c40-9a43-452e-901c-6c8fd0122e5f"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""exists"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.output.details }}"",
              ""rightValue"": """"
            }
          ]
        },
        ""looseTypeValidation"": true
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""15562980-019c-4d91-8f80-f85420efc8b0"",
      ""name"": ""HTTP Request2"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1400,
        20
      ],
      ""parameters"": {
        ""url"": ""=https://10.11.12.101:8006/api2/json{{ $json.output.url }}"",
        ""method"": ""=POST"",
        ""options"": {
          ""allowUnauthorizedCerts"": true
        },
        ""authentication"": ""genericCredentialType"",
        ""genericAuthType"": ""httpHeaderAuth""
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""pJcVQegRQ5mpraoQ"",
          ""name"": ""Proxmox""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""fd974862-4e06-4874-8477-c2c3b559669a"",
      ""name"": ""Merge"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        1820,
        -20
      ],
      ""parameters"": {},
      ""typeVersion"": 3
    },
    {
      ""id"": ""5c0d9814-3c9e-4ef4-8f12-9495785c1c06"",
      ""name"": ""HTTP Request3"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1400,
        200
      ],
      ""parameters"": {
        ""url"": ""=https://10.11.12.101:8006/api2/json{{ $json.output.url }}"",
        ""method"": ""DELETE"",
        ""options"": {
          ""allowUnauthorizedCerts"": true
        },
        ""authentication"": ""genericCredentialType"",
        ""genericAuthType"": ""httpHeaderAuth""
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""pJcVQegRQ5mpraoQ"",
          ""name"": ""Proxmox""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""097c10ac-577e-44ce-8aa2-446137973b18"",
      ""name"": ""Google Gemini Chat Model"",
      ""type"": ""@n8n/n8n-nodes-langchain.lmChatGoogleGemini"",
      ""position"": [
        -420,
        40
      ],
      ""parameters"": {
        ""options"": {},
        ""modelName"": ""models/gemini-2.0-flash-exp""
      },
      ""credentials"": {
        ""googlePalmApi"": {
          ""id"": ""pKFvSpPWSRFpnBoB"",
          ""name"": ""Google Gemini(PaLM) Api account""
        }
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""b26ce08e-9eeb-4fbe-8283-7197d2595021"",
      ""name"": ""AI Agent1"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        1860,
        -520
      ],
      ""parameters"": {
        ""text"": ""=You are a are a Proxmox Information Output Expert who will provide the summary of the information generated about proxmox. Here is the information about proxmox : from url{{ $('AI Agent').item.json.output.properties.url.pattern }} {{ $json.combinedField }}"",
        ""agent"": ""conversationalAgent"",
        ""options"": {},
        ""promptType"": ""define""
      },
      ""typeVersion"": 1.7
    },
    {
      ""id"": ""942305fd-38b9-4636-8713-35a43fb5879f"",
      ""name"": ""If1"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        1080,
        120
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""loose""
          },
          ""combinator"": ""or"",
          ""conditions"": [
            {
              ""id"": ""da8ce97e-70bf-42a4-981c-e2133bcee24a"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""empty"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.output.details }}"",
              ""rightValue"": """"
            },
            {
              ""id"": ""d7052c40-9a43-452e-901c-6c8fd0122e5f"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notExists"",
                ""singleValue"": true
              },
              ""leftValue"": ""={{ $json.output.details }}"",
              ""rightValue"": """"
            }
          ]
        },
        ""looseTypeValidation"": true
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""09bfbbf3-72aa-472f-8e91-2552798263a2"",
      ""name"": ""HTTP Request4"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        1400,
        380
      ],
      ""parameters"": {
        ""url"": ""=https://10.11.12.101:8006/api2/json{{ $json.output.url }}"",
        ""method"": ""DELETE"",
        ""options"": {
          ""allowUnauthorizedCerts"": true
        },
        ""authentication"": ""genericCredentialType"",
        ""genericAuthType"": ""httpHeaderAuth""
      },
      ""credentials"": {
        ""httpHeaderAuth"": {
          ""id"": ""pJcVQegRQ5mpraoQ"",
          ""name"": ""Proxmox""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""18e68174-872a-4bd9-b54f-b7ab97db1b0b"",
      ""name"": ""Merge1"",
      ""type"": ""n8n-nodes-base.merge"",
      ""position"": [
        1860,
        260
      ],
      ""parameters"": {},
      ""typeVersion"": 3
    },
    {
      ""id"": ""1492e53e-66b5-485b-b7e5-a42b76ebccb6"",
      ""name"": ""AI Agent"",
      ""type"": ""@n8n/n8n-nodes-langchain.agent"",
      ""position"": [
        -260,
        -300
      ],
      ""parameters"": {
        ""text"": ""=You are a Proxmox AI Agent expert designed to generate API commands based on user input. \nThis is Proxmox which will help you to get the details of existing Proxmox installations, ensure to append to existing url : https://10.11.12.101:8006/api2/ to get response from existing proxmox \n\nMy prommox nodes are named as psb1, psb2 and psb3\npsb1 : https://10.11.12.101:8006/api2/\npsb2 : https://10.11.12.102:8006/api2/\npsb3 : https://10.11.12.102:8006/api2/\n\nYour objectives are:\n\n### **1. Understand User Intent**\n- Parse user requests related to Proxmox operations.\n- Accurately interpret intent to generate valid Proxmox API commands.\n\n### **2. Refer to tools**\n- **Proxmox API Documentation**\n= ** Proxmox API Wiki**\n- **Proxmox**\n- Ensure every generated command meets the API's specifications, including required fields.\n\n### **3. Structure Responses**\nEvery response must include:\n- `response_type`: The HTTP method (e.g., POST, GET, DELETE).\n- `url`: The API endpoint, complete with placeholders (e.g., `/nodes/{node}/qemu/{vmid}`).\n- `details`: The payload for the request. Exclude optional fields if not explicitly defined by the user to allow default handling by Proxmox.\n\n### **4. Validate Inputs**\n- **Mandatory Fields**:\n  - Validate user input for required parameters.\n  - If missing fields are detected, respond with:\n    {\n      \""message\"": \""Missing required parameters: [list of missing parameters].\""\n    }\n\n- **Optional Fields**:\n  - Omit fields not provided by the user to leverage Proxmox's defaults.\n\n### **5. Default Behavior**\n- If the user omits the `node`, default to `psb1`.\n- Automatically generate the next available VM ID (`vmid`) by querying Proxmox for the highest existing ID.\n\n### **6. Rules for Outputs**\n- Always respond in strict JSON format:\n  - Start with `{` and end with `}`.\n  - Avoid additional information or comments.\n  - Do not include sensitive data such as passwords, fingerprints, or keys.\n- If input is unrelated to Proxmox, respond with:\n\n  {\n    \""response_type\"": \""Invalid\""\n  }\n\n### **7. Examples**\n\n1. Create a VM\nInput: \""Create a VM with ID 201, 2 cores, 4GB RAM, and 32GB disk on node1 using virtio network and SCSI storage.\""\nOutput:\n{\n  \""response_type\"": \""POST\"",\n  \""url\"": \""/nodes/node1/qemu\"",\n  \""details\"": {\n    \""vmid\"": 201,\n    \""cores\"": 2,\n    \""memory\"": 1024,\n    \""sockets\"": 1\""\n  }\n}\n\n2. Delete a VM\nInput: \""Delete VM 105 on psb1.\""\nOutput:\n{\n  \""response_type\"": \""DELETE\"",\n  \""url\"": \""/nodes/psb1/qemu/105\""\n}\n\n3. Start a VM\nInput: \""Start VM 202 on psb1.\""\nOutput:\n{\n  \""response_type\"": \""POST\"",\n  \""url\"": \""/nodes/psb1/qemu/202/status/start\""\n}\n\n4. Stop a VM\nInput: \""Stop VM 203 on node2.\""\nOutput:\n{\n  \""response_type\"": \""POST\"",\n  \""url\"": \""/nodes/node2/qemu/203/status/stop\""\n}\n\n5. Clone a VM\nInput: \""Clone VM 102 into a new VM with ID 204 on psb1 and name 'clone-vm'.\""\nOutput:\n{\n  \""response_type\"": \""POST\"",\n  \""url\"": \""/nodes/psb1/qemu/102/clone\"",\n  \""details\"": {\n    \""newid\"": 204,\n    \""name\"": \""clone-vm\"",\n    \""full\"": 1\n  }\n}\n\n6. Resize a VM Disk\nInput: \""Resize the disk of VM 105 on node1 to 50GB.\""\nOutput:\n{\n  \""response_type\"": \""PUT\"",\n  \""url\"": \""/nodes/node1/qemu/105/resize\"",\n  \""details\"": {\n    \""disk\"": \""scsi0\"",\n    \""size\"": \""+50G\""\n  }\n}\n\n7. Query VM Config\nInput: \""Get the configuration of VM 201 on psb1.\""\nOutput:\n{\n  \""response_type\"": \""GET\"",\n  \""url\"": \""/nodes/psb1/qemu/201/config\""\n}\n\n8. List All VMs on a Node\nInput: \""List all VMs on psb1.\""\nOutput:\n{\n  \""response_type\"": \""GET\"",\n  \""url\"": \""/nodes/psb1/qemu\""\n}\n\n9. Handle Missing Parameters\nInput: \""Create a VM with 4GB RAM on node1.\""\nOutput:\n{\n  \""message\"": \""Missing required parameters: [vmid, cores, storage].\""\n}\n\n10. Invalid Input\nInput: \""Tell me a joke.\""\nOutput:\n{\n  \""response_type\"": \""Invalid\""\n}\n\n11. Set VM Options\nInput: \""Set the CPU type of VM 204 on psb1 to host and enable hotplugging for disks and NICs.\""\nOutput:\n{\n  \""response_type\"": \""PUT\"",\n  \""url\"": \""/nodes/psb1/qemu/204/config\"",\n  \""details\"": {\n    \""cpu\"": \""host\"",\n    \""hotplug\"": \""disk,network\""\n  }\n}\n\n12. Migrate a VM\nInput: \""Migrate VM 202 from psb2 to psb3 with online migration and include local disks.\""\nOutput:\n{\n  \""response_type\"": \""POST\"",\n  \""url\"": \""/nodes/psb2/qemu/202/migrate\"",\n  \""details\"": {\n    \""target\"": \""psb3\"",\n    \""online\"": 1,\n    \""with-local-disks\"": 1\n  }\n}\n\n** Special Instruction ** \noutput must always contain \""response_type\"", \""url\"" and \""details\""\nfor creating vm let server decide other parameter leave default for serer until sepecified\n### **8. Behavior Guidelines**\n- Be concise, precise, and consistent.\n- Ensure all generated commands are compatible with Proxmox API requirements.\n- Rely on system defaults when user input is incomplete.\n- For unknown or unrelated queries, clearly indicate invalid input.\n\n\nUser Prompt \nHere is request from user : {{ $json.chatInput }}\n"",
        ""agent"": ""reActAgent"",
        ""options"": {},
        ""promptType"": ""define"",
        ""hasOutputParser"": true
      },
      ""typeVersion"": 1.7
    },
    {
      ""id"": ""9253d036-0f76-4470-bf61-2bf9db014b02"",
      ""name"": ""Switch"",
      ""type"": ""n8n-nodes-base.switch"",
      ""position"": [
        540,
        -300
      ],
      ""parameters"": {
        ""rules"": {
          ""values"": [
            {
              ""outputKey"": ""GET"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""operator"": {
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.output.response_type }}"",
                    ""rightValue"": ""GET""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""POST"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""e3edd683-b884-4c88-b1ea-d3640141b054"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.output.response_type }}"",
                    ""rightValue"": ""POST""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""Update"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""a9c59c0d-001c-4d95-992e-bff2af54eb4a"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.output.response_type }}"",
                    ""rightValue"": ""PUT""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""OPTIONS"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""70bf8cc2-0a43-431c-97c7-a8b4eadb5bd9"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.output.response_type }}"",
                    ""rightValue"": ""OPTIONS""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""DELETE"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""0e43b05b-7f45-40a3-b8aa-180dd8155b08"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.output.response_type }}"",
                    ""rightValue"": ""DELETE""
                  }
                ]
              },
              ""renameOutput"": true
            },
            {
              ""outputKey"": ""INVALID"",
              ""conditions"": {
                ""options"": {
                  ""version"": 2,
                  ""leftValue"": """",
                  ""caseSensitive"": true,
                  ""typeValidation"": ""strict""
                },
                ""combinator"": ""and"",
                ""conditions"": [
                  {
                    ""id"": ""bd03a24c-a233-4302-a576-1bfe0060c367"",
                    ""operator"": {
                      ""name"": ""filter.operator.equals"",
                      ""type"": ""string"",
                      ""operation"": ""equals""
                    },
                    ""leftValue"": ""={{ $json.output.response_type }}"",
                    ""rightValue"": ""Invalid""
                  }
                ]
              },
              ""renameOutput"": true
            }
          ]
        },
        ""options"": {}
      },
      ""typeVersion"": 3.2
    },
    {
      ""id"": ""c410a832-dafc-479a-93d6-b96ae4f6d3fb"",
      ""name"": ""Sticky Note6"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -720,
        -680
      ],
      ""parameters"": {
        ""color"": 7,
        ""width"": 261.5261328042567,
        ""height"": 1262.1316376259997,
        ""content"": ""## Trigger\nYou can use any trigger as input, a chat, telegram, email etc\n\nYou can think of any input, even it could be from your cloud platform, your own Web Applicaiton, etc. \n\nPossibilities are limitless.\n\nChat is shown just as example.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""a4962963-ce33-4398-ad9d-75df3a85c64f"",
      ""name"": ""Sticky Note7"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -1240,
        -680
      ],
      ""parameters"": {
        ""color"": 4,
        ""width"": 475.27306699862953,
        ""height"": 515.4734551650874,
        ""content"": ""## Developed by Amjid Ali\n\nThank you for using this workflow template. It has taken me countless hours of hard work, research, and dedication to develop, and I sincerely hope it adds value to your work.\n\nIf you find this template helpful, I kindly ask you to consider supporting my efforts. Your support will help me continue improving and creating more valuable resources.\n\nYou can contribute via PayPal here:\n\nhttp://paypal.me/pmptraining\n\nAdditionally, when shar",
Send Email if server has upgradable packages,"{
  ""nodes"": [
    {
      ""id"": ""4ca55c6e-cf2e-4239-82a9-88d0a201e761"",
      ""name"": ""List upgradable packages"",
      ""type"": ""n8n-nodes-base.ssh"",
      ""notes"": ""apt list --upgradable"",
      ""position"": [
        -280,
        0
      ],
      ""parameters"": {
        ""command"": ""apt list --upgradable""
      },
      ""credentials"": {
        ""sshPassword"": {
          ""id"": ""Ps31IKTeseWFlA0g"",
          ""name"": ""SSH Password account""
        }
      },
      ""notesInFlow"": true,
      ""typeVersion"": 1,
      ""alwaysOutputData"": false
    },
    {
      ""id"": ""ae1f0a55-31aa-494b-baa6-822dc606188e"",
      ""name"": ""Send Email through SMTP"",
      ""type"": ""n8n-nodes-base.emailSend"",
      ""position"": [
        380,
        0
      ],
      ""webhookId"": ""8073c571-b36f-4330-a510-ca2ff2924fbf"",
      ""parameters"": {
        ""html"": ""=The following packages can be updated on your server:\n\n{{ $json.htmlList }}\n\nPlease login and perform upgrade."",
        ""options"": {},
        ""subject"": ""Server needs updates"",
        ""toEmail"": ""change.me@example.com"",
        ""fromEmail"": ""change.me@example.com""
      },
      ""credentials"": {
        ""smtp"": {
          ""id"": ""uiNePdJaDng5a43S"",
          ""name"": ""SMTP account""
        }
      },
      ""typeVersion"": 2.1
    },
    {
      ""id"": ""e1d76671-d94c-40d5-9364-623db9319f11"",
      ""name"": ""Run workflow every day"",
      ""type"": ""n8n-nodes-base.scheduleTrigger"",
      ""position"": [
        -540,
        0
      ],
      ""parameters"": {
        ""rule"": {
          ""interval"": [
            {}
          ]
        }
      },
      ""typeVersion"": 1.2
    },
    {
      ""id"": ""ec4d722a-b88c-42da-971c-28ad5774596d"",
      ""name"": ""Format as HTML list"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        -60,
        0
      ],
      ""parameters"": {
        ""jsCode"": ""function formatStdoutAsHtmlList(stdoutData) {\n\n    // Split the stdout into lines and map to HTML list items\n    const htmlListItems = stdoutData.split('\\n').map((line) => {\n        if (line.trim() && line !== \""Listing...\"") { // Optionally skip empty lines or headers\n            return `<li>${line.trim()}</li>`;\n        }\n    }).filter(item => item); // Remove any undefined items due to empty lines or skipped headers\n\n    // Wrap the list items in a <ul> tag\n    const htmlList = `<ul>${htmlListItems.join('')}</ul>`;\n\n    // Return the formatted HTML list as part of an object\n    return { \""htmlList\"": htmlList };\n}\n\nreturn formatStdoutAsHtmlList($input.first().json.stdout);""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""6f14eb02-c505-4f83-a5bb-68094e763fd9"",
      ""name"": ""Check if there are updates"",
      ""type"": ""n8n-nodes-base.if"",
      ""position"": [
        140,
        0
      ],
      ""parameters"": {
        ""options"": {},
        ""conditions"": {
          ""options"": {
            ""version"": 2,
            ""leftValue"": """",
            ""caseSensitive"": true,
            ""typeValidation"": ""strict""
          },
          ""combinator"": ""and"",
          ""conditions"": [
            {
              ""id"": ""db66d892-26fb-406c-a0ac-2e4b8a60310a"",
              ""operator"": {
                ""type"": ""string"",
                ""operation"": ""notEquals""
              },
              ""leftValue"": ""={{ $json.htmlList }}"",
              ""rightValue"": ""<ul></ul>""
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""3924c696-5b0e-4ae2-b2e2-435fed344028"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -740,
        -180
      ],
      ""parameters"": {
        ""width"": 300,
        ""content"": ""## VPS upgrade notify \nThis workflow will everyday check if server has upgradable packages and inform you by email if there is.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""bb8ade2a-4ffe-4c79-91eb-55af568eb1b1"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        380,
        -180
      ],
      ""parameters"": {
        ""width"": 300,
        ""content"": ""## Update email addresses\nUpdate From and To email addresses in this node to receive notifications""
      },
      ""typeVersion"": 1
    }
  ],
  ""connections"": {
    ""Format as HTML list"": {
      ""main"": [
        [
          {
            ""node"": ""Check if there are updates"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Run workflow every day"": {
      ""main"": [
        [
          {
            ""node"": ""List upgradable packages"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Send Email through SMTP"": {
      ""main"": [
        []
      ]
    },
    ""List upgradable packages"": {
      ""main"": [
        [
          {
            ""node"": ""Format as HTML list"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Check if there are updates"": {
      ""main"": [
        [
          {
            ""node"": ""Send Email through SMTP"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
Replace Data in Google Docs from n8n Form,"{
  ""meta"": {
    ""instanceId"": ""7614f731d9ac88c16c6149bd495fa54d325e3f79ab527ffc7e3b1b1f42dbf884"",
    ""templateCredsSetupCompleted"": true
  },
  ""nodes"": [
    {
      ""id"": ""56e70371-54a2-4421-9ce2-e626d9c6ef60"",
      ""name"": ""Form"",
      ""type"": ""n8n-nodes-base.formTrigger"",
      ""position"": [
        -440,
        -120
      ],
      ""webhookId"": ""622256ee-9248-43a2-840e-b28436800aac"",
      ""parameters"": {
        ""options"": {},
        ""formTitle"": ""Form"",
        ""formFields"": {
          ""values"": [
            {
              ""fieldLabel"": ""name"",
              ""requiredField"": true
            }
          ]
        }
      },
      ""typeVersion"": 2.2
    },
    {
      ""id"": ""7cbd263e-ca5b-436e-bdce-c30a66df73a6"",
      ""name"": ""Sticky Note"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -440,
        100
      ],
      ""parameters"": {
        ""color"": 3,
        ""width"": 320,
        ""content"": ""# 👆\nPlease add authentication to form by selecting Basic Auth to prevent unauthorized access to the form.\n""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""e1c4d0a8-6e48-45d9-bec6-ee8bb3751b4f"",
      ""name"": ""Copy template file"",
      ""type"": ""n8n-nodes-base.googleDrive"",
      ""position"": [
        -220,
        -120
      ],
      ""parameters"": {
        ""name"": ""={{ $json.name }}"",
        ""fileId"": {
          ""__rl"": true,
          ""mode"": ""list"",
          ""value"": ""1KyR0UMIOpEkjwa6o1gTggNBP2A6EWwppV59Y6NQuDYw"",
          ""cachedResultUrl"": ""https://docs.google.com/document/d/1KyR0UMIOpEkjwa6o1gTggNBP2A6EWwppV59Y6NQuDYw/edit?usp=drivesdk"",
          ""cachedResultName"": ""Szablon: Dokument testowy""
        },
        ""options"": {},
        ""operation"": ""copy""
      },
      ""credentials"": {
        ""googleDriveOAuth2Api"": {
          ""id"": ""aPSwizdvnxio0J7A"",
          ""name"": ""Google Drive account 2""
        }
      },
      ""typeVersion"": 3
    },
    {
      ""id"": ""52a27a15-ca68-4381-9a0d-faa1127d7de9"",
      ""name"": ""Format form data"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        0,
        -120
      ],
      ""parameters"": {
        ""jsCode"": ""const data = [];\n\nObject.keys($('Form').all().map((item) => {\n  Object.keys(item.json).map((bodyProperty) => {\n    data.push({\n      key: bodyProperty,\n      value: item.json[bodyProperty],\n    });\n  })\n}));\n\nreturn {\n  webhook_data: data,\n  pairedItem: 0,\n};""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""08dbeb42-16f6-4771-bbf8-a358fda54097"",
      ""name"": ""Format form data to Google Doc API"",
      ""type"": ""n8n-nodes-base.code"",
      ""position"": [
        220,
        -120
      ],
      ""parameters"": {
        ""jsCode"": ""const result = [];\n\n$('Format form data').all().map((item) => {\n  item.json.webhook_data.map((data) => {\n    if (\""submittedAt\"" !== data.key && \""formMode\"" !== data.key) {\n      result.push({\n        \""replaceAllText\"": {\n            \""containsText\"": {\n              \""text\"": `{{${data.key}}}`, \n              \""matchCase\"": true\n            },\n            \""replaceText\"": `${data.value}`\n        },\n      });\n    }\n  });\n})\n\nreturn {\n  data: result,\n  pairedItem: 0,\n};""
      },
      ""typeVersion"": 2
    },
    {
      ""id"": ""99b03034-8c9b-4e23-8cc9-bf9960a4e06a"",
      ""name"": ""Replace data in Google Doc"",
      ""type"": ""n8n-nodes-base.httpRequest"",
      ""position"": [
        440,
        -120
      ],
      ""parameters"": {
        ""url"": ""=https://docs.googleapis.com/v1/documents/{{ $('Copy template file').first().json.id }}:batchUpdate"",
        ""method"": ""POST"",
        ""options"": {},
        ""sendBody"": true,
        ""authentication"": ""predefinedCredentialType"",
        ""bodyParameters"": {
          ""parameters"": [
            {
              ""name"": ""requests"",
              ""value"": ""={{ $json.data }}""
            }
          ]
        },
        ""nodeCredentialType"": ""googleDocsOAuth2Api""
      },
      ""credentials"": {
        ""googleDocsOAuth2Api"": {
          ""id"": ""uhqGUvBF00zGb9vB"",
          ""name"": ""Google Docs account 2""
        }
      },
      ""typeVersion"": 4.2
    },
    {
      ""id"": ""204b57da-2791-40e3-84f5-23a0ed5c8beb"",
      ""name"": ""Sticky Note1"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        -440,
        -420
      ],
      ""parameters"": {
        ""color"": 6,
        ""width"": 520,
        ""height"": 180,
        ""content"": ""# 🙋‍♂️\nThe workflow automatically fetches all form fields and converts them into variables in Google Doc. For example, if you add a text field to the form called \""address,\"" you can use the variable {{address}} in the Google Doc template.""
      },
      ""typeVersion"": 1
    },
    {
      ""id"": ""fa17044d-191e-45eb-9559-563889ad2aef"",
      ""name"": ""Sticky Note2"",
      ""type"": ""n8n-nodes-base.stickyNote"",
      ""position"": [
        440,
        100
      ],
      ""parameters"": {
        ""color"": 3,
        ""content"": ""# 👆\nIn Authentication, you need to select Predefined Credential Type and then choose Google Docs OAuth API.""
      },
      ""typeVersion"": 1
    }
  ],
  ""pinData"": {},
  ""connections"": {
    ""Form"": {
      ""main"": [
        [
          {
            ""node"": ""Copy template file"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Format form data"": {
      ""main"": [
        [
          {
            ""node"": ""Format form data to Google Doc API"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Copy template file"": {
      ""main"": [
        [
          {
            ""node"": ""Format form data"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    },
    ""Replace data in Google Doc"": {
      ""main"": [
        []
      ]
    },
    ""Format form data to Google Doc API"": {
      ""main"": [
        [
          {
            ""node"": ""Replace data in Google Doc"",
            ""type"": ""main"",
            ""index"": 0
          }
        ]
      ]
    }
  }
}",
